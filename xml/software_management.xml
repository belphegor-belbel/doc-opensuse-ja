<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" role="General" xml:id="sec-sec-software-management">
 <title>ソフトウエア管理</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

    <sect1 xml:id="sec-sec-prot-general-remove-packs">
   <title>不要なソフトウエアパッケージ (RPM) の削除</title>

   <para>Linux システムの安全性を高める際に重要なことは、 Linux サーバの主な機能や役割を決めることです。機能や役割がはっきりしていないと、システムのどの場所を主に守るべきなのかがはっきりせず、作業の効率も落ちてしまいます。まずはインストールされているソフトウエアパッケージの一覧を確認して、不要なパッケージやセキュリティポリシーに合致しないパッケージを削除することが重要です。</para>

   <para>一般的には RPM ソフトウエアパッケージには下記のものが含まれています:</para>
   <itemizedlist>
    <listitem>
     <para>インストール時に RPM データベース内に書き込まれる、パッケージのメタデータ。</para>
    </listitem>
    <listitem>
     <para>同梱されるファイルとディレクトリ。</para>
    </listitem>
    <listitem>
     <para>インストールやアンインストールの前後に動作するスクリプト。</para>
    </listitem>
   </itemizedlist>
   <para>また、下記のいずれかの条件に合致するパッケージについては、セキュリティ上のリスクとなる可能性があります:</para>
   <orderedlist spacing="normal">
    <listitem>
     <para>setuid ビットもしくは setgid ビットの設定されたファイルを含むもの</para>
    </listitem>
    <listitem>
     <para>グループもしくは全てのユーザが書き込み可能なファイルやディレクトリを含むもの</para>
    </listitem>
    <listitem>
     <para>インストール時や既定で自動的にサービスが有効化されるもの。</para>
    </listitem>
   </orderedlist>
   <para>上記 3 つの条件のいずれにも該当しなければ、パッケージは単なるファイル集であるとみなしてかまいません。このようなパッケージをインストールしてもアンインストールしても、システムのセキュリティには影響がありません。</para>

   <para>しかしながら、お使いのシステムにインストールするパッケージはできる限り少なくしておくことをお勧めします。パッケージを減らすことで更新の手間を減らすことができますし、それによって発生しうる問題も減らすことができるからです。また本番サーバには開発用のパッケージやデスクトップ環境のソフトウエア (例: X サーバ) 等をインストールしないようにするのが最適です。もちろん Apache Web サーバや Samba ファイル共有サーバなど、サービスが不要であればインストールしないのが望ましいです。</para>

   <important>
    <title>サードパーティ製のインストーラの要件について</title>
    <para>Oracle 社や IBM 社等の提供するサードパーティ製のインストーラは、インストーラ自身を動作させるのにデスクトップ環境を求めるものがあります。本番サーバにデスクトップ環境をインストールしないようにするため、多くの組織では開発環境で無人インストール用のファイル (応答ファイル) を作成して回避しています。</para>
   </important>

   <para>それ以外にも、どうしても必要となる場合を除いて、 FTP や Telnet デーモンもインストールしないことをお勧めします。これらは <command>ssh</command> , <command>scp</command> , <command>sftp</command> 等で代替可能です。</para>

   <para>また、一般に Linux システムを構築するにあたっては、システムやアプリケーションで必要となるパッケージのほか、メンテナンスやトラブルシューティングで必要なパッケージ <emphasis>のみ</emphasis> をインストールするようにすべきです。まずは RPM の最小リストから出発して、必要なパッケージを追加していくとよいでしょう。</para>

   <tip os="sles;sled;slemicro">
    <title>&slsa; &minvm;</title>
    <para>&sls; のダウンロードページでは、設定済みですぐに使用することのできる &slsa; &minvm; 仮想マシンイメージを提供しています。 &slsa; &minvm; はイメージのサイズが小さく、システム開発者の要件に応じてカスタマイズすることができます。 &minvm; は仮想マシンのほか、ソフトウエアアプライアンスの開発用としても使用することができます。 なお、 &slsa; &minvm; は主に効率性と管理の単純化を目指して作られています。 &minvm; の詳細については、別途提供されているガイドをお読みください。 &slsa; &minvm; が要件に合わない場合は、最小インストールパターンの使用もご検討ください。</para>
   </tip>

   <para>インストールされている全てのパッケージを一覧表示するには、下記のようなコマンドを入力して実行します:</para>

<screen>&prompt.root;zypper packages -i</screen>

   <para>特定のパッケージに関する詳細を表示するには、下記のようなコマンドを入力して実行します:</para>

<screen>&prompt.root;zypper info <replaceable>パッケージ名</replaceable></screen>

   <para>パッケージを削除する際に発生しうる、矛盾関係や依存関係の問題を表示したい場合は、下記のようなコマンドを入力して実行します:</para>

<screen>&prompt.root;zypper rm -D <replaceable>パッケージ名</replaceable></screen>

   <para>このコマンドは便利な仕組みです。事前にテストを行っておかないと、ほとんどの場合、多くの問題点に直面し、複雑な依存関係の問題に悩まされる結果になります。</para>

   <important>
    <title>必須パッケージの削除について</title>
    <para>パッケージを削除する場合は、システムで必須となるパッケージを削除してしまわないように注意してください。必須のパッケージを削除してしまうと、システムは全く起動できなくなってしまうばかりか、修復もできなくなってしまいます。不安な場合は、削除を行う前にシステムの完全バックアップを作成しておき、その後にパッケージを削除してください。</para>
   </important>

   <para>1 つまたは複数のパッケージを削除する場合は、 <command>zypper</command> コマンドに <quote>-u</quote> オプションを追加することをお勧めします。これはパッケージを削除することによって不要となったパッケージを併せて削除するためのものです:</para>

   <screen>&prompt.root;zypper rm -u <replaceable>パッケージ名</replaceable></screen>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-patching">
   <title>Linux システムへの修正の適用</title>

   <para>修正を管理するためのインフラストラクチャの構築は、 Linux の本番環境を積極的に維持していくために重要な項目です。</para>

   <para>なお、明示的なセキュリティポリシーを作成しておき、 Linux のセキュリティ更新や問題に対する処理方針を定めておくことをお勧めします。たとえばセキュリティポリシーで修正の評価やテストの方法、そして修正の適用について時間枠を設定しておくなどのことが考えられます。また、ネットワーク関連のセキュリティ脆弱性の場合には、より高い優先度を設定し、より短い時間での解決を目指すなどの方針も考えられます。このほか評価フェーズではテスト環境内でのテストを行い、まずは開発環境から修正を適用するなどの方針をとるのもよいでしょう。</para>

   <para>また、個別のセキュリティ記録を残しておき、受け取った Linux のセキュリティアナウンスと修正の検証状況や問題点の解決状況、そして修正の適用日時などを残しておくとよいでしょう。</para>

   <para>&suse; では修正を 3 種類に分類しています。それぞれセキュリティ、推奨、オプションと呼んでいます。また、システムに対して修正を適用し、最新の状態に保つにあたってはいくつかの方式が提供されています。それぞれのシステムには同梱されている &yast; ツールである &yast; オンライン更新を利用して、 &suse; Update の Web サイトに登録を行ってダウンロードすることができるようになっています。また、 &suse; では &rmtool; (&rmt;) と呼ばれる、修正や更新などをローカルの環境にコピーし、インターネット側への通信量を減らすためのツールも用意されています。このほか &suse; では、 &susemgr; と呼ばれる Linux システムのメンテナンス／修正適用／レポートシステムも用意されています。こちらは &suse; だけでなく、他のディストリビューションを管理することもできます。</para>

   <sect2 xml:id="sec-sec-prot-general-patching-you">
    <title>&yast; オンライン更新</title>
    <para>サーバごとに重要な更新や改善を適用したい場合は、 &yast; オンライン更新ツールをお使いください。 &sle; ファミリに対する更新は、修正を含む製品ごとの更新カタログを介して提供されています。修正の適用は &yast; から <guimenu>ソフトウエア</guimenu> <guimenu>オンライン更新</guimenu> を選択してください。これを実行すると、オプション指定であるものを除き、未適用の全ての修正を自動的に選択します。後は <guimenu>了解</guimenu> ボタンを押すだけで、適用が行われます。</para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-auto">
    <title>自動オンライン更新</title>
    <para>&yast; では自動更新にも対応しています。 <menuchoice> <guimenu>ソフトウエア</guimenu> <guimenu>自動オンライン更新</guimenu></menuchoice> を選択してください。あとは毎日もしくは毎週を選択するだけです。カーネル更新など、ユーザ側での操作を必要とする修正の場合は、自動でインストールしようとしても止まってしまいますので、このような場合は <guimenu>対話操作が必要な修正を飛ばす</guimenu> を選択してください。</para>
    <para>上記を選択した場合は、適宜手動でのオンライン更新を行い、対話操作が必要な修正を忘れずにインストールしておいてください。</para>
    <para>また、 <guimenu>修正のダウンロードのみ</guimenu> を選択すると、指定したタイミングで修正をダウンロードするものの、インストールは行われなくなります。ダウンロードした修正は、 <command>rpm</command> や <command>zypper</command> を利用してインストールする必要があります。</para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-smt" os="sles;sled;slemicro">
    <title>&rmtool;&mdash;&rmt;</title>
    <para>&sle; 向けに提供されている &rmtool; はオンライン更新をプロキシ経由で行うよりもさらに一歩進んだ仕組みを提供します。この &rmtool; は、ファイアウオールの内側でソフトウエア更新を集中管理しながら、その更新の適用はそれぞれのサーバで個別に行う構造を維持することができます。これにより、企業内のセキュリティポリシーや法律の規制に準拠できるようになります。</para>
    <para>&rmt; ( <link xlink:href="https://documentation.suse.com/sles/15-SP4/html/SLES-all/book-rmt.html"/> ) は &scc; ( <link xlink:href="&sccurl;"/> ) とも統合され、リポジトリと登録ターゲットの両方を提供します。これは大規模なサーバ構築には便利な仕組みで、エンタイトルメント (契約状況) の追跡も行うことができます。 &rmt; では &scc; の全ての機能を管理できますので、より安全な集中管理を行うことができます。 &rmt; は全ての &sle; サブスクリプションに含まれていますので、どの環境でも完全にサポートされています。</para>
    <para>通常のサーバ構成では、それぞれのサーバに対して外向きの接続許可を設定する必要がありましたが、 &rmt; ではそのようなことはありません。外向きの接続の許可は企業内のセキュリティポリシーに違反することがあり、それ自身が脅威として捉えられることがあるためです。 &scc; と &rmt; を組み合わせて使用することで、それぞれのサーバに外向きの接続許可を与えることなく、かつネットワーク帯域の浪費を防ぎながら、必要な修正を適用することができるようになります。</para>
    <para>また &rmt; では、組織内で使用しているローカルの &sle; デバイス (サーバ／デスクトップ／ PoS 端末) の追跡を行うこともできます。物理的にサーバ類を探し回って更新が必要なエンタイトルメント数を数える必要はなく、中央で簡単に数えることができるようになります。</para>
    <para>このほか &rmt; は &sle; デバイスに対して、利用可能なソフトウエア更新の情報提供も行います。それぞれのデバイスは &rmt; からソフトウエア更新を受け取る形になります。 &rmt; を使用することで、ネットワーク内の &sle; デバイスが更新を受け取る方法も単純化されます。 &rmt; は 1 インスタンスあたり数百台以上もの &sle; デバイスを扱うことができます (用途によります) ので、追跡の正確性と効率性をもたらすことになります。</para>
    <para>端的に言うと、 &sle; 向けの &rmtool; は下記のようなことを行います:</para>
    <itemizedlist>
     <listitem>
      <para>ファイアウオールと規制準拠への対応</para>
     </listitem>
     <listitem>
      <para>ソフトウエア更新に必要なネットワーク帯域の削減</para>
     </listitem>
     <listitem>
      <para>&suse; のサブスクリプション契約での完全サポート</para>
     </listitem>
     <listitem>
      <para>&scc; による既存のカスタマーインターフェイスによるメンテナンス</para>
     </listitem>
     <listitem>
      <para>正確なサーバエンタイトルメント追跡とサブスクリプション使用の効率的な追跡</para>
     </listitem>
     <listitem>
      <para>エンタイトルメントの合計数を簡単に計算できる自動化プロセス (表計算は不要です！)</para>
     </listitem>
     <listitem>
      <para>&scc; とサーバエンタイトルメントを自動的に同期するシンプルなインストール処理</para>
     </listitem>
    </itemizedlist>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-suma" os="sles;sled;slemicro">
    <title>&susemgr;</title>
    <para>&susemgr; は Linux サーバを自動管理するための仕組みで、サーバをより素早く正確に配置し、管理する機能を提供します。単一のコンソールから各 Linux サーバの稼働状況を監視できるため、ビジネスに影響する性能問題を素早く識別できるようになります。また、物理サーバから仮想サーバ、クラウド環境にまで対応しますので、データセンターの稼働率を上げる支援にもなります。 &susemgr; は Linux における完全なライフサイクルマネージメントとなります:</para>
    <itemizedlist>
     <listitem>
      <para>資産管理</para>
     </listitem>
     <listitem>
      <para>プロビジョニング</para>
     </listitem>
     <listitem>
      <para>パッケージ管理</para>
     </listitem>
     <listitem>
      <para>パッチ管理</para>
     </listitem>
     <listitem>
      <para>設定管理</para>
     </listitem>
     <listitem>
      <para>再配備</para>
     </listitem>
    </itemizedlist>
    <para>&susemgr; に関する詳細については、 <link xlink:href="https://www.suse.com/products/suse-manager/"/> をお読みください。</para>
   </sect2>
  </sect1>
</chapter>
