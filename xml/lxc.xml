<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<!-- fs 2011-07-18:

Resources:
~~~~~~~~~~
 - https://wiki.archlinux.org/index.php/Linux_Containers
 - http://lxc.teegra.net/
 - http://www.linuxtag.de/2011/de/program/business-und-behoerdenkongress/vortragsdetails-talkid107.html
 - http://en.opensuse.org/LXC
 - http://www.linuxtag.org/2011/fileadmin/www.linuxtag.org/slides/Christoph%20Mitasch%20-%20Lightweight%20virtualization%3A%20LXC%20vs.%20OpenVZ.pdf

 - http://www.suse.com/documentation/sles11/book_sle_tuning/data/cha_tuning_cgroups.html
 - https://www.ibm.com/developerworks/linux/library/l-lxc-containers/
 - http://berrange.com/posts/2011/09/27/getting-started-with-lxc-using-libvirt/
 - http://blog.flameeyes.eu/2010/09/04/linux-containers-and-networking

People
~~~~~~
Cedric Bosdonnat (Developer)
Jim Fehlig (Developer)
Michal Svec (PM)
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.lxc">
<!-- ========================================================= -->
<!-- TODO Completely setting up lxc containers using YaST/virt-manager
     is not yet possible. -->
<!-- ========================================================= -->
 <title>Linux コンテナ</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
  </dm:docmanager>
 </info>
 <para/>
<!-- ========================================================= -->
<!-- TODO Completely setting up lxc containers using YaST/virt-manager
     is not yet possible. -->
 <sect1 xml:id="sec.lxc.setup.container">
  <title>&lxc; ディストリビューションコンテナの構築</title>

  <para>コンテナは <quote>仮想マシン</quote> の一種で、開始や停止、凍結や複製 (複数の作業から構成されます) を行なうことができます。 &lxc; コンテナを構築するには、まずゲスト側で使用するルートファイルシステムを作成する必要があります:</para>

  <procedure xml:id="pro.lxc.create-rootfs" os="sles;sled">
   <title>ルートファイルシステムの作成</title>
   <para>現時点ではルートファイルシステムを構築するための GUI は用意されていません。そのため、端末を開いて &rootuser; で <command>virt-create-rootfs</command> コマンドを動作させて、新しいルートファイルシステムを構築する必要があります。下記の手順では、新しいルートファイルシステムを <replaceable>ルートファイルシステムのパス</replaceable> で示されたパス内に作成します。</para>
   <important>
    <title>登録コードの必要性について</title>
    <para>&productname; のルートファイルシステムを作成する際、 <command>virt-create-rootfs</command> を使用するには登録コードを設定する必要があります。</para>
   </important>
   <step>
    <para><command>virt-create-rootfs</command> コマンドを実行します:</para>
<screen>&prompt.user;virt-create-rootfs --root <replaceable>ルートファイルシステムのパス</replaceable> --distro SLES-12.0 -c <replaceable>登録コード</replaceable></screen>
   </step>
   <step>
    <para><command>chroot</command> コマンドでルートファイルシステム内に入ります:</para>
<screen>&prompt.user;chroot <replaceable>ルートファイルシステムのパス</replaceable></screen>
   </step>
   <step>
    <para><command>passwd</command> コマンドで &rootuser; のパスワードを変更します。</para>
   </step>
   <step>
    <para>&rootuser; 権限のない <systemitem class="username">operator</systemitem> ユーザを作成します:</para>
<screen>useradd -m operator</screen>
   </step>
   <step>
    <para><systemitem class="username">operator</systemitem> ユーザのパスワードを変更します:</para>
<screen>passwd operator</screen>
   </step>
   <step>
    <para><command>exit</command> で chroot 環境を抜けます。</para>
   </step>
  </procedure>

  <procedure xml:id="pro.lxc.create-rootfs.osuse" os="osuse">
   <title>ルートファイルシステムの作成</title>
   <para>現時点ではルートファイルシステムを構築するための GUI は用意されていません。そのため、端末を開いて &rootuser; で <command>zypper</command> コマンドを動作させて、新しいルートファイルシステムを構築する必要があります。下記の手順では、新しいルートファイルシステムを <replaceable>ルートファイルシステムのパス</replaceable> で示されたパス内に作成します。</para>
   <step>
    <para>新しいルートファイルシステムに対して、 &productname; のリポジトリと、それに対応する更新リポジトリを設定します:</para>
    <screen>&prompt.root;zypper --root <replaceable>ルートファイルシステムのパス</replaceable> ar http://download.opensuse.org/distribution/leap/42.3/repo/oss/ OSS
&prompt.root;zypper --root <replaceable>ルートファイルシステムのパス</replaceable> ar http://download.opensuse.org/update/leap/42.3/oss/ Update-OSS</screen>
   </step>
   <step>
    <para>リポジトリを更新します:</para>
    <screen>&prompt.root;zypper --root <replaceable>ルートファイルシステムのパス</replaceable> ref</screen>
   </step>
   <step>
    <para>最小限のシステムをインストールします:</para>
    <screen>&prompt.root;zypper --root <replaceable>ルートファイルシステムのパス</replaceable> in -t pattern minimal_base</screen>
   </step>
   <step>
    <para>&rootuser; のパスワードを設定します:</para>
    <screen>&prompt.root;echo "ttyS0" &gt;&gt;<replaceable>ルートファイルシステムのパス</replaceable>/etc/securetty
&prompt.root;echo "root:<replaceable>パスワード</replaceable>" | chpasswd -R <replaceable>ルートファイルシステムのパス</replaceable></screen>
   </step>
  </procedure>

  <procedure xml:id="pro.lxc.define-gui">
   <title>コンテナの定義</title>
   <step>
    <para>&vmm; を起動します。</para>
   </step>
   <step performance="optional">
    <para>接続を作成していない場合は、 <menuchoice><guimenu>ファイル</guimenu> <guimenu>接続を追加</guimenu></menuchoice> を選択してローカルの LXC に接続します。</para>
    <para>ハイパーバイザに <guimenu>LXC (Linux コンテナー)</guimenu> を選択して、 <guimenu>接続</guimenu> を押します。</para>
   </step>
   <step>
    <para><guimenu>LXC</guimenu> 接続を選んで、メニューから <guimenu>ファイル</guimenu> <guimenu>新しい仮想マシン</guimenu> を選択します。</para>
   </step>
   <step>
    <para><guimenu>オペレーティングシステムコンテナー</guimenu> を選択して <guimenu>進む</guimenu> を押します。</para>
   </step>
   <step>
    <para><xref os="sles;sled" linkend="pro.lxc.create-rootfs"/> <xref os="osuse" linkend="pro.lxc.create-rootfs.osuse"/> で作成したルートファイルシステムのパスを入力して <guimenu>進む</guimenu> を押します。</para>
   </step>
   <step>
    <para>コンテナに対して割り当てる最大メモリ量と CPU 数を選択して <guimenu>進む</guimenu> を押します。</para>
   </step>
   <step>
    <para>コンテナの名前を入力します。この名前は、コンテナに対して <command>virsh</command> コマンドを実行するような場合に使用するものです。</para>
    <para><!-- NOTE: not "Advanced options" but "Network selection"? --><guimenu>ネットワークの選択</guimenu> を押してコンテナの接続先ネットワークを選択します。あとは <guimenu>完了</guimenu> を押すと、コンテナが作成され起動されます。コンソールは自動的に表示されます。</para>
   </step>
  </procedure>

  <procedure xml:id="pro.lxc.ip.network">
 <title>ネットワークインターフェイスに対する IP アドレスの設定</title>
   <para>ネットワークデバイスとネットワーク機能付きの hostdev デバイスに対しては、 1 つもしくは複数の IP アドレスを設定することができます。ですが、ハイパーバイザやネットワークデバイスの種類によっては、設定が無視されたり最初の 1 つのアドレスのみが使用されるようになったりすることがあります。</para>
 <step>
  <para>virsh を利用してコンテナの XML 設定を編集します:</para>
  <screen>&prompt.user;virsh -c lxc:/// edit <replaceable>MYCONTAINER</replaceable></screen>
 </step>
 <step>
  <para>下記の例では、 1 つまたは複数の IP アドレスの設定方法を示しています:</para>
  <screen>[...]
&lt;devices&gt;
 &lt;interface type='network'&gt;
  &lt;source network='default'/&gt;
  &lt;target dev='vnet0'/&gt;
  &lt;ip address='192.168.122.5' prefix='24'/&gt;
  &lt;ip address='192.168.122.5' prefix='24' peer<co xml:id="co.lxc.netw.peer"/>='10.0.0.10'/&gt;
   &lt;route family<co xml:id="co.lxc.netw.family"/>='ipv4' address<co xml:id="co.lxc.netw.addr"/>='192.168.122.0' prefix<co xml:id="co.lxc.netw.prefix"/>='24'
          gateway<co xml:id="co.lxc.netw.gateway"/>='192.168.122.1'/&gt;
   &lt;route family<xref linkend="co.lxc.netw.family" xrefstyle="select:label"/>='ipv4' address<xref linkend="co.lxc.netw.addr" xrefstyle="select:label"/>='192.168.122.8' gateway<xref linkend="co.lxc.netw.gateway" xrefstyle="select:label"/>='192.168.122.1'/&gt;
 &lt;/interface&gt;
 [...]
 &lt;hostdev mode='capabilities' type='net'&gt;
  &lt;source&gt;
   &lt;interface&gt;eth0&lt;/interface&gt;
  &lt;/source&gt;
  &lt;ip address='192.168.122.6' prefix='24'/&gt;
  &lt;route family='ipv4' address='192.168.122.0' prefix='24' gateway='192.168.122.1'/&gt;
  &lt;route family='ipv4' address='192.168.122.8' gateway='192.168.122.1'/&gt;
 &lt;/hostdev&gt;
&lt;/devices&gt;
[...]</screen>
  <calloutlist>
   <callout arearefs="co.lxc.netw.peer">
    <para>任意指定の属性です。一対一接続方式のネットワークデバイスで、対向側の IP アドレスを設定しています。</para>
   </callout>
   <callout arearefs="co.lxc.netw.family">
    <para><literal>ipv4</literal> もしくは <literal>ipv6</literal> を設定することができます。</para>
   </callout>
   <callout arearefs="co.lxc.netw.addr">
    <para>IP アドレスが書かれています。</para>
   </callout>
   <callout arearefs="co.lxc.netw.prefix">
    <para>任意指定のパラメータ (指定しない場合、自動的に設定されます) です。ここではネットマスクのビット数を指定しています。 IPv4 の場合、ネットマスクはネットワークの <quote>クラス</quote> ( <literal>A</literal> , <literal>B</literal> , <literal>C</literal> のいずれか) に従って判断されます。 IPv6 の場合、既定値は <literal>64</literal> になります。</para>
   </callout>
   <callout arearefs="co.lxc.netw.gateway">
    <para>XML ファイル内でデフォルトゲートウエイを指定したくない場合は、指定しなくてもかまいません。</para>
   </callout>
  </calloutlist>
 </step>
 <step>
    <para>ゲスト側で IP 経路情報の設定を行なうこともできます。これらは LXC ドライバで使用されるものです。</para>
  <screen>[...]
&lt;devices&gt;
 &lt;interface type<co xml:id="co.lxc.netw.ethernet"/>='ethernet'&gt;
  &lt;source&gt;<co xml:id="co.lxc.netw.source"/>
   &lt;ip address<co xml:id="co.lxc.netw.ip1"/>='192.168.123.1' prefix='24'/&gt;
   &lt;ip address<co xml:id="co.lxc.netw.ip2"/>='10.0.0.10' prefix='24' peer='192.168.122.5'/&gt;
   &lt;route<co xml:id="co.lxc.netw.route"/> family='ipv4' address='192.168.42.0' prefix='24'
            gateway='192.168.123.4'/&gt;
  &lt;/source&gt;
  [...]
 &lt;/interface&gt;
 [...]
&lt;/devices&gt;
[...]</screen>
  <calloutlist>
   <callout arearefs="co.lxc.netw.ethernet">
      <para>ネットワークデバイスの種類に <literal>ethernet</literal> を指定した場合、ネットワークデバイスのホスト側の設定として、 1 つもしくは複数の IP アドレス ( <xref linkend="co.lxc.netw.ip1" xrefstyle="select:label"/> , <xref linkend="co.lxc.netw.ip2" xrefstyle="select:label"/> ) および経路情報 ( <xref linkend="co.lxc.netw.route" xrefstyle="select:label"/> ) を指定することができます。</para>
    <para>これらは <literal>interface</literal> 要素内の <literal>source</literal> 要素 ( <xref linkend="co.lxc.netw.source"/> ) として設定します。これらはネットワークデバイスのゲスト側の設定と同名の要素と同じ書式で指定します (上述) 。</para>
   </callout>
   <callout arearefs="co.lxc.netw.ip1">
    <para><literal>ethernet</literal> の種類のネットワークデバイスに設定する最初の IP アドレスです。</para>
   </callout>
   <callout arearefs="co.lxc.netw.ip2">
    <para><literal>ethernet</literal> の種類のネットワークデバイスに設定する 2 つ目の IP アドレスです。</para>
   </callout>
   <callout arearefs="co.lxc.netw.route">
    <para>ネットワークデバイスのホスト側に設定する経路情報です。</para>
   </callout>
  </calloutlist>
  <para>この要素に関する属性の詳細について、さらに詳しく知るには <link xlink:href="http://libvirt.org/formatnetwork.html#elementsStaticroute"/> (英語) をお読みください。</para>
 </step>
 <step>
  <para>変更点を保存してエディタを終了します。</para>
 </step>
</procedure>
  <note>
   <title>コンテナ内でのネットワークについて</title>
   <para>コンテナ内でネットワークを設定するには、 <filename>/etc/sysconfig/network/ifcfg-*</filename> ファイルを編集してください。</para>
  </note>
 </sect1>
 <sect1 xml:id="sec.lxc.setup.container.app">
  <title>&lxc; アプリケーションコンテナの構築</title>

  <para>libvirt では、コンテナ内にディストリビューション全体をインストールせずに、単一のアプリケーションのみを動作させることもできます。この例では、コンテナ内で <command>bash</command> を起動してみます。</para>

  <procedure xml:id="pro.lxc.define-app-gui">
   <title>&yast; を利用したアプリケーションコンテナの構築</title>
   <step>
    <para>&vmm; を起動します。</para>
   </step>
   <step performance="optional">
    <para>接続を作成していない場合は、 <menuchoice><guimenu>ファイル</guimenu> <guimenu>接続を追加</guimenu></menuchoice> を選択してローカルの LXC に接続します。</para>
    <para>ハイパーバイザに <guimenu>LXC (Linux コンテナー)</guimenu> を選択して、 <guimenu>接続</guimenu> を押します。</para>
   </step>
   <step>
    <para><guimenu>LXC</guimenu> 接続を選んで、メニューから <guimenu>ファイル</guimenu> <guimenu>新しい仮想マシン</guimenu> を選択します。</para>
   </step>
   <step>
    <para><guimenu>アプリケーションコンテナ</guimenu> を選んで <guimenu>進む</guimenu> を押します。</para>
    <para>起動すべきアプリケーションのパスを指定します。この例では <command>/bin/sh</command> と入力されているものをそのまま使用するものとします。あとは <guimenu>進む</guimenu> を押します。</para>
   </step>
   <step>
    <para>コンテナに対して割り当てる最大メモリ量と CPU 数を選択して <guimenu>進む</guimenu> を押します。</para>
   </step>
   <step>
    <para>コンテナの名前を入力します。この名前は、コンテナに対して <command>virsh</command> コマンドを実行するような場合に使用するものです。</para>
    <para><!-- NOTE: not "Advanced options" but "Network selection"? --><guimenu>ネットワークの選択</guimenu> を押してコンテナの接続先ネットワークを選択します。あとは <guimenu>完了</guimenu> を押すと、コンテナが作成され起動されます。コンソールは自動的に表示されます。</para>
    <para>ただし、アプリケーションが終了すると、コンテナも停止することになりますので、あらかじめご注意ください。</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.lxc.config.apparmor">
  <title>&aa; によるコンテナの権限制限</title>

  <para>既定では、コンテナは &aa; や &selnx; で保護されることはありません。また、 libvirt のドメイン (仮想マシン) に対して、グラフィカルな手段でセキュリティモデルを変更することもできません。そのため、 <command>virsh</command> で設定を行なうことになります。</para>

  <procedure xml:id="pro.lxc.setup.apparmor">
   <step>
    <para>virsh を利用してコンテナの XML 設定を編集します:</para>
<screen>&prompt.user;virsh -c lxc:/// edit <replaceable>MYCONTAINER</replaceable></screen>
   </step>
   <step>
    <para>XML の設定内に下記の内容を追記して保存し、エディタを終了します。</para>
<screen>&lt;domain&gt;
    ...
    &lt;seclabel type="dynamic" model="apparmor"/&gt;
    ...
&lt;/domain&gt;</screen>
   </step>
   <step>
    <para>このように設定を行なうことで、コンテナに対する &aa; プロファイルが <filename>/etc/apparmor.d/libvirt</filename> ディレクトリ内に作成されるようになります。既定のプロファイルでは、コンテナ内で最小限のアプリケーションのみを許可していますので、必要であれば <filename>libvirt-<replaceable>コンテナの_uuid</replaceable></filename> ファイルを編集して設定を変更してください。なお、このファイルは libvirt 側で上書きすることはありません。</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="lxc.diff">
  <title>libvirt LXC ドライバと LXC の違い</title>

  <para><phrase os="sles;sled">&sls; 11 SP3</phrase> <phrase os="osuse">Leap 以前の &opensuse; バージョン</phrase> でも LXC が同梱されていましたが、 <phrase os="sles;sled">&sls; 12</phrase> <phrase os="osuse">&opensuse; Leap</phrase> では libvirt LXC ドライバを使用するようになっています。後者は混乱を防ぐため、 libvirt-lxc と呼ばれています。双方のツールはいずれも管理形態や設定方法が異なるものですので、下記に主な違いを示しておきます。</para>

  <para>大きく違う点としては、 libvirt は XML ファイルでドメイン (仮想マシン) の設定を保存するのに対し、 LXC ではプロパティファイルを使用します。 LXC でのほとんどのプロパティはドメインの XML に移行することができますが、下記については移行することができません:</para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para><emphasis>lxc.network.script.up</emphasis> : このスクリプトは <filename>/etc/libvirt/hooks/network</filename> の libvirt フックを利用して実装することができますが、スクリプト自身の調整作業が必要となります。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.network.ipv*</emphasis> : libvirt では、ドメインの設定内でコンテナのネットワーク設定を行なうことができません。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.network.name</emphasis> : libvirt ではコンテナのネットワークカード名を設定することができません。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.devttydir</emphasis> : libvirt ではコンソールデバイスの場所を変更することができません。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.console</emphasis> : 現時点では、 libvirt の LXC コンテナで、コンソールへの出力をホスト内のファイルに保存する機能は提供されていません。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.pivotdir</emphasis> : libvirt では <command>pivot_root</command> 向けに使用されるディレクトリを調整する機能が用意されていません。 <filename>/.olroot</filename> を使用します。</para>
   </listitem>
   <listitem>
    <para><emphasis>lxc.rootfs.mount</emphasis> : libvirt では、これを調整する方法がありません。</para>
   </listitem>
  </itemizedlist>

  <para>&lxc; の VLAN ネットワークでは、ホスト側に VLAN インターフェイスを作成して、それをゲスト側のネームスペースに移動させる処理を自動的に行ないます。 libvirt-lxc の設定では、 &ovs; の TAP デバイスや SR-IOV VF の PCI のパススルーに対してのみ、 VLAN のタグ ID を設定することができます。変換ツールでは、ホスト側で VLAN インターフェイスを手動作成するようユーザ側に求める必要があります。</para>

  <para>&lxc; のルートファイルシステムはイメージファイルであってもかまいませんが、 LXC では適切なファイルシステム形式を判別するため、無理矢理にマウントを行なおうとします。 libvirt-lxc ではいくつかの形式のイメージファイルをマウントすることができますが、形式の指定パラメータでの 'auto' は明示的にサポートされていません。つまり、設定ファイルを移行する場合は、イメージファイルの形式にあわせて正しく設定する必要があることになります。</para>

  <para>&lxc; では任意の cgroup 設定 (将来的に追加されるものを含む) に対応していますが、 libvirt のドメイン設定では、それぞれをマップする必要があります。</para>

  <para>&lxc; ではルートファイルシステムにブロックデバイスを指定してマウントすることができますが、パーティションファイルをマウントすることができません。そのため、手作業でループバックデバイスに割り当てる必要があります。 libvirt-lxc ではブロックデバイスもパーティションファイルもマウントすることができます。</para>
 </sect1>
 <sect1 xml:id="sec.lxc.namespaces">
  <title>コンテナを跨いだネームスペースの共有</title>
  <para>&deng; と同様に、 libvirt でもネットワークのネームスペースを共有する目的で、コンテナやプロセスからネームスペースを継承することができます。ネームスペースの共有設定例は下記のとおりです。</para>
 <screen>&lt;domain type='lxc' xmlns:lxc='http://libvirt.org/schemas/domain/lxc/1.0'&gt;
 [...]
 &lt;lxc:namespace&gt;
  &lt;lxc:sharenet type='netns' value='red'/&gt;
  &lt;lxc:shareuts type='name' value='<replaceable>CONTAINER_1</replaceable>'/&gt;
  &lt;lxc:shareipc type='pid' value='<replaceable>12345</replaceable>'/&gt;
 &lt;/lxc:namespace&gt;
 &lt;/domain&gt;
</screen>
    <para>ここで、 <option>netns</option> オプションは <literal>sharenet</literal> 固有の仕組みです。コンテナに対して新しいネットワークネームスペースを作成する代わりに、既存のネットワークネームスペースを使用する際に設定してください。この場合、 <option>privnet</option> オプションは無視されます。</para>
 </sect1>
<!-- ========================================================= -->
 <sect1 xml:id="sec.lxc.moreinfo">
  <title>さらなる情報</title>

  <variablelist>
   <varlistentry>
    <term>&lxc; コンテナドライバ</term>
    <listitem>
     <para><link xlink:href="http://libvirt.org/drvlxc.html"/></para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
