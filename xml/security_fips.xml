<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-fips">
 <title>FIPS 140-2 準拠機能の有効化</title>
 <info>
  <abstract>
   <para>アメリカ合衆国連邦政府向けの業務を行うような場合、暗号化アプリケーション (OpenSSL, GnuTLS, OpenJDK) の使用にあたっては Federal Information Processing Standards (FIPS) 140-2 に準拠するよう求められることがあります。 FIPS 140-2 は私企業が提供する暗号化モジュールに向けて作られたセキュリティ認定プログラムで、このプログラムへの準拠が求められた場合にのみ有効化すべき仕組みです (求められていない場合は、何もする必要はありません) 。本章では FIPS モードの有効化を行うための手順のほか、より詳しい情報のリンクも示しています。</para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

<sect1 xml:id="sec-fips-concept">
  <title>FIPS 140-2 の概要</title>

  <warning>
    <title>FIPS の使用には専門知識が必要となる件について</title>
    <para>FIPS の管理は複雑で、専門的な知識が必要となります。適切な実装やテスト、トラブルシューティングの実施の全てにおいて、高度な知識が求められることに注意してください。</para>
  </warning>

  <para>組織や企業が暗号化アプリケーションを FIPS 準拠として認定を受けるには、 Cryptographic Module Validation Program (CMVP) (詳しくは <link xlink:href="https://csrc.nist.gov/projects/cryptographic-module-validation-program"/> を参照) への申請を行わなくてはなりません。</para>
  <para>また、現時点では FIPS 暗号化標準として FIPS 140-2 と FIPS 140-3 の 2 種類が存在しています。 FIPS 140-2 標準は 2002 年に確定した標準で、 2026 年 9 月 22 日まで有効とされています。もう一方の FIPS 140-3 標準は 2019 年 3 月に承認された標準で、 140-2 を置き換えるものとして作られています。なお、現時点で CMVP は FIPS 140-2 テストへの受け付けは行っておらず、 FIPS 140-3 の受け付けのみを行っています。</para>
  <para>&suse; では認証済みモジュールの一覧を <link xlink:href="https://www.suse.com/support/security/certifications/"/> で公開しています。ここには様々な情報も提供されています。</para>
</sect1>

<sect1 xml:id="sec-fips-use-case">
  <title>FIPS モードを必要とする条件</title>
  <para>&sle; で FIPS モードを有効化するのは簡単です。準拠が必要なサーバを FIPS モードで動作させるだけです。</para>
  <para>FIPS 準拠を求められていない場合は、 FIPS モードの有効化を行わないほうが適切です。なぜなら、下記のような理由があるからです:</para>
  <itemizedlist>
    <listitem>
      <para>FIPS では制限が強すぎます。特定の暗号化アルゴリズムの使用を強制するばかりか、そのアルゴリズムを適切に実装している認証済みバイナリのみを実行するようにしてしまいます。</para>
    </listitem>
    <listitem>
      <para>アップグレードによって機能が制限されることもあります。</para>
    </listitem>
    <listitem>
      <para>認証にかかる時間が非常に長く、認証された頃には古いリリースになってしまいます。</para>
    </listitem>
    <listitem>
      <para>ssh, sshd, sftp-server などの認証済みバイナリは、その起動時に自分自身をチェックして、それが成功した場合にのみ動作するようになってしまいます。これによって、少ないながらも性能劣化を引き起こしてしまいます。</para>
    </listitem>
    <listitem>
      <para>FIPS の管理は複雑で、比較的高度な知識が必要となります。</para>
    </listitem>
  </itemizedlist>
</sect1>

<sect1 xml:id="sec-fips-install">
  <title>FIPS のインストール</title>
  <para>新規にインストールしている場合は、 <package>patterns-server-enterprise-fips</package> という名称のパターンをインストールしてください。インストールが完了したあとは、 <xref linkend="sec-fips-enable"/> に示された手順に従って、 FIPS を有効化してください。</para>
  <para>お使いのシステムに <package>patterns-server-enterprise-fips</package> をインストールして FIPS モードを有効化していても、鍵の再生成や監査システムのセットアップなど、いくつかの調整を行う必要があります。</para>
</sect1>

<sect1 xml:id="sec-fips-enable">
  <title>FIPS モードの有効化</title>

<!-- The file paths for the two READMEs are different than in earlier
  releases. In SLE 15 SP2 and older the path is /usr/share/doc/packages/openssh/
  cschroder Jan 13, 2022 -->
<para>FIPS の有効化を行うには、いくつかの作業が必要となります。まずは <package>openssh-common</package> パッケージに含まれる <filename>/usr/share/doc/packages/openssh-common/README.FIPS</filename> と <filename>/usr/share/doc/packages/openssh-common/README.SUSE</filename> のファイルをお読みください (いずれも英語) 。これらのファイルには、 &sle; における FIPS の重要な情報が書かれています。</para>
  <para>FIPS が既に有効化されているかどうかを確認するには、下記のように実行します:</para>
  <screen>&prompt.sudo;<command>sysctl -a | grep fips</command>
crypto.fips_enabled = 0</screen>
  <para><literal>crypto.fips_enabled = 0</literal> が出力された場合、 FIPS は有効化されていません。有効化されていれば 1 になるはずです。</para>
  <para>その後 <filename>/etc/default/grub</filename> ファイルを編集します。 <filename>/boot</filename> が個別のパーティションに存在していない場合であれば、 <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> に <literal>fips=1</literal> を追加します・たとえば下記のようになります:</para>
  <screen>GRUB_CMDLINE_LINUX_DEFAULT="splash=silent mitigations=auto quiet fips=1"</screen>
  <para><filename>/boot</filename> が個別のパーティションとして存在する場合は、下記のようにしてそのパーティションを指定します。下記の例のうち、デバイス名をお使いの環境に合わせて指定してください:</para>
  <screen>GRUB_CMDLINE_LINUX_DEFAULT="splash=silent mitigations=auto quiet fips=1 boot=<replaceable>/dev/sda1"</replaceable></screen>
  <para>あとは設定を保存して、 GRUB の設定と initramfs イメージを再構築します (<replaceable>名前</replaceable> には現在の initrd ファイルの名前を、 <replaceable>カーネルバージョン</replaceable> には現在実行しているカーネルのバージョンをそれぞれ入力します):</para>
  <screen>&prompt.sudo;<command>grub2-mkconfig -o /boot/grub2/grub.cfg</command>
&prompt.sudo;<command>/usr/bin/dracut --logfile /var/log/YaST2/mkinitrd.log --force /boot/$initrd-<replaceable>名前</replaceable> $<replaceable>カーネルバージョン</replaceable></command></screen>
  <para>あとはシステムを再起動するだけです。再起動後に再度確認を行うと、下記のように FIPS が有効化されているはずです:</para>
<screen>&prompt.sudo;<command>sysctl -a | grep fips</command>
crypto.fips_enabled = 1</screen>
  <para>FIPS を有効化すると、システムがうまく起動しなくなってしまうことがあります。このような場合は、再起動時に GRUB メニューが表示された際、 <keycap>E</keycap> を押して編集モードに移行し、 <literal>linux</literal> の行内にある <literal>fips=1</literal> を削除したあと、 <keycap>F10</keycap> キーを押して起動してください。たいていは <filename>/etc/default/grub</filename> ファイルの記述ミスですので、この手順で一時的に FIPS を無効化して起動したあと、ファイルを修正して GRUB と initramfs を再構築し、起動し直してください。</para>
 </sect1>

 <sect1 xml:id="sec-fips-samba-cifs">
  <title>Samba/CIFS での MD5 の使用禁止について</title>
  <para>FIPS 標準において、 MD5 はハッシュアルゴリズムとしては不適切であり、ユーザ認証時に使用してはならないものとされています。 FIPS 準拠のネットワーク環境を運用している場合、クライアントもサーバも FIPS 準拠モードで動作させる必要がありますが、 Samba/CIFS ユーザの認証時には Kerberos サービスを使用しなければなりません。これは、他の全ての Samba 認証モードには MD5 が含まれてしまっているためです。</para>
  <para>&samba; サーバの詳細については、 &storage_guide; の &samba; セクションをお読みください。</para>
 </sect1>
</chapter>
