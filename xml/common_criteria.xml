<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" role="General" xml:id="cha-common-criteria">
 <title>コモンクライテリア (Common Criteria)</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info> 
    <para>コモンクライテリア (Common Criteria) とは IT 製品のセキュリティ評価を行うために幅広く使用され、最も認知されている基準です。この基準では、独立した評価機関が独自に評価を実施し、その評価結果を認証機関が後から認証する形式を取ります。セキュリティ機能要件 (Security Functional Requirements (SFR)) はプロテクションプロファイル (Protection Profiles (PP)) と呼ばれる形式でとりまとめられ、セキュリティターゲット (Security Target (ST)) と評価保証レベル (Evaluation Assurance Levels (EAL)) の定義が同等のものであれば、それによってさまざまな製品のセキュリティ機能を比較できる、と言った仕組みになっています (セキュリティターゲット (Security Target (ST)) の定義は一般に、製品の目的にあった PP を参照するようになっています) 。</para>

  <sect1 xml:id="sec-common-criteria-introduction">
   <title>概要</title>

   <para>IT 製品におけるセキュリティの明確な定義は "挑戦し続けること" です。セキュリティは決して終わることのない作業を表すものであり、合致するかどうかに関わらず常に変化し続けるものです。コモンクライテリア (EAL7 より下) では、過ちを犯しやすいシステムに関する明確な規定がありませんが、技術それ自身だけでは説明できない重要な価値を規定しています。誰かがこの手法を利用して、特定のシステムの設計を独立して評価することにより、製品に対して発生しうるクレームに対応し、製品の製造とメンテナンスに明確な注意が払われていることを確認することができます。</para>

   <para>証明書には製品のセキュリティ機能のほか、製品を設計／構築し、その保守期間全体にわたって製品を保守する企業に対する成熟度が記載されます。このような仕組みのため、コモンクライテリアは IT 製品のセキュリティに関する全ての項目を考慮するアプローチであり、かなり全体論的な仕組みを目指すものであります。</para>
  </sect1>
  <sect1 xml:id="sec-common-criteria-eal">
   <title>評価保証レベル (Evaluation Assurance Level (EAL))</title>
   <para>評価保証レベル (EAL) は信頼度を示す指標で、特定の製品が満たしているセキュリティレベルを表しています。レベルは 1 から 7 で、それぞれ下記のような意味になっています:</para>

   <itemizedlist>
    <listitem>
     <para>EAL1: 機能テスト済み</para>
    </listitem>
    <listitem>
     <para>EAL2: 構造化テスト済み</para>
    </listitem>
    <listitem>
     <para>EAL3: 方式的テストおよびチェック済み</para>
    </listitem>
    <listitem>
     <para>EAL4: 方式的設計／テスト／レビュー済み</para>
    </listitem>
    <listitem>
     <para>EAL5: 準形式的設計／テスト済み</para>
    </listitem>
    <listitem>
     <para>EAL6: 準形式的検証済み設計／テスト済み</para>
    </listitem>
    <listitem>
     <para>EAL7: 形式的検証済み設計／テスト済み</para>
    </listitem>
   </itemizedlist>

   <para>EAL1 はセキュリティ要件に対して基本的な保証のみを提供するのに対して、 EAL2 から EAL4 までは中程度の保証レベルを、 EAL5 から EAL7 まではより高度な保証を提供します。 EAL4 は、より高い保証レベルを実現するよう当初から設計されている場合を除いて、製品として到達可能な最大のレベルとなります。</para>
  </sect1>

  <sect1 xml:id="sec-common-criteria-principles">
   <title>一般的な原則</title>

   <para>このガイドにおける多くの推奨事項は、いずれもガイドラインをベースにしたものです。セキュリティプロセスを定義したりする場合や、ここでは明確に説明していない設定に関して、何らかの決定を行いたい場合に、これらを検討するとよいでしょう。</para>

   <variablelist>
    <varlistentry>
     <term>可能な限りのデータ暗号化の使用</term>
     <listitem>
      <!--<para>
       Refer to the  TODO<xref linkend="pre-hardening-about"/> section of this
       guide. In <xref linkend="pre-hardening-about-assumptions"/>, the
       limitations of cryptography are briefly outlined.
       </para>-->
      <para>暗号化は確かに有用な仕組みではありますが、目的によっては不適切な場合があり得ることに注意してください。また、暗号化を施したからといって安全性が向上するとは限らないこともありますし、暗号化によってシステムにさらなるリスクをもたらしてしまうこともあります。暗号化を行うにあたっては十分な情報に基づいた決定を行うようにしてください。誤った安心感はむしろ有害となりうることもあります。</para>

      <para>&productname; では下記のような暗号化機能を提供しています:</para>
      <itemizedlist>
       <listitem>
        <para>ネットワーク接続 (<command>openssl</command> や <command>stunnel</command> などのコマンド), リモート接続 ( <command>openssh</command>  (<command>man ssh(1)</command>) など)</para>
       </listitem>
       <listitem>
        <para>ファイル ( <command>gpg</command> )</para>
       </listitem>
       <listitem>
        <para>ブロックレイヤでのファイルシステム全体の暗号化 ( <literal>dm-crypt</literal> , <command>cryptsetup</command> )</para>
       </listitem>
       <listitem>
        <para>VPN ( <command>ipsec</command> , <command>openvpn</command> )</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>最小限のパッケージインストール</term>
     <listitem>
     <para>お使いのシステムにインストールするパッケージを最小限に制限することが重要です。インストールされていないバイナリは実行される危険も無いためです。</para>
      <para>システムをインストールするにあたっては、インストールされるパッケージを制限することができます。たとえばいったん全てのパッケージの選択を外して、必要なパッケージのみをインストールするような方法もあります。たとえば &yast; 内で <systemitem>apache2-mod_perl</systemitem> パッケージをインストールすれば、 Apache で動作させるために必要なパッケージも自動的に選択されインストールされます。なお、システムの依存関係をより柔軟に処理できるよう、人為的に削減されることもあります。いずれにしても、必要なパッケージのみを選択するよう心がけてください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>サービスの分離 (別々のシステムでのサービス稼働)</term>
     <listitem>
      <para>可能な限り、 1 つのサーバには 1 つの機能のみを動作させることをお勧めします。複数のサービスを同時に動作させてしまうと、いずれか 1 つのサービスのソフトウエアに脆弱性が存在するだけで、攻撃者は容易に権限を奪取できてしまうためです (もちろん権限を奪取できる脆弱性が存在していれば、の話ですが) 。</para>
      <para>サービスに対して AppArmor を使用すると、サービスから不正なアクセスを行われてしまうことを防げます。詳しくは <xref linkend="part-apparmor"/> および <command>apparmor</command> のマニュアルページをお読みください。</para>
      <para>&productname; では仮想化技術にも対応しています。仮想化は一般にサーバ統合の目的で使用されますが、サービスを分離する目的でも有用です。しかしながら、仮想化技術は個別の物理マシンでサービスを動作させるのに比べると、分離強度が弱いことに注意する必要があります。また、仮想マシンを分離するハイパーバイザの機能は、 Linux カーネルが提供するプロセス間の分離やアドレス空間の分離と同等か、それ未満の安全性しか提供しないことにも注意してください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>システムの安全性確認とバックアップ</term>
     <listitem>
      <para>システムに対する定期的なバックアップ採取と安全性確認は、システムに対する攻撃が成功してしまったような場合に特に有用なものとなります。また、バックアップが正しく行われているかどうかの確認も、セキュリティルーチンの一部にしておくとよいでしょう。</para>
      <para>高速に、かつ直接アクセスできるバックアップが存在することで、お使いのシステムに対する信頼性確認を行うことができるようになります。ただし、システムの変更内容を追跡できるよう、バックアップの仕組みやソリューションには適切なバージョン管理の仕組みが存在している必要があります。たとえば各パッケージのインストール日時 ( <command>rpm</command> <option>-q</option> <option>--queryformat='%{INSTALLTIME} %{NAME}\n'</option> <replaceable>パッケージ名</replaceable> ) と変更されたファイルの対応付けを、バックアップのログファイル内に記録しておくなどの方法があります。</para>
      <para>&productname; &productnumber; には未知の (成功した) 攻撃を検出するための仕組みが用意されています。もちろん設定にあたって大きな手間がかかることもありません。</para>
      <para>特に、 <systemitem class="resource">AIDE</systemitem> (Advanced Intrusion Detection Environment) と呼ばれるファイルやディレクトリの正常性確認ツールの使用をお勧めしています。初回の起動時には、設定ファイルとして指定されているシステム内のファイルを読み込んでハッシュデータベースを作成し、後から設定ファイルが変更されていないかどうかを確認できるものです。</para>
      <warning>
       <title>バックドア</title>
       <para>AIDE を使用する場合は、ハッシュデータベースを攻撃者から決してアクセスできない場所にコピーしておく必要があります。そうでないと、攻撃者はハッシュデータベースそのものを改ざんしてしまい、バックドアを設置したりしても検出できなくなってしまう危険性があるためです。</para>
       <para>また、カーネル内にバックドアを設置する可能性があることにも注意する必要があります。カーネル内のバックドアは非常に検出が難しいばかりか、効率的に監査をかいくぐることができますし、システムを改ざんしてもほぼ何も検出できなくなってしまいます。そのようなことから、システムの一貫性チェックはレスキューシステム (もしくは通常動作させているものとは別の独立したシステム) で動作させる必要があります。</para>
      </warning>
       <para>なお、セキュリティ更新の適用によって、ハッシュデータベースを更新する必要が生じることにも注意してください。 <command>rpm</command> <option>-qlv <replaceable>パッケージ名</replaceable></option> のように実行すると、パッケージ内に含まれているファイルを一覧表示することができます。 RPM サブシステムは非常にパワフルなツールであり、さまざまなデータを管理することができます。特に <option>--queryformat</option> オプションを使用すると、さまざまな情報を抽出することができます。ハッシュデータベースを適宜更新していくことで、さらに RPM を便利に利用できるようになります。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect1>
  <sect1 xml:id="sec-common-criteria-more">
   <title>さらなる情報</title>
   <para>コモンクライテリアの評価では、検証環境下における製品の固有設定を調査します。検証環境のインストールや設定については、コモンクライテリアの評価ドキュメンテーション内にある <quote>管理者ガイド</quote> をお読みのうえ、これをベースラインとして設定を行ってください。</para>

   <para>しかしながら、検証環境での設定が必ずしも <emphasis>強固な</emphasis> ものとは限らないことにも注意してください。 setuid ビットの削除をはじめとしたインストール後の管理手順の説明をお読みのうえ、安全なシステムを構築してください。もちろんこれだけでは不十分です。</para>
  <itemizedlist>
   <listitem>
     <para>&productname; におけるセキュリティ認証と機能について、詳しくは <link xlink:href="https://www.suse.com/support/security/certifications/"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>&suse; のセキュリティリソースの一覧については、 <link xlink:href="https://www.suse.com/support/security/"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>コモンクライテリアの取り組みで作成された文書とは別に、下記のようなマニュアルページを参照してもかまいません:</para>
    <simplelist>
     <member>pam(8), pam(5)</member>
     <member>apparmor(7) および参照先マニュアルページ</member>
     <member>rsyslogd(8), syslog(8), syslogd(8)</member>
     <member>fstab(5), mount(8), losetup(8), cryptsetup(8)</member>
     <member>haveged(8), random(4)</member>
     <member>ssh(1), sshd(8), ssh_config(5), sshd_config(5), ssh-agent(1), ssh-add(1), ssh-keygen(1)</member>
     <member>cron(1), crontab(5), at(1), atd(8)</member>
     <member>systemctl(1), daemon(7), systemd.unit(5), systemd.special(5), kernel-command-line(7), bootup(7), systemd.directives</member>
    </simplelist>
   </listitem>
  </itemizedlist>
 </sect1>
 </chapter>
