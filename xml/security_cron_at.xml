<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" role="General" xml:id="cha-sec-cron-at">
 <title>&crond; と <systemitem class="daemon">at</systemitem> の制限</title>
 <info>
  <abstract>
   <para>本章では、システムのセキュリティを改善するため、 &crond; や <systemitem class="daemon">at</systemitem> デーモンへのアクセスを制限する方法について説明しています。</para>
  </abstract>
 </info>
 <sect1>
  <title>&crond; デーモンの制限</title>
  <para>&crond; は指定した時間に裏でコマンドを自動的に実行させるためのデーモンです。 &crond; そのものに関する詳細は、 <xref linkend="sec-suse-packages-cron"/> をお読みください。</para>
  <para><filename>cron.allow</filename> ファイルは &crond; を利用してジョブを実行することのできるユーザを指定するためのファイルです。このファイルは既定では存在していないため、 <filename>cron.deny</filename> ファイルに記載されている場合を除いて、全てのユーザがジョブを作成できるようになっています。</para>
  <procedure>
   <para>&rootuser; 以外のユーザが &crond; ジョブを作成できないようにするには、下記の手順を実施します。</para>
   <step>
    <para>まずは空の <filename>/etc/cron.allow</filename> ファイルを作成します:</para>
<screen>&prompt.sudo;<command>touch</command> /etc/cron.allow</screen>
   </step>
   <step>
    <para>&crond; ジョブの作成を許可するユーザ名を、下記のようにして追加していきます:</para>
<screen>&prompt.sudo;<command>echo</command> "&exampleuser_plain;" &gt;&gt; /etc/cron.allow</screen>
   </step>
   <step>
    <para>動作を確認したい場合は、 root 以外でかつ <filename>cron.allow</filename> 内に追加したユーザになってから &crond; ジョブを作成してみます。下記のようなメッセージが (一瞬だけですが) 表示されるはずです:</para>
<screen>&prompt.user;<command>crontab -e</command>
no crontab for &exampleuser_plain; - using an empty one</screen>
    <para>crontab のエディタを終了し、今度は上記のファイル内に追加していないユーザで同じことを実施します (もちろんユーザを追加する前に行ってもかまいません):</para>
<screen>&prompt.user2;<command>crontab -e</command>
You (&exampleuserII_plain;) are not allowed to use this program (crontab)
See crontab(1) for more information</screen>
   </step>
  </procedure>
  <important>
   <title>既存の &crond; ジョブについて</title>
   <para><function>cron.allow</function> はユーザに対して、新しい &crond; ジョブの作成を許可するための設定です。 ユーザが <filename>cron.deny</filename> 内に登録されていた場合でも、既にそのユーザのジョブが存在していれば、それらは実行されてしまいます。既存のジョブについても禁止したい場合は、上述の手順でファイルを作成したあと、 <filename>/var/spool/cron/tabs</filename> ディレクトリ内にあるユーザの crontab ファイルを削除してください。</para>
  </important>
  <note>
   <title>&systemd; タイマーユニットへの切り替えについて</title>
   <para>&systemd; タイマーユニットへの切り替えについても検討しておくことをお勧めします。&systemd; タイマーユニットではさらに高度な設定が可能になっているほか、タスクの実行に対しても信頼性が高められています。既定では、一般ユーザはログインしていない限り、コードを実行することができないように設定されています。これにより、ユーザが接続していない場合のシステムとの対話を制限しています。</para>
   <para>&systemd; のタイマーユニットに関する詳細は、 <xref linkend="sec-boot-systemd-timer-units"/> をお読みください。</para>
  </note>
 </sect1>

 <sect1>
  <title><systemitem class="daemon">at</systemitem> スケジューラの制限</title>
  <para><systemitem class="daemon">at</systemitem> ジョブ実行システムは、ユーザに対して 1 回限りのジョブ実行の機能を提供します。 <filename>at.allow</filename> ファイルは <systemitem class="daemon">at</systemitem> を利用してジョブを実行することのできるユーザリストを指定するためのファイルです。このファイルは既定では存在していないため、 <filename>at.deny</filename> ファイルに記載されている場合を除き、全てのユーザがジョブを作成できるようになっています。</para>
  <procedure>
   <para><systemitem class="daemon">at</systemitem> ジョブを &rootuser; 以外のユーザが利用できないようにするには、下記の手順を実施します。</para>
   <step>
    <para>まずは空の <filename>/etc/at.allow</filename> ファイルを作成します:</para>
<screen>&prompt.sudo;<command>touch</command> /etc/at.allow</screen>
   </step>
   <step>
    <para><systemitem class="daemon">at</systemitem> ジョブを作成できるユーザのユーザ名を、下記のようにして追加していきます:</para>
<screen>&prompt.sudo;<command>echo</command> "&exampleuser_plain;" &gt;&gt; /etc/at.allow</screen>
   </step>
   <step>
    <para>動作を確認したい場合は、 root 以外でかつ <filename>at.allow</filename> 内に追加したユーザになってからジョブを作成してみます。下記のようなメッセージが表示されるはずです:</para>
<screen>&prompt.user;<command>at 00:00</command>
at&gt;</screen>
    <para><keycombo><keycap function="control"/><keycap>C</keycap></keycombo> を押して <systemitem class="daemon">at</systemitem> プロンプトを抜け、今度は上記のファイル内に追加していないユーザで同じことを実施します (もちろんユーザを追加する前に行ってもかまいません):</para>
<screen>&prompt.user2;<command>at 00:00</command>
You do not have permission to use at.</screen>
   </step>
  </procedure>
   <note>
   <title><systemitem class="daemon">at</systemitem> のアンインストールについて</title>
   <para><systemitem class="daemon">at</systemitem> は現在、一般的には使用されていません。明確な用途がある場合を除き、使用を制限するのではなくデーモンをアンインストールしておくことをお勧めします。</para>
  </note>
 </sect1>

</chapter>
