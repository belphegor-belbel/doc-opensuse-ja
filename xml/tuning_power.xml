<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-tuning-power">
<!--
 power management on the server (not mobile computers)
 Info Provider: Thomas Renniger <trenn@suse.de>
-->

 <title>電源管理</title>
 <info>
      <abstract>
        <para>電源管理機能は、電力や冷却システムに対する運用コストを下げるためのものだけでなく、それと同時に現在の要件に適合したレベルの性能を維持するために必要な機能です。そのため電源管理機能は、必要な性能の維持と省電力のバランスを常に取る必要があることになります。電源管理機能はシステム内の様々なレベルで実装され使用されています。デバイスやオペレーティングシステムの電源管理機能の仕様集は、 Advanced Configuration and Power Interface (ACPI) として規定されています。サーバ環境での省電力は主にプロセッサレベルで実現されていますが、本章では主な考え方と分析に使用するツール類、そして影響するパラメータについて説明しています。</para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>

 <sect1 xml:id="sec-tuning-power-cpu">
  <title>CPU レベルでの電源管理</title>

  <para>CPU のレベルでは、様々な方法で電力使用量を制御することができます。たとえばアイドル (待機) 状態での電力使用量の調整 (C-ステート) や、 CPU の動作周波数変更 (P-ステート) 、そして CPU の減速 (T-ステート) があります。下記のセクションには、それぞれのアプローチに対する簡潔な説明と、電力使用量にもたらす影響度合いを示しています。</para>

  <sect2 xml:id="sec-tuning-power-cpu-cstates">
   <title>C-ステート (プロセッサの待機状態)</title>
   <para>新しいプロセッサであれば、 <literal>C-ステート</literal> と呼ばれる省電力モードに対応しています。この設定は、使用していないコンポーネントの電源を落としておくことで、待機状態のプロセッサの消費電力を減らすための仕組みです。</para>
   <para>プロセッサが <literal>C0</literal> 状態に設定されている場合、そのプロセッサは何らかの処理を実行していることになります。 <literal>C0</literal> 以外の状態であれば、アイドル (待機) 状態にあることになります。 C の後ろの番号が大きければ大きいほど、より CPU が深く休眠し、より多くのコンポーネントを休止させることで、電力の消費を抑えていることになります。ただし、 C の後ろの番号が大きければ大きいほど、遅延を生み出す結果になります。つまり、 CPU が <literal>C0</literal> に戻るまでに時間が必要になります。処理内容 (スレッドが起動して CPU の使用を開始し、再度休眠状態に入るまでの時間など) やハードウエア (たとえばネットワークデバイスの割り込み状況) にも依存しますが、深い休眠状態を無効化すれば、全体の性能は高くなります。 C-ステートの設定方法について、詳しくは <xref linkend="sec-tuning-power-tools-cpupower-idle-info"/> をお読みください。</para>
   <para>また、ステートによってはサブモードが規定され、さらに細かい省電力レベルが用意されていることもあります。 C-ステートやサブモードの対応状況は、プロセッサによって異なります。ただし、 <literal>C1</literal> については必ず提供されています。</para>
   <para><xref linkend="tab-tuning-power-cstates"/> には、主な C-ステートの概要を示しています。</para>
   <table xml:id="tab-tuning-power-cstates">
    <title>C-ステート</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>モード</para>
       </entry>
       <entry>
        <para>定義</para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>C0</para>
       </entry>
       <entry>
        <para>動作状態を表わします。 CPU の機能が全て有効化されています。</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>C1</para>
       </entry>
       <entry>
        <para>最初のアイドル状態です。ソフトウエアを介して CPU のメイン内部クロックを停止させている状態です。バスインターフェイスユニットと APIC はフルスピードで動作し続けています。</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>C2</para>
       </entry>
       <entry>
        <para>ハードウエアを介して CPU のメイン内部クロックを停止させている状態です。ソフトウエアから参照できる全ての状態を維持していますが、割り込みでの再動作にはしばらくの時間を要するようになります。</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>C3</para>
       </entry>
       <entry>
        <para>全ての CPU 内部クロックを停止させている状態です。プロセッサ内のキャッシュの一貫性 (コヒーレンシー) についても維持を行なう必要のない状態ですが、その他の状態については維持し続けています。また、プロセッサによっては C3 ステートのバリエーションが用意され、割り込みによる再動作にかかる時間が異なる設定が用意されているものがあります。</para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>不要な電力消費を避けるため、深い休眠状態を有効化した場合と無効化した場合で、必要な負荷に対する処理速度を確認しておくことをお勧めします。詳しくは <xref linkend="sec-tuning-power-tools-cpupower-idle-info"/> を参照するか、もしくは <command>cpupower-idle-set(1)</command> のマニュアルページをお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-tuning-power-cpu-pstates">
   <title>P-ステート (プロセッサの性能状態)</title>
   <para>プロセッサが動作している状態 (C0 ステート) にある場合、 CPU はいずれかの性能状態 <literal>(P-ステート)</literal> にあります。 C0 を除く C-ステートがアイドル (待機) 状態を表わすのに対して、 <literal>P-ステート</literal> は CPU の動作周波数と電圧に関連する動作状態を表わします。</para>
   <para>P の後ろの数値が大きければ大きいほど、より低い動作周波数および電圧でプロセッサが動作していることになります。 P-ステートの番号体系と実装には様々なものがありますが、 <literal>P0</literal> は (<xref linkend="sec-tuning-cpu-power-turbo"/> を除く) 最高の性能状態を表わす意味になっています。 P の後ろの番号が大きいほど、プロセッサの速度が落ちていて、かつ電力消費も少ないモードであることになります。たとえば <literal>P3</literal> の状態は、 <literal>P1</literal> の状態に比べて遅く、省電力で動作しています。また、 P-ステートは <literal>C0</literal> ステートで動作している (つまり、全ての機能を動作させ、休眠状態に無い) 場合にのみ使用されるものでもあります。 CPU の P-ステートは ACPI 仕様でも定義されています。詳しくは <link xlink:href="http://www.acpi.info/spec.htm"/> をお読みください。</para>
   <para>なお、 C-ステートと P-ステートは、互いに独立して提供される仕組みです。</para>
  </sect2>


  <sect2 xml:id="sec-tuning-cpu-power-turbo">
   <title>Turbo 機能</title>
<!--taroth 2011-09-22: terminology: AMD: Turbo CORE, Intel: Turbo Boost-->
   <para>Turbo 機能を利用することで、動作中の CPU コアの動作速度を動的に <literal>引き上げ</literal> ながら、動作していない CPU コアを深い休眠状態にすることができます。これにより、熱設計電力 (Thermal Design Power (TDP)) の制限を守りながら、動作中のスレッドの性能を上げることができます。</para>
   <para>しかしながら、 CPU コアが Turbo 機能に対応できるかどうかは、アーキテクチャによって異なります。このような新しい機能の効率を調べたい場合は、 <xref linkend="sec-tuning-power-tools-cpupower"/> を参照してください。</para>
  </sect2>
 </sect1>

<!--relates to P-States-->
<!-- <sect1 xml:id="sec-tuning-power-cpufreq">
  <title>The Linux Kernel &cpufreq; Infrastructure</title>
  <para>
   Processor performance states (P-states) and processor operating states
   (C-states) are the capability of a processor to switch between different
   supported operating frequencies and voltages to modulate power
   consumption.
  </para>

  <para>
   To dynamically scale processor frequencies at runtime, you can use the
   &cpufreq; infrastructure to set a static or dynamic power policy for
   the system. Its main components are:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     The &cpufreq; subsystem, which provides a common interface to
     various low-level technologies and high-level policies.
    </para>
   </listitem>
   <listitem>
    <para>
     In-kernel governors, which are policy governors that can change the CPU
     frequency based on different criteria.
    </para>
   </listitem>
   <listitem>
    <para>
     CPU-specific drivers that implement the technology for a particular
     type of processor.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The dynamic scaling of the clock speed helps to consume less power and
   generate less heat when not operating at full capacity.
  </para>-->

  <sect1 xml:id="sec-tuning-power-governors">
   <title>カーネル内ガバナー</title>
  <para>カーネル内のガバナー (統治する仕組み) は、 Linux カーネルの &cpufreq; インフラストラクチャに属するもので、動作中に動的にプロセッサの動作周波数を変更するために使用することができます。ガバナーは CPU 側であらかじめ設定された電力スキームを表わすものとして考えることができます。 &cpufreq; は P-ステートを使用して周波数や消費電力を統治します。動的なガバナーの仕組みによって、 CPU の周波数を使用されている状況に応じて切り替えることができます。これにより、性能への影響を少なくしたまま、省電力を実現できることになります。</para>
   <para>&cpufreq; サブシステムでは、下記のガバナーが提供されています:</para>
   <variablelist>
    <varlistentry>
     <term>Performance ガバナー</term>
     <listitem>
      <para>最大限の性能を発揮するため、 CPU の動作周波数を設定可能な最大値に固定します。そのため、このガバナーでは電力消費量の削減は行なわないことになります。</para>
      <para><xref linkend="sec-tuning-power-options-p-states"/> もお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Powersave ガバナー</term>
     <listitem>
      <para>CPU の動作周波数を設定可能な最小値に固定します。これにより、プロセッサがどれだけ忙しい状態であっても、周波数を上げることがなくなりますので、性能には大きな影響が現われます。ただし、 <literal>intel_pstate</literal> については例外で、既定値が <literal>powersave</literal> モードになっていますが、こちらはハードウエア固有の仕組みによって設定されているものであり、実際には <literal>on-demand</literal> ガバナーのように動作することに注意してください。</para>
      <para>また、このガバナーを利用して最大限の省電力を実現しようとしても、実環境では C-ステートによる待機時の電力消費削減のほうが効果が大きくなってしまい、期待通りの省電力にはならないことがありますので、あらかじめご注意ください。さらに、 Powersave のガバナーでは周波数が低くなることから、処理にかかる時間も長くなります。つまり、 C-ステートの変化も遅くなります。</para>
      <para>チューニングオプション: ガバナーで調整する最小限の周波数を設定することができます (<command>cpupower</command> コマンドラインツールなどで行なうことができます) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>On-demand ガバナー</term>
     <listitem>
      <para>動的な CPU 周波数制御を行なうカーネル実装です。このガバナーではプロセッサの使用状況を確認して、ある特定の閾値を超過すると指定可能な最大の周波数に設定します。逆に使用状況が閾値を下回ると、指定可能な次の低い周波数に設定します。さらに使用されない状態が続くと、最も低い周波数になるまで少しずつ低く設定します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <important>
   <title>ドライバとカーネル内ガバナーの関係性について</title>
   <para>全てのドライバがカーネル内のガバナーを利用して動的な周波数調整を行なっているわけではありません。たとえば <literal>intel_pstate</literal> ドライバでは、独自に周波数を調整しています。お使いのドライバが何であるのかを調べたい場合は、 <command>cpupower frequency-info</command> と入力して実行してください。</para>
   <!--taroth 2015-12-03: commenting on behalf on trenn-->
   <!--<para>By default, <literal>intel_pstate</literal> uses a similar policy like the
    powersave governor. However, you can also make <literal>intel_pstate</literal> statically set
    CPU frequency to the highest possible value, similar to using the performance governor. See
     <xref linkend="sec-tuning-power-options-p-states"/> for how to do so.</para>-->
   </important>
  </sect1>

  <!--<sect2 xml:id="sec-tuning-power-cpufreq-files">
   <title>Related Files and Directories</title>
   <para>
    If the &cpufreq; subsystem in enabled on your system (which it is by
    default with &sls;), you can find the relevant files and directories
    under <filename>/sys/devices/system/cpu/</filename>. If you list the
    contents of this directory, you will find a
    <filename>cpu{0..x}</filename> subdirectory for each processor, and
    several other files and directories. A <filename>cpufreq</filename>
    subdirectory in each processor directory holds several files and
    directories that define the parameters for &cpufreq;. Some
    are writable (for &rootuser;), some are read-only. If your
    system currently uses the on-demand or conservative governor, you will
    see a separate subdirectory for those governors in
    <filename>cpufreq</filename>, containing the parameters for the
    governors.
   </para>
   <note>
    <title>Different Processor Settings</title>
    <para>
     The settings under the <filename>cpufreq</filename> directory can be
     different for each processor. If you want to use the same policies
     across all processors, you need to adjust the parameters for each
     processor. Instead of looking up or modifying the current settings
     manually (in <filename>/sys/devices/system/cpu*/cpufreq</filename>), we
     advise to use the tools provided by the
     <systemitem class="resource">cpupower</systemitem> package for that.
    </para>
   </note>
  </sect2>
 </sect1>
-->
 <sect1 xml:id="sec-tuning-power-tools-cpupower">
  <title><systemitem class="resource">cpupower</systemitem> ツール</title>
   <para><command>cpupower</command> ツールは、 Turbo 機能 (もしくはブースト機能) を含め、マシン内で利用できる <emphasis>全ての</emphasis> CPU 消費電力関連のパラメータを取得したり設定したりすることのできるツールとして設計されています。このツールを使用することで、カーネル関連の &cpufreq; や cpuidle システムのほか、周波数調整やアイドル状態とは直接関係のない様々な設定を表示したり、変更したりすることができます。また、統合されている監視フレームワークでは、カーネル関連のパラメータとハードウエアの統計情報の両方にアクセスする機能を提供します。そのため、性能のベンチマークを行なう用途に適した仕組みです。このほか、 Turbo やアイドル状態の依存関係の調査を行なうこともできます。</para>
   <para><systemitem class="resource">cpupower</systemitem> パッケージをインストールしたら、 <command>cpupower&nbsp;--help</command> を実行することで、利用可能な <command>cpupower</command> のサブコマンド一覧を表示することができます。また、全体のマニュアルページには <command>man&nbsp;cpupower</command> と入力して実行することで評議することができるほか、サブコマンド向けのマニュアルページを表示したい場合は、 <command>man&nbsp;cpupower-<replaceable>サブコマンド</replaceable></command> と入力して実行してください。</para>

   <sect2 xml:id="sec-tuning-power-tools-cpupower-freq-info">
    <title><command>cpupower</command> による現在設定の表示</title>
    <para><command>cpupower&nbsp;frequency-info</command> のように入力して実行すると、カーネル内で使用されている cpufreq ドライバの統計情報を表示することができます。これに加えて、 BIOS 内で Turbo (ブースト) 機能が有効化されているかどうかも表示することができます。何もオプションを指定しないで実行すると、下記のような出力が現われます:</para>
    <example>
     <title><command>cpupower frequency-info</command> の出力例</title>
     <screen>&prompt.root;cpupower frequency-info
analyzing CPU 0:
  driver: intel_pstate
  CPUs which run at the same hardware frequency: 0
  CPUs which need to have their frequency coordinated by software: 0
  maximum transition latency: 0.97 ms.
  hardware limits: 1.20 GHz - 3.80 GHz
  available cpufreq governors: performance, powersave
  current policy: frequency should be within 1.20 GHz and 3.80 GHz.
                  The governor "powersave" may decide which speed to use
                  within this range.
  current CPU frequency is 3.40 GHz (asserted by call to hardware).
  boost state support:
    Supported: yes
    Active: yes
    3500 MHz max turbo 4 active cores
    3600 MHz max turbo 3 active cores
    3600 MHz max turbo 2 active cores
    3800 MHz max turbo 1 active cores</screen>
    </example>
    <para>全ての CPU に対する現在の値を表示するには、 <command>cpupower&nbsp;-c&nbsp;all&nbsp;frequency-info</command> コマンドを使用します。</para>
   </sect2>
   <sect2 xml:id="sec-tuning-power-tools-cpupower-idle-info">
    <title><command>cpupower</command> によるカーネル内のアイドル状態の表示</title>
    <para><command>idle-info</command> サブコマンドは、カーネル内で使用されている cpuidle ドライバの統計情報を表示することができます。 cpuidle カーネルフレームワークを使用していれば、どのようなアーキテクチャでも動作します。</para>
    <example>
     <title><command>cpupower idle-info</command> の出力例</title>
     <screen>&prompt.root;cpupower idle-info
CPUidle driver: intel_idle
CPUidle governor: menu

Analyzing CPU 0:
Number of idle states: 6
Available idle states: POLL C1-SNB C1E-SNB C3-SNB C6-SNB C7-SNB
POLL:
Flags/Description: CPUIDLE CORE POLL IDLE
Latency: 0
Usage: 163128
Duration: 17585669
C1-SNB:
Flags/Description: MWAIT 0x00
Latency: 2
Usage: 16170005
Duration: 697658910
C1E-SNB:
Flags/Description: MWAIT 0x01
Latency: 10
Usage: 4421617
Duration: 757797385
C3-SNB:
Flags/Description: MWAIT 0x10
Latency: 80
Usage: 2135929
Duration: 735042875
C6-SNB:
Flags/Description: MWAIT 0x20
Latency: 104
Usage: 53268
Duration: 229366052
C7-SNB:
Flags/Description: MWAIT 0x30
Latency: 109
Usage: 62593595
Duration: 324631233978</screen>
    </example>
    <para>プロセッサがどのアイドル状態に対応しているのかを <command>cpupower idle-info</command> で調べたあとは、 <command>cpupower idle-set</command> コマンドを使用することで、個別のステートを無効化することができます。一般的には最も深い休眠状態を無効化することになるかと思いますが、このような場合は下記のように入力して実行します:</para>
<screen>&prompt.root;cpupower idle-set -d 5</screen>
<!--taroth 2015-12-01: the -D option is only available since SLE 12 SP1 GMC, *not* for SLE 12   -->
    <para>レイテンシが <literal>80</literal> と等しいか、それより大きいものを全て無効化したい場合は、下記のように入力して実行します:</para>
    <screen>&prompt.root;cpupower idle-set -D 80</screen>

    <!--taroth 2015-12-01: on behalf of trenn, commented the following para for now,
    because it will only be made available in an online update-->

     <!-- <para>You can make this changes permanent as described in <xref
     linkend="sec-tuning-power-options-c-states"/>. But before you do
    so, check for performance or power impact.</para>-->
   </sect2>
   <sect2 xml:id="sec-tuning-power-tools-cpupower-monitor">
    <title><command>cpupower</command> によるカーネルとハードウエアの統計情報の表示</title>
    <para><command>monitor</command> サブコマンドを使用することで、プロセッサのトポロジ情報を表示することができるほか、特定の時間内における周波数やアイドル状態の統計を表示することができます。既定の間隔は <literal>1</literal> 秒ですが、 <option>-i</option> オプションを使用することで自由に変更することができます。また、ツール内ではプロセッサのスリープ (休眠) 状態と周波数のカウンタは独立して実装されています。これらのうちのいくつかはカーネルの統計情報から、残りはハードウエアレジスタから取得しています。利用可能な監視機能は、お使いのハードウエアとシステムによって異なります。利用可能な監視機能を表示したい場合は、 <command>cpupower&nbsp;monitor&nbsp;-l</command> と入力して実行してください。また、各モニタに関する詳細は、 cpupower-monitor のマニュアルページをお読みください。</para>
    <para><command>monitor</command> サブコマンドでは、性能を測定するためのベンチマーク機能にも対応しています。特定の処理におけるハードウエアの統計情報を比較したい場合は、その処理のコマンドを末尾に付けて実行します。たとえば下記のようになります:</para>

     <screen><command>cpupower</command> <option>monitor</option> db_test.sh</screen>
    <example xml:id="ex-cpupower-monitor">
     <title><command>cpupower monitor</command> の出力例</title>
<screen>&prompt.root;cpupower monitor
|Mperf                   || Idle_Stats
 <co xml:id="co-cpupower-mon-mperf"/>&nbsp;                        <co xml:id="co-cpupower-mon-idle"/>&nbsp;
CPU | C0   | Cx   | Freq || POLL | C1   | C2   | C3
   0|  3.71| 96.29|  2833||  0.00|  0.00|  0.02| 96.32
   1| 100.0| -0.00|  2833||  0.00|  0.00|  0.00|  0.00
   2|  9.06| 90.94|  1983||  0.00|  7.69|  6.98| 76.45
   3|  7.43| 92.57|  2039||  0.00|  2.60| 12.62| 77.52
     </screen>
     <calloutlist>
      <callout arearefs="co-cpupower-mon-mperf">
       <para>Mperf はブーストした周波数を含む、 CPU の平均動作周波数を表示します。これに加えて、 CPU が動作中 ( <literal>C0</literal> ) であった割合と、休眠中であった割合 ( <literal>Cx</literal> ) を、時間比で表示することができます。 Turbo 機能は BIOS で管理されている機能であるため、その場での周波数を取得することができませんが、 Mperf 監視を使用することで、過去にどのような動作状況であったのかを確認することができます。</para>
      </callout>
      <callout arearefs="co-cpupower-mon-idle">
       <para>Idle_Stats は cpuidle カーネルサブシステムの統計情報を表示します。カーネルはアイドル状態に入ったり出たりするごとに、それらの値を更新していきます。なお、測定の開始と終了時にはアイドル状態の変化が発生するため、その分だけ値が不正確になることに注意してください。</para>
      </callout>
     </calloutlist>
     <para>上述の (一般的な) 監視機能とは別に、アーキテクチャ依存の監視機能も使用することができます。詳しい説明については、 <command>cpupower-monitor</command> のマニュアルページをお読みください。</para>
    </example>
    <para>個別のモニタで出力された値を比較することで関係性や依存性を見つけることができるほか、特定の処理に対してどれだけ省電力機能が正しく働いたのかを確認することもできます。たとえば <xref linkend="ex-cpupower-monitor" xrefstyle="select:label"/> では CPU <literal>0</literal> がほぼアイドル状態 (つまり <literal>Cx</literal> がほぼ 100%) になっていますが、それにも関わらず非常に高い動作周波数になってしまっています。これは CPU <literal>0</literal> と <literal>1</literal> が同じ周波数しか設定できないことによるもので、これを依存性と称しています。</para>
   </sect2>
   <sect2 xml:id="sec-tuning-power-tools-cpupower-freq-set">
    <title><command>cpupower</command> による設定の変更</title>
    <para>&rootuser; で <command>cpupower&nbsp;frequency-set</command> コマンドを実行することで、現在の設定を変更することができます。ガバナーが設定する最小／最大 CPU 動作周波数のほか、新しいガバナーを作成することもできます。また <option>-c</option> オプションを指定することで、どのプロセッサに対する設定を変更するのかを指定することもできます。これにより、個別のプロセッサに対して調整を行なうことなく、全てのプロセッサに対して一貫したポリシーを適用できるようになっています。詳細と利用可能なオプションについて、詳しくは <literal>cpupower-frequency-set</literal> のマニュアルページをお読みになるか、 <command>cpupower&nbsp;frequency-set</command> <option>--help</option> と入力して実行してください。</para>
   </sect2>
  </sect1>

 <sect1 xml:id="sec-tuning-power-options">
  <title>特殊なチューニングオプション</title>

  <para>下記の章では、主な設定について説明しています。</para>

  <sect2 xml:id="sec-tuning-power-options-p-states">
   <title>P-ステート向けのチューニングオプション</title>
   <para>&cpufreq; サブシステムでは、 P-ステート向けのチューニングオプションがいくつか提供されています。オプションにはガバナーの切り替えのほか、使用すべき最小／最大の CPU 周波数と、ガバナー別のパラメータの変更などがあります。</para>
   <para>ガバナーを変更したい場合は、 <command>cpupower&nbsp;frequency-set</command> コマンドに <option>-g</option> オプションを付けて実行します。たとえば &rootuser; で下記のように入力して実行すると、 Performance ガバナーに切り替えることができます:</para>
<screen>&prompt.root;cpupower frequency-set -g performance</screen>
   <para>ガバナーが使用すべき最小および最大の CPU 周波数を指定したい場合は、それぞれ <option>-d</option> や <option>-u</option> のオプションで設定します。</para>
   <!--taroth 2015-12-01: on behalf of trenn, commented the following para for now,
    because it will only be made available in an online update-->
   <!--<para>
    If you want to disable dynamic processor frequency scaling and want the change
    to persist also after a reboot or shutdown, use the parameter
    <literal>CPUFREQ_PERFORMANCE_GOVERNOR</literal>
    <remark>taroth 2015-11-24: might also be renamed to CPUFREQ_DISABLE,
     check again with trenn</remark> in
    <filename>/etc/sysconfig/cpupower.conf</filename>.
   </para>-->

   <!--/etc/sysconfig/cpupower

    # Config file for cpupower oneshot configuration
    # This is about power savings vs performance CPU settings
    # These are set once at boot up or get adjusted if service is restarted

    #
    ## Description: Disable processor frequency scaling
    ## Type:        yesno
    ## Default:     no
    #
    # Enable the processor frequency performance governor which is equal to
    # disable dynamic processor frequency scaling.
    # This makes sense (depending on your CPU):
    #   - for better performance
    #   - on latest CPUs better power savings: Work is done quicker and the more
    #     efficient processor sleep states are entered quicker and longer
    #   - benchmarking of workloads
    #
    # Only disables dynamic frequency scaling and enables frequency performance
    # mode, the value "no" has no effect
    #
    CPUFREQ_PERFORMANCE_GOVERNOR="no"

   -->
  </sect2>

  <!--taroth 2015-12-01: on behalf of trenn, commented the following section for now,
  because it will only be made available in an online update-->

  <!--<sect2 id="sec-tuning-power-options-c-states">
   <title>Tuning Options for C-states</title>


   <!-\-/etc/sysconfig/cpupower

    # Config file for cpupower oneshot configuration
    # This is about power savings vs performance CPU settings
    # These are set once at boot up or get adjusted if service is restarted

    #
    ## Descripion: Disable processor sleep states by latency
    ## Type:       integer(1:)
    ## Default:    ""
    #
    # The value is in microseconds.
    #
    # There are fake sleep states (POLL) from the kernel which cannot
    # be switched off. Also C1 (x86) should not get disabled.
    # See cpupower-idle-info(1) and cpupower-monitor to examine supported processor
    # idle states on your system and which one got disabled by below variable.
    #
    # Disabling specific C-states may affect the ability of the processor to
    # enter extreme high frequencies (also called turbo or boost modes) which
    # may contradict with what you want to achieve (better performance). This
    # very much depends of the type of your CPU (energy efficient ones).
    #
    # To re-enable all sleep states again, use cpupower idle-set -E manually or
    # add a value which is bigger than the longest taking latency of supported
    # sleep states.
    #
    MAXIMUM_CPU_SLEEP_LATENCY=""
   -\->
   <para>
   To disable processor sleep states depending on latency, use the
     <literal>MAXIMUM_CPU_SLEEP_LATENCY</literal> variable in
     <filename>/etc/sysconfig/cpupower.conf</filename>. <remark>taroth 2015-11-11: trenn, is the
     following correct?</remark> All sleep states that have a higher latency than the value (in
    microseconds)that you set for <literal>MAXIMUM_CPU_SLEEP_LATENCY</literal> will be disabled.
   </para>
   <para>However, use <command>cpupower-idle-info</command> and <command>cpupower-monitor</command>
    to examine the supported processor idle states on your system and which one got disabled by the
    variable, because disabling specific C-states may affect the ability of the processor to enter
    extreme high frequencies (also called turbo features), which may contradict what you want to
    achieve (better performance).</para>
  </sect2>-->
 </sect1>

 <sect1 xml:id="sec-tuning-power-trouble">
  <title>トラブルシューティング</title>

  <variablelist>
   <varlistentry>
    <term>BIOS オプションが有効化されていますか？</term>
    <listitem>
     <para>C-ステートや P-ステートを使用するには、 BIOS 側での確認が必要です:</para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>C-ステートを使用するには、まず <literal>CPU C State</literal> などのオプションを有効化して、アイドル時の省電力を有効化する必要があります。</para>
      </listitem>
      <listitem>
       <para>P-ステートや &cpufreq; のガバナーを使用するには、 <literal>Processor Performance States</literal> などのオプションを設定します。</para>
      </listitem>
      <listitem>
       <para>P-ステートや C-ステートが利用可能である場合でも、プラットフォーム側のファームウエアで CPU の動作周波数を管理していることがあります。これは準最適とも呼べる仕組みで、たとえば <literal>pcc-cpufreq</literal> を読み込むことで、 OS 側からファームウエアにヒントを提示することができます。ファームウエア側ではその情報が無視される場合もあります。このような仕組みは、 BIOS のセットアップで CPU の周波数を "OS Management" などの選択を行なうことで、解決できることもあります。 BIOS 側で設定を変更すれば、代替ドライバが使用されるようになりますので、そこから最適化をやり直すことができます。</para>
      </listitem>

     </itemizedlist>
     <para>CPU をアップグレードしているような場合は、 BIOS 側についてもアップグレードを行なう必要があることがあります。 BIOS 側でも新しい CPU に対応させる必要があり、周波数の設定などもここから採取することがあるためです。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ログファイル内に何か現われていませんか？</term>
    <listitem>
     <para>まずは &systemd; のジャーナル (詳しくは <xref linkend="cha-journalctl"/> をお読みください) をお読みのうえ、 &cpufreq; サブシステムに関する出力が現われていないかどうかを確認してください。ただし、ここには致命的なエラーのみが記録されます。</para>
     <para>お使いのマシンで &cpufreq; サブシステムの問題を調査したい場合は、デバッグ出力を有効化して調べる方法があります。デバッグ出力を有効化するには、カーネルのコマンドラインパラメータに <command>cpufreq.debug=7</command> を指定するか、もしくは下記のコマンドを &rootuser; で実行します:</para>
<screen>&prompt.root;echo 7 &gt; /sys/module/cpufreq/parameters/debug</screen>
     <para>このコマンドを実行すると、 &cpufreq; での状態遷移など、さらに詳しい情報を <command>dmesg</command> に出力するようになります。これを元に調査を行なってください。ただし、かなり広範囲なログの出力を行ないますので、明らかに問題があるような場合にのみお使いになることをお勧めします。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-tuning-power-more">
  <title>さらなる情報</title>

  <para>Baseboard Management Controller (BMC) の搭載されたプラットフォームであれば、このサービスプロセッサを通じて様々な電力管理設定にアクセスすることができます。これらの設定は製造元ごとに異なるものであるため、本章では説明していません。詳しくは製造元が提供するマニュアルをお読みください。<!-- For example, <citetitle>HP ProLiant Server Power Management on SUSE Linux Enterprise Server 11&mdash;Integration Note </citetitle> provides detailed information how the HP platform specific power management features interact with the Linux kernel. The paper is available from <link xlink:href="http://h18004.www1.hp.com/products/servers/technology/whitepapers/os-techwp.html"/>. --></para>
  <para os="sled">&powertop; に関する詳細は、 <link xlink:href="https://01.org/powertop"/> (英語) をお読みください。</para>
 </sect1>

  <sect1 xml:id="sec-tuning-power-tools-powertop">   
      <title>&powertop; による電力消費状況の監視</title>
    <para>&powertop; は電源消費が大きくなってしまっている理由を探すためのツールです。これは主に、電源消費が重要となるラップトップで有用なツールとなります。このツールは Intel および AMD の各プロセッサに対応しています。インストールを行なうには、通常通り下記のようにして行ないます:</para>
   <screen>&prompt.sudo;<command>zypper in powertop</command></screen>
   <para>&powertop; は様々な情報源からのデータ (プログラムやデバイスドライバ、カーネルのオプションやスリープ状態の解除を行なった割り込みの回数や生成源) を組み合わせて、それらをいくつかの方法で表示することができます。一般的には ncurses セッション (詳しくは <xref linkend="fig-powertop-curses"/> をご覧ください) 内で、対話モードとして起動を行ないます:</para>
   <screen>&prompt.sudo;<command>powertop</command></screen>
   
  <figure xml:id="fig-powertop-curses">
   <title>対話モードでの &powertop;</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="powertop_ncurses.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="powertop_ncurses.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
    
  <para>&powertop; では、レポートを HTML 形式や CSV 形式で出力することができます。下記の例では、 240 秒間の統計情報を 1 つのレポートとして出力しています:</para>
  <screen>&prompt.sudo;<command>powertop --iteration=1 --time=240 --html=<replaceable>POWERREPORT.HTML</replaceable></command></screen>
  
  <para>レポートを複数回に分けて出力させることもできます。下記の例では、 20 秒おきに合計で 10 回レポートを出力しています。なお、それぞれのレポートは別々の HTML レポートとして出力します:</para>  

  <screen>&prompt.sudo;<command>powertop --iteration=10 --time=20 --html=<replaceable>POWERREPORT.HTML</replaceable></command></screen>
  <para>上記を実行すると、下記のように日時付きのファイル名でレポートが生成されます:</para>
  <screen>powerreport-20200108-104512.html
powerreport-20200108-104451.html
powerreport-20200108-104431.html
[...]</screen>
  <para>HTML レポートは <xref linkend="fig-powertop-html"/> のような出力になります:</para>
  
  <figure xml:id="fig-powertop-html">
   <title>HTML での &powertop; レポート</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="powertop_html.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="powertop_html.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>HTML レポート内の Tuning タブ、もしくは対話モードでの Tunables タブには、さまざまな電源設定を試すためのコマンドが提供されています。 HTML レポートの場合にはコマンドライン (例: <command>echo '0' &gt; '/proc/sys/kernel/nmi_watchdog'</command>) が書かれていますので、これを root のコマンドラインで実行すると、テストを行なうことができます。 ncurses モードの場合はコマンドラインではなく、 <literal>Good</literal> (良い) もしくは <literal>Bad</literal> (悪い) が書かれた切り替えスイッチになっています。 <literal>Good</literal> は省電力の観点で適切な設定になっていることを、 <literal>Bad</literal> は省電力の観点で適切な設定になっていないことをそれぞれ示しています。 &powertop; で全ての省電力設定を適用したい場合は、下記のコマンドを実行します:</para>
  <screen>&prompt.sudo;<command>powertop --auto-tune</command></screen>
  <para>なお、これらの設定はシステムを再起動すると失われてしまいます。これらの設定を常に適用しておきたい場合は、 <command>sysctl</command> や <command>udev</command> を使用するか、もしくは &systemd; を利用して、起動時に必要なコマンドを実行するように設定してください。なお、 &powertop; には <filename>/usr/lib/systemd/system/powertop.service</filename> というファイルが提供されていて、これを有効化することで、システムの起動時に &powertop; の <command>--auto-tune</command> を自動的に実行することができます:</para>
  <screen>ExecStart=/usr/sbin/powertop --auto-tune</screen>
  <para>なお、 &systemd; のサービスを有効化する場合は、期待通りの結果になるのかをよくご確認ください。たとえば USB キーボードやマウスを接続している場合、それらを省電力モードにしてしまうとキーボードやマウスが動作しなくなってしまい、面倒なことになってしまうこともあります。そのため、下記のように実行して HTML レポートからコマンドラインを抽出して、各コマンドラインを個別に試してみることをお勧めします:</para>
  <screen>&prompt.user;awk -F '&lt;/?td ?&gt;' '/tune/ { print $4 }' <replaceable>POWERREPORT.HTML</replaceable></screen>

  <para>また、 &powertop; にはキャリブレーション (較正) モードも用意されています。このモードはバックライトや CPU 、 WiFi や USB デバイス、ディスクなどに対して異なる設定を施して、バッテリー消費が最適な状態になるようにします:</para>
  <screen>&prompt.sudo;<command>powertop --calibrate</command></screen>
  
  <para>より正確な較正を行なうには、ワークロード (負荷) ファイルを作成して呼び出してもかまいません:</para>
  <screen>&prompt.sudo;<command>powertop --calibrate --workload=<replaceable>FILENAME</replaceable> --html=POWERREPORT.HTML</command></screen>

   <para>さらに詳しい情報を読みたい場合は、それぞれ下記を参照してください:</para>                                  
    <itemizedlist>
      <listitem>
         <para><link xlink:href="https://01.org/powertop"/> にある &powertop; プロジェクトのページ (英語)</para>
      </listitem>
      <listitem>
          <para><xref linkend="sec-util-proc-procinfo-sysctl"/></para>
      </listitem>
      <listitem>
        <para>&slea; &admin; 内の systemd デーモンの章</para>
      </listitem>
      <listitem>
          <para>&slea; &admin; 内の udev 章内にある動的なカーネルデバイス管理の説明</para>
      </listitem>
    </itemizedlist>
  </sect1> 
 </chapter>
