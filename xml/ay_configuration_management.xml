<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="CreateProfile-ConfigurationManagement">
  <title>設定管理</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>&ay; では、 Salt のような <emphasis>設定管理ツール</emphasis> に対して、設定の一部を代行させることができます。この場合、 &ay; では基本的なシステムのインストール (パーティション設定やネットワーク設定など) を行い、残りの設定作業を代行させる形になります。</para>

   <note>
    <title>Salt のみを公式サポートする件について</title>
    <para>本文書内には Puppet に関する説明も書かれていますが、公式には Salt のみをサポート対象としています。ただし、 Puppet をご利用の場合で何か問題があれば、報告をお願いいたします。</para>
   </note>

    <para>&ay; では 2 種類の異なるアプローチに対応しています:</para>

    <itemizedlist>
     <listitem>
      <para>設定管理サーバを使用する方法。この場合、 &ay; は設定管理ツールを構成します。ここからマスターサーバへの接続を行い、システムの設定に関する情報を取得します。</para>
     </listitem>
     <listitem>
      <para>どこか別の場所 (たとえば HTTP サーバや USB メモリなど) から設定を取得する方法。この場合、設定管理ツールはスタンドアロン (単独) モードで動作することになります。</para>
     </listitem>
    </itemizedlist>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-Server">
     <title>設定管理サーバへの接続</title>

     <para>このアプローチは、設定管理サーバ (Salt や Puppet の用語では、 <emphasis>マスター</emphasis> と呼びます) が既に用意されている場合、特に有用となります。この場合、構築時に最も難しい箇所は、適切な認証方式の設定となります。</para>

     <para>Salt および Puppet では下記の認証方式に対応しています:</para>

     <itemizedlist>
      <listitem>
       <para>その場での手動認証。 &ay; がクライアントを起動すると、新しい認証要求が生成されます。管理者はその要求を、サーバ側で受け付けることになります。 &ay; では接続を再試行しますので、その間にキーを受け付けてもらうことができれば、 &ay; がインストールを続けることができるようになります。</para>
      </listitem>
      <listitem>
       <para>事前シード鍵の使用。事前シード鍵の生成方法について、詳しくはお使いの設定管理システムのドキュメンテーションをお読みください。 &ay; 内での事前シード鍵の参照先は、 <literal>keys_url</literal> オプションで指定します。</para>
      </listitem>
     </itemizedlist>

     <para>下記に設定例を示します。 &ay; はクライアントを起動して認証要求を生成します。最大で 3 回、 15 秒間隔で再試行します。</para>

     <example xml:id="configuration-management-manual-authentication">
      <title>手動認証によるクライアント／サーバ</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;master&gt;my-salt-server.example.net&lt;/master&gt;
    &lt;auth_attempts config:type="integer"&gt;3&lt;/auth_attempts&gt;
    &lt;auth_time_out config:type="integer"&gt;15&lt;/auth_time_out&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <para>ただし、下記に示す設定例では、 &ay; はキーを外付けのストレージ (USB メモリなど) から取得し、それを利用してマスターサーバへの接続を行っています。</para>

     <example xml:id="configuration-management-preseed-keys">
      <title>事前シード鍵によるクライアント／サーバ</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;master&gt;my-salt-server.example.net&lt;/master&gt;
    &lt;keys_url&gt;usb:/&lt;/keys_url&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <para>下記の表には、これらのシナリオで使用しているオプションの意味について説明しています。</para>

     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>属性</para>
         </entry>
         <entry>
          <para>値</para>
         </entry>
         <entry>
          <para>説明</para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para><literal>type</literal></para>
         </entry>
         <entry>
          <para>文字列</para>
         </entry>
         <entry>
          <para>設定管理方式の名称です。現時点では <literal>salt</literal> にのみ公式対応しています。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>master</literal></para>
         </entry>
         <entry>
          <para>文字列</para>
         </entry>
         <entry>
          <para>設定管理サーバのホスト名もしくは IP アドレス。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>auth_attempts</literal></para>
         </entry>
         <entry>
          <para>整数</para>
         </entry>
         <entry>
          <para>サーバに対して接続を試す際の最大試行回数。既定値は 3 です。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>auth_time_out</literal></para>
         </entry>
         <entry>
          <para>整数</para>
         </entry>
         <entry>
          <para>サーバへの接続を待機する時間 (秒単位) 。既定値は 15 秒です。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>keys_url</literal></para>
         </entry>
         <entry>
          <para>使用する鍵の URL</para>
         </entry>
         <entry>
          <para>HTTP サーバやハードディスク、 USB メモリなどの URL を指定します。指定した URL から <literal>default.key</literal> および <literal>default.pub</literal> の各ファイルを取得します。この鍵は設定管理サーバ内で既知のものでなければなりません。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>enable_services</literal></para>
         </entry>
         <entry>
          <para>True/False</para>
         </entry>
         <entry>
          <para>インストール後にクライアント側で設定管理サービスを有効化するかどうかを指定します。既定値は <literal>true</literal> です。</para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect2>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-Masterless">
     <title>スタンドアロン (単独) モードでの実行</title>
     <para>シンプルな構成を目的とした場合、設定管理サーバの配置は不要となります。その代わり、 Salt や Puppet を <emphasis>スタンドアロン (単独)</emphasis> (もしくは <emphasis>マスターレス</emphasis>) モードで動作させます。</para>

     <para>サーバが存在しないことから、 &ay; 側には設定の取得元を設定する必要があります。設定ファイルを TAR 形式の書庫にまとめて、このファイルをどこか (USB メモリや HTTP/HTTPS サーバ、もしくは NFS/SMB 共有) に配置します。</para>

     <para>なお、 TAR 形式の書庫は Salt サーバ内での <literal>/srv</literal> と同じ構造になっていなければなりません。具体的には、 Salt の状態に関する情報は <filename>salt</filename> ディレクトリ内に配置するほか、 formula については個別の <filename>formulas</filename> ディレクトリ内に配置します。</para>

     <para>これに加えて、 pillar データを含む <filename>pillar</filename> ディレクトリが存在していてもかまいません。このほか、 <literal>pillar_url</literal> オプションを利用して個別の TAR 書庫を指定して、その中に含めることもできます。</para>

     <example xml:id="configuration-management-masterless">
      <title>スタンドアロンモード</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;states_url&gt;my-salt-server.example.net&lt;/states_url&gt;
    &lt;pillar_url&gt;my-salt-server.example.net&lt;/pillar_url&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>属性</para>
         </entry>
         <entry>
          <para>値</para>
         </entry>
         <entry>
          <para>説明</para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para><literal>type</literal></para>
         </entry>
         <entry>
          <para>文字列</para>
         </entry>
         <entry>
          <para>設定管理方式の名称です。現時点では <literal>salt</literal> にのみ公式対応しています。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>states_url</literal></para>
         </entry>
         <entry>
          <para>URL</para>
         </entry>
         <entry>
          <para>Salt states の TAR 書庫の場所を指定します。 formula や pillar を含んでいてもかまいません。また、ファイルは <filename>salt</filename> ディレクトリ内に配置しなければなりません。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>pillar_url</literal></para>
         </entry>
         <entry>
          <para>URL</para>
         </entry>
         <entry>
          <para>pillar を含む TAR 書庫の場所を指定します。</para>
         </entry>
        </row>
        <row>
         <entry>
          <para><literal>modules_url</literal></para>
         </entry>
         <entry>
          <para>URL</para>
         </entry>
         <entry>
          <para>Puppet モジュールの場所を指定します。</para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect2>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-SUMAFormulasSupport">
     <title>&susemgr; Salt Formulas サポートについて</title>

     <para>&ay; ではスタンドアロン (単独) モードで &susemgr; Salt Formulas を動作させる環境をサポートしています。この場合、 formula は state 用の TAR 書庫内に存在する必要があります。 &ay; では、適用すべき formula を選択し、設定するための画面を表示します。</para>

     <para>ただし、この機能を利用してしまうと、 &ay; がユーザからの入力を待機してしまうことになりますので、 &ay; の目的である無人インストールの意味が薄くなってしまうことに注意してください。</para>
    </sect2>
  </sect1>
