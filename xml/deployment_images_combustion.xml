<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-images-combustion">
 <title>Configuration by using Combustion</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
  <para>
    This chapter describes Combustion&dash;the tool used to configure your system according to your configuration on first boot.
   </para>
  </abstract>
 </info>
 
 <sect1 xml:id="sec-about-combustion">
 <title>About Combustion</title>
 <para>
 Combustion is a dracut module that enables you to configure your system on first boot. Combustion reads a provided <filename>script</filename> and executes commands in it and thus perform changes to the file system. You can use Combustion to change the default partitions, set users' passwords, create files, install packages, etc.
 </para>
 <para>
 The Combustion dracut module is invoked after the <literal>ignition.firstboot</literal> argument is passed to the kernel command line. Combustion then reads configuration from <filename>script</filename>. If the network flag has been found in <filename>script</filename>, Combustion tries to configure network. After <literal>/sysroot</literal> is mounted, Combustion tries to activate all mountpoints in <filename>/etc/fstab</filename> and then call the <command>transactional-update</command> to apply other changes (like setting &rootuser; password or install packages). 
 </para>
 <para>
 When using Combustion, you need to label the configuration device to <literal>combustion</literal>, create a specific directory structure in your configuration media and include a configuration named <filename>script</filename>. In the root directory create a directory&dash;<filename>combustion</filename> and place the <filename>script</filename> into this directory along with other files&mdash;SSH key, configuration files, etc. The directory structure then should look as follows:
 </para>
 <screen>
    &lt;root directory&gt;
	- combustion
		- script
		- other files
	</screen>
	<para> 
	You can use Combustion to configure your QEMU/KVM virtual machine. In this case, pass the location of the <filename>script</filename> by using the <literal>fw_cfg</literal> parameter of the <command>qemu</command> command:
	</para>
	<screen>
	-fw_cfg name=opt/org.opensuse.combustion/script,file=/var/combustion-script
	</screen>
	<para>
	Combustion can be used along with Ignition. If you intend to do so, label your configuration media <literal>ignition</literal> and include the <filename>ignition</filename> directory with the <filename>config.ign</filename>to your directory structure as shown below:
	</para>
	<screen>
&lt;root directory&gt;
	-combustion
		- script
		- other files
	- ignition 
		- config.ign
	</screen>
   <para>
   In this case Ignition runs before Combustion.
   </para>
 </sect1>
 <sect1 xml:id="sec-combustion-script">
 <title>The <filename>script</filename> configuration file</title>
 <para>
 The <filename>script</filename> configuration file is a set of commands that are executed on your system in a transactional-update shell. This section provides ecxamples how to perform various configuration tasks by using Combustion.
 </para>
 <para>
 As the <filename>script</filename> file is interpreted by bash, make sure to include the interpreteur declaration at the beginning:
 </para>
 <screen>
 #!/bin/sh
 </screen>
 <para>
 The minimum configuration must include the &rootuser; password. Make sure to configure a secure password. In case you use a randomly generated password, use at least 10 characters. If you create your password manually, use even more than 10 characters and combine uppercase and lowecase letters, and numbers.
 </para>
 <sect2 xml:id="sec-script-network">
 <title>Network configuration</title>
 <para>
 In case you want to configure network during the first boot, add the following statement to your <filename>script</filename>:
 </para>
 <screen>
 # combustion: network
 </screen>
 <para>
 Using this statement will pass the <literal>rd.neednet=1</literal> argument to dracut. If you do not use the statement, the default <literal>dhcp</literal> will be used on all available interfaces.
 </para>
 </sect2>
 <!--
 <sect2 xml:id="sec-script-partitioning">
 <title>Partitioning</title>
 </sect2>
 -->
 <sect2 xml:id="sex-cript-security">
 <title>Setting a password for &rootuser;</title>
 <para>
 Before you set the &rootuser; password, generate a hash of the password, e.g. by using the <command>openssl passwd -6</command>. In our example the hash of <emphasis>password4root</emphasis> has been used. To set the password, add the following to your <filename>script</filename>:
 </para>
 <screen>
 echo 'root:$5$.wn2BZHlEJ5R3B1C$TAHEchlU.h2tvfOpOki54NaHpGYKwdNhjaBuSpDotD7' | chpasswd -e
 </screen>
 </sect2>
 <sect2 xml:id="sec-script-sshkeys">
 <title>Adding SSH keys</title>
 <para>
 The following snippet creates a directory to store the &rootuser;'s SSH key and then copies the public SSH key located on the configuration device to the <filename>authorized_keys</filename> file.
 </para>
 <screen>
 mkdir -pm700 /root/.ssh/
cat id_rsa_new.pub &gt;&gt; /root/.ssh/authorized_keys
 </screen>
 <note>
 <para>
 The SSH service must be enabled in case you need to use remote login via SSH. For details, refer to <xref linkend="sec-script-services"/>.
 </para>
 </note>
 </sect2>
 <sect2 xml:id="sec-script-services">
 <title>Enabling services</title>
 <para>
 Some services need to enabled to use &slema; properly, e.g. to enable the SSH service, add the following line to <filename>script</filename>:
 </para>
 <screen>
 systemctl enable sshd.service
 </screen>
 </sect2>
 <sect2 xml:id="sec-script-install">
 <title>Installing packages</title>
 <para>
 During the first boot configuration you can install additional packages to your system, e.g. the <literal>vim</literal> editor by adding:
 </para>
 <screen>
 zypper --non-interactive install vim-small
 </screen>
 <note>
 <para>
 Bear in mind that you will not be able to use <command>zypper</command> after the configuration is complete and you boot to the configured system. To perform changes later, you must use the <command>transactional-update</command> command to create an changed snapshot. For details, refer to.
 </para>
 </note>
 </sect2>
 </sect1>
 </chapter>
