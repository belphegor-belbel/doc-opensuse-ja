<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-security-ldap-migrate">
  
  <title>OpenLDAP から &ds389; への移行</title>
   <para>OpenLDAP は &sle;&nbsp; 15.3 にて廃止予定となりサポート対象からも外され、 &ds389; に置き換えられています。 &suse; ではこの移行作業を支援するため、 <package>&ds389;</package> パッケージ内に <command>openldap_to_ds</command> というユーティリティを提供しています。</para>
   <para><command>openldap_to_ds</command> は移行作業をできる限り自動的に実施できるよう設計されています。ですが、それぞれの LDAP 環境は異なるものであることから、全ての環境に適合するツールを作成するのは不可能です。そのため、いくつかの作業については手作業で実施することになるほか、本番環境の移行にあたって、あらかじめ移行手順のテストを行う必要もあります。</para>
   
  <sect2 xml:id="sec-security-ldap-migrate-test">
  <title>OpenLDAP からのテスト移行</title>
   <para>OpenLDAP と &ds389; との間にはそれなりの差異が存在することから、移行を行うにあたっても事前のテストと調整を繰り返し実施する必要があるでしょう。そのため、手早く移行テストを実施して、必要な追加手順を素早く洗い出すことが肝心です。</para>
   <para>あらかじめ用意しておくべきもの:</para>
   <itemizedlist>
    <listitem>
      <para>何よりも &ds389; インスタンスの動作するマシンが必要です。</para>
    </listitem>
    <listitem>
     <para>OpenLDAP <filename>slapd</filename> の設定ファイル、もしくは ldif 形式による動的な設定ディレクトリ。</para>
    </listitem>
    <listitem>
     <para>OpenLDAP データベースの ldif 形式によるフルバックアップ。</para>
    </listitem>
   </itemizedlist>
   <para>slapd の設定が動的な ldif 形式ではない場合、まずは <command>slaptest</command> を利用して動的なコピーを作成します。 <filename>slapd.d</filename> というディレクトリを作成して、下記のようなコマンドを実行します:</para>
   <screen>&prompt.sudo;slaptest -f /etc/openldap/slapd.conf -F /root/slapd.d
     </screen>
     <para>上記を実行すると、下記のようなファイルが作成されるはずです:</para>
     <screen>&prompt.sudo;ls  slapd.d/*
slapd.d/cn=config.ldif

slapd.d/cn=config:
cn=module{0}.ldif  cn=schema.ldif                 olcDatabase={0}config.ldif
cn=schema          olcDatabase={-1}frontend.ldif  olcDatabase={1}mdb.ldif
</screen>
   <para>サフィックスごとに 1 つの ldif ファイルが作成されます。移行の例ではサフィックスが <replaceable>dc=ldap1,dc=com</replaceable> であるものとします。また、 <filename>/etc/openldap/slapd.conf</filename> 形式を使用している場合は、下記のようなコマンドを実行することで、 ldif のバックアップファイルを作成することができます:</para>
   <screen>&prompt.sudo;slapcat -f /etc/openldap/slapd.conf -b <replaceable>dc=ldap1,dc=com</replaceable> -l /root/<replaceable>ldap1-com</replaceable>.ldif
   </screen>
   <para><filename>/etc/openldap/slapd.d</filename> 形式を使用している場合は、下記のようなコマンドになります:</para>
   <screen>&prompt.sudo;slapcat -f /etc/openldap/slapd.conf -b <replaceable>dc=ldap1,dc=com</replaceable> -l /root/<replaceable>ldap1-com</replaceable>.ldif</screen>   
   <para>あとは <command>openldap_to_ds</command> ユーティリティを利用して設定とファイルを分析させ、移行プランを表示させます (この時点では何も変更は行われません):</para>
   <screen>&prompt.sudo;openldap_to_ds <replaceable>ldap1</replaceable> /root/slapd.d <replaceable>ldap1-com</replaceable>.ldif</screen>
   <para>前述のとおり上記では何も変更されませんが、下記のような出力が現れるはずです:</para>
   <screen>Examining OpenLDAP Configuration ...
Completed OpenLDAP Configuration Parsing.
Examining Ldifs ...
Completed Ldif Metadata Parsing.
The following migration steps will be performed:
 * Schema Skip Unsupported Attribute -&gt; otherMailbox (0.9.2342.19200300.100.1.22)
 * Schema Skip Unsupported Attribute -&gt; dSAQuality (0.9.2342.19200300.100.1.49)
 * Schema Skip Unsupported Attribute -&gt; singleLevelQuality (0.9.2342.19200300.100.1.50)
 * Schema Skip Unsupported Attribute -&gt; subtreeMinimumQuality (0.9.2342.19200300.100.1.51)
 * Schema Skip Unsupported Attribute -&gt; subtreeMaximumQuality (0.9.2342.19200300.100.1.52)
 * Schema Create Attribute -&gt; suseDefaultBase (SUSE.YaST.ModuleConfig.Attr:2)
 * Schema Create Attribute -&gt; suseNextUniqueId (SUSE.YaST.ModuleConfig.Attr:3)
[...]
 * Schema Create ObjectClass -&gt; suseDhcpConfiguration (SUSE.YaST.ModuleConfig.OC:10)
 * Schema Create ObjectClass -&gt; suseMailConfiguration (SUSE.YaST.ModuleConfig.OC:11)
 * Database Reindex -&gt; dc=example,dc=com
 * Database Import Ldif -&gt; dc=example,dc=com from example.ldif - excluding entry attributes = [{'structuralobjectclass', 'entrycsn'}]
No actions taken. To apply migration plan, use '--confirm'
</screen>
   <para>あとは下記のように実行することで、実際の移行を行うことができます。変更しない場合とは出力が異なることに注意してください:</para>
   <screen>&prompt.sudo;openldap_to_ds <replaceable>ldap1</replaceable> /root/slapd.d <replaceable>ldap1-com</replaceable>.ldif --confirm
Starting Migration ... This may take some time ...
migration: 1 / 40 complete ...
migration: 2 / 40 complete ...
migration: 3 / 40 complete ...
[...]
Index task index_all_05252021_120216 completed successfully
post: 39 / 40 complete ...
post: 40 / 40 complete ...
🎉 Migration complete!
----------------------
You should now review your instance configuration and data:
 * [ ] - Create/Migrate Database Access Controls (ACI)
 * [ ] - Enable and Verify TLS (LDAPS) Operation
 * [ ] - Schedule Automatic Backups
 * [ ] - Verify Accounts Can Bind Correctly
 * [ ] - Review Schema Inconistent ObjectClass -&gt; pilotOrganization (0.9.2342.19200300.100.4.20)
 * [ ] - Review Database Imported Content is Correct -&gt; dc=ldap1,dc=com
</screen>
  
   <para>移行が完了すると <command>openldap_to_ds</command> は、実施しておかなければならない移行後のチェック作業の一覧を表示します。この作業はいずれも移行を最適に行うために必要な手順ですので、本番環境でも同じようにしておくことをお勧めします。あとはテストクライアントとアプリケーションを、移行後の &ds389; インスタンスに向けてテストを行ってください。</para>
   <important>
     <title>ロールバックプランの策定</title>
     <para>移行時、もしくは移行後に何らかの問題に直面することを想定して、ロールバックプラン (手戻りのための手順) と移行の成功判断基準を策定しておくことが重要です。具体的には、動作させなければならないクライアントやアプリケーションは何か、後から移行しても問題のないクライアントやアプリケーションは何か、それらでテストしておくべきことは何か、どのようにして手戻りの被害を最小限にするのか、巻き込むべきチームはどこなのかを事前に決めておく必要があります。</para>
   </important>
   <para>用途や範囲などが環境によって様々に異なることから、画一的な移行プラン／手戻りプランを策定することは難しいモノです。まずは移行処理をおおまかにテストしてみて、そこから少しずつ問題点を洗い出していくのがよいでしょう。また、下記のような一般的な手法も役に立つはずです。</para>
   <itemizedlist>
    <listitem>
      <para>ホスト名や DNS の TTL を、一般的な 48 時間から 5 分に短縮しておくことで、手戻りを素早く実施できるようになります。</para>
    </listitem>
    <listitem>
      <para>全てのデータ同期や受信データ処理を一時的に停止してもかまいません。これにより、移行時に OpenLDAP 環境が変化しなくなります。</para>
    </listitem>
    <listitem>
      <para>移行前に &ds389; のホストをよく確認しておくことも重要です。</para>
    </listitem>
    <listitem>
      <para>テスト移行時に発生した細かい問題などを詳しく記録しておくことも重要です。</para>
    </listitem> 
   </itemizedlist>    
  </sect2>     
 <sect2 xml:id="sec-security-ldap-migrate-plan">
  <title>Planning your migration</title>
  <para>
   As OpenLDAP is a "box of parts" and highly customisable, it is not possible
   to prescribe a one size fits all migration. It is necessary to assess your
   current environment and configuration with OpenLDAP and other integrations.
   This includes, and is not limited to:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Replication topology.
    </para>
   </listitem>
   <listitem>
    <para>
     High availability and load balancer configurations.
    </para>
   </listitem>
   <listitem>
    <para>
     External data flows (IGA, HR, AD, etc.).
    </para>
   </listitem>
   <listitem>
    <para>
     Configured overlays (plugins in &ds389;).
    </para>
   </listitem>
   <listitem>
    <para>
     Client configuration and expected server features.
    </para>
   </listitem>
   <listitem>
    <para>
     Customized schema.
    </para>
   </listitem>
   <listitem>
    <para>
     TLS configuration.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Plan what your &ds389; deployment will look like in the end. This includes
   the same list, except replace overlays with plugins. Once you have assessed
   your current environment, and planned what your &ds389; environment will
   look like, you can then form a migration plan. It is recommended you build
   the &ds389; environment in parallel to your OpenLDAP environment to allow
   you to switch between them.
  </para>
  <para>
   Migrating from OpenLDAP to &ds389; is a one-way migration. There are enough
   differences between the two that they cannot interoperate, and there is not
   a migration path from &ds389; to OpenLDAP. The following table highlights
   the major similarities and differences.
  </para>
  <informaltable>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Feature</entry>
      <entry>OpenLDAP</entry>
      <entry>&ds389;</entry>
      <entry>Compatible</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Two-way replication</entry>
      <entry>SyncREPL</entry>
      <entry>389-specific system</entry>
      <entry>No</entry>
     </row>
     <row>
      <entry>MemberOf</entry>
      <entry>Overlay</entry>
      <entry>Plugin</entry>
      <entry>Yes, simple configs only</entry>
     </row>
     <row>
      <entry>External Auth</entry>
      <entry>Proxy</entry>
      <entry>-</entry>
      <entry>No</entry>
     </row>
     <row>
      <entry>Active Directory Synchronisation</entry>
      <entry>-</entry>
      <entry>Winsync Plugin</entry>
      <entry>No</entry>
     </row>
     <row>
      <entry>Inbuilt Schema</entry>
      <entry>OLDAP Schemas</entry>
      <entry>389 Schemas</entry>
      <entry>Yes, supported by migration tool</entry>
     </row>
     <row>
      <entry>Custom Schema</entry>
      <entry>OLDAP Schemas</entry>
      <entry>389 Schemas</entry>
      <entry>Yes, supported by migration tool</entry>
     </row>
     <row>
      <entry>Database Import</entry>
      <entry>LDIF</entry>
      <entry>LDIF</entry>
      <entry>Yes, supported by migration tool</entry>
     </row>
     <row>
      <entry>Password hashes</entry>
      <entry>Varies</entry>
      <entry>Varies</entry>
      <entry>Yes, all formats supported excluding Argon2</entry>
     </row>
     <row>
      <entry>OpenLDAP to &ds389; replication</entry>
      <entry>-</entry>
      <entry>-</entry>
      <entry>No mechanism to replicate to 389 is possible</entry>
     </row>
     <row>
      <entry>Time-based one-time password(TOTP)</entry>
      <entry>TOTP overlay</entry>
      <entry>-</entry>
      <entry>No, may be supported in the future</entry>
     </row>
     <row>
      <entry>EntryUUID</entry>
      <entry>Part of OpenLDAP</entry>
      <entry>Plugin</entry>
      <entry>Yes</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>
</sect1>
