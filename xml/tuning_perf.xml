<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<!--
 Version:
 * SLE12 SP1: perf-3.12.48

Info providers:
Tony Jones, Mel Gorman.

-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-perf">
 <title>Perf を利用したハードウエアベースの監視</title>
 <info xmlns:d="http://docbook.org/ns/docbook">
  <abstract>
   <para>Perf はプロセッサに搭載された性能監視ユニット (PMU) にアクセスするためのインターフェイスで、ページフォルトなどのソフトウエア全てを記録し、表示することができます。また、システム全体やスレッド単位、そして &kvm; の仮想化ゲストの監視にも対応しています。</para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 <revhistory xml:id="rh-cha-perf">
   <revision>
     <date>2023-12-22</date>
     <revdescription>
       <para/>
     </revdescription>
   </revision>
 </revhistory>
</info>
 <para>収集された情報はレポート内に保存することができます。このレポートにはインストラクションポインタに関する情報のほか、その時点でスレッドが実行していたコードの内容などが含まれています。</para>
 <para>Perf は下記の 2 種類の部品から構成されています:</para>
 <itemizedlist>
  <listitem>
   <para>ハードウエアに対して指示を与える、 Linux カーネル内に統合されたコード。</para>
  </listitem>
  <listitem>
   <para>カーネルコードを使用することができ、収集したデータの分析を支援するための <command>perf</command> ユーザスペースユーティリティ。</para>
  </listitem>
 </itemizedlist>
 <remark>
  TODO: An infographic would be a nice touch. We have event sources for perf here:
  http://www.brendangregg.com/perf_events/perf_events_map.png
  Not exactly sure that that is what we want. - sknorr, 2015-10-16
 </remark>

 <sect1 xml:id="sec-perf-concept">
  <title>ハードウエアベースの監視</title>

  <para>性能監視とは、アプリケーションやシステムがどのような処理を行ったのかについて、関連する情報を収集することを意味します。この情報はソフトウエアベースの手段のほか、 CPU やチップセットなどを介して取得することができます。 Perf では、これらの方式の両方を統合する仕組みです。</para>
  <para>多くの新しいプロセッサには、性能監視ユニット (Performance Monitoring Unit (PMU)) が搭載されています。 PMU の設計と機能は CPU ごとに異なります。たとえばレジスタの数や対応するカウンタ、機能などは CPU 側の実装によって異なります。</para>
  <para>それぞれの PMU のレジスタを分類すると、性能監視設定 (Performance Monitor Configuration; PMC) と性能監視データ (Performance Monitor Data (PMD)) に分けられます。どちらのレジスタとも読み込みは可能ですが、書き込みに関しては PMC にのみ行うことができます。これらのレジスタには、設定情報とデータが記憶されています。</para>
 </sect1>

 <sect1 xml:id="sec-perf-sample-count">
  <title>サンプリングとカウンティング</title>
  <para>Perf にはいくつかのプロファイルモードが用意されています:</para>
  <itemizedlist>
   <listitem>
    <formalpara>
     <title>カウンティング</title>
     <para>イベントの発生回数を数えるモードです。</para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>イベントベースのサンプリング</title>
     <para>あまり正確ではない計数方法です。ある一定回数のイベント発生が起こるたびにサンプルを記録するモードです。</para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>時間ベースのサンプリング</title>
     <para>あまり正確ではない計数方法です。一定の時間間隔でサンプルを記録するモードです。</para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <!-- See FATE# 315868 -->
     <title>インストラクションベースのサンプリング (&amd64; のみ)</title>
     <para>プロセッサは、指定された間隔で現れるインストラクションに従い、生成されるイベントを採取します。これにより、個別のインストラクションをたどることができますので、性能面で何が問題なのかを確認することができるようになります。</para>
    </formalpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec-perf-install">
  <title>Perf のインストール</title>

  <para>Perf のカーネルコードは既定のカーネル内に含まれています。ユーザスペース側のユーティリティを使用するには、 <package>perf</package> パッケージをインストールしてください。</para>
  <!--
    On System z, there may be some more work involved, as you need to
    "activate the cpu measurement facility":
    http://public.dhe.ibm.com/software/dw/linux390/perf/Tools-MK2-V7-Web.pdf#page=124
    - sknorr, 2015-10-08
   -->
 </sect1>

 <sect1 xml:id="sec-perf-subcommand">
  <title>Perf のサブコマンド</title>

  <para>必要な情報を収集する目的で、 <command>perf</command> ツールにはいくつかのサブコマンドが用意されています。本章では、最もよく使用するサブコマンドについて、概要を説明しています。</para>
  <para>サブコマンドに対するヘルプを表示したい場合は、<command>perf help</command> <replaceable>サブコマンド</replaceable> もしくは <command>man perf-</command> <replaceable>サブコマンド</replaceable> のように入力して実行してください。</para>

  <variablelist>
   <varlistentry>
    <term><command>perf stat</command></term>
    <listitem>
     <para>プログラムを起動し、終了時に統計情報の概要を生成します。 <command>perf stat</command> はイベントの発生回数を数えるために使用します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>perf record</command></term>
    <listitem>
     <para>プログラムを起動し、パフォーマンスカウンタ情報のレポートを作成します。レポートはカレントディレクトリ内の <filename>perf.data</filename> ファイルに保存されます。 <command>perf record</command> はイベントのサンプリングで使用します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>perf report</command></term>
    <listitem>
     <para><command>perf record</command> で作成したレポートを表示します。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>perf annotate</command></term>
    <listitem>
     <para>レポートファイルを表示するとともに、実行されていたコードの注釈付きバージョンを表示します。デバッグシンボルがインストールされていれば、ソースコードも表示されます。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>perf list</command></term>
    <listitem>
     <para>現在のカーネルと CPU で Perf がレポートすることのできる、イベントの種類を一覧表示します。イベントの種類は分類でフィルタリングすることができます。たとえばハードウエアイベントのみを表示したい場合は、 <command>perf list hw</command> のように入力して実行します。</para>
     <para><command>perf_event_open</command> に対するマニュアルページには、最も重要なイベントに関する短い説明が書かれています。たとえば <systemitem>branch-misses</systemitem> というイベントに対する説明を読むには、 <literal>BRANCH_MISSES</literal> を検索してください (大文字で、ハイフンをアンダースコアにしていることに注意してください):</para>
<screen>&prompt.user;<command>man</command> perf_event_open | <command>grep</command> -A5 <replaceable>BRANCH_MISSES</replaceable></screen>
     <para>イベントによっては名前がわかりにくいものもあります。ハードウエアイベント名のうち、小文字のものはハードウエアイベントを直接指し示すものではなく、 Perf が独自に別名として作成したものであることに注意してください。このような別名定義により、対応する様々なプロセッサで名前の異なる似通ったイベントを統一的に収集できるようになっています。</para>
     <para>たとえば <systemitem>cpu-cycles</systemitem> というイベントは、 Intel プロセッサでは <systemitem>UNHALTED_CORE_CYCLES</systemitem> というハードウエアイベントにマップされていますが、 AMD プロセッサでは <systemitem>CPU_CLK_UNHALTED</systemitem> というハードウエアイベントにマップされています。</para>
     <para>Perf では、ハードウエア固有のイベントの計数にも対応しています。それらの説明を読みたい場合は、 CPU の製造元が提供するアーキテクチャソフトウエア開発者マニュアル (Architecture Software Developer's Manual) をお読みください。 &x86-64; プロセッサでの対応文書については、 <xref linkend="sec-perf-more"/> にリンクがあります。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>perf top</command></term>
    <listitem>
     <para>発生したシステムの動作状況を表示します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>perf trace</command></term>
     <listitem>
      <para>このコマンドは <command>strace</command> に似た動作をする仕組みで、特定のスレッドやプロセスでどのシステムコールが実行されているのかと、シグナルの受信状況を表示することができます。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-perf-event">
  <title>特定種類のイベントのカウント</title>
  <para>イベント (<command>perf list</command> で表示されるイベント) の発生回数を数えるには、下記のように入力して実行します:</para>
<screen>&prompt.root;<command>perf</command> stat -e <replaceable>イベント名</replaceable> -a</screen>
  <para>複数のイベントを一括で数えたい場合は、それらをカンマ区切りで指定します。たとえば <systemitem>cpu-cycles</systemitem> と <systemitem>instructions</systemitem> をまとめて数えるには、下記のように入力して実行します:</para>
<screen>&prompt.root;<command>perf</command> stat -e cpu-cycles,instructions -a</screen>
  <para>セッションを停止するには、 <keycombo><keycap function="control"/><keycap>C</keycap></keycombo> を押します。</para>
  <remark>
    Input from Tony Jones: "perhaps cover case where #events &gt; #pmus so kernel
    time slices (i.e [xx.yy%] in output)" - sknorr, 2015-10-30
  </remark>
  <para>一定時間内でのイベント発生回数を数えることもできます:</para>
<screen>&prompt.root;<command>perf</command> stat -e <replaceable>イベント名</replaceable> -a -- sleep <replaceable>時間</replaceable></screen>
  <para><replaceable>時間</replaceable> の箇所は秒単位で指定してください。</para>
 </sect1>

 <sect1 xml:id="sec-perf-command">
  <title>特定のコマンド固有のイベント記録</title>
  <para>特定のコマンドに固有のイベントを採取する方法には、いくつかのものがあります:</para>
  <itemizedlist>
   <listitem>
     <para>新しく起動したコマンドに対してレポートを作成するには、下記のようにします:</para>
<screen>&prompt.root;<command>perf</command> record <replaceable>コマンド</replaceable></screen>
     <para>起動したコマンドは通常通りに処理を行うだけです。コマンドのプロセスが終了すると、 Perf のセッションも終了します。</para>
   </listitem>
   <listitem>
     <para>新しく起動したコマンドが実行されている間、システム全体で発生したイベントのレポートを作成するには、下記のようにします:</para>
<screen>&prompt.root;<command>perf</command> record -a <replaceable>コマンド</replaceable></screen>
     <para>起動したコマンドは通常通りに処理を行うだけです。コマンドのプロセスが終了すると、 Perf のセッションも終了します。</para>
   </listitem>
   <listitem>
     <para>動作中のプロセスに対するレポートを作成するには、下記のようにします:</para>
<screen>&prompt.root;<command>perf</command> record -p <replaceable>PID</replaceable></screen>
     <para>ここで、 <replaceable>PID</replaceable> にはプロセス ID を指定します。セッションを停止するには、 <keycombo><keycap function="control"/><keycap>C</keycap></keycombo> を押します。</para>
   </listitem>
  </itemizedlist>
  <para>収集されたデータ ( <filename>perf.data</filename> ) を表示するには、下記のように入力して実行します:</para>
<screen>&prompt.user;<command>perf</command> report</screen>
  <para>すると、擬似的なグラフィカルインターフェイスが起動されます。 <!-- `perf report` recommends ? for Help, but H works too. `perf annotate` only allows H, while ? opens a search window. => Use the one that works for both, since you can switch between both modes without quitting. - sknorr, 2015-10-14 --> ヘルプを表示したい場合は <keycap>H</keycap> を、終了したい場合は <keycap>Q</keycap> をそれぞれ押してください。</para>
  <remark>Some more information about interpreting data from this utility might
  be helpful... - sknorr, 2015-10-14</remark>
  <remark>Feedback on this from Mel Gorman: "[D]o not get into this. You could
    write a small book on the subject and still not cover all the details."
    - sknorr, 2015-10-16
  </remark>
  <para>グラフィカルインターフェイスを使用したい場合は、 Perf の GTK+ インターフェイスをお試しください:</para>
<screen>&prompt.user;<command>perf</command> report --gtk</screen>
  <para>ただし、 GTK+ インターフェイスの機能は限られたものであることに注意してください。<remark> It provides a scrollable list and tabs and not much else. - sknorr, 2015-10-30 </remark></para>
 </sect1>

 <sect1 xml:id="sec-perf-more">
  <title>さらなる情報</title>

  <para>本章では非常に短い説明しか記載していません。下記に示すリンク先で様々な情報が提供されています (英語のみの提供となります):</para>

  <variablelist>
   <varlistentry>
    <term><link xlink:href="https://perf.wiki.kernel.org/index.php/Main_Page"/></term>
    <listitem>
     <para>プロジェクトの Web ページです。 <command>perf</command> を使用する際のチュートリアルも用意されています。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://www.brendangregg.com/perf.html"/></term>
    <listitem>
     <para><command>perf</command> の様々な使用例を含む、非公式ページです。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://web.eece.maine.edu/~vweaver/projects/perf_events/"/></term>
    <listitem>
     <para>様々なりソースを含む非公式ページです。主に Perf の Linux カーネルコードと、その API に関連した情報が書かれています。たとえば CPU の互換性テーブルやプログラミングガイドなどがあります。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://www-ssl.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3b-part-2-manual.pdf"/></term>
    <listitem>
     <para><citetitle>Intel Architectures Software Developer's Manual, Volume 3B</citetitle> です。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="https://support.amd.com/TechDocs/24593.pdf"/></term>
    <listitem>
     <para><citetitle>AMD Architecture Programmer's Manual, Volume 2</citetitle> です。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="cha-tuning-oprofile"/></term>
    <listitem>
     <para>性能を最適化したい場合は、この章もお読みください。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
