<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="tpm">
  <title>ソフトウエア TPM エミュレータ</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <sect1 xml:id="tpm-introduction">
    <title>概要</title>

    <para>Trusted Platform Module (TPM) は暗号処理を行うプロセッサで、暗号鍵を利用してハードウエアの機密を保持するための仕組みです。 TPM は開発者向けにセキュリティ機能を提供しますので、 TPM を擬似的に再現するエミュレータが存在すると、より安全性の高い仮想環境を構築できるようになります。また、ハードウエア TPM デバイスとは異なり、ゲスト側からのアクセス数に制限がありません。このほか、 TPM バージョン 1.2 と 2.0 を簡単に切り替えて使用することもできます。 &qemu; では <package>swtpm</package> パッケージで提供されるソフトウエア TPM エミュレータに対応しています。</para>
  </sect1>
  <sect1 xml:id="tpm-prerequisite">
    <title>事前要件</title>

    <para>ソフトウエア TPM エミュレータをインストールして使用するには、まず &libvirt; 仮想化環境をインストールする必要があります。 <xref linkend="install-virtualization-components"/> を参照して、提供されている仮想化ソリューションの中からいずれかをインストールしてください。</para>
  </sect1>
  <sect1 xml:id="tpm-installation">
    <title>インストール</title>

    <para>ソフトウエア TPM エミュレータを使用するには、 <package>swtpm</package> パッケージをインストールします:</para>

<screen>&prompt.sudo;zypper install swtpm</screen>
  </sect1>
  <sect1 xml:id="tpm-qemu">
    <title>&qemu; での <command>swtpm</command> の使用</title>

    <para><command>swtpm</command> は 3 種類のインターフェイスを提供しています。それぞれ <literal>socket</literal> , <literal>chardev</literal> , <literal>cuse</literal> と呼ばれます。下記の手順では <emphasis>socket</emphasis> インターフェイスを使用するものとします。</para>

    <procedure>
      <step>
        <para>VM のディレクトリ内に <filename>mytpm0</filename> というディレクトリを作成して、ここに TPM の状態を保存します。たとえば VM のディレクトリが <filename>/var/lib/libvirt/qemu/sle15sp3</filename> であれば、下記のようになります:</para>
<screen>&prompt.sudo;mkdir /var/lib/libvirt/qemu/sle15sp3/mytpm0</screen>
      </step>
      <step>
        <para>あとは <command>swtpm</command> を起動します。起動を行うと &qemu; (例: <filename>/var/lib/libvirt/qemu/sle15sp3</filename>) が使用するソケットファイルが作成されます:</para>
<screen>
 &prompt.sudo;swtpm socket
  --tpmstate dir=/var/lib/libvirt/qemu/sle15sp3/mytpm0 \
  --ctrl type=unixio,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
  --log level=20
 </screen>
        <tip>
          <title>TPM バージョン 2.0 について</title>
          <para>既定では <command>swtpm</command> は TPM バージョン 1.2 エミュレータを起動し、その状態を <filename>tpm-00.permall</filename> ディレクトリ内に保存します。 TPM 2.0 インスタンスを作成したい場合は、下記のように入力して実行します:</para>
<screen>
 &prompt.sudo;swtpm socket
  --tpm2
  --tpmstate dir=/var/lib/libvirt/qemu/sle15sp3/mytpm0 \
  --ctrl type=unixio,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
  --log level=20
 </screen>
          <para>TPM 2.0 の場合、状態は <filename>tpm2-00.permall</filename> ディレクトリ内に保存されます。</para>
        </tip>
      </step>
      <step>
        <para>あとは &qemusystemarch; コマンドに対して、下記のようなコマンドラインパラメータを追加します:</para>
<screen>
&prompt.user;qemu-system-x86_64 \
[...]
-chardev socket,id=chrtpm,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
-tpmdev emulator,id=tpm0,chardev=chrtpm \
-device tpm-tis,tpmdev=tpm0
</screen>
      </step>
      <step>
        <para>最後にゲスト側で、 TPM デバイスが利用可能になっているかどうかを確認します。具体的には下記のコマンドを入力して実行します:</para>
<screen>&prompt.user;tpm_version
TPM 1.2 Version Info:
Chip Version:        1.2.18.158
Spec Level:          2
Errata Revision:     3
TPM Vendor ID:       IBM
TPM Version:         01010000
Manufacturer Info:   49424d00
</screen>
      </step>
    </procedure>
  </sect1>
  <sect1 xml:id="tpm-libvirt">
    <title>&libvirt; での swtpm の使用</title>

    <para>&libvirt; で swtpm を使用する場合は、ゲストの XML 設定内に TPM デバイスの情報を追加します:</para>

<screen>
&lt;devices&gt;
 &lt;tpm model='tpm-tis'&gt;
  &lt;backend type='emulator' version='2.0'/&gt;
 &lt;/tpm&gt;
&lt;/devices&gt;
</screen>

    <para>&libvirt; の場合、 swtpm はゲストの起動と共に自動的に開始されます。事前に起動しておく必要はありません。 <filename>permall</filename> 状態ファイルは <filename>/var/lib/libvirt/swtpm/<replaceable>VM_UUID</replaceable></filename> ディレクトリ内に保存されます。</para>
  </sect1>
  <sect1 xml:id="tpm-ovmf">
    <title>OVMF ファームウエアでの TPM の完全性計測</title>

    <para>ゲスト側で Open Virtual Machine Firmware (OVMF) を使用している場合、 TPM の完全性計測が行われます。イベントログを読む場合は、 <filename>/sys/kernel/security/tpm0/binary_bios_measurements</filename> ファイルを参照してください。</para>
  </sect1>
  <sect1 xml:id="qemu-tpm-resources">
    <title>各種情報</title>

    <itemizedlist>
      <listitem>
        <para>Wikipedia の <link xlink:href="https://ja.wikipedia.org/wiki/Trusted_Platform_Module"/> には、 TPM に関する大まかな説明が書かれています。</para>
      </listitem>
      <listitem>
        <para>&productname; 固有の仮想環境の設定については、 <xref linkend="cha-vt-installation"/> に説明があります。</para>
      </listitem>
      <listitem>
        <para><package>swtpm</package> の使用方法に関する詳細は、マニュアルページ ( <command>man 8 swtpm</command> ) をお読みください。</para>
      </listitem>
      <listitem>
        <para>TPM の &libvirt; における仕様については、 <link xlink:href="https://libvirt.org/formatdomain.html#elementsTpm"/> (英語) に説明が書かれています。</para>
      </listitem>
      <listitem>
        <para>OVMF での UEFI ファームウエアの有効化に関する説明は、 <xref linkend="sec-vt-installation-ovmf"/> をお読みください。</para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>
