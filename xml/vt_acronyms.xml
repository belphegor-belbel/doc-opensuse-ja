<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE glossdiv [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<glossdiv xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="gloss.vt.acronym">
 <title>略語</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <glossentry xml:id="gloss.vt.acpi"><glossterm>ACPI</glossterm>
  <glossdef>
   <para>Advanced Configuration and Power Interface (ACPI) の略で、オペレーティングシステムからのデバイスの設定や電源管理のための統一規格を意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.aer"><glossterm>AER</glossterm>
  <glossdef>
   <para>Advanced Error Reporting</para>
   <para>AER は PCI Express 仕様で提供されている機能のうちの 1 つで、 PCI でのエラーを報告し、それらのうちのいくつかを修復することのできる仕組みを提供します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.apic"><glossterm>APIC</glossterm>
  <glossdef>
   <para>Advanced Programmable Interrupt Controller (APIC) は割り込みコントローラの一種です。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.xmtoxl.vt.bdf"><glossterm>BDF</glossterm>
  <glossdef>
   <para>Bus (バス):Device (デバイス):Function (機能)</para>
   <para>PCI や PCIe のデバイスを簡潔に表現するための表記法です。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.cg"><glossterm>CG</glossterm>
  <glossdef>
   <para>Control Groups (コントロールグループ)</para>
   <para>リソース (CPU, メモリ, ディスク I/O など) を制限したり測定したり、孤立させたりするための機能を指します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.xmtoxl.vt.edf"><glossterm>EDF</glossterm>
  <glossdef>
   <para>Earliest Deadline First</para>
   <para>このスケジューラは直感的な重み付き CPU 共有の仕組みで、時間面の保証を行なうためのリアルタイムアルゴリズムを意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.ept"><glossterm>EPT</glossterm>
  <glossdef>
   <para>Extended Page Tables (拡張ページテーブル)</para>
   <para>仮想環境での性能はネイティブな (仮想化を行なわない) 環境に近くなっていますが、仮想化によって少しのオーバーヘッドが存在しています。オーバーヘッドは CPU の仮想化機能 (<xref linkend="gloss.vt.acronym.mmu"/>) のほか、 I/O デバイスによっても発生します。最近の x86 プロセッサでは、 AMD, Intel ともにハードウエア拡張を提供し、このような性能ギャップを埋める仕組みを用意しています。 2006 年、 AMD は AMD-Virtualization (AMD-V) 技術、 Intel は Intel® VT-x 技術を発表し、仮想化に対する初めてのハードウエアサポートを提供するようになりました。最近になって Intel は、 MMU の仮想化を行なう第 2 世代の仮想化ハードウエアサポートを提供するようになりました。これを Extended Page Tables (拡張ページテーブル; EPT) と呼んでいます。 EPT が有効化されたシステムの場合、 <xref linkend="gloss.vt.acronym.mmu"/> の仮想化にあたって、シャドウページを使用するのに比べて性能を改善することができるようになっています。 EPT では、負荷状況にもよりますが、メモリアクセスの遅延が発生します。ただし、ゲストとハイパーバイザでラージページを使用することによって、そのような遅延を効率的に小さくすることができるようになっています。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.xmtoxl.vt.flask"><glossterm>FLASK</glossterm>
  <glossdef>
   <para>Flux Advanced Security Kernel</para>
   <para>&xen; は FLASK と呼ばれるセキュリティアーキテクチャを採用していて、同名のモジュールによる強制アクセス制御を実装しています。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.hap"><glossterm>HAP</glossterm>
  <glossdef>
   <para>High Assurance Platform</para>
   <para>HAP はハードウエア技術とソフトウエア技術の組み合わせで、ワークステーションやネットワークのセキュリティを改善するための仕組みです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.hvm"><glossterm>HVM</glossterm>
  <glossdef>
   <para>Hardware Virtual Machine (ハードウエア仮想マシン) の略です (&xen; ではこのように呼ばれています) 。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.iommu"><glossterm>IOMMU</glossterm>
  <glossdef>
   <para>Input/Output Memory Management Unit</para>
   <para>IOMMU (AMD* の技術) はメモリ管理ユニット ( <xref linkend="gloss.vt.acronym.mmu"/> ) を意味する技術で、ダイレクトメモリアクセス (DMA) に対応した I/O バスをメインメモリに接続することができるものを指します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.ksm"><glossterm>KSM</glossterm>
  <glossdef>
   <para>Kernel Same Page Merging</para>
   <para>KSM は、ゲストとホストで同一の内容を持つメモリページを自動的に共有させる仕組みで、 &vmhost; 側で KSM が有効化されていれば、 &kvm; は KSM を最適に使用することができます。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.mmu"><glossterm>MMU</glossterm>
  <glossdef>
   <para>Memory Management Unit (メモリ管理ユニット)</para>
   <para>CPU 側から要求されたメモリへのアクセスを扱うハードウエアコンポーネントを意味する用語です。仮想アドレスから物理アドレスへの翻訳を行なう (仮想メモリ管理と呼びます) ほか、メモリの保護やキャッシュ制御、バス調停などを提供します。古いコンピュータアーキテクチャ (特に 8 ビットシステム) では、バンク切り替えなどと呼ばれていたものです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.pae"><glossterm>PAE</glossterm>
  <glossdef>
   <para>Physical Address Extension (物理アドレス拡張)</para>
   <para>32 ビットの x86 オペレーティングシステムでは、 Physical Address Extension (PAE) を利用することで、 4 GB 以上の物理メモリにアクセスすることができるようになっています。 PAE モードでは、ページテーブルエントリ (PTE) は 64 ビット幅になります。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.pcid"><glossterm>PCID</glossterm>
  <glossdef>
   <para>Process-context identifiers (プロセス-コンテキスト識別子)</para>
   <para>これらは、論理プロセッサが複数の線形アドレス空間の情報をキャッシュする機能を意味し、ソフトウエアが異なる線形アドレス空間に切り替えた際にも、キャッシュ情報を維持することができるようにするものです。 INVPCID 命令はきめ細かい TLB (<xref linkend="gloss.vt.acronym.tlb"/>) フラッシュに使用するもので、カーネルにとって有益な仕組みです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.pcie"><glossterm>PCIe</glossterm>
  <glossdef>
   <para>Peripheral Component Interconnect Express</para>
   <para>PCIe は古い規格である PCI, PCI-X, AGP バス標準を置き換えるために設計された仕組みです。 PCIe は従来よりも高い最大システムバススループットや少ない I/O ピン数、そしてより小さくなった物理フットプリントなど、さまざまな改善が加えられています。これに加えて、より詳細なエラー検出・レポート機構 ( <xref linkend="gloss.vt.acronym.aer"/> ) が用意され、ホットプラグにもネイティブ対応するようになっています。なお、 PCI との後方互換性も維持されています。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.pse_pse36"><glossterm>PSE, PSE36</glossterm>
  <glossdef>
   <para>Page Size Extended (ページサイズ拡張)</para>
   <para>PSE は x86 プロセッサの機能で、従来の 4 KiB サイズよりも大きなページサイズに対応するための仕組みです。 PSE-36 は通常の 10 ビットに加えて 4 ビット分の拡張が行なわれ、ラージページを指し示すページディレクトリエントリ内で使用されています。これにより、 36 ビットのアドレス空間内でラージページを使用することができるようになっています。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.pt"><glossterm>PT</glossterm>
  <glossdef>
   <para>Page Table (ページテーブル)</para>
   <para>ページテーブルは、コンピュータのオペレーティングシステム内にある仮想メモリシステムが使用するデータ構造で、仮想アドレス (プロセスごとに個別管理されているアドレス) と物理アドレス (実際のハードウエアアドレス) の対応付けを管理するための仕組みです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.qxl"><glossterm>QXL</glossterm>
  <glossdef>
   <para>QXL は仮想環境向けの Cirrus VGA フレームバッファ (8M) です。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.rvi_npt"><glossterm>RVI / NPT</glossterm>
  <glossdef>
   <para>Rapid Virtualization Indexing, Nested Page Tables</para>
   <para>AMD の第 2 世代仮想化ハードウエア支援技術で、プロセッサのメモリ管理ユニット ( <xref linkend="gloss.vt.acronym.mmu"/> ) 向けの仕組みです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.sata"><glossterm>SATA</glossterm>
  <glossdef>
   <para>Serial ATA (シリアル ATA)</para>
   <para>SATA はコンピュータバスインターフェイスの一種で、ホストバスアダプタからハードディスクや光学ドライブなど、ストレージデバイスなどに接続するためのインターフェイスです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.seccomp2_based_sandboxing"><glossterm>Seccomp2 ベースのサンドボックス</glossterm>
  <glossdef>
   <para>不正な動作を防ぐための追加保護として、特定のシステムコールのみを許可するようなサンドボックス環境を意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.smep"><glossterm>SMEP</glossterm>
  <glossdef>
   <para>Supervisor Mode Execution Protection</para>
   <para>Xen ハイパーバイザで提供される仕組みで、ユーザモードページの実行を阻止するための仕組みです。これにより、アプリケーションからハイパーバイザへの攻撃の多くを困難にします。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.spice"><glossterm>SPICE</glossterm>
  <glossdef>
   <para>Simple Protocol for Independent Computing Environments の略です。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.xmtoxl.vt.sxp"><glossterm>SXP</glossterm>
  <glossdef>
   <para>SXP ファイルは &xen; の設定ファイルを意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.tcg"><glossterm>TCG</glossterm>
  <glossdef>
   <para>Tiny Code Generator</para>
   <para>インストラクションを CPU で直接実行するのではなく、擬似的に実行することを意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.thp"><glossterm>THP</glossterm>
  <glossdef>
   <para>Transparent Huge Pages (透過型ヒュージページ)</para>
   <para>CPU が既定の 4KB より大きなページを利用してメモリにアクセスする機能を意味します。これにより、メモリの使用率と CPU キャッシュの使用率を削減することができます。 &vmhost; 側で THP が有効化されていれば、 &kvm; は THP を (madvise と日和見的な方式で) 最適に使用することができます。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.tlb"><glossterm>TLB</glossterm>
  <glossdef>
   <para>Translation Lookaside Buffer</para>
   <para>TLB はメモリ管理ハードウエアが仮想アドレスへの変換速度を上げるためのキャッシュです。現在ではデスクトップやノート PC 、サーバのいずれのプロセッサでも、 TLB を利用して仮想アドレスから物理アドレス空間への変換を行なっています。また、仮想メモリを使用するほぼ全てのハードウエア内に搭載されている仕組みでもあります。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vcpu"><glossterm>VCPU</glossterm>
  <glossdef>
   <para>仮想化された CPU の状態を含む、スケジュール対象の実体を意味します。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vdi"><glossterm>VDI</glossterm>
  <glossdef>
   <para>Virtual Desktop Infrastructure (仮想デスクトップインフラストラクチャ)</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vfio"><glossterm>VFIO</glossterm>
  <glossdef>
   <para>カーネルバージョン 3.6 およびそれ以降で導入された仕組みで、ユーザスペースから PCI デバイスにアクセスするための新しい方式を提供するものです。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vhs"><glossterm>VHS</glossterm>
  <glossdef>
   <para>Virtualization Host Server (仮想化ホストサーバ)</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vmcs"><glossterm>VMCS</glossterm>
  <glossdef>
   <para>Virtual Machine Control Structure (仮想マシン制御構造)</para>
   <para>VMX の非ルート操作と VMX の遷移は Virtual Machine Control Structure (仮想マシン制御構造) (VMCS) と呼ばれるデータ構造によって制御されます。 VMCS へのアクセスは VMCS ポインタ (論理プロセッサごとに 1 つ) と呼ばれるプロセッサの状態コンポーネントを介して管理されます。 VMCS ポインタの値は VMCS に対する 64 ビットのアドレスです。 VMCS ポイントは VMPTRST や VMPTRLD のインストラクションを利用することで、読み込みおよび書き込みを行なうことができます。 <xref linkend="gloss.vt.acronym.hypervisor_vmm"/> は VMREAD, VMWRITE, VMCLEAR の各インストラクションを利用して、 VMCS の設定を行ないます。 <xref linkend="gloss.vt.acronym.hypervisor_vmm"/> では対応するそれぞれの仮想マシンに対して、異なる VMCS を使用することができます。複数の論理プロセッサ (仮想プロセッサ) を持つ仮想マシンの場合、 <xref linkend="gloss.vt.acronym.hypervisor_vmm"/> はそれぞれの仮想プロセッサに対して異なる VMCS を使用することができます。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vmdq"><glossterm>VMDq</glossterm>
  <glossdef>
   <para>Virtual Machine Device Queue (仮想マシンデバイスキュー)</para>
   <para>ハードウエアレベルで複数の VM に対応できるマルチキュー型のネットワークアダプタにより、各パケットキューをそれぞれの VM (VM の IP アドレス) に割り当てることができるようになります。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.hypervisor_vmm"><glossterm>VMM</glossterm>
  <glossdef>
   <para>Virtual Machine Monitor (Hypervisor) (仮想マシンモニタ (ハイパーバイザ))</para>
   <para>プロセッサがハイパーバイザ ( <xref linkend="gloss.vt.acronym.hypervisor_vmm"/> ) に関係するインストラクションやイベントを検出すると、ゲストモードを終了して VMM に戻ることができます。 VMM はネイティブとほとんど変わらない速度でインストラクションやその他のイベントを擬似し、ゲストモードに戻ることができます。ゲストモードからの VMM への遷移、および VMM からゲストモードへの遷移は、ゲスト側の実行が完全に停止することになるため、大きな遅延のある操作となります。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vmroot"><glossterm>VM ルート</glossterm>
  <glossdef>
   <para><xref linkend="gloss.vt.acronym.hypervisor_vmm"/> は <xref linkend="gloss.vt.acronym.vmx"/> ルート操作内で動作し、ゲスト側のソフトウエアは <xref linkend="gloss.vt.acronym.vmx"/> 非ルート奏さないで動作します。 <xref linkend="gloss.vt.acronym.vmx"/> ルート操作と <xref linkend="gloss.vt.acronym.vmx"/> 非ルート操作との間の遷移は、 <xref linkend="gloss.vt.acronym.vmx"/> 遷移と呼ばれます。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vmx"><glossterm>VMX</glossterm>
  <glossdef>
   <para>Virtual Machine eXtensions (仮想マシン拡張)</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vpid"><glossterm>VPID</glossterm>
  <glossdef>
   <para><xref linkend="gloss.vt.acronym.tlb"/> のソフトウエア制御に対する新しいサポートです (小さな <xref linkend="gloss.vt.acronym.hypervisor_vmm"/> の開発努力によって、　<xref linkend="gloss.vt.acronym.tlb"/> の性能を改善するためのものです) 。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vtd"><glossterm>VT-d</glossterm>
  <glossdef>
   <para>Virtualization Technology for Directed I/O</para>
   <para><link xlink:href="https://software.intel.com/en-us/articles/intel-virtualization-technology-for-directed-io-vt-d-enhancing-intel-platforms-for-efficient-virtualization-of-io-devices">Intel*</link> 向けの <xref linkend="gloss.vt.acronym.iommu"/> です。</para>
  </glossdef>
 </glossentry>
 <glossentry xml:id="gloss.vt.acronym.vtpm"><glossterm>vTPM</glossterm>
  <glossdef>
   <para>Trusted Computing を介して、ゲスト向けのセキュリティ機能を提供するコンポーネントです。</para>
  </glossdef>
 </glossentry>
</glossdiv>
