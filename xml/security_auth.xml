<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.security.auth">
<!-- ============================================================ -->
<!-- ============================================================ -->
<!-- ============================================================ -->
 <title>&yast; を利用した認証サーバとクライアントの設定</title>
 <info>
  <abstract>
   <para>認証サーバは LDAP をベースにした仕組みで、必要であれば Kerberos を併用することができます。 &productname; では、 &yast; のウイザードを利用して設定することができます。</para>

   <para>LDAP に関する詳細は <xref linkend="cha.security.ldap"/> を、 Kerberos に関する詳細は <xref linkend="cha.security.kerberos"/> をそれぞれお読みください。</para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
  </dm:docmanager>
 </info>
<!-- ============================================================ -->
 <sect1 xml:id="sec.security.auth.yast-sled" os="sled">
  <title>認証サーバの設定</title>

  <para>
   For information about configuring an Authentication Server, see the &sls;
   <citetitle>Security Guide</citetitle>, chapter <citetitle>Setting Up
   Authentication Servers and Clients Using &yast;</citetitle>. It is available
   from <link xlink:href="https://www.suse.com/documentation/sles"/>.
  </para>
 </sect1>

<!-- ============================================================ -->
 <sect1 xml:id="sec.security.auth.yast" os="sles;osuse">
  <title>&yast; を利用した認証サーバの設定</title>

  <para/>

  <sect2 xml:id="sec.security.auth.yast.init" os="sles;osuse">
   <title>認証サーバの初期設定</title>
   <para>ユーザアカウントデータを提供する認証サーバを構築するには、 <systemitem>yast2-auth-server</systemitem> , <systemitem>openldap2</systemitem> , <systemitem>krb5-server</systemitem> , <systemitem>krb5-client</systemitem> の各パッケージをインストールしておく必要があります。 &yast; では、いずれかのパッケージがインストールされていないことを検出すると、インストールするようメッセージを表示します。また、 Kerberos に対応させるには、 <systemitem>krb5-plugin-kdb-ldap</systemitem> パッケージもインストールする必要があります。</para>
   <para>&yast; での認証サーバの設定は、まず LDAP サーバの構築から始まります。その後、 Kerberos の有効化を行ないます。</para>
   <procedure>
    <title>&yast; を利用した認証サーバの設定</title>
    <step>
     <para>&rootuser; で &yast; を起動して、 <menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>認証サーバ</guimenu> </menuchoice> を選択し、設定ウイザードを起動します。</para>
    </step>
    <step>
     <para>まずは <guimenu>一般的な設定</guimenu> で、 LDAP サーバの設定を行ないます。これらの設定は、後から変更することもできます。詳しくは <xref linkend="fig.auth.y2.wizard.general.settings"/> をご覧ください:</para>
     <figure xml:id="fig.auth.y2.wizard.general.settings">
      <title>&yast; 認証サーバの設定</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_auth_wizard_general_settings.png" width="75%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_auth_wizard_general_settings.png" width="75%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
     <substeps performance="required">
      <step>
       <para><guimenu>LDAP サーバの起動</guimenu> で <guimenu>はい</guimenu> を選択します。</para>
      </step>
      <step>
       <para>SLP 経由で LDAP サーバの存在をアナウンスしたい場合は、 <guimenu>SLP デーモンに登録</guimenu> を選択します。</para>
      </step>
      <step>
       <para><guimenu>ファイアウオールの設定</guimenu> で必要な設定を行ないます。</para>
      </step>
      <step>
       <para><guimenu>次へ</guimenu> を押します。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>次にサーバの種類を選択します: <guimenu>単独サーバ</guimenu> , <guimenu>レプリケーション設定のマスターサーバ</guimenu> , <guimenu>レプリカ (スレーブ) サーバ</guimenu> の中からいずれかを選択します。</para>
    </step>
    <step>
     <para><guimenu>TLS 設定</guimenu> でセキュリティオプションを設定します。</para>
     <para>なお、ここでは <guimenu>TLS を有効にする</guimenu> を選択しておくことを強くお勧めします。詳しくは <xref linkend="proc.auth.server.config"/> および <xref linkend="step.auth.server.config.tls"/> をお読みください。</para>
      <warning>
       <title>暗号化を行なわない認証について</title>
       <para>TLS を利用した暗号化を使用せずに認証を行なってしまうと、パスワードは誰にでも読み取れる形式でネットワーク上を流れることになってしまいます。</para>
      </warning>
     <para>証明書を利用した LDAP over SSL の使用についても、可能であれば設定することをお勧めします。</para>
    </step>
    <step>
     <para>次に <guimenu>基本的なデータベースの設定</guimenu> で、 <guimenu>LDAP 管理者パスワード</guimenu> を指定して <guimenu>次へ</guimenu> を押します。詳しくは <xref linkend="fig.auth.y2.wizard.db.settings"/> をご覧ください。</para>
     <figure xml:id="fig.auth.y2.wizard.db.settings">
      <title>&yast; LDAP サーバ: 新しいデータベース</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_auth_wizard_db_settings.png" width="75%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_auth_wizard_db_settings.png" width="75%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para><guimenu>Kerberos 認証</guimenu> ダイアログでは、 Kerberos 認証を使用するかどうかを選択します (ここでの設定は後から変更することもできます) 。詳しくは <xref linkend="fig.auth.y2.wizard.kerberos.yes"/> をご覧ください。</para>
     <figure xml:id="fig.auth.y2.wizard.kerberos.yes">
      <title>&yast; Kerberos 認証</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_auth_wizard_kerberos_yes.png" width="75%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_auth_wizard_kerberos_yes.png" width="75%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>ここでは Kerberos サポートを有効化するかどうかを選択します。有効化する場合は、 <guimenu>領域</guimenu> 内に名前を設定する必要があります。設定が終わったら <guimenu>次へ</guimenu> を押します。</para>
     <substeps performance="required">
      <step>
       <para><guimenu>高度な設定</guimenu> では、 <guimenu>最大チケット有効期限</guimenu> や使用すべきポートなど、様々な設定を行なうことができます。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>最後に <guimenu>認証サーバの設定概要</guimenu> が表示されます。設定される内容を確認して <guimenu>完了</guimenu> を押すと、設定ウイザードを終了することができます。</para>
    </step>
   </procedure>
  </sect2>

<!-- ============================================================ -->

  <sect2 xml:id="sec.security.auth.yast.edit">
   <title>&yast; を利用した認証サーバ設定の編集</title>
   <para>設定を変更したり、追加の設定を行ないたい場合は、再度認証サーバモジュールを起動してください。すると、左側のペインに <guimenu>グローバル設定</guimenu> という項目が現われますので、ここからさらに詳しい設定を行なうことができます。詳しくは <xref linkend="fig.auth.y2.server.cfg"/> をご覧ください:</para>
   <figure xml:id="fig.auth.y2.server.cfg">
    <title>&yast; 認証サーバ設定の編集</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_auth_server_cfg.png" width="75%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_auth_server_cfg.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <procedure xml:id="proc.auth.server.config">
    <title>認証サーバ設定の編集</title>
    <step>
     <para><guimenu>ログレベル設定</guimenu> では、 LDAP サーバでのログの出力を設定することができます。表示された一覧の中から、ログに出力したい項目を選択してください。なお、選択する項目を増やせば増やすほど、ログファイルのファイルサイズも大きくなります。</para>
    </step>
    <step>
     <para><guimenu>機能の許可／禁止</guimenu> では、サーバが提供すべき接続の種類を設定します。ここでは下記のものを選択することができます:</para>
     <variablelist>
      <varlistentry>
       <term>LDAPv2 バインド要求</term>
       <listitem>
        <para>このオプションは、従来のプロトコルバージョン (LDAPv2) を利用するクライアントからの要求 (バインド要求) を、有効にするかどうかを選択します。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>認証情報が記入されている匿名バインド</term>
       <listitem>
        <para>通常、 LDAP サーバは認証情報 (識別名 (Distinguished Name (DN)) やパスワード) が記入されていない認証要求を拒否します。しかしながら、このオプションを有効にすると、匿名接続で DN を指定せず、パスワードのみを指定した接続ができるようになります。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>DN が記入されている未認証バインド</term>
       <listitem>
        <para>このオプションを有効化すると、 識別名 (Distinguished Name (DN) のみを指定してパスワードを指定しない、認証無しの (匿名の) 接続を受け付けるようになります。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>未認証時の更新操作処理</term>
       <listitem>
        <para>このオプションを有効化すると、未認証 (匿名) の場合でも更新処理を受け付けるようになります。この場合、 ACL やその他のルールに従ってアクセスを制限することになります。</para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step>
     <para><guimenu>機能の許可／禁止</guimenu> では、サーバフラグも設定することができます。具体的には、下記から選択することができます:</para>
     <variablelist>
      <varlistentry>
       <term>匿名バインド要求の受け入れを禁止する</term>
       <listitem>
        <para>サーバが匿名バインド要求を受け付けなくなります。なお、匿名のディレクトリアクセスについては一般的に禁止されません。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>簡易バインド認証を無効にする</term>
       <listitem>
        <para>簡易 (シンプル) バインド認証を完全に無効化します。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>StartTLS 操作を受け取った際、セッションに対して匿名状態の強要を禁止する</term>
       <listitem>
        <para>サーバは StartTLS 操作を受け取った際、匿名接続の状態に戻ることを強要しなくなります。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>認証したあとは StartTLS を禁止する</term>
       <listitem>
        <para>サーバは既に接続が認証されている場合、 StartTLS の操作を禁止するようになります。</para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step xml:id="step.auth.server.config.tls">
     <para>クライアントとサーバとの間で暗号化した通信を行ないたい場合は、 <guimenu>TLS 設定</guimenu> 内で設定を行ないます:</para>
     <substeps performance="required">
      <step>
       <para>クライアントとサーバとの間で、 TLS や SSL を利用した暗号化を使用したい場合は、 <guimenu>TLS を有効にする</guimenu> を選択します。</para>
      </step>
      <step>
       <para><guimenu>証明書のインポート</guimenu> でそれぞれの証明書や鍵に対する正確なパスを指定するか、もしくは <guimenu>共通サーバ証明書の使用</guimenu> を選択します。 <guimenu>共通サーバ証明書の使用</guimenu> が選択できない場合は、インストール時に証明書を作成していないことを意味しますので、 <guimenu>証明機関管理モジュールの起動</guimenu> を押して証明書を作成してください。詳しくは <xref linkend="sec.security.yast_ca.module"/> をお読みください。</para>
<!--
      <itemizedlist>
       <listitem>
        <para>If you opted for importing a certificate, &yast; prompts you
         to specify the exact path to its location.</para>
       </listitem>
       <listitem>
        <para>If you opted for using the common server certificate and it has
         not been created during installation, it is subsequently created.
        </para>
       </listitem>
      </itemizedlist>
      -->
      </step>
     </substeps>
    </step>
   </procedure>
   <para><!-- bnc#431264 --> <!-- Accept or modify the schema files included in the server's configuration by selecting <guimenu>Schema Files</guimenu> in the left part of the dialog. --> 次に、ダイアログの左側にある <guimenu>スキーマファイル</guimenu> を選択して、サーバの設定内に含めるべきスキーマファイルを指定します。既定で設定されているスキーマファイルは、 &yast; でユーザアカウントデータを管理するのに必要なスキーマです。</para>
   <para>&yast; では従来のスキーマファイル (通常はファイル名が <literal>.schema</literal> で終わるもの) のほか、 OpenLDAP の LDIF スキーマ形式で書かれたスキーマファイルにも対応しています。</para>
   <figure xml:id="fig.auth.y2.server.db.cfg">
    <title>&yast; 認証サーバデータベースの設定</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_auth_server_db_cfg.png" width="75%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_auth_server_db_cfg.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>LDAP サーバで管理するデータベースを追加するには、下記のようにして行ないます:</para>
   <procedure>
    <step>
     <para>ダイアログの左側で、 <guimenu>データベース</guimenu> の項目を選択します。</para>
    </step>
    <step>
     <para><guimenu>追加</guimenu> を押して新しいデータベースを追加します。</para>
    </step>
    <step>
     <para>下記のデータをそれぞれ指定します:</para>
     <variablelist>
      <varlistentry>
       <term><guimenu>ベース DN</guimenu></term>
       <listitem>
        <para>LDAP データベースに対するベース DN (識別名 (Distinguished Name (DN))) を入力します。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><guimenu>管理者 DN</guimenu></term>
       <listitem>
        <para>サーバの管理を行なう管理者の DN を指定します。 <guimenu>ベース DN の追加</guimenu> を選択すると、管理者を表わす <literal>cn</literal> のみを指定するだけで、残りはシステム側で自動的に補完するようになります。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>LDAP 管理者パスワード</term>
       <listitem>
        <para>データベース管理者のパスワードを入力します。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>このデータベースを OpenLDAP クライアント向けの既定値とする</term>
       <listitem>
        <para>利便性確保のため、必要であればチェックを入れます。</para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step>
     <para>次のダイアログでは、レプリケーションの設定を行ないます。</para>
    </step>
<!--
     <varlistentry>
      <term>Encryption</term>
      <listitem>
       <para>
        Determine the encryption algorithm to use to secure the password of
        Root DN.
 Choose <guimenu>Crypt</guimenu>,
        <guimenu>smd5</guimenu>, <guimenu>ssha</guimenu>, or
        <guimenu>sha</guimenu>.
        The dialog also includes a <guimenu>Plain</guimenu> option to
        enable the use of plain text passwords, but enabling this is not
        recommended for security reasons. To confirm your settings and return
        to the previous dialog, select <guimenu>OK</guimenu>.
       </para>
      </listitem>
     </varlistentry>
-->
    <step>
     <para>次のダイアログでは、 LDAP サーバで追加のセキュリティを実現するため、パスワードポリシーの強制を行なうかどうかを指定します:</para>
     <substeps performance="required">
      <step>
       <para>パスワードポリシーを有効化するには、 <guimenu>パスワードポリシーを有効にする</guimenu> を選択します。</para>
      </step>
      <step>
       <para>パスワードをデータベースに書き込む際、それが追加される場合であっても編集される場合であっても、平文パスワードをハッシュ化してから書き込む場合は、 <guimenu>平文パスワードをハッシュする</guimenu> を選択します。</para>
      </step>
      <step>
       <para>ロック (施錠) されたアカウントに対してバインド要求を送信した際、その旨を表わすエラーメッセージを返却したい場合は、 <guimenu>アカウントロック状態を通知する</guimenu> を選択します。</para>
       <warning>
        <title>機密を重視する環境でのアカウントロック (施錠) について</title>
        <para><quote>ロック (施錠) されたアカウントです</quote> というエラーメッセージを送信してしまうと、潜在的な攻撃者に対してヒントを与える結果になってしまうことから、セキュリティ問題に敏感な環境では <guimenu>アカウントロック状態を通知する</guimenu> のオプションを選択してはなりません。</para>
       </warning>
      </step>
      <step>
       <para>既定のポリシーオブジェクトの DN を指定します。 &yast; 側で提案する値以外のものを使用したい場合は、必要に応じて指定してください。特に問題がなければ、既定値をそのまま使用してください。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>最後に <guimenu>完了</guimenu> を押して、データベースの設定を完了します。</para>
    </step>
   </procedure>
   <para>パスワードポリシーを有効にしていない場合は、この時点でサーバを動作させる準備ができていることになります。パスワードポリシーを有効にしている場合は、さらにパスワードポリシーの設定を行なう必要があります。また、この時点で存在していないパスワードポリシーオブジェクトを指定していた場合は、下記のようにして &yast; で作成します:</para>
   <procedure>
    <step>
     <para>LDAP サーバのパスワードを入力します。左側のツリー表示内にある <guimenu>データベース</guimenu> を開いて、パスワードポリシーを設定したデータベースの中にある <guimenu>パスワードポリシーの設定</guimenu> を選択します。</para>
    </step>
    <step>
     <para><guimenu>パスワードポリシーを有効にする</guimenu> が選択されていることを確認して、 <guimenu>ポリシーの編集</guimenu> を押します。</para>
    </step>
    <step>
     <para>下記のようにしてパスワード変更ポリシーを設定します:</para>
     <substeps performance="required">
      <step>
       <para>まずはパスワードの履歴内に保存するパスワード数を指定します。履歴内に存在するものと同じパスワードは、使用できなくなります。</para>
      </step>
      <step>
       <para>次にユーザが自分のパスワードを変更できるかどうかと、管理者側でパスワードをリセットした場合に、自分自身でパスワード変更を行なわせるかどうかを指定します。また、パスワード変更時に古いパスワードの入力を求めるかどうかも設定します (こちらは任意で指定します) 。</para>
      </step>
      <step>
       <para>パスワードの品質検査に関するオプションを設定します。まずは最小のパスワードの長さを指定します。次に、品質検査を行なうことのできない暗号化されたパスワードの使用を許可したい場合は、 <guimenu>確認できないパスワードを受け付ける</guimenu> を選択します。また、 <guimenu>確認済みパスワードのみを受け付ける</guimenu> を選択すると、品質テストに合格したパスワードのみを受け付けるようになります。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>さらにパスワードの時間制限に関わるポリシーを設定します:</para>
     <substeps performance="required">
      <step>
       <para>まずはパスワードの最小使用日数 (パスワードを変更してから、次にパスワードを変更できるようになるまでの日数) と、最大有効日数 (同じパスワードを使い続けられる日数) をそれぞれ指定します。</para>
      </step>
      <step>
       <para>また、パスワードの有効期限が切れる前に、どれだけ早く警告を表示するかを指定します。</para>
      </step>
      <step>
       <para>さらに、有効期限が切れたあとに何回ログインを許可するかを指定します。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>さらにロックアウトポリシーを設定します:</para>
     <substeps performance="required">
      <step>
       <para>必要であればパスワードロックを有効にします。</para>
      </step>
      <step>
       <para>何回のバインド失敗でパスワードロックを行なうかを指定します。</para>
      </step>
      <step>
       <para>パスワードロック時間を指定します。</para>
      </step>
      <step>
       <para>パスワード認証の失敗を、キャッシュ内に保持しておく時間の長さを指定します。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para><guimenu>OK</guimenu> を押してパスワードポリシーの設定を適用します。</para>
    </step>
   </procedure>
   <para>既に作成済みのデータベースを編集するには、まず左側のツリー表示でベース DN を選択します。するとウインドウの右側に、新しくデータベースを作成したときと同様のダイアログが表示されます (ただし、ベース DN の箇所だけはグレーアウトしていて、変更することができなくなっています) 。</para>
   <para><guimenu>完了</guimenu> を押して認証サーバの設定を終了すると、認証サーバとして動作するための基本的な設定が完了します。さらに詳しく設定を調整したい場合は、 OpenLDAP の動的設定バックエンドで設定を行なってください。</para>
   <para><!-- bnc#754946 --> OpenLDAP の動的設定バックエンドは、設定そのものを LDAP データベース内に保存します。データベースは <filename>/etc/openldap/slapd.d</filename> 内に配置され、複数の <literal>.ldif</literal> ファイルから構成されます。これらのファイルに対して直接アクセスする必要はありません。設定を変更したい場合は、 &yast; の認証サーバモジュール (<systemitem>yast2-auth-server</systemitem> パッケージ) を使用するか、もしくは <command>ldapmodify</command> や <command>ldapsearch</command> などの LDAP クライアントを使用します。 OpenLDAP の動的設定バックエンドについて、詳しくは <quote>OpenLDAP 管理者ガイド</quote> をお読みください。</para>
  </sect2>

  <sect2 xml:id="sec.security.auth.yast.ldap_users">
   <title>LDAP ユーザとグループの編集</title>
   <para>LDAP のユーザやグループを &yast; で編集するには、 <xref linkend="sec.security.ldap.yast.usergr"/> をお読みください。</para>
  </sect2>
 </sect1>
<!-- ============================================================ -->

 <sect1 xml:id="sec.security.auth.yast.client">
  <title>&yast; を利用した認証クライアントの設定</title>

  <para>&yast; では、下記のようなモジュールを利用して、クライアントに対する認証を設定することができます:</para>

  <xi:include href="security_ldap_kerberos_ad_yast.xml"/>
 </sect1>

 <sect1 xml:id="sec.security.auth.sssd">
  <title>SSSD</title>
  <para>&yast; では、 2 種類のモジュールで SSSD を使用しています。それぞれ <guimenu>ユーザログイン管理</guimenu> と <guimenu>LDAP と Kerberos の認証</guimenu> です。</para>
  <para>SSSD は System Security Services Daemon の略であり、ネットワーク上離れた場所に存在するディレクトリサービスにアクセスして、ユーザデータの提供や様々な認証方式 (LDAP, &krb;, &ad; (&ada;) など) の提供を受けることができるデーモンです。このデーモンには NSS (Name Service Switch) と PAM (Pluggable Authentication Module) の各インターフェイスも用意されています。</para>
  <para>SSSD はユーザデータをローカルにキャッシュ (一時記憶) してデータを提供しています。そのため、実際のディレクトリサービスに対して、一時的にアクセスができない状況に陥った場合も、 SSSD はサービスを続けることができます。</para>
  <sect2 xml:id="sec.security.auth.sssd.status">
   <title>状態の確認</title>
   <para>&yast; の認証モジュールで設定を行なったあとは、下記のように実行することで、 SSSD が動作しているかどうかを確認することができます:</para>
<screen>&prompt.root;<command>systemctl status sssd</command>
sssd.service - System Security Services Daemon
   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled)
   Active: active (running) since Thu 2015-10-23 11:03:43 CEST; 5s ago
   [...]</screen>
  </sect2>

  <sect2 xml:id="sec.security.auth.sssd.cache">
   <title>キャッシュ</title>
   <para>認証用のバックエンドが利用できなくなってしまっている状態でも、ログインができるようにするため、 SSSD ではキャッシュの仕組みを提供しています。これはバックエンドが再度利用できるようになるまで動作します。</para>
   <para>キャッシュの内容を消去したい場合は、 <command>sss_cache -E</command> (<command>sss_cache</command> コマンドは <package>sssd-tools</package> パッケージに含まれています) を実行します。</para>
   <para>SSSD キャッシュを完全に削除したい場合は、下記を実行します:</para>
  <screen>&prompt.sudo;<command>systemctl stop sssd</command>
&prompt.sudo;<command>rm -f /var/lib/sss/db/*</command>
&prompt.sudo;<command>systemctl start sssd</command></screen>
  </sect2>

  <sect2 xml:id="sec.security.auth.sssd.more">
   <title>さらなる情報</title>
   <para>
   <remark>
    taroth 2019-07-03: @wbrown, when we went through this chapter together,
    we wrote down to refer to 'Configuring an LDAP Client with Yast'
    here - should I move the following (former) content of this section to the
    section 'Setting UP SSSD' (manually) in chapter 5 instead? or should I remove
    the following sentences completely? "For more information, see the SSSD man
    pages 'sssd.conf' ('man sssd.conf') and 'sssd '('man sssd').
    There are also man pages for most SSSD modules."
   </remark>
    For more information, see <xref linkend="sec.security.ldap.yast.client"/>.
   </para>
  </sect2>
 </sect1>
</chapter>
