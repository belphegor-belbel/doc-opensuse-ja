<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-auth">
<!-- ============================================================ -->
<!-- ============================================================ -->
<!-- ============================================================ -->
 <title>&yast; を利用した認証クライアントの設定</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>Kerberos は認証時に使用するプロトコルですが、 LDAP は認可と識別を行うためのプロトコルです。両方を組み合わせて使用することもできます。 LDAP に関する詳細は <xref linkend="cha-security-ldap"/> を、 Kerberos に関する詳細は <xref linkend="cha-security-kerberos"/> をそれぞれお読みください。</para>
  </abstract>
 </info>

 <sect1 xml:id="sec-security-auth-yast-client">
  <title>&yast; を利用した認証クライアントの設定</title>

  <para>&yast; では、下記のようなモジュールを利用して、クライアントに対する認証を設定することができます:</para>

&security-auth-client-yast;

 </sect1>

 <sect1 xml:id="sec-security-auth-sssd">
  <title>SSSD</title>
  <para>&yast; では、 2 種類のモジュールで SSSD を使用しています。それぞれ <guimenu>ユーザログイン管理</guimenu> と <guimenu>LDAP と Kerberos の認証</guimenu> です。</para>
  <para>SSSD は System Security Services Daemon の略であり、ネットワーク上離れた場所に存在するディレクトリサービスにアクセスして、ユーザデータの提供や様々な認証方式 (LDAP, &krb;, &ad; (&ada;) など) の提供を受けることができるデーモンです。このデーモンには NSS (Name Service Switch) と PAM (Pluggable Authentication Module) の各インターフェイスも用意されています。</para>
  <para>SSSD はユーザデータをローカルにキャッシュ (一時記憶) してデータを提供しています。そのため、実際のディレクトリサービスに対して、一時的にアクセスができない状況に陥った場合も、 SSSD はサービスを続けることができます。</para>
  <sect2 xml:id="sec-security-auth-sssd-status">
   <title>状態の確認</title>
   <para>&yast; の認証モジュールで設定を行ったあとは、下記のように実行することで、 SSSD が動作しているかどうかを確認することができます:</para>
<screen>&prompt.root;<command>systemctl status sssd</command>
sssd.service - System Security Services Daemon
   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled)
   Active: active (running) since Thu 2015-10-23 11:03:43 CEST; 5s ago
   [...]</screen>
  </sect2>

  <sect2 xml:id="sec-security-auth-sssd-cache">
   <title>キャッシュ</title>
   <para>認証用のバックエンドが利用できなくなってしまっている状態でもログインができるようにするため、 SSSD はキャッシュの有効期限が切れてもキャッシュを使用するようになっています。これはバックエンドが再度利用できるようになるまで動作します。</para>
   <para>キャッシュの内容を消去したい場合は、 <command>sss_cache -E</command> (<command>sss_cache</command> コマンドは <package>sssd-tools</package> パッケージに含まれています) を実行します。</para>
   <para>SSSD キャッシュを削除したい場合は、下記を実行します:</para>
  <screen>&prompt.sudo;<command>systemctl stop sssd</command>
&prompt.sudo;<command>rm -f /var/lib/sss/db/*</command>
&prompt.sudo;<command>systemctl start sssd</command></screen>
  </sect2>
 </sect1>
</chapter>
