<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<!-- 2014-08-14, tiwai:
     pm-utils was dropped.  The corresponding commands are with systemd,
     "systemctl suspend", "systemctl hibernate", etc.  There are hooks in
     /usr/lib/systemd/systemd-sleep, see systemd-suspend.service(8) man
     page.

     ke:
     I removed pm-utils references.  Maybe, we should mention the
     systemd backgorund in the future.
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-power-mgmt">
 <title>電源管理</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para arch="zseries" os="sles">本章で説明している機能やハードウエアは、 &zseries; ではご利用いただけません。そのため、これらのプラットフォームでは関係のない内容となります。</para>
 <para>電源管理は特にラップトップ型のコンピュータで重要な機能ですが、それ以外のシステムでも様々な利便性を提供します。現在の全てのコンピュータ (ラップトップやデスクトップ、サーバなど) には ACPI (Advanced Configuration and Power Interface) と呼ばれる電源管理機能が用意されていますが、このような技術にはハードウエア側の対応だけでなく、 BIOS 側のソフトウエアにも対応が必要となります。また、騒音を減らす目的から、 CPU の動作周波数を変更することもできます。</para>
 <sect1 xml:id="sec-power-mgmt-save">
  <title>電源管理機能</title>

  <para>電源管理機能はラップトップ型のコンピュータのみで使用する機能ではなく、デスクトップシステムでも重要な仕組みです。 ACPI の主な機能と用途は下記の通りです:</para>

  <variablelist>
   <varlistentry>
    <term>スタンバイ</term>
    <listitem>
     <para>対応していません。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>サスペンド (メモリに対して)</term>
    <listitem>
     <para>このモードは、システムの状態を全てメモリ内に書き込んだあと、メモリ以外のシステムをスリープ状態に移行させます。この状態では、コンピュータの消費電力を大幅に削減することができます。このような仕組みにより、システムやアプリケーションを起動し直したりすることなく、利用をすぐに再開できるようになります。この機能は、 ACPI の <literal>S3</literal> と呼ばれる状態 (ステート) に対応しています。 <!-- The support of this state is still under development and therefore largely depends on the hardware. --></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ハイバネーション (ディスクに対するサスペンド)</term>
    <listitem>
     <para>この操作モードでは、システムの状態を全てハードディスク内に書き込んで、システムの電源を落とします。必要なデータを全て書き込む必要があることから、少なくとも搭載されているメモリ量と同じサイズのスワップパーティションが必要となります。この状態からの復帰には、 30 秒から 90 秒程度の時間が必要となります。復帰処理が終了することで、サスペンド前の状態に戻ることになります。ハードウエアの製造元によっては、 IBM Thinkpad の RediSafe のように、ハイバネーションとサスペンドを組み合わせた動作モードを提供しているものもあります。この機能は、 ACPI の <literal>S4</literal> と呼ばれる状態 (ステート) に対応しています。 Linux では、ディスクへのサスペンドは ACPI ではなく、独自のカーネルルーチンを利用して行ないます。</para>
      &note.mkswap.swap;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>バッテリー監視</term>
    <listitem>
     <para>ACPI ではバッテリーの充電状態などの情報をチェックしています。また、特定の充電量を下回った場合に、何らかの動作を行なうこともできます。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>自動電源切断</term>
    <listitem>
     <para>シャットダウンの実施後、コンピュータの電源が自動的に切られます。これは特に、バッテリーがほとんど空になってしまったような場合に重要な機能となります。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>プロセッサの速度制御</term>
    <listitem>
     <para>CPU という観点では、省電力は下記の 3 種類の方法で実現することができます: 周波数と電圧の制御 (<phrase role="productname">PowerNow!</phrase> や <phrase role="productname">Speedstep</phrase> として知られた制御方法です) のほか、動作速度の調整やスリープモード (C-ステート) への移行などがあります。コンピュータの動作モードによっては、複数の方式を組み合わせて使用することもできます。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-power-mgmt-acpi">
  <title>Advanced Configuration and Power Interface (ACPI)</title>

  <para>ACPI はオペレーティングシステムから個別のハードウエアコンポーネントを設定し、制御することを目指して設計された仕組みです。 ACPI は Power Management Plug and Play (PnP) と Advanced Power Management (APM) の両方の後継となる仕組みで、バッテリーや AC アダプタ、温度や冷却ファン、システムイベント (たとえば <quote>ラップトップの蓋を閉じた</quote> イベントや、 <quote>バッテリーの残り容量が少ない</quote> などのイベント) を配信することができます。</para>

  <para>BIOS 側では、個別のコンポーネントやハードウエアへのアクセス方法に関する情報を含むテーブルを提供しています。オペレーティングシステムはこの情報を利用して、割り込みの割り当てやコンポーネントの有効化／無効化などの処理を行ないます。オペレーティングシステム側では、 BIOS 内に保存されたコマンドを実行することから、その機能は BIOS 側の実装に依存することになります。 ACPI が検出して読み込むテーブルは、 journald 内に記録されます。ジャーナルログメッセージを表示する方法について、詳しくは <xref linkend="cha-journalctl"/> をお読みください。また、 ACPI で発生する様々な問題の解決方法については、 <xref linkend="sec-power-mgmt-acpi-trouble"/> をお読みください。</para>

  <sect2 xml:id="sec-power-mgmt-acpi-powernow">
   <title>CPU の性能制御</title>
   <para>CPU は下記の 3 種類の方法で、消費電力を削減することができます:</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>周波数と電圧の制御</para>
    </listitem>
    <listitem>
     <para>クロック周波数の低減 (T-ステート)</para>
    </listitem>
    <listitem>
     <para>プロセッサに対するスリープモードへの移行 (C-ステート)</para>
    </listitem>
   </itemizedlist>
   <para>コンピュータの動作モードによっては、これらの方式を組み合わせて使用することもできます。省電力を実現することによって、システムの発熱を抑えたり、冷却ファンの動作を抑えたりすることにも繋がります。</para>
   <para>周波数の制御と動作速度の調整は、プロセッサが処理中の間にのみ影響があります。なぜなら、プロセッサの処理が空いた状態になると、最も省電力の C-ステートが適用されるためです。 CPU の処理が多い場合は、周波数制御を行なうことで省電力を実現することができます。ただし、多くの場合、プロセッサに対しては間欠的な負荷になりますので、より低い周波数に設定するため、カーネルが提供するオンデマンドガバナーを利用して動的に制御するのが最適です。</para>
   <para>動作速度の調整は最後の手段として使われるべきものです。たとえば、システムの負荷が高いにもかかわらず、バッテリーの動作時間を延ばしたい場合などがそれにあたります。動作速度を低くしすぎると、システムによってはうまく動作しなくなってしまうこともあるほか、それ以上速度に低くできなくなってしまう場合もあります。</para>
   <para>より詳しい情報については、 <xref linkend="cha-tuning-power"/> をお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-power-mgmt-acpi-trouble">
   <title>トラブルシューティング</title>
   <para>ACPI 関連で発生する問題には、 2 種類のものがあります。 1 つには、カーネル内の ACPI 関連のコードにバグがあって、開発時に見つけられなかったものがあります。この場合は、ダウンロードで解決方法を提供することができます。もう 1 つは BIOS によって引き起こされる問題があります。こちらのほうがより頻繁に発生することになりますが、 ACPI 仕様から外れた実装が BIOS 内に存在していて、これによってオペレーティングシステム側をエラーに導いてしまうものがあります。なお、 ACPI 実装内に深刻なエラーがあるハードウエアコンポーネントが検出されると、 Linux カーネル側でこれらに対する ACPI を使用しないようにするため、ブラックリストを記録することもあります。</para>
   <para>ACPI に関して何らかの問題が見つかった場合、最初に試すべきことは BIOS の更新です。コンピュータが起動しないような場合は、下記のいずれかのパラメータを指定することで、問題を回避できる場合もあります:</para>
   <variablelist>
    <varlistentry>
     <term>pci=noacpi</term>
     <listitem>
      <para>PCI デバイスを設定する際に ACPI を使用しないようにします。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>acpi=ht</term>
     <listitem>
      <para>シンプルなリソース設定のみを実施します。その他の目的では ACPI を使用しないようにします。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>acpi=off</term>
     <listitem>
      <para>ACPI を無効化します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <warning>
    <title>ACPI を使用しない場合の起動時の問題について</title>
    <para>新しいマシン (特に SMP システムや AMD64 システム) では、ハードウエアを正しく設定するために ACPI が必要となります。これらのシステムで ACPI を無効化すると、逆に問題を引き起こす場合があります。</para>
   </warning>
   <para>また、マシンに対して USB や FireWire のデバイスが接続されていると、ハードウエアの認識がうまくいかなくなる場合があります。マシンが起動しない場合は、不要なハードウエアを全て取り外してから、起動をお試しください。</para>
   <para>まずはシステムの起動後に <command>dmesg -T</command> <option>| grep -2i acpi</option> を実行して、システムの起動メッセージをご確認ください。最も重要なテーブルである ACPI テーブル (DSDT ( <emphasis>Differentiated System Description Table</emphasis> )) を処理する際にエラーが発生した場合は、改善版に置き換えることもできます。この場合は、 BIOS 側に書かれている DSDT が無視されます。詳しい流れについては、 <xref linkend="sec-power-mgmt-faq"/> をお読みください。</para>
   <para>カーネル側を設定することで、 ACPI デバッグメッセージを出力するように設定することもできます。 ACPI デバッグ機能をコンパイルしてインストールすることで、詳細な情報が出力されるようになります。</para>
   <para>BIOS やハードウエア関連の問題に直面した場合は、まず製造元に連絡してみることをお勧めします。 Linux の場合は十分な支援を受けられない場合もありますが、問題の解決は彼らが行なうべきものであるためです。 Linux を利用するユーザがそれなりの規模になれば、製造元も問題に真剣に対応することになるでしょう。</para>
   <sect3 xml:id="sec-power-mgmt-acpi-trouble-info">
    <title>さらなる情報</title>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para><link xlink:href="http://tldp.org/HOWTO/ACPI-HOWTO/"/> (詳細な ACPI HOWTO のほか、 DSDT パッチなども含まれています)</para>
     </listitem>
     <listitem>
      <para><link xlink:href="http://www.acpi.info"/> (Advanced Configuration &amp; Power Interface Specification に関する情報)</para>
     </listitem>
<!--taroth 2014-06-06: website no longer availabe, did quick research but could not find
      any new one/location, therefore commenting
      <listitem>
      <para>
       <ulink url="http://www.lesswatts.org/projects/acpi/"/> (the
       ACPI4Linux project at Sourceforge)
      </para>
     </listitem>
     -->
     <listitem>
      <para><link xlink:href="http://acpi.sourceforge.net/dsdt/index.php"/> (Bruno Ducrot 氏による DSDT への修正)</para>
     </listitem>
    </itemizedlist>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-power-mgmt-silenthd">
  <title>ハードディスクの休止</title>

  <para>Linux では、ハードディスクが不要であればスリープ状態に設定することができるほか、より経済的で静かなモードで動作させることもできます。新しいラップトップ機であれば、ハードディスクが不要になると自動的に省電力モードに移行しますので、手作業でハードディスクの電源を切る必要はありません。ただし、最大限に省電力を実現したい場合は、 <command>hdparm</command> コマンドを利用していくつかの方式を試してみることをお勧めします。</para>

  <para>このコマンドは、様々なハードディスク設定を変更することができます。 <option>-y</option> オプションを指定すると、ハードディスクを即時にスタンバイモードに移行するよう指示します。 <option>-Y</option> を指定すると、スリープモードに移行することもできます。また、 <command>hdparm</command> <option>-S</option> <replaceable>X</replaceable> のように実行すると、指定した時間だけハードディスクへのアクセスが行なわれなくなると、自動的に回転を停止させることもできます。ここでの <replaceable>X</replaceable> は、それぞれ下記のような意味があります: <literal>0</literal> を指定すると、回転を停止せずに動作し続ける意味になります。 <literal>1</literal> から <literal>240</literal> までの値を指定すると、その値に 5 [秒] を掛けた時間、 <literal>241</literal> から <literal>251</literal> までの値を指定すると、 30 分から 30 分の 11 倍までの時間、アクセスがなくなると回転を停止する意味になります。</para>

  <para>ハードディスク内部の省電力オプションは、 <literal>-B</literal> オプションで制御することができます。 <literal>0</literal> (最も省電力) から <literal>255</literal>  (最大の性能) までの値で指定します。設定の硬貨はハードディスクによって異なりますので、一概に測定できるものではないことに注意してください。また、ハードディスクの騒音を抑えたい場合は、 <literal>-M</literal> オプションを指定してください。こちらは <literal>128</literal> (最も静音) から <literal>254</literal> (最も高速) までの値を指定することができます。</para>

  <para>環境によっては、ハードディスクをスリープ状態に置くのは容易ではないことがあります。 Linux では様々なプロセスがハードディスクを利用するため、頻繁にスリープが解除されることになります。そのため、 Linux がハードディスクにデータを書き込む頻度について、あらかじめ知っておく必要があります。まず全てのデータはメモリ内にバッファされますが、このバッファは <systemitem class="daemon">pdflush</systemitem> デーモンが監視しています。特定の時間期限もしくは一定量を超過すると、バッファの内容をハードディスクに書き込みます。バッファサイズは動的に設定され、搭載されているメモリ量とシステムの負荷に依存して決まります。既定では pdflush は 5 秒おきにバッファを確認して、必要であると判断すればハードディスクにデータを書き込みます。このほかにも、下記の設定値が提供されています:</para>

  <variablelist>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_writeback_centisecs</filename></term>
    <listitem>
     <para>pdflush スレッドを起動するまでの時間遅延を設定します (100 分の 1 秒単位) 。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_expire_centisecs</filename></term>
    <listitem>
     <para>書き込むべきページが書き込まれるまでの最大の時間間隔を設定します。既定値は <literal>3000</literal> で、 30 秒の意味になります。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_background_ratio</filename></term>
    <listitem>
     <para>pdflush が書き込みを行なうまでの、書き込むべきページの最大割合を指定します。既定値は <literal>5</literal> % です。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_ratio</filename></term>
    <listitem>
     <para>搭載されているメモリ量に対して、この割合以上に書き込むべきページが溜まった場合、書き込みを続ける前にそれらのページを書き込むよう強制する割合を指定します。</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <warning>
   <title>データの整合性への影響について</title>
   <para><systemitem class="daemon">pdflush</systemitem> デーモンの設定を変更すると、データの整合性が失われてしまう可能性があります。</para>
  </warning>

  <para>これらのプロセスとは別に、 <systemitem class="filesystem">Btrfs</systemitem> , <systemitem class="filesystem">Ext3</systemitem> , <systemitem class="filesystem">Ext4</systemitem> などのジャーナル機能のあるファイルシステムでは、 <systemitem class="daemon">pdflush</systemitem> とは別にメタデータを個別に書き込みます。これによってハードディスクの回転停止が阻害されることがあります。 <phrase os="sled;osuse">この問題を回避するため、モバイルデバイス向けの特別なカーネル拡張が開発されています。この拡張を利用するには、 <systemitem class="resource">laptop-mode-tools</systemitem> パッケージをインストールのうえ、<filename>/usr/src/linux/Documentation/laptops/laptop-mode.txt</filename> を読んで設定を行なってください。</phrase></para>

  <para>もう 1 つの重要な要素として、動作中のプログラムの存在にもご注意ください。たとえば有用なエディタでは現在編集中のファイルを定期的に書き込むような処理が存在していたりして、定期的にハードディスクを回転させるようにし向けることができます。ただし、このような機能を無効化してしまうと、何らかの不具合が発生した場合に編集中のファイルを取り戻せなくなってしまうリスクが発生します。</para>

  <para>また、これに関連して、メールデーモンである postfix には <systemitem>POSTFIX_LAPTOP</systemitem> という変数が用意されています。この値を <literal>yes</literal> にすると、ハードディスクへのアクセスを大きく減らすことができます。</para>

  <para os="sled;osuse"><!-- does not seem to exist on SLES --> &productname; では、これらの技術は <systemitem>laptop-mode-tools</systemitem> が制御します。</para>
 </sect1>
 <sect1 xml:id="sec-power-mgmt-faq">
  <title>トラブルシューティング</title>

  <para>全てのエラーメッセージや警告などは、システムのジャーナル内に保存されます。ジャーナルへの問い合わせは <command>journalctl</command> コマンドを使用します (詳しくは <xref linkend="cha-journalctl"/> をお読みください) 。下記の章では、最もよく発生する問題を説明しています。</para>

  <sect2 xml:id="sec-power-mgmt-faq-cpufreq">
   <title>CPU の周波数制御が動作しない</title>
   <para>まずはカーネルのソースコードを参照して、お使いのプロセッサに対応しているかどうかをご確認ください。また、 CPU の周波数を制御するには、特別なカーネルモジュールやモジュールオプションが必要となる場合もあります。 <systemitem class="resource">kernel-source</systemitem> パッケージをインストールしていれば、 <filename>/usr/src/linux/Documentation/cpu-freq/*</filename> 内に情報が用意されています。</para>
  </sect2>
 </sect1>
</chapter>
