<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en" xml:id="sec.new.bash.accperm">
 <title>ファイルのアクセス権</title>

 <para>Linux では、ファイルやディレクトリ、プロセスなどは、作成したユーザに属するものとして扱われます。このルールには例外もありますが、例外については <xref linkend="cha.security.acls"/> をお読みください。また、ファイルやディレクトリに対して割り当てられているグループは、そのユーザがそれらを作成する際、ユーザが属していたプライマリグループに設定されます。</para>

 <para><remark>taroth 060522: what does determine the access permissions which are set when creating a new file? -toms: umask - taroth 061014: no time left, explain or refer to in next revision </remark> 新しいファイルやディレクトリを作成する際、それらに対するアクセス権 (パーミッション) は、事前に定義された方式で設定されます。ファイルやディレクトリの所有者である場合、それらに対するアクセス権を変更することができます。たとえば他のユーザから機密情報を読み取られたくない場合、同じグループ内のユーザや他のユーザに対して、読み込みや書き込み、実行などの制限を設定することができます。なお、 &rootuser; については例外で、このユーザであればファイルやフォルダの所有権を自由に変更することができます。</para>

 <sect2 xml:id="sec.new.bash.accperm.ugo">
  <title>ユーザ／グループ／その他に対するパーミッション</title>
  <para>Linux システムでは、ファイルやフォルダなどに対して 3 種類のパーミッションセット (読み込み, 書き込み, 実行) が定義されています。また、ユーザの種類にも 3 種類 (所有者, グループ, その他のユーザ) が用意されています。</para>
  <para>下記の例はシェル内で <command>ls</command> <option>-l</option> を実行した場合の例です。このコマンドは、ディレクトリの内容を一覧表示するコマンドで、ディレクトリ内の詳細な情報も表示することができるものです。</para>
  <example xml:id="ex.new.users.accperm.ugo">
   <title>ファイルやフォルダに対するアクセス権</title>
<screen>-rw-r----- 1 &exampleuser_plain; &examplegroup_plain;      0  6月 23 16:08 checklist.txt
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  53279  6月 21 13:16 gnome_quick.xml
-rw-rw---- 1 &exampleuser_plain; &examplegroup_plain;      0  6月 23 16:08 index.htm
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  70733  6月 21 09:35 kde-start.xml
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  47896  6月 21 09:46 kde_quick.xml
drwxr-xr-x 2 &exampleuser_plain; &examplegroup_plain;     48  6月 23 16:09 local
-rwxr--r-- 1 &exampleuser_plain; &examplegroup_plain; 624398  6月 23 15:43 tux.sh</screen>
  </example>
  <para>左から 3 列目に書かれているのが所有者で、この例では &exampleuser; になっています。左から 4 列目がグループで、この例では &exampleuser; がプライマリグループとして属する &examplegroup; になっています。アクセス権は一番左の列に書かれていますので、ここに注目します。上記の例で、 <filename>kde-start.xml</filename> のアクセス権をご覧ください:</para>
  <informaltable>
   <tgroup cols="4">
    <tbody>
     <row>
      <entry>
       <para>種類</para>
      </entry>
      <entry>
       <para>ユーザに対するパーミッション</para>
      </entry>
      <entry>
       <para>グループに対するパーミッション</para>
      </entry>
      <entry>
       <para>その他に対するパーミッション</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><literal>-</literal></para>
      </entry>
      <entry>
       <para><literal>rw-</literal></para>
      </entry>
      <entry>
       <para><literal>r--</literal></para>
      </entry>
      <entry>
       <para><literal>r--</literal></para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  <para>一番左の列は、最初の 1 文字に続いて、 3 つのブロックに分割できる 9 文字が書かれています。最初の 1 文字はオブジェクトの種類を示すもので、この場合はハイフン ( <literal>&ndash;</literal> ) であるため、 <filename>kde-start.xml</filename> がファイルであることがわかります。ここの部分が <literal>d</literal> になっている場合は、そのオブジェクトがディレクトリであることになります。たとえば <xref linkend="ex.new.users.accperm.ugo"/> の <filename>local</filename> ディレクトリがそれにあたります。</para>
  <para>続く 3 つのブロックは、それぞれ左から所有者、グループ、その他に対するアクセス権を示しています。各ブロックはそれぞれ左から読み込み許可 ( <literal>r</literal> ) 、書き込み許可 ( <literal>w</literal> ) 、実行許可 ( <literal>x</literal> ) の 3 文字が書かれます。アクセス権がない場合は、 <literal>-</literal> が書かれます。たとえば <filename>kde-start.xml</filename> の例では、所有者は読み込みと書き込みの両方ができるものの、実行の許可が無いことになります。また、 &examplegroup; グループとその他のユーザには読み込みの許可のみで、書き込みと実行の許可が無いことになります。</para>
 </sect2>

 <sect2 xml:id="sec.new.bash.accperm.impact">
  <title>ファイルとディレクトリ</title>
  <para>アクセス許可の効果は、そのオブジェクトの種類 (ファイル／ディレクトリ) によって少し異なります。下記の表では、アクセス許可の効果を示しています:</para>
  <table xml:id="tab.new.users.accperm.impact">
   <title>ファイルとディレクトリに対するアクセス許可</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>
       <para>アクセス権</para>
      </entry>
      <entry>
       <para>ファイルの場合</para>
      </entry>
      <entry>
       <para>ディレクトリの場合</para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>読み込み (r)</para>
      </entry>
      <entry>
       <para>対象のユーザは、ファイルを開いて読み込むことができるようになります。</para>
      </entry>
      <entry>
       <para>対象のユーザは、ディレクトリの内容を閲覧できるようになります。このアクセス許可がないと、ユーザは <command>ls</command> <option>-l</option> などでディレクトリの内容の一覧を取得することができません。しかしながら、ディレクトリに対して実行のアクセス権が設定されていて、ファイル名が分かっていれば、そのファイルにアクセスすることはできてしまいます。</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>書き込み (w)</para>
      </entry>
      <entry>
       <para>対象のユーザは、ファイルの内容を変更することができます。データの追加や削除だけでなく、ファイルの内容を消去することもできます。ただし、ファイルの存在するディレクトリにおいて、対象のユーザが書き込み権限を持たない限り、ファイル自身を削除することはできません。</para>
      </entry>
      <entry>
       <para>対象のユーザは、そのディレクトリ内にファイルを作成したり、名前変更や削除を行なったりすることができるようになります。</para>
      </entry>
     </row>
     <row>
      <entry>
       <para>実行 (x)</para>
      </entry>
      <entry>
       <para>対象のユーザはファイルを実行することができます。このアクセス許可は、プログラムやシェルスクリプトなどの場合に意味のあるものであって、テキストファイルなどでは意味がありません。また、プログラムを直接実行する場合は、対象のユーザが読み込み権限を持たなくても、実行することはできてしまいます。ただし、シェルスクリプトや Perl スクリプトなどのプログラムの場合は、読み込んで解釈する必要があることから、同時に読み込み権限も必要となります。</para>
      </entry>
      <entry>
       <para>対象のユーザは、そのディレクトリに移動してファイルを実行することができます。そのディレクトリに対して読み込み権限がない場合、ディレクトリ内のファイルの一覧を取得することはできませんが、ファイル名が分かっていればアクセスすることは可能です。</para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>なお、特定のファイルに対するアクセス権は、ファイル自身に対するアクセス権と、ディレクトリに対するアクセス権の <emphasis>両方</emphasis> が必要となることに注意してください。</para>
 </sect2>

 <sect2 xml:id="sec.new.bash.perm">
  <title>ファイルのアクセス権の変更</title>
  <para>Linux では、ファイルやディレクトリ、プロセスなどは、作成したユーザに属するものとして扱われます。また、ファイルやディレクトリに対して割り当てられているグループは、そのユーザがそれらを作成する際、ユーザが属していたプライマリグループに設定されます。また、新しいファイルやディレクトリを作成する際、それらに対するアクセス権 (パーミッション) は、事前に定義された方式で設定されます。詳しくは <xref linkend="sec.new.bash.accperm"/> をお読みください。</para>
  <para>ファイルやディレクトリの所有者 (および &rootuser;) であれば、それらのアクセス権を変更することができます。</para>
  <para>ファイルやディレクトリに対するアクセス権を変更するには、 <command>chmod</command> コマンドを利用して、下記のパラメータを指定します:</para>
  <itemizedlist>
   <listitem>
    <para>設定するアクセス許可の対象</para>
   </listitem>
   <listitem>
    <para>追加もしくは削除するアクセス権の種類</para>
   </listitem>
   <listitem>
    <para>アクセス権を変更するファイルやディレクトリ (スペースで区切って指定します)</para>
   </listitem>
  </itemizedlist>
  <para>アクセス許可の対象としては、下記のいずれかを指定します: ファイルの所有者 (<literal>u</literal> (user)), ファイルを所有するグループ (<literal>g</literal> (group)), その他のユーザ (<literal>o</literal> (others)) 。また、アクセス権の種類としては、読み込み (r) 、書き込み (w) 、実行 (x) のいずれか (複数も可) を指定します。</para>
  <para>&rootuser; であれば、ファイルの所有者を変更することもできます。 <command>chown</command> (CHange OWNer; 所有者の変更) コマンドを利用すると、異なるユーザに所有者を変更することができます。</para>
  <sect3 xml:id="sec.new.bash.perm.ex">
   <title>アクセス権と所有者の変更例</title>
   <para>下記はシェル内での <command>ls</command> <option>-l</option> の実行例です。</para>
   <example xml:id="ex.new.bash.accperm.ugo">
    <title>ファイルやフォルダに対するアクセス権</title>
<screen>-rw-r----- 1 &exampleuser_plain; &examplegroup_plain;      0  6月 23 16:08 checklist.txt
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  53279  6月 21 13:16 gnome_quick.xml
-rw-rw---- 1 &exampleuser_plain; &examplegroup_plain;      0  6月 23 16:08 index.htm
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  70733  6月 21 09:35 kde-start.xml
-rw-r--r-- 1 &exampleuser_plain; &examplegroup_plain;  47896  6月 21 09:46 kde_quick.xml
drwxr-xr-x 2 &exampleuser_plain; &examplegroup_plain;     48  6月 23 16:09 local
-r-xr-xr-x 1 &exampleuser_plain; &examplegroup_plain; 624398  6月 23 15:43 &exampleuser_plain;.jpg</screen>
   </example>
   <para>上記の例では、 &exampleuser; がファイル <filename>kde-start.xml</filename> を所有していて、読み込みと書き込みができるものの、実行することはできなくなっています。また、 &examplegroup; グループは読み込みだけができるものの、書き込みと実行はできなくなっています。その他のユーザは &examplegroup; グループと同じで、読み込みだけができるようになっています。</para>
   <procedure>
    <title>アクセス権の変更</title>
    <para>自分自身が &exampleuser; である場合、ファイルのアクセス権を変更するには、下記のようにして行ないます:</para>
    <step>
     <para><filename>kde-start.xml</filename> ファイルに対して、 &examplegroup; グループからの書き込みを許可するには、下記のように実行します:</para>
<screen>&prompt.user;chmod g+w kde-start.xml</screen>
    </step>
    <step>
     <para><filename>kde-start.xml</filename> ファイルに対して、 &examplegroup; グループとその他のユーザからの書き込みを許可するには、下記のように実行します:</para>
<screen>&prompt.user;chmod go+w kde-start.xml</screen>
    </step>
    <step>
     <para>全てのユーザに対して、書き込み権限を削除するには、下記のように実行します:</para>
<screen>&prompt.user;chmod -w kde-start.xml</screen>
     <para>何もユーザの種類を指定しない場合は、全てのユーザに対して適用されます。具体的には、ファイルの所有者と所有グループ、そしてその他のユーザそれぞれに適用されます。ただし、所有者である &exampleuser; の場合は、書き込み許可を与えることなく書き込むことができます。</para>
    </step>
    <step>
     <para>ディレクトリ <filename>local</filename> に対して、 &examplegroup; とその他のユーザからの移動を禁止するには、下記のように実行します:</para>
<screen>&prompt.user;chmod go-x local</screen>
    </step>
    <step>
     <para><filename>kde_quick.xml</filename> と <filename>gnome_quick.xml</filename> の 2 つのファイルに対して書き込み許可を与えたい場合は、下記のように実行します:</para>
<screen>&prompt.user;chmod o+w  kde_quick.xml gnome_quick.xml</screen>
    </step>
   </procedure>
   <procedure>
    <title>所有者の変更</title>
    <para>自分自身が &exampleuser; である場合で、 <filename>kde_quick.xml</filename> ファイルの所有者を他のユーザ &exampleuserII; に切り替えるには、下記のように実行します:</para>
    <step>
     <para><command>su</command> などを利用して、 &rootuser; になります。</para>
    </step>
    <step>
     <para>下記のように実行します:</para>
<screen>&prompt.root;chown &exampleuserII; kde_quick.xml</screen>
    </step>
    <step>
     <para>下記を実行すると結果を確認することができます:</para>
<screen>&prompt.user;ls -l kde_quick.xml</screen>
     <para>下記のように出力されるはずです:</para>
<screen>-rw-r--r-- 1 wilber users  47896  6月 21 09:46 kde_quick.xml</screen>
    </step>
    <step>
     <para>所有者の変更が終わったら、忘れずに元の一般ユーザに戻っておいてください。</para>
    </step>
   </procedure>
  </sect3>
 </sect2>
</sect1>
