<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<!--
 * openVPN Howto
   http://openvpn.net/index.php/documentation/howto.html

 * OpenVPN Tutorial (German)
   https://web.archive.org/web/20120424181239/http://www.pronix.de/pronix-935.html

 * OpenVPN-Wiki (German)
   http://wiki.openvpn.eu/index.php/Hauptseite

 * http://qam.suse.de/testreports/SUSE:Maintenance:219:46941/recommended-reading.txt

 Contact:
 - Marius Tomaschewski <mt@suse.de>

-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-vpnserver">
<!--
    Source (2003):
    http://openvpn.net/papers/BLUG-talk/index.html

   What is VPN?
   - VPN = Virtual Private Network
   - VPNs allow networks at different locations to be securely
     connected, using a public network as the transport layer.
   - VPNs use cryptography to provide protections
     against eavesdropping and active attacks
   - VPNs are most commonly used today for telecommuting and
     linking branch offices via secure WANs.

   VPN and Networking:
   - The two major techniques for VPN networking
     are routing and bridging

   OpenVPN and Keyring
   - Static: pre-shared keys are provided for ease of configuration
   - Full RSA PKI: through the OpenSSL library. Is provided for full
     certificate and private key operation.

  -->
<!--
  Replace ++ with double minus.

  ## See thread on openSUSE mailinglist about VPN,
  ## subject "openVPN", date 2008-12-18

  Generate static key:

  $ openvpn ++genkey ++secret static.key

  OpenVPN normally uses UDP port 1194, but that can be changed and even use TCP.

  #######
  It can be started by (root) command or in Yast System Services.  I use
  the command method.  On my firewall, I use the following commands in
  /etc/init.d/boot.local:

#start vpn tunnel
modprobe tun
/usr/local/bin/vpn_up &

That script points to /usr/local/bin/vpn_up:
#! /bin/bash
cd /etc/openvpn
/usr/sbin/openvpn ++config static-office.conf

  -->
<!-- ====================================================================== -->
 <title>VPN サーバの設定</title>
 <info>
      <abstract>
        <para>今やインターネット接続は手頃でどこでも利用できるようになっています。しかしながら、全ての接続で機密が守られる保証はありません。この場合、仮想プライベートネットワーク (Virtual Private Network; VPN) を構築することで、インターネットや Wi-Fi などの機密が守られないネットワークを経由して、社内や家庭内などにアクセスすることができるようになります。この VPN には様々な実装があり、様々な目的で使用されます。本章では <link xlink:href="https://openvpn.net">OpenVPN</link> と呼ばれる、インターネットと社内／家庭内を結ぶ実装について説明しています。 <!-- There are diverse other implementations, for example ipsec (implemented by the strongswan, and raccon [ipsec-tools package] packages). Also SSH contains support for VPNs. --></para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
        </dm:bugtracker>
	<dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>

<!--
    Source (2003):
    http://openvpn.net/papers/BLUG-talk/index.html

   What is VPN?
   - VPN = Virtual Private Network
   - VPNs allow networks at different locations to be securely
     connected, using a public network as the transport layer.
   - VPNs use cryptography to provide protections
     against eavesdropping and active attacks
   - VPNs are most commonly used today for telecommuting and
     linking branch offices via secure WANs.

   VPN and Networking:
   - The two major techniques for VPN networking
     are routing and bridging

   OpenVPN and Keyring
   - Static: pre-shared keys are provided for ease of configuration
   - Full RSA PKI: through the OpenSSL library. Is provided for full
     certificate and private key operation.

  -->
<!--
  Replace ++ with double minus.

  ## See thread on openSUSE mailinglist about VPN,
  ## subject "openVPN", date 2008-12-18

  Generate static key:

  $ openvpn ++genkey ++secret static.key

  OpenVPN normally uses UDP port 1194, but that can be changed and even use TCP.

  #######
  It can be started by (root) command or in Yast System Services.  I use
  the command method.  On my firewall, I use the following commands in
  /etc/init.d/boot.local:

#start vpn tunnel
modprobe tun
/usr/local/bin/vpn_up &

That script points to /usr/local/bin/vpn_up:
#! /bin/bash
cd /etc/openvpn
/usr/sbin/openvpn ++config static-office.conf

  -->
 <sect1 xml:id="sec-security-vpn-overview">
  <title>考え方の概要</title>

  <para>本章では VPN に関するいくつかの用語を使用していますので、まずはその説明から行います。</para>

  <sect2 xml:id="sec-security-vpn-terminology">
   <title>用語</title>
   <variablelist>
    <varlistentry>
     <term>エンドポイント</term>
     <listitem>
      <para>VPN の接続の <quote>両端</quote> を表す用語です。 VPN サーバとクライアントの両方を意味しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>TAP デバイス</term>
     <listitem>
      <para>TAP デバイスはイーサネットデバイス (イーサネットフレームなどの OSI モデルにおけるレイヤ 2) を疑似するデバイスです。 TAP デバイスはブリッジ型の VPN 接続で使用され、イーサネットのフレームを転送します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>TUN デバイス</term>
     <listitem>
      <para>TUN デバイスは IP ネットワーク (IP パケットなどの OSI モデルにおけるレイヤ 3) を疑似するデバイスです。 TUN デバイスはルーティング型の VPN で使用され、 IP のフレームを転送します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>トンネル</term>
     <listitem>
      <para>2 つのエンドポイントを結ぶ通信経路を意味する用語です。もっと技術的な観点で言うと、クライアント側のデバイスとサーバ側のデバイスの接続を意味します。通常、トンネルは暗号化されていますが、暗号化されていなくてもトンネルと表現します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-security-vpn-scenarios">
   <title>VPN のシナリオ</title>
   <para>VPN で接続を行うと、 IP パケットは <emphasis>トンネル</emphasis> を介して伝送されるようになります。トンネルは <emphasis>TUN</emphasis> または <emphasis>TAP</emphasis> のいずれかを使用します。 TUN/TAP は仮想ネットワークに対応するカーネルドライバで、イーサネットや IP フレーム (パケット) の伝送を行います。</para>
   <para>ユーザスペース側のプログラム (OpenVPN) では、 TUN/TAP のデバイスに接続して、オペレーティングシステムとの間でパケットの送受信を行います。</para>
   <para>一般的に言うと、 VPN には様々なソリューションが存在し、構成も様々なものが存在しています。本章では OpenVPN パッケージを利用した場合の説明を行っています。 OpenVPN では、他の VPN ソフトウエアとは異なり、下記に示す 2 種類のモードに対応しています:</para>
<!--
    More information:
    * http://openvpn.net/index.php/documentation/howto.html#vpntype
    * http://openvpn.net/index.php/documentation/faq.html#bridge1
    * http://www.shorewall.net/OPENVPN.html
    -->
   <variablelist>
    <varlistentry>
     <term>ルーティング型 VPN</term>
     <listitem>
      <para>ルーティング型 VPN は構築が簡単な方式です。ブリッジ型 VPN よりも効率的で大規模環境にも向きます。それに加えて、さらに効率を高めるために MTU (最大伝送単位; Maximum Transfer Unit) を調整することもできます。しかしながら、ゲートウエイ側で Samba サーバを動作させない限り、 NetBIOS ブロードキャストが動作しないという仕様上の問題があり、異種混合型の環境では都合が悪いことがあります。なお、 IPv6 を必要とする場合は、双方のエンドポイントで TUN デバイスに対して明示的に設定を行う必要があります。この方式の構成は <xref linkend="fig-vpn-scenario-routed-1"/> のようになります。</para>
      <remark>
       FIXME: This para is a bit involved and terse for an introduction. Maybe
       it could be fixed to provide certain more context around what the Samba and
       NetBIOS thing means. - sknorr, 2016-07-21
      </remark>
      <figure xml:id="fig-vpn-scenario-routed-1">
       <title>ルーティング型 VPN</title>
       <mediaobject>
        <imageobject role="html">
         <imagedata fileref="vpn_routed1.png" width="80%"/>
        </imageobject>
        <imageobject role="fo">
         <imagedata fileref="vpn_routed1.png" width="50%"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ブリッジ型 VPN</term>
     <listitem>
      <para>ブリッジ型は少し複雑な方式です。 Samba や WINS サーバなどの設定を行うことなく、 VPN を介して Windows のファイル共有を参照できるようにしたい場合は、お勧めの方式です。ブリッジ型の VPN は IP プロトコル以外 (IPX など) を環境でも利用できるほか、ブロードキャストパケットを使用する様々なアプリケーションでも利用することができます。しかしながら、ルーティング型 VPN と比べると効率は悪く、大規模環境にも向きません。この方式の構成を下記の図に示します。</para>
<!--<example>
            <title>Scenario 2</title>
          <screen>     [ machine2 (client) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..
              |                                           .
            [tap0] (192.168.100.2/24)                     .
              |                                           .
              | [VPN bridge]                       {for example INTERNET}
              |                                           .
            [tap0] (192.168.100.1/24)                     .
              |                                           .
     [ machine1 (server) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..</screen>
          </example>-->
      <figure xml:id="fig-vpn-scenario-briged-1">
       <title>ブリッジ型 VPN - シナリオ 1</title>
       <mediaobject>
        <imageobject role="html">
         <imagedata fileref="vpn_bridged1.png" width="80%"/>
        </imageobject>
        <imageobject role="fo">
         <imagedata fileref="vpn_bridged1.png" width="50%"/>
        </imageobject>
       </mediaobject>
      </figure>
<!--<example>
            <title>Scenario 2</title>
          <screen>     [ machine2 (client) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..
          |     |                                           .
       [eth1] [tap0] (192.168.100.2/24)                     .
          |     |                                           .
          |     \.-.-.-.-.                                .
       { LAN 2}           \                               .
                           | [VPN bridge]            {for example INTERNET}
        { LAN 1 }          |                              .
           |               |                              .
          eth1  tap0-.-.-./                               .
             \  /                                         .
            [br0] (192.168.100.1/24)                      .
              |                                           .
     [ machine1 (server) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..</screen>

          </example>-->
      <figure xml:id="fig-vpn-scenario-briged-2">
       <title>ブリッジ型 VPN - シナリオ 2</title>
       <mediaobject>
        <imageobject role="html">
         <imagedata fileref="vpn_bridged2.png" width="80%"/>
        </imageobject>
        <imageobject role="fo">
         <imagedata fileref="vpn_bridged2.png" width="50%"/>
        </imageobject>
       </mediaobject>
      </figure>
<!--<example>
            <title>Scenario 3</title>
          <screen>     [ machine2 (client) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..
              |                                           .
            [br0] (192.168.100.2/24)                      .
            /   \                                         .
          eth1  tap0-.-.-.                                .
           |              \                               .
        { LAN (part2) }    |                              .
                           | [VPN bridge]            {for example INTERNET}
        { LAN (part1) }    |                              .
           |               |                              .
          eth1  tap0-.-.-./                               .
             \  /                                         .
            [br0] (192.168.100.1/24)                      .
              |                                           .
     [ machine1 (server) ]&#x2d;&#x2d;eth0&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;&#x2d;>[switch/router]->..</screen>
          </example>-->
      <figure xml:id="fig-vpn-scenario-briged-3">
       <title>ブリッジ型 VPN - シナリオ 3</title>
       <mediaobject>
        <imageobject role="html">
         <imagedata fileref="vpn_bridged3.png" width="80%"/>
        </imageobject>
        <imageobject role="fo">
         <imagedata fileref="vpn_bridged3.png" width="50%"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>ブリッジ型とルーティング型の大きな違いは、ルーティング型の場合は IP ブロードキャストを通すことができないのに対して、ブリッジ型の場合はそれができるという点があります。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-security-vpn-simplest">
  <title>シンプルな構成の構築例</title>

  <para>下記の例では、一対一の VPN トンネルを作成します。この例を読むことで、クライアントとサーバとの間で、どのようにして VPN トンネルが作られるのかを知ることができます。なお、 VPN サーバ側のアドレスは <systemitem class="ipaddress"><replaceable>サーバの_IP</replaceable></systemitem> 、 VPN クライアント側のアドレスは <systemitem class="ipaddress"><replaceable>クライアントの_IP</replaceable></systemitem> として、いずれもプライベート IP アドレスを使用しているものとします。なお、実際の構築にあたっては、他の IP アドレスと重複しないものを選んでください。</para>

  <warning>
   <title>セキュリティ面の考慮について</title>
   <para>下記のシナリオは VPN 技術の仕組みを説明するために用意しているものであります。 VPN 技術はその仕組み上、社外からのアクセスを受け入れる仕組みであるため、誤った設定を行ってしまうと、家庭内や社内のネットワークを危険にさらすことにも繋がります。実際に使用するにあたっては、よくご確認のうえ実施してください。</para>
   </warning>

  <tip>
   <title>設定ファイルの名前について</title>
   <para>OpenVPN の設定ファイルを簡単に扱うことができるようにするため、下記のような構成をお勧めします:</para>
   <itemizedlist>
    <listitem>
     <para>OpenVPN の設定ファイルは、 <filename>/etc/openvpn</filename> 以下に配置してください。</para>
    </listitem>
    <listitem>
     <para>1 つのファイル内に全ての設定を書き込む場合は、 <filename><replaceable>MY_CONFIGURATION</replaceable>.conf</filename> のようなファイルを作成して書き込んでください。</para>
    </listitem>
    <listitem>
     <para>複数のファイルを利用して 1 つの構成を作り上げる場合は、 <filename>/etc/openvpn/<replaceable>MY_CONFIGURATION</replaceable></filename> のようなサブディレクトリを作成して、その中にファイルを置いてください。</para>
    </listitem>
   </itemizedlist>
  </tip>

  <sect2 xml:id="sec-security-vpn-simplest-vpnserv">
   <title>VPN サーバの設定</title>
   <para>VPN サーバの構築は下記のようにして行います:</para>
   <procedure xml:id="pro-security-vpn-simplest-vpnserv">
    <title>VPN サーバの設定</title>
    <step>
     <para>VPN サーバとして動作させたいマシンに、 <systemitem class="resource">openvpn</systemitem> パッケージをインストールします。</para>
    </step>
    <step>
     <para>シェルを開いて &rootuser; になり、下記のように実行して VPN の機密鍵を作成します:</para>
<screen>&prompt.root;openvpn --genkey secret /etc/openvpn/secret.key</screen>
    </step>
    <step>
     <para>機密鍵をクライアントにコピーします:</para>
<screen>&prompt.root;scp /etc/openvpn/secret.key root@<replaceable>クライアントの_IP</replaceable>:/etc/openvpn/</screen>
    </step>
    <step>
     <para>下記のような内容で、サーバ側の設定ファイル <filename>/etc/openvpn/server.conf</filename> を作成します:</para>
<!-- FIXME: Document what ifconfig does here. Also, document the tun device
below better. - sknorr, 2016-07-22 -->
<screen>dev tun
ifconfig <replaceable>サーバの_IP</replaceable> <replaceable>クライアントの_IP</replaceable>
secret secret.key</screen>
    </step>
    <step>
     <para><filename>/etc/sysconfig/network/ifcfg-tun0</filename> というファイル名のファイル (TUN デバイスの設定) を作成して、下記の内容を記述します:</para>
<screen>STARTMODE='manual'
BOOTPROTO='static'
TUNNEL='tun'
TUNNEL_SET_OWNER='nobody'
TUNNEL_SET_GROUP='nobody'
LINK_REQUIRED=no
PRE_UP_SCRIPT='systemd:openvpn@server'
PRE_DOWN_SCRIPT='systemd:openvpn@service'</screen>
     <para>途中、 <literal>openvpn@server</literal> という記述がありますが、これは OpenVPN 内のサーバ設定 <filename>/etc/openvpn/server.conf</filename> を参照するための設定です。詳しい情報については、 <filename>/usr/share/doc/packages/openvpn/README.SUSE</filename> をお読みください。</para>
    </step>
    <step xml:id="st-security-vpn-simplest-vpnserv-yast">
     <para>ファイアウオールを使用している場合は、 &yast; を開いて <menuchoice><guimenu>セキュリティとユーザ</guimenu><guimenu>ファイアウオール</guimenu><guimenu>サービス</guimenu></menuchoice> を選び、 UDP ポート 1194 を開くように設定します。</para>
    </step>
    <step>
     <para>TUN デバイスを起動して、 OpenVPN のサービスを開始します:</para>
     <screen>&prompt.sudo;<command>wicked ifup tun0</command></screen>
     <para>下記のように表示されれば成功です:</para>
     <screen>tun0            up</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-security-vpn-simplest-vpnclient">
   <title>VPN クライアントの設定</title>
   <para>VPN クライアントの構築は下記のようにして行います:</para>
   <procedure>
    <title>VPN クライアントの設定</title>
    <step>
     <para>VPN クライアントとして動作させたいマシンに、 <systemitem class="resource">openvpn</systemitem> パッケージをインストールします。</para>
    </step>
    <step>
     <para>下記のような内容で、クライアント側の設定ファイル <filename>/etc/openvpn/client.conf</filename> を作成します:</para>
<screen>remote <replaceable>サーバのグローバル_IP_もしくはドメイン名</replaceable>
dev tun
ifconfig <replaceable>クライアントの_IP</replaceable> <replaceable>サーバの_IP</replaceable>
secret secret.key</screen>
     <para><!-- NOTE: not IP_OF_CLIENT, but DOMAIN_OR_PUBLIC_IP_OF_SERVER? --> <replaceable>サーバのグローバル_IP_もしくはドメイン名</replaceable> の箇所には、サーバのグローバル IP アドレス、もしくはドメイン名とホスト名を入力します。</para>
    </step>
    <step>
     <para><filename>/etc/sysconfig/network/ifcfg-tun0</filename> というファイル名のファイル (TUN デバイスの設定) を作成して、下記の内容を記述します:</para>
<screen>STARTMODE='manual'
BOOTPROTO='static'
TUNNEL='tun'
TUNNEL_SET_OWNER='nobody'
TUNNEL_SET_GROUP='nobody'
LINK_REQUIRED=no
PRE_UP_SCRIPT='systemd:openvpn@client'
PRE_DOWN_SCRIPT='systemd:openvpn@client'</screen>
    </step>
    <step>
     <para>ファイアウオールを使用している場合は、 <xref linkend="pro-security-vpn-simplest-vpnserv"/> 内の <xref linkend="st-security-vpn-simplest-vpnserv-yast"/> で説明している手順に従って、 UDP ポート 1194 を開くように設定します。</para>
    </step>
    <step>
     <para>TUN デバイスを起動して、 OpenVPN のサービスを開始します:</para>
     <screen>&prompt.sudo;<command>wicked ifup tun0</command></screen>
     <para>下記のように表示されれば成功です:</para>
     <screen>tun0            up</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-security-vpn-simplest-use">
   <title>シンプルな構成のテスト</title>
   <para>OpenVPN のサービスを正常に動作させることができたら、あとは下記のコマンドを利用して TUN デバイスが正常に動作しているかどうかを確認します:</para>
<screen>ip addr show tun0</screen>
   <para>VPN の接続を確認するには、クライアントとサーバの両方で <command>ping</command> コマンドを使用し、互いに通信ができていることを確認します。サーバからクライアントに ping を行いたい場合は、下記のように実行します:</para>
<screen>ping -I tun0 <replaceable>サーバの_IP</replaceable></screen>
   <para>逆に、クライアントからサーバに対して ping を行いたい場合は、下記のように実行します:</para>
<screen>ping -I tun0 <replaceable>クライアントの_IP</replaceable></screen>
  </sect2>
 </sect1>
<!-- ====================================================================== -->
 <sect1 xml:id="sec-security-vpn-ca">
  <title>証明機関を利用した VPN サーバの構築</title>

  <para><xref linkend="sec-security-vpn-simplest" xrefstyle="select:label number"/> で説明している構築例はテストには便利であるものの、本格的な使用に耐えるものではありません。本章では、同時に複数の接続を受け入れることのできる VPN サーバを構築する方法について、説明を行っています。これは公開鍵基盤 (PKI; Public Key Infrastructure) を利用して実現するもので、それぞれのサーバやクライアントに別々の鍵対 (公開鍵と機密鍵) を発行して、それを証明機関 (CA; Certificate Authority) で署名してもらうことによって、正当性を設定する方法です。</para>

  <para>この構成で設定を行うには、下記の手順を実施する必要があります:</para>

  <procedure>
   <step>
    <para><xref linkend="sec-security-vpn-certs"/></para>
   </step>
   <step>
    <para><xref linkend="sec-security-vpn-config-server"/></para>
   </step>
   <step>
    <para><xref linkend="sec-security-vpn-config-clients"/></para>
   </step>
  </procedure>

  <sect2 xml:id="sec-security-vpn-certs">
   <title>証明機関の作成</title>
   <para>VPN の接続を確立する前に、クライアントはサーバが提示する証明書を認証し、サーバはクライアントが提示する証明書を認証しなければなりません。これを <emphasis>相互認証</emphasis> と呼びます。</para>
   <para>証明書の作成を行うための直接的な機能は、 &productname; には用意されていません。下記の手順では CA の証明書とサーバの証明書、そしてクライアントの証明書を他のシステムで作成したものとして説明しています。</para>
   <para>サーバの証明書は PEM 形式で保存し、それに対応する機密鍵も暗号化することなく PEM 形式で保存しておきます。証明書は VPN サーバ内の <filename>/etc/openvpn/server_crt.pem</filename> に、 (暗号化していない) 機密鍵は <filename>/etc/openvpn/server_key.pem</filename> にそれぞれ置いておきます。</para>
   <para>クライアント証明書は PKCS12 (推奨) 形式、もしくは PEM 形式で保存しておきます。 PKCS12 形式の場合は、その中に CA の証明書を含めておく必要があるほか、ファイルは <filename>/etc/openvpn/<replaceable>クライアント名</replaceable>.p12</filename> というファイル名で保存しておきます。 PEM 形式で、 CA の証明書が含まれているものの場合は、 <filename>/etc/openvpn/<replaceable>クライアント名</replaceable>.pem</filename> というファイル名で保存しておきます。 PEM 形式でクライアント証明書 ( <filename>*.ca</filename> ) とクライアント鍵 ( <filename>*.key</filename> ) 、そして CA の証明書 ( <filename>*.ca</filename> ) をそれぞれ別々に分割している場合は、それぞれのクライアント内の <filename>/etc/openvpn/</filename> ディレクトリにそれらを保存します。</para>
   <para>また、 CA の証明書は、サーバおよびクライアント内の <filename>/etc/openvpn/vpn_ca.pem</filename> にコピーしておく必要があります。</para>

   <important>
    <title>クライアント証明書を分割した場合について</title>
    <para>クライアント証明書と対応する機密鍵、そして CA の証明書をそれぞれ別々のファイルに分割している場合は、それらのファイル名を各クライアント内の OpenVPN の設定ファイルで指定する必要があります (詳しくは <xref linkend="ex-vpn-serv-config"/> をお読みください) 。</para>
   </important>
  </sect2>
<!--
    To create such certificates, use the
    &yast; CA module. See <xref linkend="cha-security-yast-ca"/> for more
    details.

   </para>
   <para>
    To create a VPN root, server, and client CA, proceed as follows:
   </para>
   <procedure xml:id="pro-security-vpn-serverca">
    <title>Creating a VPN server certificate</title>
    <step xml:id="st-security-vpn-serverca-vpnrootca">
     <para>
      Prepare a common VPN Certificate Authority (CA):
     </para>
     <substeps performance="required">
      <step>
       <para>
        Start the &yast; CA module.
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>Create Root CA</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Enter a <guimenu>CA Name</guimenu> and a <guimenu>Common
        Name</guimenu>, for example <literal>VPN-Server-CA</literal>.
       </para>
      </step>
      <step>
       <para>
        Fill out the other boxes like e-mail addresses, organization, etc.
        and proceed with <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Enter your password twice and proceed with <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Review the summary. &yast; displays the current settings for
        confirmation. Click <guimenu>Create</guimenu>. The root CA is
        created and displayed in the overview.
       </para>
      </step>
     </substeps>
    </step>
    <step xml:id="st-security-vpn-serverca-vpnserverca">
     <para>
      Create a VPN server certificate:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Select the root CA you created in
        <xref linkend="st-security-vpn-serverca-vpnrootca"/> and click
        <guimenu>Enter CA</guimenu>.
       </para>
      </step>
      <step>
       <para>
        When prompted, enter the <guimenu>CA Password</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Click the <guimenu>Certificate</guimenu> tab and click <menuchoice>
        <guimenu>Add</guimenu> <guimenu>Add Server Certificate</guimenu>
        </menuchoice>.
       </para>
      </step>
      <step>
       <para>
        Specify a <guimenu>Common Name</guimenu>, for example,
        <systemitem class="fqdomainname">openvpn.example.com</systemitem>
        and proceed with <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Specify your password and confirm it. Then click <guimenu>Advanced
        options</guimenu>.
       </para>
       <para>
        Switch to the <menuchoice> <guimenu>Advanced Settings</guimenu>
        <guimenu>Key Usage</guimenu> </menuchoice> list and check one of the
        following sets:
       </para>
       <itemizedlist mark="bullet" spacing="normal">
        <listitem>
         <para>
          <option>digitalSignature</option> and
          <option>keyEncipherment</option>, or,
         </para>
        </listitem>
        <listitem>
         <para>
          <option>digitalSignature</option> and
          <option>keyAgreement</option>
         </para>
        </listitem>
       </itemizedlist>
       <para>
        Switch to the <menuchoice> <guimenu>Advanced Settings</guimenu>
        <guimenu>extendedKeyUsage</guimenu> </menuchoice> and type
        <option>serverAuth</option> for a server certificate.
       </para>
       <important>
        <title>Avoiding man-in-the-middle attacks</title>
        <para>
         If you are using the method <option>remote-cert-tls server</option> or
         <option>remote-cert-tls client</option> to verify certificates, limit
         the number of times a key can be used. This mitigates
         man-in-the-middle attacks.
        </para>
        <para>
         For more information, see
         <link xlink:href="https://openvpn.net/index.php/open-source/documentation/howto.html#mitm"/>.
        </para>
       </important>
       <para>
        Finish with <guimenu>Ok</guimenu> and proceed with
        <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Review the summary. &yast; displays the current settings for
        confirmation. Click <guimenu>Create</guimenu>. When the VPN server
        certificate is created, it is displayed in the
        <guimenu>Certificates</guimenu> tab.
       </para>
      </step>
     </substeps>
    </step>
    <step xml:id="st-security-vpn-serverca-vpnclientca">
     <para>
      Create VPN client certificates:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Make sure you are on the <guimenu>Certificates</guimenu> tab.
       </para>
      </step>
      <step>
       <para>
        Click <menuchoice> <guimenu>Add</guimenu> <guimenu>Add Client
        Certificate</guimenu> </menuchoice>.
       </para>
      </step>
      <step>
       <para>
        Enter a <guimenu>Common Name</guimenu>, for example,
        <systemitem class="fqdomainname">client1.example.com</systemitem>.
       </para>
      </step>
      <step>
       <para>
        Enter the e-mail addresses for your client, for example,
        <systemitem class="resource">user1@client1.example.com</systemitem>,
        and click <guimenu>Add</guimenu>. Proceed with
        <guimenu>Next</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Enter your password twice and click <guimenu>Advanced
        options</guimenu>.
       </para>
       <para> Switch to <menuchoice>
                  <guimenu>Advanced Settings</guimenu>
                  <guimenu>Key Usage</guimenu>
                </menuchoice> list and check one of the following flags: </para>
       <itemizedlist mark="bullet" spacing="normal">
        <listitem>
         <para>
          <option>digitalSignature</option> or,
         </para>
        </listitem>
        <listitem>
         <para>
          <option>keyAgreement</option> or,
         </para>
        </listitem>
        <listitem>
         <para>
          <option>digitalSignature</option> and
          <option>keyAgreement</option>.
         </para>
        </listitem>
       </itemizedlist>
       <para>
        Switch to the <menuchoice> <guimenu>Advanced Settings</guimenu>
        <guimenu>extendedKeyUsage</guimenu> </menuchoice> and type
        <option>clientAuth</option> for a server certificate.
       </para>
      </step>
      <step>
       <para>
        Review the summary. &yast; displays the current settings for
        confirmation. Click <guimenu>Create</guimenu>. The VPN client
        certificate is created and is displayed in the
        <guimenu>Certificates</guimenu> tab.
       </para>
      </step>
      <step>
       <para>
        If you need certificates for more clients, repeat
        <xref linkend="st-security-vpn-serverca-vpnclientca"/>.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
   <para>
    After you have successfully finished
    <xref linkend="pro-security-vpn-serverca"/> you have a VPN root CA, a
    VPN server CA, and one or more VPN client CAs. To finish the task,
    proceed with the following procedure:
   </para>
   <procedure>
    <step>
     <para>
      Choose the <guimenu>Certificates</guimenu> tab.
     </para>
    </step>
    <step>
     <para>
      Export the VPN server certificate in two formats: PEM and unencrypted
      key in PEM.
     </para>
     <substeps performance="required">
      <step xml:id="st-security-vpn-selectserverca">
       <para>
        Select your VPN server certificate
        (<systemitem class="fqdomainname">openvpn.example.com</systemitem>
        in our example) and choose <menuchoice> <guimenu>Export</guimenu>
        <guimenu>Export to File</guimenu> </menuchoice>.
       </para>
      </step>
      <step xml:id="st-security-vpn-selectsaveca">
       <para>
        Select <guimenu>Only the Certificate in PEM Format</guimenu>, enter
        your VPN server certificate password and save the file to
        <filename>/etc/openvpn/server_crt.pem</filename>.
       </para>
      </step>
      <step>
       <para>
        Repeat <xref linkend="st-security-vpn-selectserverca"/> and
        <xref linkend="st-security-vpn-selectsaveca"/>, but choose the
        format <guimenu>Only the Key Unencrypted in PEM Format</guimenu>.
        Save the file to <filename>/etc/openvpn/server_key.pem</filename>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Export the VPN client certificates and choose an export format, PEM or
      PKCS12 (preferred). For each client:
     </para>
     <substeps performance="required">
      <step xml:id="st-security-vpn-selectclient-ca">
       <para>
        Select your VPN client certificate
        (<systemitem class="fqdomainname">client1.example.com</systemitem>
        in our example) and choose <menuchoice> <guimenu>Export</guimenu>
        <guimenu>Export to File</guimenu> </menuchoice>.
       </para>
      </step>
      <step>
       <para> Select <guimenu>Like PKCS12 and Include the CA
                  Chain</guimenu>, enter your VPN client certificate key
                password and provide a PKCS12 password. Enter a
                  <guimenu>File Name</guimenu>, click
                  <guimenu>Browse</guimenu> and save the file to
                  <filename>/etc/openvpn/client1.p12</filename>. </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Copy the files to your client (in our example,
      <systemitem class="fqdomainname">client1.example.com</systemitem>).
     </para>
    </step>
    <step>
     <para>
      Export the VPN CA (in our example
      <systemitem>VPN-Server-CA</systemitem>):
     </para>
     <substeps performance="required">
      <step>
       <para>
        Switch to the <guimenu>Description</guimenu> tab.
       </para>
      </step>
      <step>
       <para>
        Select <menuchoice> <guimenu>Advanced</guimenu> <guimenu>Export to
        File</guimenu> </menuchoice>.
       </para>
      </step>
      <step>
       <para>
        Mark <guimenu>Only the Certificate in PEM Format</guimenu> and save
        the file to <filename>/etc/openvpn/vpn_ca.pem</filename>.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
   <para>
    If desired, the client PKCS12 file can be converted into the PEM format
    using this command:
   </para>
<screen>openssl pkcs12 -in client1.p12 -out client1.pem</screen>
   <para>
    Enter your client password to create the
    <filename>client1.pem</filename> file. The PEM file contains the client
    certificate, client key, and the CA certificate. You can split this
    combined file using a text editor and create three separate files. The
    file names can be used for the <option>ca</option>,
    <option>cert</option>, and <option>key</option> options in the OpenVPN
    configuration file (see <xref linkend="ex-vpn-serv-config"/>).
   </para>
  </sect2>
-->

  <sect2 xml:id="sec-security-vpn-config-server">
   <title>VPN サーバの設定</title>
   <para>サーバ側の設定に際しては、 <filename>/usr/share/doc/packages/openvpn/sample-config-files/server.conf</filename> にある雛形を <filename>/etc/openvpn/</filename> にコピーしたあと、必要に応じて修正を行うことをお勧めします。</para>
   <example xml:id="ex-vpn-serv-config">
    <title>VPN サーバの設定ファイル</title>
<screen># /etc/openvpn/server.conf
port 1194 <co xml:id="co-vpn-servconfig-port"/>
proto udp <co xml:id="co-vpn-servconfig-proto"/>
dev tun0 <co xml:id="co-vpn-servconfig-dev"/>

# Security <co xml:id="co-vpn-servconfig-security"/>
<!--taroth 2014-12-19: fix for https://bugzilla.suse.com/show_bug.cgi?id=910132 -->
ca    vpn_ca.pem
cert  server_crt.pem
key   server_key.pem

# ns-cert-type server <!-- Check with mt -->
remote-cert-tls client <co xml:id="co-vpn-servconfig-remote-cert-tls"/>
dh   server/dh2048.pem <co xml:id="co-vpn-servconfig-dh"/>

server &subnetI;.0 255.255.255.0 <co xml:id="co-vpn-servconfig-server"/>
ifconfig-pool-persist /var/run/openvpn/ipp.txt <co xml:id="co-vpn-servconfig-pool"/>

# Privileges <co xml:id="co-vpn-serverconf-privilege"/>
user nobody
group nobody

# Other configuration <co xml:id="co-vpn-servconfig-misc"/>
keepalive 10 120
comp-lzo
persist-key
persist-tun
# status      /var/log/openvpn-status.tun0.log <co xml:id="co-vpn-serverconfig-status"/>
# log-append  /var/log/openvpn-server.log <co xml:id="co-vpn-serverconfig-log-append"/>
verb 4</screen>
   </example>
   <calloutlist>
    <callout arearefs="co-vpn-servconfig-port">
     <para>OpenVPN が待ち受ける TCP/UDP ポートを指定します。なお、ここで指定するポートは、ファイアウオール側で開いておく必要があります。ファイアウオールに関する詳細は <xref linkend="cha-security-firewall"/> をお読みください。標準ではポート 1194 を使用しますが、今回はそのまま使用するものとします。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-proto">
     <para>プロトコルを指定します。 UDP もしくは TCP のいずれかを指定します。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-dev">
     <para>デバイスの種類を TUN もしくは TAP から選択して指定します。これらの違いについての詳細は <xref linkend="sec-security-vpn-terminology"/> をお読みください。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-security">
     <para>これ以降の行には、証明機関の証明書 ( <literal>ca</literal> ) と <!-- NOTE: not "root CA key" but "server cert"? --> サーバ証明書 ( <literal>cert</literal> ) 、そしてサーバ証明書の鍵 ( <literal>key</literal> ) をそれぞれ指定しています。これらのファイルは <xref linkend="sec-security-vpn-certs"/> で生成したものです。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-remote-cert-tls">
     <para>相手側に要求する証明書の種類を指定しています。この場合、 RFC3280 TLS rules で規定されている key usage と extended key usage (鍵の用途) について、明確な署名のある証明書のみを受け入れる設定です。 <!-- 鍵の用途を指定した証明書の作成について、詳しくは <xref linkend="pro-security-vpn-serverca"/> をお読みください。 --></para>
    </callout>
<!--taroth 2014-12-19: fix for https://bugzilla.suse.com/show_bug.cgi?id=910148-->
    <callout arearefs="co-vpn-servconfig-dh">
     <para>Diffie-Hellman パラメータを指定します。ここで指定するファイルは、下記のコマンドで生成することができます:</para>
<screen>openssl dhparam -out /etc/openvpn/dh2048.pem 2048</screen>
<!--taroth 2014-12-19: check with fschilling, I get the following:
      /etc/openvpn/dh2048.pem: No such file or directory - taroth
      2014-12-19: update: solved after fixing
      https://bugzilla.suse.com/show_bug.cgi?id=909494 ;)-->
    </callout>
    <callout arearefs="co-vpn-servconfig-server">
     <para>VPN サブネットを指定します。サーバ自身は <systemitem class="ipaddress">&subnetI;.1</systemitem> を使用します。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-pool">
     <para>クライアントと仮想 IP アドレスの対応付けに関する情報を、指定したファイルに記録する指定です。これは特に、サーバ側を再起動するような場合、再起動後もクライアントに対して同じアドレスを割り当てたい場合に有用です。</para>
    </callout>
    <callout arearefs="co-vpn-serverconf-privilege">
     <para>セキュリティ上の理由から、 OpenVPN に対する権限は制限しておくことをお勧めします。権限を制限するには、ユーザおよびグループを <systemitem>nobody</systemitem> に設定します。</para>
    </callout>
    <callout arearefs="co-vpn-servconfig-misc">
     <para>その他の設定です。詳しくは <filename>/usr/share/doc/packages/openvpn/sample-config-files</filename> にあるサンプル設定ファイル内のコメント (英語) をお読みください。</para>
    </callout>
    <callout arearefs="co-vpn-serverconfig-status">
     <para>このオプションを有効にすることで、指定したファイルに状態に関する概要情報と統計情報 ( <quote>operational status dump</quote> ) を出力するようになります。既定では有効化されていません。</para>
     <para>全ての出力は、 <command>journalctl</command> で表示することのできるシステムジャーナルに書き込まれます。複数の設定ファイルが存在するような場合 (たとえば一方は自宅用、他方は仕事用など) は、ファイル名にデバイス名を入れておくことをお勧めします。これにより、不用意にファイルが上書きされてしまうことが無くなります。この例の場合は <option>dev</option> に書かれているとおり、 <systemitem>tun0</systemitem> がデバイス名となります。詳しくは <xref linkend="co-vpn-servconfig-dev"/> をお読みください。</para>
    </callout>
    <callout arearefs="co-vpn-serverconfig-log-append">
     <para>既定では、ログメッセージは syslog に出力されます。この動作を変更したい場合は、この行にあるコメント文字 (#) を削除してください。コメント文字を削除すると、全てのメッセージが <filename>/var/log/openvpn-server.log</filename> に書き込まれるようになります。なお、 logrotate サービスの設定を忘れずに実施するようにしてください。詳しくは <command>man 8 logrotate</command> をお読みください。</para>
    </callout>
   </calloutlist>
   <para>設定作業が終わったら、 OpenVPN サーバのログが <filename>/var/log/openvpn.log</filename> に出力されます。初回の起動時には、下記のように出力されるはずです:</para>
<screen>... Initialization Sequence Completed</screen>
   <para>上記のようなメッセージが表示されない場合は、ログファイルをよく読んで、設定ファイル内のどの箇所が誤っているのかをご確認ください。</para>
  </sect2>

  <sect2 xml:id="sec-security-vpn-config-clients">
   <title>VPN クライアントの設定</title>
   <para>クライアント側の設定に際しては、 <filename>/usr/share/doc/packages/openvpn/sample-config-files/client.conf</filename> にある雛形を <filename>/etc/openvpn/</filename> にコピーしたあと、必要に応じて修正を行うことをお勧めします。</para>
   <example>
    <title>VPN クライアントの設定ファイル</title>
<screen># /etc/openvpn/client.conf
client <co xml:id="co-vpn-clientconf-client"/>
dev tun <co xml:id="co-vpn-clientconf-dev"/>
proto udp <co xml:id="co-vpn-clientconf-proto"/>
remote <replaceable>IP_OR_HOST_NAME</replaceable> 1194 <co xml:id="co-vpn-clientconf-remote"/>
resolv-retry infinite
nobind

remote-cert-tls server <co xml:id="co-vpn-clientconf-remote-cert-tls"/>

# Privileges <co xml:id="co-vpn-clientconf-privileges"/>
user nobody
group nobody

# Try to preserve some state across restarts.
persist-key
persist-tun

# Security <co xml:id="co-vpn-clientconf-security"/>
pkcs12 client1.p12

comp-lzo <co xml:id="co-vpn-clientconf-compr"/></screen>
    <calloutlist>
     <callout arearefs="co-vpn-clientconf-client">
      <para>このマシンをクライアントとして動作させる宣言です。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-dev">
      <para>ネットワークデバイスを指定します。クライアントとサーバの両方で、同じデバイスを使用しなければなりません。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-proto">
      <para>プロトコルを指定します。こちらもクライアントとサーバの両方で、同じプロトコルを設定しなければなりません。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-remote-cert-tls">
      <para>こちらはクライアント向けのセキュリティオプションで、接続先のコンピュータが目的のサーバかどうかを確認することができます。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-remote">
      <para><replaceable>IP_OR_HOST_NAME</replaceable> の箇所を OpenVPN サーバのホスト名もしくは IP アドレスに置き換えてください。ホスト名もしくは IP アドレスの後ろには、サーバ側のポート番号を指定します。複数の VPN サーバのうちのいずれかを選択して接続したい場合は、 <literal>remote</literal> を複数行指定してもかまいません。この場合、複数の VPN サーバを負荷分散として使用することになります。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-privileges">
      <para>セキュリティ上の理由から、 OpenVPN に対する権限は制限しておくことをお勧めします。権限を制限するには、ユーザおよびグループを <systemitem>nobody</systemitem> に設定します。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-security">
      <para>クライアント向けに発行された鍵を指定します。セキュリティ上の理由から、クライアントごとに異なる鍵を使用してください。</para>
     </callout>
     <callout arearefs="co-vpn-clientconf-compr">
      <para>圧縮を有効化しています。このパラメータは、サーバ側でも有効化しておかなければなりません。</para>
     </callout>
    </calloutlist>
   </example>
  </sect2>
 </sect1>

 <!-- <sect1 xml:id="sec-security-vpn-nameserver">
  <title>Changing name servers in VPN</title>

  <para>
   To change name servers before or during a VPN session, use
   <command>netconfig</command>.
  </para>

  <remark>
   It might behoove us to have a version of the below admonition that also works
   for openSUSE. - sknorr, 2016-07-21
  </remark>
  <important>
   <title>Differences between &sled; and &sls;</title>
   <para>
    The following procedure only works on &sls; where configurations are based
    on an <quote>ifup</quote> script). On &sled;, use &nm; and the
    <systemitem>NetworkManager-openvpn</systemitem> plug-in.
   </para>
  </important>

  <para>
   Use the following procedure to change a name server:
  </para>

  <remark>
   Most of the procedure below was commented away (in a way that did not
   make sense). What needs updating here? - sknorr, 2016-07-21
  </remark>
  <procedure xml:id="pro-security-vpn-nameserver">
   <title>Changing name servers</title>
   <step>
    <para>
     Copy the following scripts and make them executable:
    </para>
<screen>&prompt.root;<command>cp /usr/share/doc/packages/openvpn/sample-scripts/client-netconfig.* \
  /etc/openvpn/</command>
&prompt.root;<command>chmod +x /etc/openvpn/client-netconfig.*</command></screen>
   </step>
   <step>
    <para>
     Add the following lines to
     <filename>/etc/openvpn/client.conf</filename>:
    </para>
<screen>pull dhcp-options
up   /etc/openvpn/client-netconfig.up
down /etc/openvpn/client-netconfig.down</screen>
   </step>
   <step>
    <para>
     Open a shell and log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Create an <quote>ifup</quote> script called
     <filename>/etc/openvpn/client-netconfig.up</filename> with the
     following content:
    </para>
<screen>/sbin/netconfig modify -i "${1}" -s openvpn &lt;&lt;EOT
DNSSEARCH='${domain}'
DNSSERVERS='${dns[*]}'
EOT</screen>
   </step>
   <step>
    <para>
     Start your VPN connection with <command>sudo systemctl start
     openvpn@client</command>.
    </para>
   </step>
   <step>
    <para>
     Create an <quote>ifdown</quote> script called
     <filename>/etc/openvpn/client-netconfig.down</filename> with the
     following content:
    </para>
<screen>/sbin/netconfig remove -i "${1}" -s openvpn</screen>
   </step>
   <step>
    <para>
     Run <command>netconfig</command> and replace the line
     <envar>DNSSERVERS</envar> with your respective entry:
    </para>
<screen>netconfig modify -i tun0 -s openvpn &lt;&lt;EOT
DNSSEARCH='example.org'
DNSSERVERS='&dnsip;'
EOT</screen>
    <para>
     To check whether the entry has been successfully inserted into
     <filename>/var/run/netconfig/resolv.conf</filename>, execute:
    </para>
<screen>&prompt.user;<command>grep -v '^# /var/run/netconfig/resolv.conf'</command>
search example.org example.com
nameserver ...
nameserver ...
nameserver &dnsip;</screen>
   </step>
   <step>
    <para>
     To remove the DNS entry, execute:
    </para>
<screen>&prompt.root;<command>netconfig remove -i tun0 -s openvpn</command></screen>
   </step>
  </procedure>

  <para>
   To specify a ranking of fallback services, use the variable
   <envar>NETCONFIG_DNS_RANKING</envar> in
   <filename>/etc/sysconfig/network/config</filename>. The default value is
   <literal>auto</literal> which resolves to:
  </para>

<screen>+/vpn/ -/auto/ +strongswan +openswan +racoon -avahi</screen>

  <para>
   Preferred service names have the prefix <literal>+</literal>, fallback
   services have the prefix <literal>-</literal>.
  </para>
  <para>
   For more information, see the man page of
   <command>netconfig</command> (<command>man 8 netconfig</command>).
  </para>
 </sect1>-->

 <xi:include href="security_vpnserver_yast.xml" os="sles;osuse"/>

 <sect1 xml:id="sec-security-vpn-moreinfo">
  <title>さらなる情報</title>

  <para os="sled;osuse">&nm; を利用した VPN 接続の設定方法については、 <xref linkend="sec-nm-vpn"/> をお読みください。</para>

  <para>VPN に関する情報をご希望の場合は、下記をご覧ください:</para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para><link xlink:href="https://openvpn.net"/> : OpenVPN の Web ページ</para>
   </listitem>
   <listitem>
    <para><command>man</command> <option>openvpn</option></para>
   </listitem>
   <listitem>
    <para><filename>/usr/share/doc/packages/openvpn/sample-config-files/</filename> : 様々な用途に対応した設定ファイルの例があります。</para>
   </listitem>
   <listitem>
    <para><filename>/usr/src/linux/Documentation/networking/tuntap.txt</filename> : TUN/TAP インターフェイスの説明 (英語) です。なお、このファイルは <systemitem class="resource">kernel-source</systemitem> パッケージ内に含まれています。</para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
