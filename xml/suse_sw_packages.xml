<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.suse.packages">
 <title>特殊なソフトウエアパッケージについての情報</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para><systemitem class="resource">bash</systemitem> , <systemitem class="resource">cron</systemitem> , <systemitem class="resource">logrotate</systemitem> , <systemitem class="resource">locate</systemitem> , <systemitem class="resource">ulimit</systemitem> , <systemitem class="resource">free</systemitem> などのプログラムは、システム管理者だけでなく多くのユーザにとって重要なソフトウエアです。これらのコマンドについての情報はマニュアルページや info ページにわかりやすい説明がありますが、常に利用できるとは限らないものです。また、 GNU Emacs は非常に柔軟性の高いテキストエディタです。</para>

 <sect2 xml:id="sec.suse.packages.bash">
  <title><systemitem class="resource">bash</systemitem> パッケージと <filename>/etc/profile</filename> の関係</title>
  <para>bash は既定のシステムシェルです。ログインシェルとして使用した場合、いくつかの設定ファイルを読み込みます。設定ファイルの処理順序は、下記のとおりです:</para>
  <orderedlist spacing="normal">
   <listitem>
    <para><filename>/etc/profile</filename></para>
   </listitem>
   <listitem>
    <para><filename>~/.profile</filename></para>
   </listitem>
   <listitem>
    <para><filename>/etc/bash.bashrc</filename></para>
   </listitem>
   <listitem>
    <para><filename>~/.bashrc</filename></para>
   </listitem>
  </orderedlist>
  <para>独自の設定を行ないたい場合は、 <filename>~/.profile</filename> ファイル、もしくは <filename>~/.bashrc</filename> ファイルに設定を記述してください。また、これらのファイルを正しく処理するようにするため、 <filename>/etc/skel/.profile</filename> もしくは <filename>/etc/skel/.bashrc</filename> にある雛形のファイルをホームディレクトリにコピーしてお使いください。また、システムを更新した後は、 <filename>/etc/skel</filename> からファイルをコピーし直して、必要な変更を加えることをお勧めします。以前の設定を失わないようにするため、具体的には下記のように実行してください:</para>
<screen>&prompt.user;mv ~/.bashrc ~/.bashrc.old
&prompt.user;cp /etc/skel/.bashrc ~/.bashrc
&prompt.user;mv ~/.profile ~/.profile.old
&prompt.user;cp /etc/skel/.profile ~/.profile</screen>
  <para>あとは <literal>*.old</literal> ファイル内にある変更を、新しいファイルに反映させてください。</para>
 </sect2>

 <sect2 xml:id="sec.suse.packages.cron">
  <title><phrase>cron</phrase> パッケージ</title>
  <para><systemitem class="daemon">cron</systemitem> システムは、指定した時刻に自動的に裏でコマンドを実行するための仕組みです。 <systemitem class="daemon">cron</systemitem> では特殊な書式のタイムテーブルと、あらかじめ決められたスケジュールのファイルを利用して、時刻の指定と実行すべきコマンドを指定します。一般ユーザでも同様に、独自のタイムテーブルを設定することができます。</para>
  <para>cron のタイムテーブルは <filename>/var/spool/cron/tabs</filename> ディレクトリ内に配置されます。システム全体のタイムテーブルは <filename>/etc/crontab</filename> ファイルにあります。 <filename>/etc/crontab</filename> 内では、日時の指定の後ろにユーザ名を指定して、そのユーザでコマンドを実行するようにすることができます。たとえば <xref linkend="ex.suse.packages.cron"/> では、 <systemitem class="username">root</systemitem> を指定しています。また、パッケージ固有のタイムテーブルは <filename>/etc/cron.d</filename> ディレクトリ内に同じ形式で配置します。詳しくは <command>cron</command> のマニュアルページ ( <command>man cron</command> ) をお読みください。</para>
  <example xml:id="ex.suse.packages.cron">
   <title>/etc/crontab の内容</title>
<screen>1-59/5 * * * *   root   test -x /usr/sbin/atrun &amp;&amp; /usr/sbin/atrun</screen>
  </example>
  <para>なお、 <filename>/etc/crontab</filename> ファイルは <command>crontab -e</command> コマンドで編集することはできません。このファイルはエディタなどで直接編集して保存してください。</para>
  <para>また、パッケージによっては <filename>/etc/cron.hourly</filename> , <filename>/etc/cron.daily</filename> , <filename>/etc/cron.weekly</filename> , <filename>/etc/cron.monthly</filename> などのディレクトリにシェルスクリプトをインストールするものがあります。これらのディレクトリ内のスクリプトは、 <filename>/usr/lib/cron/run-crons</filename> ファイルが制御しています。この <filename>/usr/lib/cron/run-crons</filename> ファイルは、メインのタイムテーブル ( <filename>/etc/crontab</filename> ) 内に設定されていて、 15 分に一度動作するようになっています。これにより、見逃されやすい処理も正しく実行できるようになっています。</para>
  <para><filename>hourly</filename> や <filename>daily</filename> のほか、その他の定期的なメンテナンススクリプトを独自の時間に実行したい場合は、 <filename>/etc/crontab</filename> 内に項目 (ジョブ) を追加して、タイムスタンプファイルを削除するように設定してください (たとえば <xref linkend="ex.suse.packages.cron.time"/> では、 <filename>hourly</filename> を毎時 59 分に、 <filename>daily</filename> を毎日午前 2:14 に削除したりしています) 。</para>
  <example xml:id="ex.suse.packages.cron.time">
   <title>/etc/crontab: タイムスタンプファイルの削除</title>
<screen>59 *  * * *     root  rm -f /var/spool/cron/lastrun/cron.hourly
14 2  * * *     root  rm -f /var/spool/cron/lastrun/cron.daily
29 2  * * 6     root  rm -f /var/spool/cron/lastrun/cron.weekly
44 2  1 * *     root  rm -f /var/spool/cron/lastrun/cron.monthly</screen>
  </example>
  <para>上記以外の方法としては、 <filename>/etc/sysconfig/cron</filename> ファイル内の <literal>DAILY_TIME</literal> を設定する方法があります。この変数は、 <filename>cron.daily</filename> を開始すべき時刻を指定するものです。また、 <literal>MAX_NOT_RUN</literal> は、ユーザが <literal>DAILY_TIME</literal> で指定していた時刻にコンピュータを起動していなかった場合、どれだけの日数が経過するとジョブを即時に実行するかを指定します。なお、 <literal>MAX_NOT_RUN</literal> の最大値は 14 日です。</para>
  <para>日々のシステムメンテナンスジョブは、それらを明確に識別することができるよう、様々なスクリプトに分かれています。これらは <systemitem class="resource">aaa_base</systemitem> パッケージ内に含まれています。たとえば <filename>/etc/cron.daily</filename> には <filename>suse.de-backup-rpmdb</filename> , <filename>suse.de-clean-tmp</filename> , <filename>suse.de-cron-local</filename> などのコンポーネントが含まれています。 <remark role="trans">"suse.de" is just a prefix to avoid naming clashes with third party provided scripts; read it as: these are scripts provided by SUSE. They are not German packages and you must not localize these filename in any way.</remark></para>
 </sect2>

 <sect2 xml:id="sec.suse.packages.cronstatus">
  <title>cron の状態メッセージの停止</title>
  <para>cron の状況を表わすメールでメールボックスが溢れないようにする目的で、新規インストールでは <filename>/etc/sysconfig/cron</filename> 内の <literal>SEND_MAIL_ON_NO_ERROR</literal> が " <literal>no</literal> " に設定されるようになっています。ただし、 " <literal>no</literal> " に設定した場合でも、 cron のマニュアルページに書かれているとおり、 <literal>MAILTO</literal> アドレスに対しては実行結果のメールが配信されます。</para>
  <para>古いバージョンから更新している場合は、お使いの環境の要件にあわせて値を指定してください。</para>
 </sect2>

 <xi:include href="suse_logfiles.xml"/>

 <sect2 xml:id="sec.suse.locate">
  <title><command>locate</command> コマンド</title>
<!-- bnc#892484: mlocate since SLE 12 -->
  <para><command>locate</command> コマンドはファイルを素早く見つけるためのコマンドですが、インストール済みのソフトウエアを見つけるためだけのコマンドではありません。必要であれば <systemitem>mlocate</systemitem> (<systemitem>findutils-locate</systemitem> パッケージの後継パッケージ) をインストールすることで、様々なファイルを検索できるようになります。なお、 <systemitem class="daemon">updatedb</systemitem> プロセスは、毎晩もしくはシステムの起動後 15 分経過後に自動で開始されるプログラムです。</para>
 </sect2>

 <sect2 xml:id="sec.suse.ulimit">
  <title><command>ulimit</command> コマンド</title>
  <para><command>ulimit</command> ( <emphasis>ユーザ制限 (User Limits)</emphasis> ) を利用することで、システム資源の使用範囲に制限を設定したり、それらの制限を表示したりすることができます。 <command>ulimit</command> は特に、アプリケーションに対して利用を許すメモリサイズを制限する用途で役に立ちます。これを利用することで、アプリケーションがシステム資源を使用しすぎることで、オペレーティングシステムの動作を遅くしてしまったり、場合によってはハングアップ (反応がなくなる) ようなことを防ぐことができます。</para>
  <para><command>ulimit</command> には様々なオプションが用意されています。たとえばメモリの使用を制限するには、 <xref linkend="tab.suse.packages.ulimit"/> に示されているオプションをお使いください:</para>
  <table xml:id="tab.suse.packages.ulimit">
   <title><command>ulimit</command> : ユーザに対する資源の制限</title>
<!-- Taken literally from the bash manpage. -ke- -->
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para><option>-m</option></para>
      </entry>
      <entry>
       <para>最大常駐セットサイズ</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><option>-v</option></para>
      </entry>
      <entry>
       <para>シェルに対して開放する最大仮想メモリサイズ</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><option>-s</option></para>
      </entry>
      <entry>
       <para>最大スタックサイズ</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><option>-c</option></para>
      </entry>
      <entry>
       <para>作成されるコアファイルの最大サイズ</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><option>-a</option></para>
      </entry>
      <entry>
       <para>現在の制限を全て表示する</para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>システム全体に対する設定は、 <filename>/etc/profile</filename> 内で行なわれています。ただし、このファイルを直接修正することはお勧めしません。なぜなら、システムのアップグレードを行なうと、上記のファイルが上書きされてしまうためです。システム全体のプロファイル設定をカスタマイズしたい場合は、 <filename>/etc/profile.local</filename> ファイルに、ユーザ単位で設定を行ないたい場合は <filename>~<replaceable>ユーザ名</replaceable>/.bashrc</filename> ファイルにそれぞれ記述してください。</para>
  <example xml:id="ex.u.ulimit.bashrc">
   <title><command>ulimit</command> : <filename>~/.bashrc</filename> 内での設定</title>
<screen># 最大常駐セットサイズ (物理メモリ) の制限:
ulimit -m 98304

# 仮想メモリの制限:
ulimit -v 98304</screen>
  </example>
  <para>メモリの割り当てはキロバイト (KB) 単位で行ないます。詳しくは <command>man bash</command> をお読みください。</para>
  <important>
   <title><command>ulimit</command> のサポートについて</title>
   <para>シェルによっては <command>ulimit</command> ディレクティブに対応していないものがあります。また、 PAM の仕組みを利用することで、 <command>ulimit</command> に代わる広範囲な調整機能を利用することができます (<literal>pam_limits</literal> など) 。</para>
  </important>
 </sect2>

 <sect2 xml:id="sec.suse.free">
  <title><command>free</command> コマンド</title>
  <para><command>free</command> コマンドは、物理メモリやスワップ領域の空き容量と使用済み容量を表示するほか、カーネルが消費しているバッファやキャッシュのサイズを表示することができるツールです。 <emphasis>利用可能なメモリ量</emphasis> の考え方は、統一されたメモリ管理機構が生まれるよりも前に遡ります。 <emphasis>メモリを空けておくなんてもったいない</emphasis> の考え方は Linux にも当てはまり、不要なメモリを解放するよりは、できる限りキャッシュとして使用したほうが良い、という動作になっています。</para>
  <para>なお、カーネル側ではアプリケーションなのかユーザデータなのかを直接知っているわけではありません。アプリケーションやユーザデータは <emphasis>ページキャッシュ</emphasis> という仕組みで管理されています。そのため、メモリが枯渇すると、まず <command>mmap</command> コマンドを利用して準備したそれらを、スワップ領域かファイルに書き込んで開放する動作を行ないます。</para>
  <para>また、カーネル側ではそのほかのキャッシュ機構も用意されています。そのうちの 1 つが<emphasis>slab キャッシュ</emphasis> で、ネットワークアクセスに対するキャッシュを補完します。これにより、 <filename>/proc/meminfo</filename> のカウンタ間での差を説明することができます。なお、 <emphasis>slab キャッシュ</emphasis> のうちのほとんどの統計情報については、 <filename>/proc/slabinfo</filename> からアクセスすることができます。</para>
  <para>ただし、どれだけのメモリが使用されているのかを調べたいような場合は、従来通り <filename>/proc/meminfo</filename> ファイルが適切でしょう。</para>
 </sect2>

 <sect2 xml:id="sec.suse.manpages">
  <title>マニュアルページと info ページ</title>
  <para>GNU アプリケーションによっては、マニュアルページがメンテナンスされなくなってしまっているものもあります (例: tar) 。これらのコマンドについては <option>--help</option> オプションを指定して実行することで、コマンドの概要説明を得ることができます。また、より詳しい説明を読みたい場合は、 info ページをお使いください。 info ページは GNU 製のハイパーテキストシステムで、 info ページの説明そのものも info ページで提供されています。詳しくは <command>info</command> <option>info</option> と入力して実行してください。また、 info ページは emacs 内に表示することもできます。こちらについては、 <command>emacs</command> <option>-f info</option> と入力して実行してください。このほか、 tkinfo, xinfo やデスクトップ環境のヘルプシステムでも、 info ページを表示することができます。</para>
 </sect2>

<!-- bnc#442262 -->

 <sect2 xml:id="sec.suse.packages.man">
  <title><command>man</command> コマンドでのマニュアルページの選択</title>
  <para>マニュアルページを読むには、 <command>man</command> <replaceable>ページ名</replaceable> のように入力して実行します。なお、異なるセクションに同じ名前のマニュアルページが存在する場合は、セクション番号の一覧が表示され、いずれかを選択するように促されます。この場合、何も入力せずにしばらく経過すると、最初に一致したマニュアルページを表示します。</para>
  <para>このような既定の動作を変更したい場合は、 <literal>MAN_POSIXLY_CORRECT=1</literal> を <filename>~/.bashrc</filename> のようなシェル設定ファイルで指定してください。</para>
 </sect2>

 <xi:include href="suse_emacs.xml"/>
</sect1>
