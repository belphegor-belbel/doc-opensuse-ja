<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="Invoking">
 <title>自動インストール処理</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="Installation-process">
  <title>紹介</title>

  <para>システムが自動インストールを起動して制御ファイルを取得すると、 &yast; は制御ファイル内に書かれた情報をもとにして、システムの設定を始めます。全ての設定は既定で表示されるウインドウ内にまとめられますが、完全にインストールを自動化したい場合には無効化することもできます。</para>

  <para>&yast; が設定の概要を表示したタイミングでは、 &yast; はハードウエアの検出を行って自動インストールのための準備を行っただけの状態になります。この時点ではまだシステムに対して、何も変更を加えていない状態になります。ここまでで何らかのエラーが発生しても、処理を安全に中止することができます。</para>

  <para>システムを自動インストールする場合は、グラフィックアダプタやモニタを使用せずに行うこともできます。ただし、クライアントマシンに自動インストールするような場合は、進捗状況やエラー時の対応を行う必要があることから、モニタを接続しておくことをお勧めします。また、グラフィカルなインターフェイスだけでなく、テキストベースの ncurses インターフェイスを使用することもできます。このほか、キーボードやマウス、ディスプレイの存在しないクライアントであれば、シリアルポートをコンソールとして使用することもできます。</para>

  <sect2 xml:id="Installation-Interface-X11">
   <title>X11 インターフェイス (グラフィカル)</title>
   <para>自動インストールを行う場合、これが既定のインターフェイスとなります。このインターフェイスを使用する場合には、特に何も設定を行う必要はありません。</para>
  </sect2>

  <sect2 xml:id="Installation-Interface-SerialConsole">
   <title>シリアルコンソール</title>
   <para>シリアルコンソールを利用してインストールを行いたい場合は、カーネルのコマンドラインに対して <literal>console</literal> キーワード (例: <literal>console=ttyS0</literal> ) を追加します。これにより <command>linuxrc</command> がコンソールモードで動作するようになり、 &yast; についてもシリアルコンソール経由で表示されるようになります。</para>
  </sect2>

  <sect2 xml:id="Installation-Interface-Ncurses">
   <title>テキストベースの &yast; インストール</title>
   <para>このオプションについても、コマンドラインから有効化することができます。 &yast; をテキストモードで起動したい場合は、コマンドラインに <literal>textmode=1</literal> を指定してください。</para>
   <para>&yast; のテキストモードによる起動は、 64 MB よりも少ないメモリしか搭載していないクライアントや、ディスプレイの接続がなく、 X11 を設定すべきではないクライアントを使用しているような場合にお勧めです。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="bootmedium">
  <title>適切な起動メディアの選択</title>

  <para>クライアントの起動に際してはさまざまな方式を使用することができます。コンピュータによっては搭載されているネットワークインターフェイスカード (NIC) を利用して、 DHCP 経由もしくは TFTP 経由で起動イメージを取得できるものもあります。このほか、 USB メモリなどからカーネルと initrd イメージを読み込んだり、起動可能な DVD-ROM から起動を行ったりすることもできます。</para>

  <para>&yast; はその起動時、起動メディアもしくは initrd 内のルートディレクトリに、 <filename>autoinst.xml</filename> ファイルが存在していないかどうかを確認します。存在していた場合には、自動インストール処理に移行します。制御ファイルが異なるファイル名であったり、どこか別の場所に配置したりしているような場合は、カーネルのコマンドラインパラメータに　<literal>&ay;=<replaceable>URL</replaceable></literal> を指定してください。</para>

  <para>それ以外に、 <filename>autoinst.xml</filename> ファイルを保存した物理デバイスや論理デバイスに <literal>OEMDRV</literal> というラベルを設定する方式があります。この場合、カーネルのコマンドラインで <filename>autoinst.xml</filename> の場所を指定する必要はありません。なお、 <literal>autoinst.xml</literal> ファイルはデバイスのルートディレクトリに配置しなければなりません。</para>

  <sect2 xml:id="bootmedium-flash">
   <title>外付けストレージ (USB メモリなど) からの起動</title>
   <para>テストやシステムの救出を目的とする場合、もしくはお使いのネットワークインターフェイスカードに PROM や PXE が搭載されていないような場合でも、 &ay; を使用することができます。フラッシュメモリであれば制御ファイルを含めることもできます。</para>
   <tip>
    <title>インストールメディアのイメージをリムーバブルメディアにコピーする場合について</title>
    <para>下記のコマンドを実行することで、インストールメディアのイメージをリムーバブルメディアに書き込むことができます。</para>
<screen>&prompt.sudo;dd if=<replaceable>イメージ</replaceable> of=<replaceable>リムーバブルメディアのパス</replaceable> bs=4M &amp;&amp; sync</screen>
    <para><replaceable>イメージ</replaceable> には <filename>&installmedia;</filename> もしくは <filename>&packagemedia;</filename> のイメージファイルのパスを、 <replaceable>リムーバブルメディアのパス</replaceable> にはリムーバブルメディアのパスをそれぞれ指定します。デバイス名がわからない場合は、下記のように入力して実行してください:</para>
<screen>&prompt.root;grep -Ff &lt;(hwinfo --disk --short) &lt;(hwinfo --usb --short)
      disk:
      /dev/sdc             General USB Flash Disk</screen>
    <para>なお、デバイスのサイズがイメージのサイズに対して十分かどうかを確認しておいてください。デバイスのサイズを確認したい場合は、下記のように入力して実行します:</para>
<screen>&prompt.root;fdisk -l /dev/sdc | grep -e "^/dev"
      /dev/sdc1  *     2048 31490047 31488000  15G 83 Linux</screen>
    <para>上記の例では、デバイスのサイズは 15 GB あることになります。この場合、 <filename>&packagemedia;</filename> を書き込む際のコマンドは下記のようになります:</para>
<screen>dd if=&packagemedia; of=/dev/sdc bs=4M &amp;&amp; sync</screen>
    <para>なお、 <command>dd</command> コマンドを実行する際には、デバイスがマウントされていてはなりません。また、デバイス内の全てのデータが消去されることにも注意してください。</para>
   </tip>
  </sect2>

  <sect2 xml:id="bootmedium-installer">
   <title>&sle; のインストールメディアからの起動</title>
   <para>&sle; のインストールメディア ( <filename>&installmedia;</filename> もしくは <filename>&packagemedia;</filename> ) と他のメディアを併用することもできます。たとえば制御ファイルを USB メモリやネットワーク内の場所に配置しておき、 DVD-ROM から起動して場所を指定することもできます。また、インストールメディアそのものを修正して、制御ファイルを入れておくこともできます。</para>
  </sect2>

  <sect2 xml:id="bootmedium-pxe">
   <title>ネットワーク経由での PXE 起動</title>
   <para>PXE 起動を行うには、ネットワーク内に DHCP サーバと TFTP サーバを用意する必要があります。これにより、物理メディアを使用せずに起動を行うことができます。 <phrase os="sles;sled">このようなインフラストラクチャを構築する方法について、詳しくは <xref linkend="cha-remote-installation"/> をお読みください。</phrase></para>
   <para>なお PXE 経由でインストールを行う場合、インストールを繰り返し続けてしまうという問題が発生することがあります。これはインストール後の再起動で、 <phrase os="sles;sled;osuse">通常は第 2 ステージのインストール処理が動作すべきはずのところ、</phrase> PXE 経由の起動が再度行われてしまい、第 1 ステージに戻ってきてしまうことによるものです。</para>
   <para>このような問題を解決する方法はいくつかあります。 1 つは HTTP サーバ内に &ay; の制御ファイルを配置する方法で、通常のファイルではなく CGI スクリプトとして &ay; の制御ファイルを提供するように構成し、 2 度目の起動では TFTP サーバの設定を変更して、ハードディスクから起動するように設定します。</para>
   <para>もう 1 つの方法としては、 &ay; の制御ファイル内で新しい PXE 起動の設定をアップロードするようにする方法があります:</para>
<screen>&lt;pxe&gt;
  &lt;pxe_localboot config:type="boolean"&gt;true&lt;/pxe_localboot&gt;
  &lt;pxelinux-config&gt;
    DEFAULT linux
    LABEL linux
    localboot 0
  &lt;/pxelinux-config&gt;
  &lt;tftp-server&gt;&tftpip;&lt;/tftp-server&gt;
  &lt;pxelinux-dir&gt;/pxelinux.cfg&lt;/pxelinux-dir&gt;
  &lt;filename&gt;__MAC__&lt;/filename&gt;
&lt;/pxe&gt;</screen>
   <para>上記のように設定すると、初回の再起動が行われる直前に、インストール先のホストから TFTP サーバに対して新しい設定ファイルがアップロードされるようになります。ほとんどのインストール環境では TFTP デーモンが <systemitem class="username">nobody</systemitem> で動作していますので、このユーザから <filename>pxelinux.cfg</filename> ディレクトリに書き込むことができるように設定します。また、アップロードするファイルのファイル名を指定することもできます。上記の例では <literal>__MAC__</literal> と指定していますが、これは <literal>01-08-00-27-79-49-ee</literal> のような実際の MAC アドレスに置き換えられます。なお、ファイル名の設定が無い場合は、ファイル名に IP アドレスが設定されます。</para>
   <para>同じマシンに対して自動インストールを再度行わせたい場合は、 TFTP サーバ内で該当のファイルを削除してください。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="invoking-autoinst">
  <title>自動インストール処理の開始</title>

  <para><remark role="fixme">Add a short description</remark></para>

  <sect2 xml:id="invoking-autoinst-options">
   <title>コマンドラインオプション</title>
   <para>コマンドライン変数 <literal>autoyast</literal> を設定することで、 <command>linuxrc</command> を自動モードにすることができます。その場合、 <command>linuxrc</command> プログラムは設定ファイル (制御ファイルとは別のものです) を検索します。そのときの場所は下記のとおりです:</para>
   <itemizedlist>
    <listitem>
     <para>システムを起動する際に使用していた初期 RAM ディスクのルートディレクトリ</para>
    </listitem>
    <listitem>
     <para>起動メディアのルートディレクトリ</para>
    </listitem>
   </itemizedlist>
   <para><command>linuxrc</command> の設定ファイルには、複数のキーワードが用意されています。 <command>linuxrc</command> の詳しい説明とキーワードの一覧については、 <xref linkend="appendix-linuxrc"/> をお読みください。主なものは下記のとおりです:</para>
   <variablelist>
    <varlistentry os="sles;sled;osuse">
     <term>autoupgrade</term>
     <listitem>
      <para>&ay; を利用した自動アップグレードの開始については、 <xref linkend="CreateProfile-upgrade"/> をお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>autoyast</term>
     <listitem>
      <para>自動インストールの際に使用する制御ファイルの場所を指定します。詳しくは <xref linkend="Commandline-ay"/> をお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ifcfg</term>
     <listitem>
      <para>ネットワークを設定し、起動するようになります。 &ay; に対して、ネットワーク上離れた場所から取得を行う必要がある場合に必要となります。詳しくは <xref linkend="ay-adv-network"/> をお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>insmod</term>
     <listitem>
      <para>読み込むべきカーネルモジュールを指定します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>install</term>
     <listitem>
      <para>インストールに使用するディレクトリを指定します (例: <literal>install=nfs://192.168.2.1/CDs/</literal>) 。</para>
      <note>
       <title>SSL チェックの無効化について</title>
       <para>HTTPS を使用している場合、既定では SSL のチェックが有効化されます。必要であれば、 HTTPS の URL 内に <literal>ssl_verify=no</literal> を追加して、 SSL のチェックを無効化してください。たとえば下記のようになります:</para>
        <screen>install=<replaceable>https://192.168.2.1/CDs/</replaceable>?ssl_verify=no</screen>
        <para>なお、複数のクエリ文字列を指定している場合は、それらをアンパサンドで区切ってください:</para>
         <screen>install=<replaceable>https://192.168.2.1/CDs/</replaceable>?foo=bar&amp;ssl_verify=no</screen>       
        <para>詳しくは <command>man 8 zypper</command> で表示されるマニュアルページ内の、 "FTP/HTTP/HTTPS directory tree" セクションをお読みください。</para>
        </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>instmode</term>
     <listitem>
      <para>インストールモードを指定します。たとえば <literal>nfs</literal> , <literal>http</literal> などを指定します (<literal>install</literal> が指定されていれば不要です) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rootpassword</term>
     <listitem>
      <para>&ay; プロファイル内で指定されていない場合、ここで root のパスワードを設定することができます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>server</term>
     <listitem>
      <para>ソースディレクトリとして使用するサーバ (NFS) を指定します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>serverdir</term>
     <listitem>
      <para>NFS サーバ内のディレクトリを指定します</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>y2confirm</term>
     <listitem>
      <para>制御ファイル内に &lt;confirm&gt;no&lt;/confirm&gt; が設定されていても、確認メッセージを表示するようにします。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <!-- fs 2016-07-29: better use ifcfg
    <para>
    <literal>gateway</literal>
    <literal>nameserver</literal>
    <literal>netdevice</literal>
    </para>
    <para>
    Network device to use for network setup (for BOOTP and DHCP
    requests)
    </para>
    <literal>netmask</literal>
    <literal>hostip</literal>
    <para>
    When empty, client sends BOOTP request, otherwise client is
    configured with entered IP configuration.
    </para>
    -->
   <para>これらの値やキーワードはシステムを起動する際に使用され、 &yast; がメインの制御ファイルを得るまでの間使用されます。現時点ではソースメディアは自動検出されるようになっていますので、場合によっては <command>linuxrc</command> に特段の設定を行わなくても、自動インストールの処理を開始することができるようになっています。</para>
   <para>従来の <command>linuxrc</command> の設定ファイル ( <filename>info</filename> ) には、インストールサーバやソースの場所など、クライアントに対して十分な情報を提供する機能が用意されてきました。通常はこのファイルを用意する必要はありませんが、 DHCP も BOOTP も使用していないような環境であったり、特殊なカーネルモジュールを読み込む必要があったりするような環境では、必要となる場合もあります。</para>
   <para><command>linuxrc</command> にキーワードを渡したい場合は、カーネルのコマンドラインを使用することができます。これはいくつかの方法で設定することができます。通常のメディアからの起動時に、その他のカーネルパラメータとともに <command>linurc</command> キーワードを指定することができるほか、ネットワーク経由で起動するディスクイメージを作成して、そこにカーネルパラメータを設定する方法もあります。また、 Etherboot や PXE との組み合わせで、 DHCP サーバ側でカーネルのパラメータを設定することもできます。</para>
   <note>
    <title><literal>autoyast</literal> ではなく <literal>autoyast2</literal> のオプションを使用すべき点について</title>
    <para><literal>autoyast2</literal> オプションと <literal>autoyast</literal> オプションは似通った仕組みですが、 <command>linuxrc</command> は指定された値を処理するだけでなく、必要に応じてネットワークの設定も行おうとします。このオプションについては本文書内では説明していません。 &ay; での違いと <command>linuxrc</command> URI の書式について、詳しくは <xref linkend="appendix-linuxrc"/> にある <command>linuxrc</command> の付録をお読みください。ここでは &ay; のルールやクラスには <emphasis>対応していません</emphasis> 。</para>
   </note>
   <para>コマンドライン変数 <literal>autoyast</literal> には、下記の表に示すような書式を使用することができます。</para>
   <variablelist xml:id="Commandline-ay">
    <title>&ay; の制御ファイルの場所</title>
    <varlistentry>
     <term>URI の書式</term>
     <listitem>
      <para>使用したい制御ファイルの場所を指定するために <literal>autoyast</literal> で指定する URI の書式は、少し混乱を生むものになってしまっています。書式は一般に <replaceable>スキーマ</replaceable>://<replaceable>ホスト</replaceable>/<replaceable>ファイルへのパス</replaceable> の形式で記述しますが、スキーマの後ろに付与するスラッシュ記号の数は、使用するスキーマによって異なります。たとえば NFS サーバ内を指定する場合は、 <literal>autoyast=nfs://SERVER/PATH</literal> のようにスラッシュを 2 つ並べます。</para>
      <para>ローカルのファイルシステム内に制御ファイルを配置する場合は、たとえば <literal>autoyast=usb:///profile.xml</literal> のような書式になります。これは <literal>autoyast=usb://localhost/profile.xml</literal> と同じ意味になります。このとき、 <literal>localhost</literal> を省略するためにスラッシュ記号を 3 回繰り返していることに注意してください。もしも <literal>autoyast=usb://profile.xml</literal> のように記述してしまうと、 <literal>profile.xml</literal> がホスト名として扱われてしまいます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>制御ファイルの場所を指定する必要がない場合</term>
     <listitem>
      <para os="sles;sled;osuse">アップグレード: 自動オフラインアップグレードの場合は、 <literal>autoyast</literal> 変数を指定する必要はありません。詳しくは <xref linkend="pro-upgrade-offline-upgrade-mode"/> をお読みください。</para>
      <para>新規インストール: <filename>autoinst.xml</filename> ファイルが下記 3 箇所のうちのいずれかの場所に存在すると、 &ay; が開始されます:</para>
      <orderedlist>
       <listitem>
        <para>インストールに使用する外付けストレージ (USB メモリなど) のルートディレクトリ</para>
       </listitem>
       <listitem>
        <para>インストールメディアのルートディレクトリ</para>
       </listitem>
       <listitem>
        <para>システムを起動する際に使用する初期 RAM ディスクのルートディレクトリ</para>
       </listitem>
      </orderedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=file:///<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>指定したパス内の制御ファイルを読み込みます。この場合、ソースメディアのルートディレクトリからの相対パスを指定します。たとえば CD や USB メモリから起動している場合、 それが外付けのドライブであったとしても、 <literal>file:///autoinst.xml</literal> のように指定すると、任意のローカルファイルシステム内のルートディレクトリにあるファイルを読み込むようになります (これは <literal>file://<replaceable>localhost/autoinst.xml</replaceable></literal> と同じ意味になります) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=device://<replaceable>デバイス</replaceable>/<replaceable>ファイル名</replaceable></literal></term>
     <listitem>
      <para>指定したストレージデバイス内の制御ファイルを読み込みます。この場合、デバイスに対するフルパスではなく、デバイス名のみを指定してください (例: <literal>vda1/autoyast.xml</literal>) 。また、デバイス名を省略する (例: <literal>autoyast=device://<replaceable>localhost/autoinst.xml</replaceable></literal> , もしくは <literal>autoyast=device:///<replaceable>autoinst.xml</replaceable></literal>) と、 &ay; は全てのデバイスを検索するようになります。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=nfs://<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>NFS サーバ内の制御ファイルを読み込みます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=http://[<replaceable>ユーザ名</replaceable>:<replaceable>パスワード</replaceable>@]<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>HTTP プロトコルを利用して、 Web サーバから制御ファイルを取得します。ユーザ名とパスワードの指定は任意です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=https://[<replaceable>ユーザ名</replaceable>:<replaceable>パスワード</replaceable>@]<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>HTTPS プロトコルを利用して、 Web サーバから制御ファイルを取得します。ユーザ名とパスワードの指定は任意です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=tftp://<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>TFTP 経由で制御ファイルを取得します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=ftp://[<replaceable>ユーザ名</replaceable>:<replaceable>パスワード</replaceable>@]<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>FTP プロトコルを利用して制御ファイルを取得します。ユーザ名とパスワードの指定は任意です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=usb://<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>USB デバイスから制御ファイルを取得します (&ay; は接続されている全ての USB デバイスを検索します) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=relurl://<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>インストール元から制御ファイルを取得します。これは既定のインストール元のほか、 <literal>install=<replaceable>インストール元のパス</replaceable></literal> で指定したものでもかまいません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=cifs://<replaceable>サーバ</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>CIFS サーバ内にある制御ファイルを読み込みます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>autoyast=label://<replaceable>ラベル</replaceable>/<replaceable>パス</replaceable></literal></term>
     <listitem>
      <para>指定したラベルのデバイス内にある制御ファイルを読み込みます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>自動インストールでは、異なる種類のインフラストラクチャとソースメディアを使用するさまざまなシナリオが考えられます。最もシンプルな方法は &productname; のインストールメディア <phrase os="sles;osuse">( <filename>&installmedia;</filename> もしくは <filename>&packagemedia;</filename> )</phrase> を使用する方法ですが、この場合は自動インストールを開始するのにコマンドライン変数を入力する必要があるほか、 &yast; からアクセス可能な場所に制御ファイルを配置する必要もあります。</para>
   <para>スクリプトという観点では、マシンに対してシリアルコンソールを使用することで、テキストモードによるインストールを行う方法もあります。この場合、必要なパラメータを expect スクリプトなどで問い合わせることができます。</para>
   <para>それぞれの起動方法に対して利用可能な、制御ファイルの提供方法を示します:</para>
   <variablelist>
    <varlistentry>
     <term>&productname; のインストールメディアを使用する方法</term>
     <listitem>
      <para>インストールメディア <phrase os="sles;osuse">( <filename>&installmedia;</filename> もしくは <filename>&packagemedia;</filename> が必要です)</phrase> を使用する場合、制御ファイルは外付けストレージ (USB メモリなど) やネットワーク内に存在している必要があります:</para>
      <formalpara>
       <title>外付けストレージ (USB メモリなど)</title>
       <para><literal>autoyast=usb://<replaceable>パス</replaceable></literal> オプションを指定して制御ファイルにアクセスさせてください。</para>
      </formalpara>
      <formalpara>
       <title>ネットワーク</title>
       <para>下記のいずれかのコマンドで制御ファイルにアクセスすることができます: <literal>autoyast=nfs://..</literal> , <literal>autoyast=ftp://..</literal> , <literal>autoyast=http://..</literal> , <literal>autoyast=https://..</literal> , <literal>autoyast=tftp://..</literal> , or <literal>autoyast=cifs://..</literal> 。ネットワークへのアクセスを使用する場合は、 linuxrc の起動オプションで設定を行う必要があります。たとえば DHCP を使用する場合、 <command>netsetup=dhcp autoyast=http://<replaceable>163.122.3.5/autoyast.xml</replaceable></command> のようになります。</para>
      </formalpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>独自のインストールメディアを使用する方法</term>
     <listitem>
      <para>この方法では、制御ファイルをインストールメディア内に直接含めることができます。制御ファイルはルートディレクトリ内に配置し、 <filename>autoinst.xml</filename> というファイル名にしておいてください。これにより、インストール時に自動検出され、使用されるようになります。もちろん <literal>autoyast=file:///<replaceable>パス</replaceable></literal> のように指定すれば、他のパスにある制御ファイルを指定して使用することもできます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ネットワーク経由でインストールする方法</term>
     <listitem>
      <para>自動インストールではこのインストール方法が最も多いでしょう。複数のマシンにインストールを行う場合、 SLP や NFS のサーバのほか、 BOOTP や DHCP などのネットワークサービスを併用することが多いためです。この場合、制御ファイルの配置にあたって最も簡単な方法は、インストールソースとして使用するディレクトリのルートに、制御ファイルを配置する方法です。ファイル名は <filename>autoinst.xml</filename> というファイル名にしてください。この場合、インストール時に自動検出され、自動インストールが行われるようになります。制御ファイルは下記のような場所に配置することもできます:</para>
      <formalpara>
       <title>外付けストレージ (USB メモリなど)</title>
       <para><literal>autoyast=usb://<replaceable>パス</replaceable></literal> オプションを指定して制御ファイルにアクセスさせてください。</para>
      </formalpara>
      <formalpara>
       <title>ネットワーク</title>
       <para>下記のいずれかのコマンドで制御ファイルにアクセスすることができます: <literal>autoyast=nfs://..</literal> , <literal>autoyast=ftp://..</literal> , <literal>autoyast=http://..</literal> , <literal>autoyast=https://..</literal> , <literal>autoyast=tftp://..</literal> , <literal>autoyast=cifs://..</literal></para>
      </formalpara>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <title>ネットワークと DHCP の無効化について</title>
    <para>インストール時にネットワークが不要である場合や利用できない場合、たとえば DVD-ROM から自動インストールを行うような場合、ネットワークを無効化するには、 <command>linuxrc</command> オプションに <literal>netsetup=0</literal> を指定することで、ネットワークの設定を無効化することができます。</para>
   </note>
   <para>全ての &ay; オプションでは、下記のような方式で制御ファイルの場所を指定することができます:</para>
   <!-- numeration="arabic" -->
   <orderedlist>
    <listitem>
     <para>制御ファイルの正確な場所を指定する方法:</para>
<screen>autoyast=http://192.168.1.1/control-files/client01.xml</screen>
    </listitem>
    <listitem>
     <para>複数の制御ファイルが配置されているディレクトリを指定する方法:</para>
<screen>autoyast=http://192.168.1.1/control-files/</screen>
     <para>この場合、対応する制御ファイルは IP アドレスの 16 進数表記によるファイル名で取得することになります (後述) 。</para>
     <para>ディレクトリであることを表すため、パスは <literal>/</literal> で終わる必要があります。</para>
     <para>また、このディレクトリ内のファイルには、 <literal>.xml</literal> などの拡張子を付けてはなりません。つまり、ファイル名は IP アドレスや MAC アドレスそのものになります。</para>
<screen>&prompt.user;ls -r control-files
C00002 0080C8F6484C default</screen>
    </listitem>
   </orderedlist>
   <para>パスのプレフィクスのみを指定した場合、 &yast; は下記の流れで制御ファイルへのアクセスを試みます:</para>
   <!-- numeration="arabic" -->
   <orderedlist>
    <listitem>
     <para>まずは自分自身の IP アドレスを 16 進数に変換したファイル名の制御ファイルを検索します。たとえば <literal>192.0.2.91 -&gt; C000025B</literal> のようになります。</para>
    </listitem>
    <listitem>
     <para>このファイルが見つからない場合、 &yast; は 16 進数表記から 1 桁を削って再試行します。この処理は、ファイルが見つかるまで繰り返されます。それでも見つからない場合は、クライアント側の MAC アドレスからファイル名を生成してアクセスしようとします (MAC アドレスは <literal>0080C8F6484C</literal> のような書式になります) 。それでも見つからない場合は、 <filename>default</filename> というファイル名 (全て小文字) でアクセスを試みます。</para>
    </listitem>
   </orderedlist>
   <para>たとえば 192.0.2.91 であれば、 HTTP クライアントは下記の順序でアクセスしようとします:</para>
   <!-- role="literallayout" -->
<screen>C000025B
C000025
C00002
C0000
C000
C00
C0
C
0080C8F6484C
default</screen>
   <para>"\n  <!-- NOTE: nothing needed for translation -->\n"</para>
   <para>クライアントの IP アドレスを 16 進数に変換するには、 <systemitem class="resource">syslinux</systemitem> パッケージに含まれる <command>/usr/bin/gethostip</command> ユーティリティをお使いください。</para>
   <example>
    <title>IP アドレスの 16 進数表記への変換</title>
<screen>&prompt.user;/usr/bin/gethostip 10.10.0.1
10.10.0.1 10.10.0.1 0A0A0001</screen>
   </example>
  </sect2>

  <sect2 xml:id="autoinstall-singlesystem">
   <title>単一システムの自動インストール</title>
   <para>ネットワーク接続がない場合、自動インストールを行うのに最も簡単な方法は、 &productname; の DVD-ROM と外付けストレージ (USB メモリなど) を使用する方法です。この場合、インストールサーバもネットワーク環境も用意する必要がありません。</para>
   <para>制御ファイルを作成して <filename>autoinst.xml</filename> というファイル名で保存します。あとは USB メモリに <filename>autoinst.xml</filename> ファイルをコピーします。</para>
  </sect2>

  <sect2 xml:id="invoking-autoinst-linuxrc">
   <title>&ay; 制御ファイルと <command>linuxrc</command> <filename>info</filename> ファイルの組み合わせ</title>
   <para><filename>info</filename> ファイルや起動オプションを利用して <command>linuxrc</command> に情報を渡す場合、 XML の制御ファイルから設定を行うことができます。下記に示す例のようにして、 <literal>info_file</literal> セクションを設定してください。このセクションには 1 行に 1 つずつ、コロン区切りでキーワードと値の対を指定します。</para>
   <para/>
   <example>
    <title>&ay; 制御ファイル内での <command>linuxrc</command> オプション</title>
<screen><![CDATA[....
  <install>
....
    <init>
        <info_file>

install: nfs://192.168.1.1/CDs/full-x86_64
dud: https://example.com/driver_updates/filename.dud
upgrade: 1
textmode: 1
      </info_file>
    </init>
......
  </install>
  ....]]>
</screen>
   </example>
   <para>ただし、 <literal>autoyast2</literal> キーワードは同じファイルを参照するようにしなければならないことに注意してください。たとえば外付けのストレージ (USB メモリなど) であれば、 <literal>usb:///</literal> を指定する必要があります。また、 <filename>info</filename> ファイルが初期 RAM ディスク内に配置されている場合は、 <literal>file:///</literal> を指定する必要があります。</para>
  </sect2>
 </sect1>
 <sect1 os="sles;sled;osuse" xml:id="System-Configuration">
  <title>システム設定</title>

  <para>自動インストール時のシステム設定は、処理全体の中で最も重要な部分となります。これまでの章で説明してきたとおり、インストール先のシステムはほぼ全て自動設定することができます。また、あらかじめ定義されているディレクティブに加えて、さまざまな事後スクリプトを使用することで、さまざまなシステム設定を調整することができます。必要であればシステムの変数を変更したり、インストール先のシステムに設定ファイル全体をコピーしたりするようなことも実現できます。</para>

  <sect2 xml:id="System-Configuration-post">
   <title>インストール後およびシステムの設定</title>
   <para>インストール後の処理やシステムの設定処理は、インストール先のシステムへのパッケージインストールが完了すると即時に実行され、初回の再起動後にも続けて行われます。</para>
   <para>システムの初回起動よりも前に、 &ay; はインストール時に収集した全てのデータと、ブートローダの設定を指定された場所に保存します。これらの通常の処理に加え、 &ay; では制御ファイル内に指定された chroot 環境スクリプトも実行されます。ただし、これらのスクリプトはシステムがまだマウントされていない状態で実行されます。</para>
   <para>既定とは異なるカーネルをインストールしている場合は、ハードウエアレベルでの再起動が必要となります。ハードウエアレベルでの再起動は、インストールされているカーネルとは無関係に強制することもできます。ハードウエアレベルでの再起動を強制したい場合は、 <literal>general</literal> リソース内の <literal>reboot</literal> を設定してください (詳しくは <xref linkend="CreateProfile-General"/> をお読みください) 。</para>
  </sect2>

  <sect2 xml:id="System-Configuration-custom">
   <title>システムのカスタマイズ</title>
   <para>インストールの第 2 ステージでは、ほとんどのシステムのカスタマイズを完了させます。 &ay; リソースでは実現できないようなカスタマイズが必要となる場合は、インストール後スクリプトを設定して、その中でカスタマイズを実施してください。</para>
   <para>制御ファイル内には独自のスクリプトを必要な数だけ定義することができます。また、この設定を行うにあたっては、制御ファイルの編集のほか、設定システムを使用して行うこともできます。</para>
  </sect2>
 </sect1>
</chapter>
