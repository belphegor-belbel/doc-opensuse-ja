<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-ldap">
 <title>LDAP ディレクトリサービス</title>
 <info>
      <abstract>
        <para>軽量ディレクトリアクセスプロトコル (Lightweight Directory Access Protocol (LDAP)) は、情報ディレクトリにアクセスしたり情報ディレクトリを管理したりするためのプロトコル集です。 LDAP はユーザやグループのほか、システム設定の管理やアドレスの管理などにも使用することができます。本章では、 LDAP の基本的な動作について説明しています。</para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>

  <para>実際には、中央のサーバがディレクトリ内にデータを保管しておき、全てのクライアントに対しては明確に定義されたプロトコルで配布を行ないます。構造化されたデータの仕組みにより、様々なアプリケーションがそれらのデータにアクセスできるようになります。中央のサーバ (リポジトリとも呼びます) を用意することで管理の手間を省き、 LDAP のようなオープンで標準化されたプロトコルを使用することで、そこで管理されている情報にアクセスするプログラムをできる限り多く用意することができます。</para>
  <para>なお、本章での <quote>ディレクトリ</quote> とは、読み込みや検索の速度や効率性の点で最適化されたデータベースを意味します。ディレクトリ内に保存されたデータは長期にわたって保存され、あまり変更が発生しないものとされます。通常のデータベースシステムであれば短い時間内にデータの書き込みが多数発生する前提で最適化が行なわれますが LDAP サービスは読み込みに対して大きく最適化されたデータベースとなります。</para>

 <sect1 xml:id="sec-security-ldap-tree">
  <title>LDAP のディレクトリツリー構造</title>
<!--
  taroth 2019-02-27: acc. to wbrown the content of this section is still correct,
  but the section should be revised in the future - for input, see
  https://fy.blackhats.net.au/blog/html/pages/ldap_guide_part_1_foundations.html
-->
   <para>本章では、 LDAP ディレクトリツリーの基本的な配置と、 LDAP に関する基本的な用語を説明しています。 <phrase os="sles;osuse">既に LDAP に関する知識をお持ちの場合は、 <xref linkend="sec-security-ldap-server"/> からお読みください。 </phrase></para>

  <para>LDAP ディレクトリはツリー型の構造になっています。ディレクトリ内の全ての項目 (オブジェクトと呼びます) は、この階層構造内での位置が決められています。この階層構造を <emphasis>ディレクトリ情報ツリー</emphasis> (Directory Information Tree (DIT)) と呼びます。また、特定の項目に対して、それを正確に識別するためのパス情報を、 <emphasis>識別名</emphasis> (Distinguished Name (DN)) と呼びます。またツリー内にあるオブジェクトは <emphasis>相対識別名</emphasis> (Relative Distinguished Name (RDN)) でお互いを区別します。 <emphasis>識別名</emphasis> は、その項目に対する全ての <emphasis>相対識別名</emphasis> から構成されています。</para>

  <para>LDAP ディレクトリツリーの構造を図に表わすと、 <xref linkend="fig-ldap-tree"/> のようになります。</para>

  <figure xml:id="fig-ldap-tree">
   <title>LDAP ディレクトリの構造</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_tree.svg" width="85%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_tree.png" width="85%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>上記は架空のディレクトリ情報ツリーを表わしています。そのうち、 3 階層分の項目のみを図示しています。図の中では、各項目を 1 つの箱として表わしています。たとえば架空の従業員である <systemitem class="username">Geeko Linux</systemitem> に対する完全な <emphasis>識別名 (DN)</emphasis> は、 <literal>cn=Geeko Linux,ou=doc,dc=example,dc=com</literal> となります。これは相対識別名である <literal>cn=Geeko Linux</literal> に対して、階層構造上の親である <literal>ou=doc,dc=example,dc=com</literal> を追加することによります。</para>

<!-- ke: yes, these things are called "Schema" -->

  <para>ディレクトリ情報ツリー (DIT) 内に保管できるオブジェクトの種類は、 <emphasis>スキーマ</emphasis> と呼ばれるものに従って設定されます。オブジェクトの種類は <emphasis>オブジェクトクラス</emphasis> と呼ばれ、それに対応するスキーマで、そのオブジェクトが設定しなければならない値や、設定できる値が示されます。そのためスキーマには、 LDAP サーバ内で使用される全てのオブジェクトクラスや属性の定義を含んでいることになります。一方の属性は、構造化されたデータ型です。それらの書式や順序などの情報も、スキーマ内に記述されています。 LDAP サーバには幅広い環境で動作することができるよう、中枢 (コア) スキーマセットが用意されています。必要であれば、独自のスキーマを作成して使用することもできます。</para>

  <para><xref linkend="tab-ldap-schema"/> には、 <filename>00core.ldif</filename> や <filename>06inetorgperson.ldif</filename> で規定されているオブジェクトクラスの一部と、それらで必須とされている属性、そして属性値の書式を紹介しています。 <systemitem>389-ds</systemitem> パッケージをインストールしている環境であれば、これらは <filename>usr/share/dirsrv/schema</filename> 内に存在しています。 <!-- intro abbrev "Req. Attr." too shorten the table header --></para>

  <table xml:id="tab-ldap-schema">
   <title>よく使用されるオブジェクトクラスと属性</title>
   <tgroup cols="4">
    <colspec colname="c1" colwidth="30*"/>
    <colspec colname="c2" colwidth="40*"/>
    <colspec colname="c3" colwidth="16*"/>
    <colspec colname="c4" colwidth="14*"/>
    <thead>
     <row>
      <entry>
       <para>オブジェクトクラス</para>
      </entry>
      <entry>
       <para>意味</para>
      </entry>
      <entry>
       <para>値の例</para>
      </entry>
      <entry>
       <para>必須の属性</para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para><literal>domain</literal></para>
      </entry>
      <entry>
       <para>ドメインの名前パート</para>
      </entry>
      <entry>
       <para>example</para>
      </entry>
      <entry>
       <para>displayName</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><literal>organizationalUnit</literal></para>
      </entry>
      <entry>
       <para>組織単位</para>
      </entry>
      <entry>
       <para>doc</para>
      </entry>
      <entry>
       <para>ou</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><literal>nsPerson</literal></para>
      </entry>
      <entry>
       <para>イントラネットもしくはインターネットの個人関連データ</para>
      </entry>
      <entry>
       <para>Geeko Linux</para>
      </entry>
      <entry>
       <para>cn</para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>また <xref linkend="aus-ldap-schema-help"/> では、スキーマ定義の例を示しています。</para>

  <example xml:id="aus-ldap-schema-help">
   <title>CN=schema からの抜粋</title>
<screen>attributetype (1.2.840.113556.1.2.102 NAME 'memberOf' <co xml:id="co-ldap-schema-core-att-type"/>
       DESC 'Group that the entry belongs to' <co xml:id="co-ldap-schema-core-desc"/>
       SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 <co xml:id="co-ldap-schema-core-syntax"/>
       X-ORIGIN 'Netscape Delegated Administrator') <co xml:id="co-ldap-schema-core-xorigin"/>

objectclass (2.16.840.1.113730.3.2.333 NAME 'nsPerson' <co xml:id="co-ldap-schema-core-oc"/>
       DESC 'A representation of a person in a directory server' <co xml:id="co-ldap-schema-core-desc-oc"/>
       SUP top STRUCTURAL <co xml:id="co-ldap-schema-core-sup-oc"/>
       MUST ( displayName $ cn ) <co xml:id="co-ldap-schema-core-must-oc"/>
       MAY ( userPassword $ seeAlso $ description $ legalName $ mail \
             $ preferredLanguage ) <co xml:id="co-ldap-schema-core-may-oc"/>
       X-ORIGIN '389 Directory Server Project’
  ...</screen>
  </example>
  <calloutlist>
   <callout arearefs="co-ldap-schema-core-att-type">
    <para>属性の名前とユニークな OID (<emphasis>オブジェクト識別子 (Object Identifier)</emphasis>) (数字) 、そして属性の略称を表わしています。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc">
    <para><literal>DESC</literal> では属性に対する簡潔な説明を記します。定義の元となった RFC などがあれば、それも記述されます。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-syntax">
    <para>属性内に保持できるデータの型。この場合、大文字と小文字を区別しない文字列であることを示しています。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-xorigin">
    <para>スキーマ要素のソース (たとえばプロジェクト名) 。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-oc">
    <para>オブジェクトクラス <literal>nsPerson</literal> の定義の始まりです。オブジェクトクラスの定義は属性の定義と同じで、 OID とオブジェクトクラスの名前をそれぞれ記します。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc-oc">
    <para>そのオブジェクトクラスに対する簡潔な説明です。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-sup-oc">
    <para><literal>SUP top</literal> と書くことで、このオブジェクトクラスの上位に存在するオブジェクトクラスが存在していないことを表わしています。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-must-oc">
    <para><literal>MUST</literal> 以下には、 <literal>nsPerson</literal> のオブジェクトクラスで、設定されなければならない全ての属性種類を記します。</para>
   </callout>
   <callout arearefs="co-ldap-schema-core-may-oc">
    <para><literal>MAY</literal> 以下には、そのオブジェクトクラスで設定することのできる全ての属性種類を記します。</para>
   </callout>
  </calloutlist>
 </sect1>

 <sect1 xml:id="sec-security-ldap-server-install">
  <title>&ds389; 向けのソフトウエアのインストール</title>
   <para><systemitem>389-ds</systemitem> パッケージには、 &ds389; と管理ツールが含まれています。パッケージをインストールしていない場合は、下記のコマンドを入力して実行し、インストールを行なってください:</para>
    <screen>&prompt.sudo;zypper install 389-ds</screen>
    <para>インストールを行なった後は、サーバを手作業で設定してもかまいません <phrase os="sles;osuse">(詳しくは <xref linkend="sec-security-ldap-server" xrefstyle="select:label"/> をお読みください)</phrase> し、 &yast; で非常に基本的な設定を行なってもかまいません <phrase os="sles;osuse">(詳しくは <xref linkend="sec-security-ldap-server-yast" xrefstyle="select:label"/> をお読みください)</phrase> 。</para>
 </sect1>

 <sect1 xml:id="sec-security-ldap-server" os="sles;osuse">
  <title>&ds389; サーバの手動設定</title>
  <para>&ds389; の設定作業は下記の流れで行ないます:</para>
  <procedure>
   <step>
    <para><!--ディレクトリサーバインスタンスの作成--> <xref linkend="sec-security-ldap-server-instance" xrefstyle="select:title"/></para>
   </step>
   <step>
    <para><!--TSL 接続のための CA 証明書の使用--> <xref linkend="sec-security-ldap-server-ca" xrefstyle="select:title"/></para>
   </step>
   <step>
    <para><!--リモート／ローカルアクセス用の管理者の設定--> <xref linkend="sec-security-ldap-server-credentials" xrefstyle="select:title"/></para>
   </step>
   <step>
    <para><!--ユーザとグループの設定--> <xref linkend="sec-security-ldap-server-users" xrefstyle="select:title"/></para>
   </step>
   <step>
    <para><!--SSSD の設定--> <xref linkend="sec-security-ldap-server-sssd" xrefstyle="select:title"/></para>
   </step>
  </procedure>
  <para><remark>taroth 2019-06-19: some topics like 'configuring other applications' and 'backup and restore' to be added later on</remark></para>
   <!--
    *  configuring other applications (showing "dsidm instance client_config display")
    * backup and restore
   -->
   <para>&ds389; は主に 3 つのコマンドで制御します:</para>
  <variablelist>
   <varlistentry>
    <term><command>dsctl</command></term>
    <listitem>
     <para>ローカルのインスタンス管理に使用するコマンドで、 &rootuser; の権限が必要となります。なお、このコマンドを実行するには、ディレクトリサーバインスタンスの動作しているサーバ内にいなければなりません。起動や停止、データベースのバックアップなどを行なうことができます。</para>
    </listitem>
   </varlistentry>
    <varlistentry>
     <term><command>dsconf</command></term>
     <listitem>
      <para>サーバの管理や設定を行なうための主要なツールです。外部インターフェイスを介してインスタンスの設定を管理することができます。このコマンドを使用することで、インスタンスをリモートから設定変更することができます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>dsidm</command></term>
     <listitem>
      <para>識別子 (ユーザ／グループ／パスワードなど) を管理するために使用します。なお、アクセス制御機能で許可を得ておく必要があります。一般ユーザの場合、自分自身のパスワードのリセットや詳細情報の変更などを行なうことができます。</para>
     </listitem>
    </varlistentry>
  </variablelist>

  <sect2 xml:id="sec-security-ldap-server-instance">
  <title>&ds389; インスタンスの作成</title>
    <para><command>dscreate</command> コマンドを使用することで、インスタンスを作成することができます。このコマンドでは、設定ファイル ( <filename>*.inf</filename> ) を指定することで、インスタンスの設定を行なうことができるほか、対話的に動作させることもできます。</para>
    <note>
     <title>インスタンス名</title>
      <para>何も指定しない場合、既定のインスタンス名は <literal>localhost</literal> になります。作成後にインスタンス名を変更することはできません。</para>
    </note>
    <para><xref linkend="ex-ldap-389-ds-inf" xrefstyle="select:label"/> には、出発点となる設定ファイルの例が示されています。また、 <command>dscreate create-template</command> コマンドを使用することで、雛形となる <filename>*.inf</filename> を作成することもできます。雛形にはコメントや事前の設定値が記述され、後から必要に応じて調整できるようになっています。詳しくは <command>dscreate</command> のマニュアルをお読みください。</para>
   <procedure>
    <step>
     <para>試しにインスタンスを作成したい場合は、エディタを起動して <filename>/tmp/instance.inf</filename> のようなファイル名で下記の内容を保存してください:</para>
     <example xml:id="ex-ldap-389-ds-inf">
      <title>基本的なインスタンス設定ファイル</title>
      <screen># /tmp/instance.inf
[general]
config_version = 2

[slapd]
root_password = <replaceable>YOUR_PASSWORD_FOR_CN=DIRECTORY_MANAGER</replaceable><co xml:id="co-ldap-389-ds-rootpasswd"/>

[backend-userroot]
sample_entries = yes
suffix = dc=example,dc=com</screen>
      <calloutlist>
       <callout arearefs="co-ldap-389-ds-rootpasswd">
        <para><varname>root_password</varname> の箇所には、ディレクトリサーバの &rootuser; ユーザのパスワードを設定します。このパスワードは、 LDAP サーバの管理用にのみ使用します。</para>
       </callout>
      </calloutlist>
     </example>
   </step>
   <step>
    <para><xref linkend="ex-ldap-389-ds-inf" xrefstyle="select:label"/> から &ds389; のインスタンスを作成するには、下記を実行します:</para>
    <screen>&prompt.sudo;dscreate from-file /tmp/instance.inf</screen>
    <para>これにより、 LDAP サーバが作成されます。</para>
   </step>
   <step>
    <para><command>dscreate</command> の実行が失敗した場合は、作成できなかった理由がメッセージとして示されます。詳しくは <option>-v</option> オプションを付けて実行してください:</para>
    <screen>&prompt.sudo;dscreate -v from-file /tmp/instance.inf</screen>
   </step>
   <step>
    <para>次にサーバの動作状況を確認します:</para>
    <screen>&prompt.sudo;dsctl localhost status
instance 'Localhost' is running</screen>
   </step>
   <step>
    <para>インスタンスを削除したい場合は、下記のように入力して実行します:</para>
    <screen>&prompt.sudo;dsctl localhost remove --do-it</screen>
    <para>このコマンドを実行することで、部分的にインストールが完了していたり、壊れてしまったりしたインスタンスを削除することもできます。</para>
   </step>
  </procedure>
 </sect2>

<sect2 xml:id="sec-security-ldap-server-ca">
 <title>TSL 向けの CA (証明機関) 証明書の使用</title>
 <para>&ds389; 向けの CA 証明書の管理にあたっては、下記に示すコマンドラインツールを使用することができます: <command>certutil</command> , <command>openssl</command> , <command>pk12util</command></para>
 <para>テスト用に証明書を作成したい場合は、 <command>dscreate</command> コマンドで自己署名証明書を作成することができます。証明書は <filename>/etc/dirsrv/slapd-localhost/ca.crt</filename> にあるものとして扱われます。リモートから管理を行なう場合は、証明書を読み取り可能な場所にコピーしておいてください。本番環境の場合は、ご利用の証明機関にお問い合わせのうえ、サーバ証明書とクライアント証明書、そしてルート証明書をそれぞれ取得してください。</para>
 <para>下記の手順を実行する前に、まずは以下の要件を全て満たしていることをご確認ください:</para>
 <itemizedlist>
  <listitem>
   <para>TSL 接続時に使用するサーバ証明書と、それに対応する機密鍵を保持していること。</para>
  </listitem>
  <listitem>
   <para>NSS (Network Security Services) データベースを設定してあること (例: <command>certutil</command> コマンド) 。</para>
  </listitem>
 </itemizedlist>

 <procedure>
  <para>NSS (Network Security Services) データベース内に機密鍵と証明書を取り込む場合には、あらかじめ機密鍵とサーバ証明書をひとまとめにしておく必要があります。ひとまとめにしたファイルは <filename>*.p12</filename> (PKCS12 形式) というファイル名になります。</para>
  <important>
  <title><filename>*.p12</filename> ファイルとフレンドリ名について</title>
  <para>PKCS12 形式のバンドルファイル (<filename>*.p12</filename>) を作成する場合、鍵と証明書の対に対して、 <quote>フレンドリ名</quote> を設定しなければなりません。</para>
  <para>本手順で TLS 接続を有効化する場合は、フレンドリ名を <literal>Server-Cert</literal> に設定してください。それ以外の名前を使用してしまうと、 &ds389; が証明書を検出することができず、 TLS 接続ができなくなってしまいます。</para>
  <para>また、 NSS データベースに <filename>*.p12</filename> ファイルを取り込んでしまうと、フレンドリ名は変更できなくなりますのでご注意ください。</para>
 </important>
 <step>
  <para>PKCS12 バンドルファイルを指定のフレンドリ名で作成するには、下記のように入力して実行します:</para>
 <screen>&prompt.root;openssl pkcs12 -export -in <replaceable>SERVER.crt</replaceable> \
  -inkey <replaceable>SERVER.key</replaceable> -out <replaceable>SERVER.p12</replaceable> \
  -name Server-Cert</screen>
  <para>ここで、 <replaceable>SERVER.crt</replaceable> にはサーバの証明書として使用するファイルを、 <replaceable>SERVER.key</replaceable> には対応する機密鍵のファイルをそれぞれ指定します。なお、 <option>-out</option> では <filename>*.p12</filename> ファイルのファイル名を指定します。 <option>-name</option> はフレンドリ名を指定する箇所で、ここは必ず <literal>Server-Cert</literal> のままにしておいてください。</para>
 </step>
 <step>
   <para>ファイルを NSS データベースに取り込むにあたっては、ファイルのパスワードを指定する必要があります。パスワードを指定するには、下記のようなコマンドを入力して実行します:</para>
<screen>pk12util -i <replaceable>SERVER.p12_ファイルのパス</replaceable> -d sql:<replaceable>NSS_データベースのパス</replaceable> -n Server-cert -W <replaceable>SERVER.p12_ファイルのパスワード</replaceable></screen>
   <para>パスワードを設定すると、 <replaceable>NSS_データベースのパス</replaceable> で指定したディレクトリ内に <filename>pwdfile.txt</filename> ファイルが作成されます。</para>
 </step>
 <step>
  <para>あとは <replaceable>SERVER.p12</replaceable> ファイルを NSS データベース内に取り込みます:</para>
  <screen>pk12util -i <replaceable>SERVER.p12</replaceable> -d <replaceable>NSS_データベースのパス</replaceable></screen>
 </step>
 </procedure>
</sect2>

 <sect2 xml:id="sec-security-ldap-server-credentials">
  <title>リモート／ローカルアクセス用の管理者の設定</title>
   <para>&ds389; のリモート管理やローカル管理を行なう目的で、お使いのホームディレクトリ内に <filename>.dsrc</filename> 設定ファイルを作成することができます。このファイルには、ユーザ名や接続の詳細を保存しておくことができます。 <xref linkend="ex-security-ldap-server-credentials-remote" xrefstyle="select:label"/> にはリモート管理用の設定ファイル例が、 <xref linkend="ex-security-ldap-server-credentials-local" xrefstyle="select:label"/> にはローカル管理用の設定ファイル例が、それぞれ示されています。</para>
  <example xml:id="ex-security-ldap-server-credentials-remote">
   <title>リモート管理用の <filename>.dsrc</filename> ファイル</title>
   <screen># cat ~/.dsrc
[localhost]
uri = ldaps://localhost <co xml:id="co-ldap-server-dsrc-remote-localhost"/>
basedn = dc=example,dc=com
binddn = cn=Directory Manager
tls_cacertdir = 証明書ディレクトリのパス <co xml:id="co-ldap-server-dsrc-remote-cert"/></screen>
   <calloutlist>
    <callout arearefs="co-ldap-server-dsrc-remote-localhost">
     <para>LDAP サーバインスタンスを示すように設定する必要があります。何も指定しない場合、既定のインスタンス名として <literal>localhost</literal> が使用されます。</para>
    </callout>
    <callout arearefs="co-ldap-server-dsrc-remote-cert">
     <para>読み取り可能な場所にある証明書のパス、もしくは <command>ds*</command> コマンドを使用するクライアントマシン側でのパスを指定します。</para>
    </callout>
   </calloutlist>
  </example>
  <para>&ds389; が動作するマシン内で管理を行ないたい場合は、 <xref linkend="ex-security-ldap-server-credentials-local" xrefstyle="select:label"/> にある設定ファイル例をお使いください。</para>
  <example xml:id="ex-security-ldap-server-credentials-local">
   <title>ローカル管理用の <filename>.dsrc</filename>　ファイル</title>
   <screen># cat ~/.dsrc
[localhost]
# '/' は '%%2f' に置き換えてください
uri = ldapi://%%2fvar%%2frun%%2fslapd-localhost.socket <co xml:id="co-ldap-server-dsrc-remote-ldapi"/>
basedn = dc=example,dc=com
binddn = cn=Directory Manager
</screen>
   <calloutlist>
    <callout arearefs="co-ldap-server-dsrc-remote-ldapi">
      <para><!--Question: “When I use ldapi on the server that has the DS instance, why don’t I need to provide my password?”--> &ds389; インスタンスが動作しているのと同じマシンで実行する場合、 <literal>ldapi</literal> を指定することで、 UID/GID を自動的に検出するようになります。これが <literal>0/0</literal> である場合 (つまり、 &rootuser; である場合) 、 <literal>ldapi</literal> はディレクトリサーバインスタンスの root dn ( <literal>cn=Directory Manager</literal> ) でバインドすることができます。これにより、 &rootuser; はサーバ内ローカルでの管理を行なうことができますが、 <literal>cn=Directory Manager</literal> のパスワードを知らなくても管理ができることになります。つまり、 &ds389; のインスタンスが動作するサーバ内で管理者権限を持っていれば、誰でも <literal>cn=Directory Manager</literal> として接続できることになります。</para>
    </callout>
   </calloutlist>
  </example>
 </sect2>

 <sect2 xml:id="sec-security-ldap-server-users">
  <title>&yast; での LDAP ユーザとグループの設定</title>
   <para>ユーザとグループは <command>dsidm</command> コマンドで作成および管理を行ないます。このコマンドは対話的に動作させることができるほか、コマンドラインでパラメータを指定して実行することもできます。</para>
  <para>下記の例では 2 人のユーザ &exampleuserII; と &exampleuserIII; を作成します。このとき、必要なデータはコマンドラインパラメータで指定します。</para>
  <procedure xml:id="pro-security-ldap-server-users">
   <title>LDAP ユーザの作成</title>
   <step>
    <para>&exampleuserII; ユーザを作成します:</para>
    <screen>&prompt.sudo;<command>dsidm</command> localhost user create --uid \
  --cn &exampleuserII; --displayName '&exampleuserIIfull;' --uidNumber 1000 --gidNumber 1000 \
  --homeDirectory /home/&exampleuserII;</screen>
   </step>
   <step>
    <para>ユーザの <literal>distinguished name</literal> (DN) 名 (ディレクトリオブジェクトに対する完全修飾名、つまり唯一性の保証された名前) を参照するには、下記のように入力して実行します:</para>
    <screen>&prompt.sudo;dsidm localhost user get &exampleuserII;
dn: uid=&exampleuserII;,ou=people,dc=example,dc=com
[...]</screen>
    <para>この場合、まずはディレクトリサーバの &rootuser; のパスワードを入力することになります (ただし、 <xref linkend="sec-security-ldap-server-credentials"/> でリモートもしくはローカルのアクセス方法を指定した場合を除きます) 。</para>
    <para>ユーザのパスワード変更などの処理を行なうには、 <literal>distinguished name</literal> (DN) を指定する必要があります。</para>
   </step>
   <step>
    <para>&exampleuserII; のパスワードを設定もしくは変更するには、下記のように入力して実行します:</para>
    <substeps>
      <step>
       <screen>&prompt.sudo;dsidm localhost account reset_password \
  uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
       <para>この場合、まずはディレクトリサーバの &rootuser; のパスワードを入力することになります (ただし、 <xref linkend="sec-security-ldap-server-credentials"/> でリモートもしくはローカルのアクセス方法を指定した場合を除きます) 。</para>
      </step>
      <step>
       <para>あとは &exampleuserII; に設定するパスワードを 2 回入力します。</para>
       <para>パスワードの設定が完了すると、下記のようなメッセージが表示されるはずです:</para>
       <screen>reset password for uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
      </step>
    </substeps>
   </step>
   <step>
    <para>続いて &exampleuserIII; ユーザを作成します:</para>
    <screen>&prompt.sudo;<command>dsidm</command> localhost user create --uid \
  --cn &exampleuserIII; --displayName '&exampleuserIIIfull;' \
  --uidNumber 1001 --gidNumber 1001 --homeDirectory /home/&exampleuserIII;</screen>
   </step>
  </procedure>
  <procedure xml:id="pro-security-ldap-server-groups">
   <title>LDAP グループの作成とユーザの割り当て</title>
   <para>下記の手順では <systemitem class="groupname">server_admins</systemitem> という名前のグループを作成し、そのグループに &exampleuserII; ユーザを所属させます。</para>
   <step>
    <para>まずはグループを作成します:</para>
    <screen>&prompt.sudo;dsidm localhost group create</screen>
    <para>すると、グループ名を尋ねられます:</para>
    <screen>Enter value for cn :</screen>
   </step>
   <step>
    <para>ここではグループ名を入力します (例: <literal>server_admins</literal>) 。</para>
   </step>
   <step>
    <para>&exampleuserII; ユーザをグループに追加します:</para>
    <screen>&prompt.sudo;dsidm localhost group add_member server_admins uid=&exampleuserII;,ou=people,dc=example,dc=com
added member: uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
   </step>
   <step>
    <para>認証が正しく動作することを確認します:</para>
   <screen>&prompt.sudo;ldapwhoami -H ldaps://localhost -D \
  uid=&exampleuserII;,ou=people,dc=example,dc=com -W -x</screen>
    <para>&exampleuserII; の LDAP パスワードの入力を求められれば、認証は動作していることになります。</para>
    <para>下記のようなエラーメッセージでコマンドが失敗する場合は、おそらく自己署名証明書を使用しているものと思われます:</para>
    <screen>ldap_sasl_bind(SIMPLE): Can't contact LDAP server (-1)</screen>
    <para>このような場合は、 <filename>/etc/openldap/ldap.conf</filename> ファイルを編集して、証明書のパスを追加してください。たとえば下記のようになります:</para>
    <screen>TLS_CACERT /etc/dirsrv/slapd-localhost/ca.crt</screen>
    <para>それ以外にも、 <filename>whoami</filename> コマンド内で証明書のパスを指定してもかまいません:</para>
    <screen>&prompt.sudo;LDAPTLS_CACERT=/etc/dirsrv/slapd-localhost/ca.crt \
  ldapwhoami -H ldaps://localhost -D \
  uid=&exampleuserII;,ou=people,dc=example,dc=com -W -x</screen>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-security-ldap-server-sssd">
  <title>SSSD の設定</title>
  <para>SSSD (System Security Services Daemon) はリモートの識別子プロバイダとの通信を行ない、 <literal>pam</literal> や <literal>nsswitch</literal> にデータを渡すことのできるデーモンです。 SSSD には複数のバックエンドを設定することができるほか、ユーザとグループのキャッシュ機能や、 SSH の鍵配布などの機能に対応しています。</para>
  <procedure>
   <step>
     <para>まずは別のサーバに <systemitem>sssd</systemitem> パッケージをインストールします:</para>
    <screen>&prompt.sudo;zypper in sssd</screen>
   </step>
   <step>
    <para><systemitem class="daemon">sssd</systemitem> と衝突してしまうことから、 <systemitem class="daemon">nscd</systemitem> デーモンを無効化して停止します:</para>
    <screen>&prompt.sudo;systemctl disable nscd &amp;&amp; systemctl stop nscd</screen>
   </step>
   <step>
    <para>SSSD の設定ファイルを作成して、 <xref linkend="pro-security-ldap-server-groups" xrefstyle="select:label"/> で作成しておいた <systemitem class="groupname">server_admins</systemitem> グループのメンバーのみがログインできるように設定します:</para>
    <screen>&prompt.sudo;dsidm localhost client_config sssd.conf server_admins</screen>
   </step>
   <step>
    <para>出力内容を確認して、内容を <filename>/etc/sssd/sssd.conf</filename> に貼り付けます。必要であれば、ここから設定ファイルを調整してもかまいません。</para>
   </step>
   <step>
    <para>お使いのクライアントで証明書を設定するには、 LDAP サーバからクライアントに対して、 <filename>ca.crt</filename> をコピーします:</para>
    <screen>&prompt.sudo;mkdir -p /etc/openldap/certs
cp [...]&gt;/ca.crt /etc/openldap/certs/
/usr/bin/c_rehash /etc/openldap/certs</screen>
   </step>
   <step>
    <para>SSSD を有効化して開始します:</para>
    <screen>&prompt.sudo;systemctl enable sssd
systemctl start sssd</screen>
   </step>
   <step>
    <para>SSSD を PAM と NSS の一部として動作させる場合は、 <link xlink:href="http://www.port389.org/docs/389ds/howto/howto-sssd.html"/> にある <citetitle>Configure PAM (&suse;)</citetitle> と <citetitle>Configure NSS (&suse;)</citetitle> の手順に従って作業を行なってください。</para>
   </step>
   <step>
    <para>あとはクライアント側で、 &exampleuserII; ユーザの詳細情報が取得できることを確認します:</para>
    <screen>&prompt.sudo;id &exampleuserII;
    uid=1000(&exampleuserII;) gid=100(users) groups=100(users)</screen>
    <para>全ての設定が完了すると、 &exampleuserII; は &ds389; の情報をもとに、 SSH を介して SSSD を設定したマシンにログインできるようになります。 &exampleuserII; がログインできない場合は、 <xref linkend="pro-security-ldap-server-groups" xrefstyle="select:label"/> の手順で示した <literal>server_admins</literal> グループへの所属をご確認ください。</para>
   </step>
  </procedure>
 </sect2>
</sect1>

<sect1 xml:id="sec-security-ldap-server-yast" os="sles;osuse">
 <title>&yast; での &ds389; の設定</title>
  <para>&yast; を使用することで、 &ds389; の非常に基本的な設定を素早く行なうことができます。</para>
 <sect2 xml:id="sec-security-ldap-server-yast-create">
  <title>&yast; による &ds389; インスタンスの作成</title>
  <procedure>
   <step>
   <para>&yast; を起動して、 <menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>Create New Directory Server</guimenu> </menuchoice> を選択します。それ以外にも、コマンドラインから <command>yast2 ldap-server</command> と入力して実行してもかまいません。</para>
   <para>新しいウインドウが表示されたら、必須の項目にそれぞれ入力を行ないます。</para>
  </step>
  <step>
   <para>まずは &ds389; の <guimenu>完全修飾ドメイン名</guimenu> を入力します。この名前は、ホスト側から解決可能なものでなければなりません。</para>
  </step>
  <step>
   <para><guimenu>Directory server instance name</guimenu> には、 LDAP サーバインスタンスに対するローカルの名前を入力します。</para>
   <note>
    <title>インスタンス名</title>
    <para>インスタンス名は作成後に変更 <emphasis>できません</emphasis> 。 LDAP サーバを 1 つだけ起動したい場合は、既定のインスタンス名である <literal>localhost</literal> をお使いください。複数の LDAP サーバを起動する場合は、それぞれのインスタンスを表わすわかりやすい名前を入力してください。</para>
   </note>
  </step>
  <step>
   <para><guimenu>ディレクトリサフィックス</guimenu> には、 LDAP ツリー内でベースとなるドメイン名を入力します。ただし、ドメイン名はコンポーネントで区切る必要があります。たとえば <literal>example.com</literal> というドメイン名であれば、 <literal>dc=example,dc=com</literal> のようになります。</para>
  </step>
  <step>
   <para>必須のセキュリティオプションでは、まずディレクトリマネージャ (LDAP の root (管理者) アカウント) のパスワードを 2 度入力します。パスワードは 8 文字以上でなければなりません。</para>
  </step>
    <step>
     <para>CA 証明書を利用して &ds389; を動作させたい場合は、下記のオプションをそれぞれ設定します:</para>
     <substeps>
      <step>
       <para><guimenu>Server TLS certificate authority in PEM format</guimenu> の欄に、サーバ証明書に対して署名を行なった証明機関の証明書を指定します。 <remark>taroth 2020-01-22: string may be simplified in the future, see https://github.com/yast/yast-auth-server/issues/55</remark></para>
      </step>
      <step>
       <para>次に <guimenu>Server TLS certificate and key in PKCS12 format with friendly name "Server-Cert"</guimenu> の欄にファイルパスを入力します。ここで指定するファイルは、 <filename>*.p12</filename> 形式であり、かつサーバの機密鍵と証明書をそれぞれ含んでいるものでなければなりません。これらは上述の PEM 形式の証明書の証明機関が署名しているものでなければなりません。また、 <guimenu>フレンドリ名</guimenu> は <literal>Server-Cert</literal> でもなければなりません。詳しくは <xref linkend="sec-security-ldap-server-ca"/> をお読みください。 <remark>taroth 2020-01-22: string may be simplified in the future, see https://github.com/yast/yast-auth-server/issues/55</remark></para>
       <para>ここで証明機関の証明書を指定しない場合は、自己署名型の証明書が自動生成されます。インスタンスを作成したあとは、 <filename>/etc/dirsrv/slapd-<replaceable>インスタンス名</replaceable></filename> にある関連ファイルをご覧ください。</para>
      </step>
     </substeps>
    </step>
   <step>
   <para>必要な設定を終えたら、最後に <guimenu>OK</guimenu> を押すと、インスタンスを作成することができます。</para>
   <informalfigure>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2-ldap-server.png" width="95%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2-ldap-server.png" width="90%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </informalfigure>
   <para>&yast; では作成が成功したかどうかと、関連するログファイルの場所を表示します。</para>
  </step>
  </procedure>

 <!--taroth 2020-01-28: disabling reference to commented section-->
 <!--
 <para>
  After you have created the instance, you can configure LDAP users and groups
  as shown in <xref linkend="sec-security-ldap-yast-usergr" xrefstyle="select:label"/>.
 </para>-->
 <para>&yast; では &ds389; のごく基本的な設定機能のみを提供しています。より詳しい設定を行ないたい場合は <xref linkend="sec-security-ldap-server"/> を参照するか、 <xref linkend="sec-security-ldap-info"/> 内で言及しているドキュメンテーションをお読みください。</para>
</sect2>

<!--taroth 2020-01-27: commenting this section for now as agreed with firstyear-->
<!--<sect2 xml:id="sec-security-ldap-yast-usergr">
  <title>Configuring LDAP Users and Groups in &yast;</title>
  <procedure>
   <step>
    <para>
     Access the &yast; user administration with <menuchoice>
     <guimenu>Security and Users</guimenu><guimenu>User and Group
     Management</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     To view and manage LDAP users, click the <guimenu>Users</guimenu> tab.
    </para>
   </step>
   <step>
    <para>
     Select <menuchoice><guimenu>Set Filter</guimenu>
     <guimenu>LDAP Users</guimenu></menuchoice> and enter the password for
     Root DN.
     <remark>taroth 2020-01-24: argh, this does not work for me, need to check
     with firstyear</remark>
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu> to enter the user configuration. A dialog
     with four tabs opens:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Specify the user's name, login name, and password in the
       <guimenu>User Data</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Check the <guimenu>Details</guimenu> tab for the group membership,
       login shell, and home directory of the new user. If necessary, change
       the default to values that better suit your needs.
<!-\- The default values
       (as well as those of the password settings) can be defined with the
       procedure described in
       <xref linkend="sec-security-auth-yast-client-conf-mod"/>.-\->
      </para>
     </step>
     <step>
      <para>
       Modify or accept the default <guimenu>Password Settings</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Enter the <guimenu>Plug-Ins</guimenu> tab, select the LDAP plug-in,
       and click <guimenu>Launch</guimenu> to configure additional LDAP
       attributes assigned to the new user.
<!-\- (see
       <xref linkend="fig-ldap-y2-adset"/>).-\->
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Click <guimenu>OK</guimenu> to apply your settings and leave the user
     configuration.
    </para>
   </step>
  </procedure>

 <para>
  You can administer groups in a similar way on the <guimenu>Groups</guimenu>
  tab.
</para>
<!-\-
  <figure id="fig-ldap-y2-adset">
   <title>&yast;: Additional LDAP Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  -\->

  <para>
   The initial input form of user administration offers <guimenu>LDAP
   Options</guimenu>. This allows you to apply LDAP search filters to the
   set of available users. Alternatively open the module for configuring
   LDAP users and groups by selecting <guimenu>LDAP User and Group
   Configuration</guimenu>.
  </para>
 </sect2>
-->
<sect2 xml:id="sec-security-ldap-yast-client">
  <title>&yast; による LDAP クライアントの設定</title>
  <para>&yast; には <guimenu>LDAP および Kerberos クライアント</guimenu> モジュールが用意されています。このモジュールでは、 LDAP や Kerberos を利用する認証を設定することができます。</para>
  <para>Kerberos と LDAP を個別に参加させるように使用することもできます。そのような場合、たとえば &ad; への参加 (LDAP と Kerberos を組み合わせて使用します) などでは、 このモジュールは最初の選択とはならないかもしれません。詳しくは <xref linkend="sec-security-auth-yast-client"/> をお読みください。</para>
  <para><menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>LDAP および Kerberos クライアント</guimenu> </menuchoice> を選択して、モジュールを起動します。</para>
  <figure xml:id="fig-yast2-ldapkerberos-ldap">
   <title><guimenu>LDAP および Kerberos クライアント</guimenu> のウインドウ</title>
   <mediaobject>
    <imageobject role="html">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>LDAP クライアントを設定するには、下記の手順を実施します:</para>
  <procedure xml:id="pro-security-auth-ldap">
   <step>
    <para><guimenu>LDAP および Kerberos クライアント</guimenu> のウインドウ内で、 <guimenu>設定の変更</guimenu> を押します。</para>
    <para>このとき、 <guimenu>ディレクトリを識別子プロバイダとして使用する (LDAP)</guimenu> を選択していることを確認してください。</para>
    <informalfigure>
     <mediaobject>
      <imageobject role="html">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para><!-- wbrown 2019-02-25: URLs or hostnames only. IP address would break TLS cn/san checking. --> <guimenu>LDAP サーバの場所</guimenu> 内に、 1 つもしくは複数の LDAP サーバ URL やホスト名を入力します。セキュリティ上の理由から、 <literal>LDAPS://</literal> URL を使用することをお勧めします。また、複数のアドレスを指定する場合は、スペースで区切って指定してください。</para>
   </step>
   <step>
    <para>次に <guimenu>検索ベースの DN</guimenu> 内に、 LDAP の識別名 (DN) を指定します。たとえば <literal>dc=example,dc=com</literal> のように指定します。</para>
   </step>
   <step>
    <para>お使いの LDAP サーバが TLS による暗号化に対応している場合は、 <guimenu>LDAP 通信の暗号化</guimenu> 以下のオプションを選択します。</para>
    <para>サーバ側に問い合わせて、 TLS による暗号化に対応していれば暗号化を使用し、そうでない場合は使用せずに接続したい場合は、 <guimenu>StartTLS を利用して通信を暗号化する</guimenu> を選択します。</para>
   </step>
   <step>
    <para>その他のオプションについては、必要に応じて設定を行ないます:</para>
    <itemizedlist>
     <listitem>
      <para>必要に応じて、 <guimenu>LDAP のユーザに対して認証を許可する</guimenu> と <guimenu>自動的にホームディレクトリを作成する</guimenu> を選択します。</para>
     </listitem>
     <listitem>
      <para>LDAP の項目をローカルにキャッシュしておきたい場合は、 <guimenu>より高速な応答のため LDAP の項目をキャッシュする</guimenu> を選択します。</para>
      <warning>
       <title>キャッシュによる潜在的なセキュリティリスクについて</title>
       <para>お使いの認証機構によっては、このキャッシュ機能がセキュリティリスクを引き起こすことがあります。</para>
       <variablelist>
        <varlistentry>
         <term>nscd</term>
         <listitem>
          <para>認可ルール (たとえば <literal>admin</literal> グループのメンバーのみにログインを許可するルール) が存在している場合、そのグループからユーザを削除しても、クライアント側にキャッシュが残ってしまっていると、そのキャッシュが更新されるまではログインができてしまうことになります。また、アカウントを削除された場合でも、一定時間はログインができることにもなります。</para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>sssd</term>
         <listitem>
          <para>このキャッシュ機構は、グループのメンバー情報が正しいかどうかを定期的に確認します。そのため、 <literal>sssd</literal> デーモンを利用した場合のリスクは、 LDAP サーバとの通信が切断された場合にのみ発生します。</para>
         </listitem>
        </varlistentry>
       </variablelist>
      </warning>
     </listitem>
     <listitem>
      <para>さらに LDAP の情報源から使用すべきデータの種類 (たとえば <guimenu>ユーザ</guimenu> ,  <guimenu>グループ</guimenu> , <guimenu>スーパーユーザコマンド</guimenu> , <guimenu>ネットワークディスクの場所</guimenu> (必要に応じて自動的にマウントすることのできる共有ドライブ)) を指定します。</para>
     </listitem>
     <listitem>
      <para><guimenu>バインドユーザの DN</guimenu> および <guimenu>バインドユーザのパスワード</guimenu> に、 LDAP ディレクトリにバインドする際のユーザの識別名 (DN) とパスワードを指定します。</para>
      <para>サーバに対して匿名でバインドしたい場合は、サーバ側でのサポートが必要になりますが、これらのテキストボックスには何も入力しないでください。</para>
      <warning>
       <title>暗号化を行なわない認証について</title>
       <para>TLS や StartTLS を利用した伝送路の暗号化を使用せずに認証を行なうと、パスワードは平文のまま転送されてしまいます。</para>
       <!--for the records:
        sknorr, 2017-03-01: Is the YaST dialog compatible with SASL in any way?
        wbrown 2019-02-26: SASL is too complicated for a setup like this,
        not worth including.
       -->
      </warning>
     </listitem>
    </itemizedlist>
    <para><guimenu>拡張オプション</guimenu> 内では、追加でバインド操作時のタイムアウトを設定することができます。</para>
   </step>
   <step>
    <para>LDAP が正しく接続できるかどうかを確認したい場合は、 <guimenu>接続のテスト</guimenu> を押してください。</para>
   </step>
   <step>
    <para>ダイアログを閉じるには、 <guimenu>OK</guimenu> を押します。設定の書き込みが終わるまで、しばらくお待ちください。</para>
    <para>全ての設定が終わったら、 <guimenu>完了</guimenu> を押して閉じます。</para>
   </step>
  </procedure>
 </sect2>
</sect1>

 <sect1 xml:id="sec-security-ldap-data" os="sles;osuse">
  <title>LDAP データの手動管理</title>
   <para><systemitem>openldap2-client</systemitem> パッケージが提供するコマンドラインツール (たとえば <command>ldapsearch</command> や <command>ldapmodify</command> など) を使用することで、 LDAP ディレクトリ内のデータを管理することができます。しかしながら、これらのツールは低レベルなツールであり、使いやすさの点では劣ります。これらの使い方に関する詳細は、それぞれのマニュアルページもしくはドキュメンテーションをお読みください。</para>
 </sect1>

<sect1 xml:id="sec-security-ldap-info">
  <title>さらなる情報</title>
  <para>&ds389; に関する詳細については、提供元のドキュメンテーションをお読みください。ドキュメンテーションは <link xlink:href="http://www.port389.org/docs/389ds/documentation.html"/> にあります。</para>
 </sect1>
</chapter>
