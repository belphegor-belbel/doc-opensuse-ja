<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.security.ldap">
 <title>LDAP ディレクトリサービス</title>
 <info>
      <abstract>
        <para>軽量ディレクトリアクセスプロトコル (Lightweight Directory Access Protocol (LDAP)) は、情報ディレクトリにアクセスしたり情報ディレクトリを管理したりするためのプロトコル集です。 LDAP はユーザやグループのほか、システム設定の管理やアドレスの管理などにも使用することができます。本章では、 OpenLDAP の基本的な動作について説明しています。</para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>

  <para>実際には、中央のサーバがディレクトリ内にデータを保管しておき、全てのクライアントに対しては明確に定義されたプロトコルで配布を行ないます。構造化されたデータの仕組みにより、様々なアプリケーションがそれらのデータにアクセスできるようになります。中央のサーバ (リポジトリとも呼びます) を用意することで管理の手間を省き、 LDAP のようなオープンで標準化されたプロトコルを使用することで、そこで管理されている情報にアクセスするプログラムをできる限り多く用意することができます。</para>
  <para>
   A directory in this context is a type of database optimized for quick and
   effective reading and searching. The type of data stored in a directory tends
   to be long lived and changes infrequently. This allows the LDAP service to be
   optimized for high performance concurrent reads, whereas conventional databases
   are optimized for accepting a large number of writes to data in a short time.
  </para>

 <sect1 xml:id="sec.security.ldap.tree">
  <title>LDAP のディレクトリツリー構造</title>
<!--
  taroth 2019-02-27: acc. to wbrown the content of this section is still correct,
  but the section should be revised in the future - for input, see
  https://fy.blackhats.net.au/blog/html/pages/ldap_guide_part_1_foundations.html
-->
   <para>
   This section introduces the layout of an LDAP directory tree and provides
   the basic terminology used with regard to LDAP. <phrase os="sles;osuse">If
    you are familiar with LDAP, read on at <xref linkend="sec.security.ldap.server"/>.
   </phrase>
  </para>

  <para>LDAP ディレクトリはツリー型の構造になっています。ディレクトリ内の全ての項目 (オブジェクトと呼びます) は、この階層構造内での位置が決められています。この階層構造を <emphasis>ディレクトリ情報ツリー</emphasis> (Directory Information Tree (DIT)) と呼びます。また、特定の項目に対して、それを正確に識別するためのパス情報を、 <emphasis>識別名</emphasis> (Distinguished Name (DN)) と呼びます。また、ファイルシステムと同様に、 DN も相対的な表記を行なうことができます。これを <emphasis>相対識別名</emphasis> (Relative Distinguished Name (RDN)) と呼びます。</para>

  <para>LDAP ディレクトリツリーの構造を図に表わすと、 <xref linkend="fig.ldap.tree"/> のようになります。</para>

  <figure xml:id="fig.ldap.tree">
   <title>LDAP ディレクトリの構造</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_tree.svg" width="85%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_tree.png" width="85%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>上記は架空のディレクトリ情報ツリーを表わしています。そのうち、 3 階層分の項目のみを図示しています。図の中では、各項目を 1 つの箱として表わしています。たとえば架空の従業員である <systemitem class="username">Geeko Linux</systemitem> に対する完全な <emphasis>識別名 (DN)</emphasis> は、 <literal>cn=Geeko Linux,ou=doc,dc=example,dc=com</literal> となります。これは相対識別名である <literal>cn=Geeko Linux</literal> に対して、階層構造上の親である <literal>ou=doc,dc=example,dc=com</literal> を追加することによります。</para>

<!-- ke: yes, these things are called "Schema" -->

  <para>ディレクトリ情報ツリー (DIT) 内に保管できるオブジェクトの種類は、 <emphasis>スキーマ</emphasis> と呼ばれるものに従って設定されます。オブジェクトの種類は <emphasis>オブジェクトクラス</emphasis> と呼ばれ、それに対応するスキーマで、そのオブジェクトが設定しなければならない値や、設定できる値が示されます。そのためスキーマは、特定の用途で使用される全てのオブジェクトクラスや属性の定義を含んでいなければならないことになります。一般的なスキーマとしてはいくつかのものが規定されています (RFC 2252 および RFC 2256) 。 LDAP RFC でも、いくつかの一般的なスキーマが規定されています (RFC 4519 など) 。これに加えて、様々な用途に対応するスキーマが用意されています (たとえば Samba や NIS の代替など) 。もちろん、独自のスキーマを作成して使用することもできますし、必要であれば、お互いに補完し合うような関係の複数のスキーマを使用することもできます。</para>

  <para><xref linkend="tab.ldap.schema"/> には、 <filename>core.schema</filename> や <filename>inetorgperson.schema</filename> で規定されているオブジェクトクラスの一部と、それらで必須とされている属性を紹介しています。 <!-- intro abbrev "Req. Attr." too shorten the table header --></para>

  <table xml:id="tab.ldap.schema">
   <title>よく使用されるオブジェクトクラスと属性</title>
   <tgroup cols="4">
    <colspec colname="c1" colwidth="30*"/>
    <colspec colname="c2" colwidth="40*"/>
    <colspec colname="c3" colwidth="16*"/>
    <colspec colname="c4" colwidth="14*"/>
    <thead>
     <row>
      <entry>
       <para>オブジェクトクラス</para>
      </entry>
      <entry>
       <para>意味</para>
      </entry>
      <entry>
       <para>値の例</para>
      </entry>
      <entry>
       <para>必須の属性</para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para><literal>dcObject</literal></para>
      </entry>
      <entry>
       <para>
        name components of the domain
       </para>
      </entry>
      <entry>
       <para>example</para>
      </entry>
      <entry>
       <para>
        displayName
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para><literal>organizationalUnit</literal></para>
      </entry>
      <entry>
       <para><literal>organizationalUnit</literal></para>
      </entry>
      <entry>
       <para>doc</para>
      </entry>
      <entry>
       <para>ou</para>
      </entry>
     </row>
     <row>
      <entry>
       <para><literal>inetOrgPerson</literal></para>
      </entry>
      <entry>
       <para><emphasis>inetOrgPerson</emphasis> (イントラネットもしくはインターネットの個人に関するデータ)</para>
      </entry>
      <entry>
       <para>Geeko Linux</para>
      </entry>
      <entry>
       <para>
        cn
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>また <xref linkend="aus.ldap.schema.help"/> では、スキーマ定義の例を示しています。</para>

  <example xml:id="aus.ldap.schema.help">
   <title>schema.core からの抜粋</title>
<screen>attributetype (2.5.4.11 NAME ( 'ou' 'organizationalUnitName') <co xml:id="co.ldap.schema.core.att_type"/>
       DESC 'RFC2256: organizational unit this object belongs to' <co xml:id="co.ldap.schema.core.desc"/>
       SUP name ) <co xml:id="co.ldap.schema.core.sup"/>

objectclass ( 2.5.6.5 NAME 'organizationalUnit' <co xml:id="co.ldap.schema.core.oc"/>
       DESC 'RFC2256: an organizational unit' <co xml:id="co.ldap.schema.core.desc.oc"/>
       SUP top STRUCTURAL <co xml:id="co.ldap.schema.core.sup.oc"/>
       MUST ou <co xml:id="co.ldap.schema.core.must.oc"/>
MAY (userPassword $ searchGuide $ seeAlso $ businessCategory <co xml:id="co.ldap.schema.core.may.oc"/>
  $ x121Address $ registeredAddress $ destinationIndicator
  $ preferredDeliveryMethod $ telexNumber
  $ teletexTerminalIdentifier $ telephoneNumber
  $ internationaliSDNNumber $ facsimileTelephoneNumber
  $ street $ postOfficeBox $ postalCode $ postalAddress
  $ physicalDeliveryOfficeName
  $ st $ l $ description) )
  ...</screen>
  </example>
  <calloutlist>
   <callout arearefs="co.ldap.schema.core.att_type">
    <para>属性の名前とユニークな OID (<emphasis>オブジェクト識別子 (Object Identifier)</emphasis>) (数字) 、そして属性の略称を表わしています。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.desc">
    <para><literal>DESC</literal> では属性に対する簡潔な説明を記します。定義の元となった RFC などがあれば、それも記述されます。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.syntax">
    <para>
      The type of data that can be held in the attribute. In this case, it is a
      case-insensitive directory string.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.xorigin">
    <para>
     The source of the schema element (for example, the name of the project).
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.oc">
    <para>オブジェクトクラス <literal>organizationalUnit</literal> の定義の始まりです。オブジェクトクラスの定義は属性の定義と同じで、 OID とオブジェクトクラスの名前をそれぞれ記します。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.desc.oc">
    <para>そのオブジェクトクラスに対する簡潔な説明です。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.sup.oc">
    <para><literal>SUP top</literal> と書くことで、このオブジェクトクラスの上位に存在するオブジェクトクラスが存在していないことを表わしています。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.must.oc">
    <para><literal>MUST</literal> 以下には、 <literal>organizationalUnit</literal> のオブジェクトクラスで、設定されなければならない全ての属性種類を記します。</para>
   </callout>
   <callout arearefs="co.ldap.schema.core.may.oc">
    <para><literal>MAY</literal> 以下には、そのオブジェクトクラスで設定することのできる全ての属性種類を記します。</para>
   </callout>
  </calloutlist>
 </sect1>

 <sect1 xml:id="sec.security.ldap.server.install">
  <title>Installing the Software for &ds389;</title>
   <para>
    The <systemitem>389-ds</systemitem> package contains the &ds389; and the
    administration tools. If the package is not installed yet, install it with
    the following command:</para>
    <screen>&prompt.sudo;zypper install 389-ds</screen>
    <para>
     After installation, you can set up the server either manually or with &yast;.
     Also, you can manage LDAP users and groups and configure an LDAP client with
     &yast;:
    </para>
   <itemizedlist os="sles;osuse">
    <listitem>
     <para>
      <xref linkend="sec.security.ldap.server"/>
     </para>
    </listitem>
   <listitem>
    <para>
     <xref linkend="sec.security.auth.yast"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.security.ldap.yast.usergr"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.security.ldap.yast.client"/>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec.security.ldap.server" os="sles;osuse">
  <title>LDAP サーバの手動設定</title>
  <para>
   Setting up the &ds389; takes the following basic steps:
  </para>
  <procedure>
    <step>
    <para>
     <!--Creating the Directory Server Instance-->
     <xref linkend="sec.security.ldap.server.instance" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <!--Configuring Admin Credentials for Remote/Local Access-->
      <xref linkend="sec.security.ldap.server.credentials" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
    <!--Configuring Users and Groups-->
     <xref linkend="sec.security.ldap.server.users" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
    <!--Configuring SSSD-->
     <xref linkend="sec.security.ldap.server.sssd" xrefstyle="select:title"/>
    </para>
   </step>
  </procedure>
  <para>
   <remark>taroth 2019-06-19: some topics like 'configuring other applications'
    and 'backup and restore' to be added later on</remark>
  </para>
   <!--
    *  configuring other applications (showing "dsidm instance client_config display")
    * backup and restore
   -->
   <para>
   The &ds389; is controlled by 3 primary commands:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>dsctl</command></term>
    <listitem>
     <para>
      Manages a local instance and requires &rootuser; permissions. Requires you
      to be connected to a terminal which is running the directory server instance.
      Used for starting, stopping, backing up the database and more.
     </para>
    </listitem>
   </varlistentry>
    <varlistentry>
     <term><command>dsconf</command></term>
     <listitem>
      <para>
       The primary tool used for administration and configuration of the server.
       Manages an instance's configuration via its external interfaces. This allows
       you to make configuration changes remotely on the instance.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>dsidm</command></term>
     <listitem>
      <para>
       Used for identity management (manage users, groups, passwords etc.).
       The permissions are granted by access controls, so users can reset their
       own password or change details of their own account, for example.
      </para>
     </listitem>
    </varlistentry>
  </variablelist>

  <sect2 xml:id="sec.security.ldap.server.instance">
  <title>Creating the &ds389; Instance</title>
    <para>
     You create the instance with the <command>dscreate</command> command.
     It can take a configuration file (<filename>*.inf</filename>) which
     defines the instance configuration settings. Alternatively, the command can
     be run in an interactive mode.
    </para>
    <note>
     <title>Instance Name</title>
      <para>
       If not specified otherwise, the default instance name is
       <literal>localhost</literal>. The instance name cannot
       be changed after the instance has been created.</para>
    </note>
    <para>
     <xref linkend="ex.ldap.389-ds.inf" xrefstyle="select:label"/> shows an
     example configuration file that you can use as a starting point. Alternatively,
     use <command>dscreate create-template</command> to create a template
     <filename>*.inf</filename> file. The template is commented and pre-filled,
     so you can adjust its variables to your needs. For more details, see the
     man page of <command>dscreate</command>.
    </para>
   <procedure>
    <step>
     <para>
      If you want to set up a trial instance, start an editor and save the
      following as <filename>/tmp/instance.inf</filename>:
     </para>
     <example xml:id="ex.ldap.389-ds.inf">
      <title>Basic Instance Configuration File</title>
      <screen># /tmp/instance.inf
[general]
config_version = 2

[slapd]
root_password = <replaceable>YOUR_PASSWORD_FOR_CN=DIRECTORY_MANAGER</replaceable><co xml:id="co.ldap.389-ds.rootpasswd"/>

[backend-userroot]
sample_entries = yes
suffix = dc=example,dc=com</screen>
      <calloutlist>
       <callout arearefs="co.ldap.389-ds.rootpasswd">
        <para>
         Set the <varname>root_password</varname> to the password for
         the directory server &rootuser; user. The password is used for LDAP
         server administration only.
        </para>
       </callout>
      </calloutlist>
     </example>
   </step>
   <step>
    <para>
     To create the &ds389; instance from <xref linkend="ex.ldap.389-ds.inf" xrefstyle="select:label"/>, run:
    </para>
    <screen>&prompt.sudo;dscreate from-file /tmp/instance.inf</screen>
    <para>
     This creates a working LDAP server.
    </para>
   </step>
   <step>
    <para>
     If <command>dscreate</command> should fail, the messages will tell you why.
     For more details, repeat the command with the <option>-v</option> option:
    </para>
    <screen>&prompt.sudo;dscreate -v from-file /tmp/instance.inf</screen>
   </step>
   <step>
    <para>
     Check the status of the server with:
    </para>
    <screen>&prompt.sudo;dsctl localhost status
instance 'Localhost' is running</screen>
   </step>
   <step>
    <para>
     In case you want to delete the instance later on:
    </para>
    <screen>&prompt.sudo;dsctl localhost remove --do-it</screen>
    <para>
     With this command, you can also remove partially installed or corrupted
     instances.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.security.ldap.server.credentials">
  <title>Configuring Admin Credentials for Remote/Local Access</title>
   <para>
    For remote or local administration of the &ds389;, you can create a
    <filename>.dsrc</filename> configuration file in your home directory. This
    saves you to type your user name and connection details with every command.
    <xref linkend="ex.security.ldap.server.credentials.remote" xrefstyle="select:label"/> shows an example  configuration file for remote
    administration, whereas <xref linkend="ex.security.ldap.server.credentials.local" xrefstyle="select:label"/> shows one for local administration.
   </para>
  <example xml:id="ex.security.ldap.server.credentials.remote">
   <title>A <filename>.dsrc</filename> File for Remote Administration</title>
   <screen># cat ~/.dsrc
[localhost]
uri = ldaps://localhost <co xml:id="co.ldap.server.dsrc.remote.localhost"/>
basedn = dc=example,dc=com
binddn = cn=Directory Manager
tls_cacertdir = /etc/dirsrv/slapd-localhost/ <co xml:id="co.ldap.server.dsrc.remote.cert"/></screen>
   <calloutlist>
    <callout arearefs="co.ldap.server.dsrc.remote.localhost">
     <para>
      Needs to point to the LDAP server instance. If not specified otherwise,
      the default instance name is <literal>localhost</literal>.
     </para>
    </callout>
    <callout arearefs="co.ldap.server.dsrc.remote.cert">
     <para>
      If you have configured a certificate yourself, provide the path to the
      CA certificate here (for remote access with TLS). If you have not
      configured a certificate yourself, <command>dscreate</command> generates
      a self-signed certificate which you can trust. Find the certificate at
      <filename>/etc/dirsrv/slapd-localhost/ca.crt</filename>. Copy it to a
      readable location or to the client machine from which you use the
      <command>ds*</command> commands.
     </para>
    </callout>
   </calloutlist>
  </example>
  <para>
   If you want to administer the instance on the same host where the &ds389; runs,
   use the configuration file in <xref linkend="ex.security.ldap.server.credentials.local" xrefstyle="select:label"/>.
  </para>
  <example xml:id="ex.security.ldap.server.credentials.local">
   <title>A <filename>.dsrc</filename> File for Local Administration</title>
   <screen># cat ~/.dsrc
[localhost]
# Note that '/' is replaced with '%%2f'.
uri = ldapi://%%2fvar%%2frun%%2fslapd-localhost.socket <co xml:id="co.ldap.server.dsrc.remote.ldapi"/>
basedn = dc=example,dc=com
binddn = cn=Directory Manager
</screen>
   <calloutlist>
    <callout arearefs="co.ldap.server.dsrc.remote.ldapi">
      <para>
       <!--Question: “When I use ldapi on the server that has the DS instance,
       why don’t I need to provide my password?”--> When using <literal>ldapi</literal>
       on the server where the &ds389; instance is running, your UID/GID will be
       detected. If it is <literal>0/0 </literal> (which means you are logged
       in as &rootuser; user), the <literal>ldapi</literal> binds the local
       &rootuser; as the directory server root dn (<literal>cn=Directory Manager</literal>)
       of the instance. This allows local administration of the server, but also
       allows you to set a machine-generated password for <literal>cn=Directory
       Manager</literal>) that no human knows. Whoever has administrator rights
       on the server hosting the &ds389; instance, can access the instance as
       <literal>cn=Directory Manager</literal>.
      </para>
    </callout>
   </calloutlist>
  </example>
 </sect2>

 <sect2 xml:id="sec.security.ldap.server.users">
  <title>&yast; での LDAP ユーザとグループの設定</title>
   <para>
    Users and groups can be created and managed with the <command>dsidm</command>
    command. It either runs interactively or you can use it with arguments from
    the command line.
   </para>
  <para>
   In the following example, we add two users, &exampleuserII; and &exampleuserIII;,
   by specifying their data via command line arguments.
  </para>
  <procedure xml:id="pro.security.ldap.server.users">
   <title>Creating LDAP Users</title>
   <step>
    <para>
    Create the user &exampleuserII;:
    </para>
    <screen>&prompt.sudo;<command>dsidm</command> localhost user create --uid \
  --cn &exampleuserII; --displayName '&exampleuserIIfull;' --uidNumber 1000 --gidNumber 1000 \
  --homeDirectory /home/&exampleuserII;</screen>
   </step>
   <step>
    <para>
     To look up a user's <literal>distinguished name</literal> (fully qualified
     name to the directory object, which is guaranteed unique):
    </para>
    <screen>&prompt.sudo;dsidm localhost user get &exampleuserII;
dn: uid=&exampleuserII;,ou=people,dc=example,dc=com
[...]</screen>
    <para>
     The system prompts you for the directory server &rootuser; user password
     (unless you configured remote or local access as described in <xref linkend="sec.security.ldap.server.credentials"/>).
    </para>
    <para>
     You need the distinguished name for actions such as changing the password
     for a user.
    </para>
   </step>
   <step>
    <para>
     To set or change the password for &exampleuserII;:
    </para>
    <substeps>
      <step>
       <screen>&prompt.sudo;dsidm localhost account reset_password \
  uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
       <para>
        The system prompts you for the directory server &rootuser; user password
        (unless you configured remote or local access as described in <xref linkend="sec.security.ldap.server.credentials"/>).
       </para>
      </step>
      <step>
       <para>
        Enter the new password for &exampleuserII; twice.
       </para>
       <para>
        If the action was successful, you get the following message:
       </para>
       <screen>reset password for uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
      </step>
    </substeps>
   </step>
   <step>
    <para>Create the user &exampleuserIII;:</para>
    <screen>&prompt.sudo;<command>dsidm</command> localhost user create --uid \
  --cn &exampleuserIII; --displayName '&exampleuserIIIfull;' \
  --uidNumber 1001 --gidNumber 1001 --homeDirectory /home/&exampleuserIII;</screen>
   </step>
  </procedure>
  <procedure xml:id="pro.security.ldap.server.groups">
   <title>Creating LDAP Groups and Assigning Users to Them</title>
   <para>
    In the following, we create a group, <systemitem class="groupname">server_admins</systemitem>, and assign the user
    &exampleuserII; to this group.</para>
   <step>
    <para>
     Create the group:
    </para>
    <screen>&prompt.sudo;dsidm localhost group create</screen>
    <para>
     You will be prompted for a group name:
    </para>
    <screen>Enter value for cn :</screen>
   </step>
   <step>
    <para>
     Enter the name for the group, for example: <literal>server_admins</literal>.
    </para>
   </step>
   <step>
    <para>
     Add the user &exampleuserII; to the group:
    </para>
    <screen>&prompt.sudo;dsidm localhost group add_member server_admins uid=&exampleuserII;,ou=people,dc=example,dc=com
added member: uid=&exampleuserII;,ou=people,dc=example,dc=com</screen>
   </step>
   <step>
    <para>
     Verify if authentication works:
    </para>
   <screen>&prompt.sudo;ldapwhoami -H ldaps://localhost -D \
  uid=&exampleuserII;,ou=people,dc=example,dc=com -W -x</screen>
    <para>
     If you are prompted for the LDAP password of &exampleuserII;, authentication works.
    </para>
    <para>
     If the command fails with the following error, you are probably using a
     self-signed certificate:
    </para>
    <screen>ldap_sasl_bind(SIMPLE): Can't contact LDAP server (-1)</screen>
    <para>
     In that case, edit <filename>/etc/openldap/ldap.conf</filename> and add the
     path to the certificate. For example:
    </para>
    <screen>TLS_CACERT=/etc/dirsrv/slapd-localhost/ca.crt</screen>
    <para>
     Alternatively, include the path to the certificate in the
     <filename>whoami</filename> command:
    </para>
    <screen>&prompt.sudo;LDAPTLS_CACERT=/etc/dirsrv/slapd-localhost/ca.crt \
  ldapwhoami -H ldaps://localhost -D \
  uid=&exampleuserII;,ou=people,dc=example,dc=com -W -x</screen>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.security.ldap.server.sssd">
  <title>Setting Up SSSD</title>
  <para>
   SSSD (System Security Services Daemon) is a daemon that communicates with
   remote identity providers and allows <literal>pam</literal> and
   <literal>nsswitch</literal> to consume that data. SSSD can have multiple
   back-ends, cache users and groups and provides features like SSH key
   distributions.
  </para>
  <procedure>
   <step>
     <para>On a separate server, install the <systemitem>sssd</systemitem> package:
     </para>
    <screen>&prompt.sudo;zypper in sssd</screen>
   </step>
   <step>
    <para>
     Disable and stop the <systemitem class="daemon">nscd</systemitem> daemon
     because it conflicts with <systemitem class="daemon">sssd</systemitem>:
    </para>
    <screen>&prompt.sudo;systemctl disable nscd &amp;&amp; systemctl stop nscd</screen>
   </step>
   <step>
    <para>
     Create the SSSD configuration and restrict the login to the members of the group <systemitem class="groupname">server_admins</systemitem> that we created in <xref linkend="pro.security.ldap.server.groups" xrefstyle="select:label"/>:
    </para>
    <screen>&prompt.sudo;dsidm localhost client_config sssd.conf server_admins</screen>
   </step>
   <step>
    <para>
     Review the output and paste (or redirect) it to <filename>/etc/sssd/sssd.conf</filename>.
     If required, edit the configuration file according to your needs.
    </para>
   </step>
   <step>
    <para>
     To configure the certificates on your client, copy <filename>ca.crt</filename>
     from the LDAP server to your client:</para>
    <screen>&prompt.sudo;mkdir -p /etc/openldap/certs
cp [...]&gt;/ca.crt /etc/openldap/certs/
/usr/bin/c_rehash /etc/openldap/certs</screen>
   </step>
   <step>
    <para>
     Enable and start SSSD:
    </para>
    <screen>&prompt.sudo;systemctl enable sssd
systemctl start sssd</screen>
   </step>
   <step>
    <para>
     To make sure SSSD is part of PAM and NSS, follow the instructions in sections <citetitle>Configure PAM
      (&suse;)</citetitle> and <citetitle>Configure NSS (&suse;)</citetitle> at <link xlink:href="http://www.port389.org/docs/389ds/howto/howto-sssd.html"/>.
    </para>
   </step>
   <step>
    <para>
     Verify if the client can provide the details for user &exampleuserII;:
    </para>
    <screen>&prompt.sudo;id &exampleuserII;
    uid=1000(&exampleuserII;) gid=100(users) groups=100(users)</screen>
    <para>
     If everything is set up correctly, &exampleuserII; can access the &ds389;
     instance via SSH to the machine where you have installed and configured
     SSSD. However, &exampleuserIII; will fail to do so, because &exampleuserIII;
     does not belong to the group <literal>server_admins</literal> that we have
     configured in <xref linkend="pro.security.ldap.server.groups" xrefstyle="select:label"/>.
    </para>
   </step>
  </procedure>
 </sect2>
 </sect1>

<sect1 xml:id="sec.security.ldap.yast.usergr">
  <title>&yast; での LDAP ユーザとグループの設定</title>
  <procedure>
   <step>
    <para>&yast; から <menuchoice> <guimenu>セキュリティとユーザ</guimenu><guimenu>ユーザとグループの管理</guimenu></menuchoice> を選択して、ユーザとグループの管理モジュールを起動します。</para>
   </step>
   <step>
    <para>LDAP が正しく接続できるかどうかを確認したい場合は、 <guimenu>接続のテスト</guimenu> を押してください。</para>
   </step>
   <step>
    <para><guimenu>フィルタの設定</guimenu> を押して <guimenu>LDAP ユーザ</guimenu> を選択し、バインド DN に対するパスワードを入力して、 LDAP のユーザのみを表示します。</para>
   </step>
   <step>
    <para><guimenu>追加</guimenu> を押してユーザ設定を入力します。表示されたダイアログには、 4 つのタブがあります:</para>
    <substeps performance="required">
     <step>
      <para><guimenu>ユーザ情報</guimenu> のタブでは、ユーザのフルネームとログイン名、パスワードをそれぞれ設定します。</para>
     </step>
     <step>
      <para><guimenu>詳細</guimenu> タブでは、そのユーザが所属するグループやログイン時に使用するシェル、そしてホームディレクトリなどを設定します。必要に応じて変更してください。 <!-- The default values (as well as those of the password settings) can be defined with the procedure described in <xref linkend="sec.security.auth.yast.client.conf.mod"/>.--></para>
     </step>
     <step>
      <para><guimenu>パスワードの設定</guimenu> タブでは、必要であれば設定を変更します。</para>
     </step>
     <step>
      <para><guimenu>プラグイン</guimenu> タブでは LDAP プラグインを選択して <guimenu>起動</guimenu> を押し、新しいユーザに設定する追加の LDAP 属性を指定します <!-- (see <xref linkend="fig.ldap.y2.adset"/>).--> 。</para>
     </step>
    </substeps>
   </step>
   <step>
    <para><guimenu>OK</guimenu> を押して設定を適用し、ユーザ設定を終了します。</para>
   </step>
  </procedure>

 <para>
  You can administer groups in a similar way on the <guimenu>Groups</guimenu>
  tab.
</para>
<!--
  <figure id="fig.ldap.y2.adset">
   <title>&yast;: Additional LDAP Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  -->

  <para>ユーザ管理モジュールで最初に表示されるフォーム内では、 <guimenu>LDAP オプション</guimenu> を指定することができます。このオプションを設定することにより、特定のユーザのみを表示するための検索フィルタを適用することができます。この方法以外にも、 <guimenu>LDAP ユーザとグループの設定</guimenu> を選択してユーザとグループを設定することもできます。</para>
 </sect1>

<sect1 xml:id="sec.security.ldap.yast.client">
  <title>&yast; による LDAP クライアントの設定</title>
  <para>&yast; には <guimenu>LDAP および Kerberos クライアント</guimenu> モジュールが用意されています。このモジュールでは、 LDAP や Kerberos を利用する認証を設定することができます。</para>
  <para>Kerberos と LDAP を個別に参加させるように使用することもできます。そのような場合、たとえば &ad; への参加 (LDAP と Kerberos を組み合わせて使用します) などでは、 このモジュールは最初の選択とはならないかもしれません。詳しくは <xref linkend="sec.security.auth.yast.client"/> をお読みください。</para>
  <para><menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>LDAP および Kerberos クライアント</guimenu> </menuchoice> を選択して、モジュールを起動します。</para>
  <figure xml:id="fig.yast2.ldapkerberos.ldap">
   <title><guimenu>LDAP および Kerberos クライアント</guimenu> のウインドウ</title>
   <mediaobject>
    <imageobject role="html">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>LDAP クライアントを設定するには、下記の手順を実施します:</para>
  <procedure xml:id="pro.security.auth.ldap">
   <step>
    <para><guimenu>LDAP および Kerberos クライアント</guimenu> のウインドウ内で、 <guimenu>設定の変更</guimenu> を押します。</para>
    <para>このとき、 <guimenu>ディレクトリを識別子プロバイダとして使用する (LDAP)</guimenu> を選択していることを確認してください。</para>
    <informalfigure>
     <mediaobject>
      <imageobject role="html">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para><guimenu>LDAP サーバの場所</guimenu> 内に、 1 つもしくは複数の LDAP サーバ URL やホスト名、 IP アドレスを入力します。複数のアドレスを指定する場合は、スペースで区切って指定してください。</para>
   </step>
   <step>
    <para>次に <guimenu>検索ベースの DN</guimenu> 内に、 LDAP の識別名 (DN) を指定します。たとえば <literal>dc=example,dc=com</literal> のように指定します。</para>
   </step>
   <step>
    <para>お使いの LDAP サーバが TLS による暗号化に対応している場合は、 <guimenu>LDAP 通信の暗号化</guimenu> 以下のオプションを選択します。</para>
    <para>サーバ側に問い合わせて、 TLS による暗号化に対応していれば暗号化を使用し、そうでない場合は使用せずに接続したい場合は、 <guimenu>StartTLS を利用して通信を暗号化する</guimenu> を選択します。</para>
   </step>
   <step>
    <para>その他のオプションについては、必要に応じて設定を行ないます:</para>
    <itemizedlist>
     <listitem>
      <para>必要に応じて、 <guimenu>LDAP のユーザに対して認証を許可する</guimenu> と <guimenu>自動的にホームディレクトリを作成する</guimenu> を選択します。</para>
     </listitem>
     <listitem>
      <para>
       If you want to cache LDAP entries locally, use <guimenu>Cache LDAP Entries
        For Faster Response</guimenu>.
      </para>
      <warning>
       <title>Potential Security Risk with Caching</title>
       <para>
        Using the cache bears security risks, depending on the used mechanism.
       </para>
       <formalpara>
        <title>nscd</title>
        <para>
         If you define an authorization rule (for example, members of group
         <literal>admin</literal> can log in), and you remove a user from that
         group, the client cache will not see that change until the cache expires
         or refreshes. So a user whose account has been revoked can still log in
         for a period of time later.
        </para>
       </formalpara>
       <formalpara>
        <title>sssd</title>
        <para>
         This caching mechanism constantly checks if group memberships are still
         valid. Thus the cache risk only exists if the <literal>sssd</literal>
         daemon is disconnected from the LDAP server for any reason.</para>
       </formalpara>
      </warning>
     </listitem>
     <listitem>
      <para>さらに LDAP の情報源から使用すべきデータの種類 (たとえば <guimenu>ユーザ</guimenu> ,  <guimenu>グループ</guimenu> , <guimenu>スーパーユーザコマンド</guimenu> , <guimenu>ネットワークディスクの場所</guimenu> (必要に応じて自動的にマウントすることのできる共有ドライブ)) を指定します。</para>
     </listitem>
     <listitem>
      <para><guimenu>バインドユーザの DN</guimenu> および <guimenu>バインドユーザのパスワード</guimenu> に、 LDAP ディレクトリにバインドする際のユーザの識別名 (DN) とパスワードを指定します。</para>
      <para>サーバに対して匿名でバインドしたい場合は、サーバ側でのサポートが必要になりますが、これらのテキストボックスには何も入力しないでください。</para>
      <warning>
       <title>暗号化を行なわない認証について</title>
       <para>TLS や StartTLS を利用した伝送路の暗号化を使用せずに認証を行なうと、パスワードは平文のまま転送されてしまいます。</para>
       <!--for the records:
        sknorr, 2017-03-01: Is the YaST dialog compatible with SASL in any way?
        wbrown 2019-02-26: SASL is too complicated for a setup like this,
        not worth including.
       -->
      </warning>
     </listitem>
    </itemizedlist>
    <para><guimenu>拡張オプション</guimenu> 内では、追加でバインド操作時のタイムアウトを設定することができます。</para>
   </step>
   <step>
    <para>LDAP が正しく接続できるかどうかを確認したい場合は、 <guimenu>接続のテスト</guimenu> を押してください。</para>
   </step>
   <step>
    <para>ダイアログを閉じるには、 <guimenu>OK</guimenu> を押します。設定の書き込みが終わるまで、しばらくお待ちください。</para>
    <para>全ての設定が終わったら、 <guimenu>完了</guimenu> を押して閉じます。</para>
   </step>
  </procedure>
</sect1>

 <sect1 xml:id="sec.security.ldap.data" os="sles;osuse">
  <title>LDAP データの手動管理</title>
   <para>
    The command line tools provided by the <systemitem>openldap2-client</systemitem>
    package (like <command>ldapsearch</command> or <command>ldapmodify</command>)
    can be used for administration of data in the LDAP directory. However, they
    are low-level tools and hard to use. For details about their use, refer to
    the respective man pages and documentation.
   </para>
 </sect1>

<sect1 xml:id="sec.security.ldap.info">
  <title>さらなる情報</title>
  <para>
   For more information about &ds389;, see the upstream documentation,
   available at <link xlink:href="http://www.port389.org/docs/389ds/documentation.html"/>.
  </para>
 </sect1>
</chapter>
