<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<!--PM's doc requirements:
 Data encryption (partially NEW)
        1.High level information for end-users
        2.Basic configuration details
-> which application(s)? GNOME Passwords and Keys?
        Yes, I am still pushing very hard for an unified solution here. Feature
        302530 is pretty central to my idea here.
        http://fedoraproject.org/wiki/FedoraCryptoConsolidation

 @maintainer: GNOME Passwords and Keys are mentioned here,
 please update - not sure where to mention the certificate store - might
 go to new file security_certificatestore.xml
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.gnome.crypto">
 <title>パスワードと鍵: データへの署名と暗号化</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>&gnome; の <quote>パスワードと鍵</quote> プログラムは、お使いのシステムにおける暗号化インフラストラクチャです。このプログラムを使用することで、 PGP や SSH の鍵を管理することができるほか、 1 つもしくは複数の鍵を取り込んだり取り出したり、共有したりバックアップしたり、鍵を開く際のパスフレーズを記憶させたりすることができます。</para>
 <para>アプリケーションを起動するには、 <keycap function="meta"/> を押してアクティビティオーバービューを表示させ、 <literal>key</literal> <!-- Japanese note: keyword is different from English --> で検索を行ないます。</para>
 <figure pgwide="0">
  <title>パスワードと鍵のメインウインドウ</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="seahorse_main.png" width="73%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="seahorse_main.png" width="73%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <sect1 xml:id="sec.gnome.crypto.sign_encrypt">
  <title>署名と暗号化</title>

  <formalpara>
   <title>署名</title>
   <para>電子メールのメッセージやソフトウエアなど、特定の情報に対して電子署名を追加することで、情報の発信源を保証することができるようになります。たとえば、自分以外の誰かが自分の名前を偽ったりするようなことがあり得る場合、電子メールに対して署名を付与することで、相手側で送信者が正しいことを確認することができます。このように電子署名は、メッセージの送信者を検証し、正当なメッセージと不当なメッセージを区別することができます。</para>
  </formalpara>

  <para>ソフトウエアの開発者であれば、ソフトウエア自身に署名を付与することもできます。これにより、非公式のサーバからソフトウエアを取得した場合でも、その正当性を検証することができるようになります。</para>

  <formalpara>
   <title>暗号化</title>
   <para>他社には見られたくない機密情報を送信したい場合、暗号化が役に立ちます。暗号化は元のデータを変換して、他社からは読み取ることのできない形式にします。これは特に企業内などで、内部情報や従業員情報を保護したいような場合に使用します。</para>
  </formalpara>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.gen_key">
  <title>新しい鍵対の生成</title>

  <para>他のユーザとの間で暗号化したメッセージをやり取りするには、まず自分自身の鍵対を生成する必要があります。鍵対には下記のものが含まれています:</para>

  <itemizedlist>
   <listitem>
    <formalpara>
     <title>公開鍵</title>
     <para>この鍵は暗号化を施す際に使用します。この鍵はやり取りを行なう相手に配布すべきもの (つまり公開すべきもの) で、この鍵を使用してご自身に対するデータを暗号化することができます。</para>
    </formalpara>
   </listitem>
   <listitem>
    <formalpara>
     <title>秘密鍵</title>
     <para>この鍵は暗号化を解除 (解読) する際に使用します。この鍵を使用することで、他者から送られた暗号化されたデータを、 (自分自身で) 元の形式に戻すことができるようになります。</para>
    </formalpara>
   </listitem>
  </itemizedlist>

  <important>
   <title>秘密鍵の保護について</title>
   <para>もしも他者が秘密鍵にアクセスできてしまうと、他者がファイルやメッセージを解読できてしまうことになります。そのため、秘密鍵は必ず保護するものとし、他者からはアクセスできないようにしておいてください。</para>
  </important>

  <sect2 xml:id="cha.gnome.crypto.gen_key.openpgp">
   <title>OpenPGP 鍵の作成</title>
   <para>OpenPGP は PGP をベースにした、公開鍵暗号による電子メール向け暗号化公開プロトコルです。暗号化されたメッセージや署名、秘密鍵や公開鍵を交換する際の証明書に関する標準を規定しています。</para>
   <procedure>
    <step>
     <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
    </step>
    <step>
     <para><menuchoice> <guimenu>ファイル</guimenu> <guimenu>新規</guimenu></menuchoice> を選択します。</para>
    </step>
    <step>
     <para><guimenu>PGP 鍵</guimenu> を選択して <guimenu>続行</guimenu> を選択します。</para>
    </step>
    <step>
     <para>指名とメールアドレスをそれぞれ指定します。</para>
    </step>
    <step>
     <para><guimenu>鍵の拡張オプション</guimenu> を押すと、鍵に対する下記の追加設定を行なうことができます。</para>
     <variablelist>
      <varlistentry>
       <term>コメント</term>
       <listitem>
        <para>任意指定のコメント文です。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>暗号化の種類</term>
       <listitem>
        <para>鍵を生成する際に使用する暗号化アルゴリズムを指定します。 <guimenu>DSA ElGamal</guimenu> を選択し、暗号化や解読、書名や検証などを行なうことができるようにするのがお勧めです。 <guimenu>DSA (署名のみ)</guimenu> および <guimenu>RSA (署名のみ)</guimenu> は、いずれも署名のみを行なうことができます。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>鍵の長さ</term>
       <listitem>
        <para>鍵の長さをビット数で指定します。鍵を長くすると機密性が高まります (ただしパスフレーズも強固に設定する必要があります) 。ただし、鍵を長くすると、それだけ処理に時間を要するようになります。設定可能な鍵の長さは 1024 から 4096 までで、通常は 2048 以上を推奨します。</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>有効期限</term>
       <listitem>
        <para>暗号化や署名の操作を行なう際、その鍵の使用を停止する日付を指定します。指定した日付以降は有効期限を再設定するか、もしくは新しい鍵もしくは副鍵を生成する必要があります。なお、新しい鍵を作成した場合は、古い鍵で署名しておくことで、相手側での信頼情報を新しい鍵に引き継ぐことができるようになります。</para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step>
     <para><guimenu>生成</guimenu> を押すと新しい鍵対を作成することができます。</para>
     <para><guimenu>新しい PGP 鍵のパスフレーズ</guimenu> ダイアログが表示されます。</para>
    </step>
    <step>
     <para>新しい鍵に設定するパスフレーズを 2 回入力して <guimenu>OK</guimenu> を押します。</para>
     <para>パスフレーズを指定する際は、パスワードを設定する際と同じ方法で、強固なパスフレーズを設定してください。 <!-- The main difference between a password and a passphrase is that spaces are valid characters in a passphrase. --> <!-- I see no real proof for this: Some people argue that spaces are bad because of badly written scripts, but well-written software should generally be fine. Some people say that they have been using spaces in their Linux passwords forever and never had a problem. Some people argue it is bad for security, as spaces are the single most common character in naturally occurring text. - sknorr, 2015-09-21 --></para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="cha.gnome.crypto.gen_key.ssh">
   <title>Secure Shell 鍵の作成</title>
   <para>Secure Shell (SSH) はリモートのコンピュータにログインするための方式で、この方式によって、相手側のマシンでコマンドを実行することができるようになる仕組みです。 SSH の鍵は鍵ベースの認証システムで使用するもので、既定のパスワード認証システムに対する代替として動作することになります。鍵ベースの認証を行なうことで、パスワードを入力する必要が無くなります。</para>
   <procedure>
    <step>
     <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
    </step>
    <step>
     <para><menuchoice> <guimenu>ファイル</guimenu> <guimenu>新規</guimenu> </menuchoice> を選択します。</para>
    </step>
    <step>
     <para><guimenu>セキュアシェルの鍵</guimenu> を選択して <guimenu>続行</guimenu> を押します。</para>
    </step>
    <step>
     <para>鍵の用途に関する説明文を入力します。</para>
     <para>電子メールアドレスやその他のメモを入力することもできます。</para>
    </step>
    <step>
     <para>必要であれば、 <guimenu>鍵の拡張オプション</guimenu> を押すと、鍵に対する下記の追加設定を行なうことができます。</para>
     <formalpara>
      <title>暗号化の種類</title>
      <para>鍵を生成する際に使用する暗号化アルゴリズムを指定します。 <guimenu>RSA</guimenu> を選択すると、 Rivest-Shamir-Adleman (RSA) と呼ばれるアルゴリズムを利用して鍵を生成します。こちらが推奨値であり、より機密を保持できる方式になります。一方の <guimenu>DSA</guimenu> は、 Digital Signature Algorithm (DSA) と呼ばれる方式で鍵を生成します。</para>
     </formalpara>
     <formalpara>
      <title>鍵の長さ</title>
      <para>鍵の長さをビット数で指定します。鍵を長くすると機密性が高まります (ただしパスフレーズも強固に設定する必要があります) 。ただし、鍵を長くすると、それだけ処理に時間を要するようになります。設定可能な鍵の長さは 1024 から 4096 までで、通常は 2048 以上を推奨します。</para>
     </formalpara>
    </step>
    <step>
     <para>そのまま鍵を作成する場合は <guimenu>生成のみ</guimenu> を、鍵を生成して接続先の情報も設定する場合は、 <guimenu>生成と設定</guimenu> をそれぞれ押します。</para>
    </step>
    <step>
     <para>新しい鍵に設定するパスフレーズを入力して <guimenu>OK</guimenu> を押します。パスフレーズの入力ミスが無いよう、再入力を求められます。</para>
     <para>パスフレーズを指定する際は、パスワードを設定する際と同じ方法で、強固なパスフレーズを設定してください。 <!-- The main difference between a password and a passphrase is that spaces are valid characters in a passphrase. --> <!-- I see no real proof for this: Some people argue that spaces are bad because of badly written scripts, but well-written software should generally be fine. Some people say that they have been using spaces in their Linux passwords forever and never had a problem. Some people argue it is bad for security, as spaces are the single most common character in naturally occurring text. - sknorr, 2015-09-21 --></para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.modify_key">
  <title>鍵の属性情報の変更</title>

  <para>OpenPGP や SSH の鍵に対して、その属性情報を編集することができます。</para>

  <sect2 xml:id="cha.gnome.crypto.modify_key.openpgp">
   <title>OpenPGP 鍵の属性の編集</title>
   <para>本セクションで説明している内容は、全ての OpenPGP 鍵に対して当てはまります。</para>
   <procedure>
    <step>
     <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
    </step>
    <step>
     <para>表示もしくは編集したい PGP 鍵を選んで、ダブルクリックします。 <!--(or select the key, then click <guimenu>Properties</guimenu> in toolbar).--></para>
    </step>
    <step>
     <para><guimenu>所有者</guimenu> のタブでは、鍵に対して写真を追加したり、鍵に結びつけられたパスフレーズを変更したりすることができます。</para>
     <para>写真では、鍵の中に 1 つ以上の所有者の画像を組み込むことができます。もちろん鍵は通常通り使用することができます。写真は JPEG 形式で、推奨サイズは 120×150 ピクセルです。</para>
     <para>選択した画像が推奨されるファイル形式やサイズでなかった場合、 <guimenu>パスワードと鍵</guimenu> は GDK ライブラリを利用して、推奨される形式とサイズにその場で修正することができます。</para>
    </step>
    <step>
     <para><guimenu>名前と署名</guimenu> タブでは、鍵に対して識別情報を追加する機能を提供します。</para>
     <para>詳しくは <xref linkend="cha.gnome.crypto.modify_key.openpgp.add_user" xrefstyle="HeadingOnPage"/> をお読みください。</para>
    </step>
    <step>
     <para><guimenu>詳細</guimenu> タブでは、下記の属性を表示することができます:</para>
     <formalpara>
      <title>鍵 ID:</title>
      <para>鍵 ID は鍵の指紋に似た仕組みですが、鍵 ID は指紋の末尾 8 文字分のみを使用しています。そのため、一般的には鍵 ID のみで鍵を識別できますが、稀に異なる鍵同士で鍵 ID が一致してしまうこともあります。</para>
     </formalpara>
     <formalpara>
      <title>種類:</title>
      <para>鍵を生成する際に使用する暗号化アルゴリズムを指定します。 DSA 鍵は署名のみを行なうことができます。 ElGamal 鍵は暗号化のみを行なうことができます。</para>
     </formalpara>
     <formalpara>
      <title>強度:</title>
      <para>鍵の長さをビット数で表わします。鍵を長くすると機密性が高まります。ただし、鍵を長くしても弱いパスフレーズへの対策にはなりませんので、ご注意ください。</para>
     </formalpara>
     <formalpara>
      <title>指紋:</title>
      <para>この鍵を正確に識別することのできる文字列を表わします。</para>
     </formalpara>
     <formalpara>
      <title>作成日:</title>
      <para>鍵を作成した日付を表わします。</para>
     </formalpara>
     <formalpara>
      <title>有効期限:</title>
      <para>その鍵の使用期限日付を表わします (期限が切れたあとは、その鍵を利用した操作を行なわないことを表明するものです) 。有効期限を延ばすことで、鍵を再度有効化することもできます。通常は有効期限のないマスターキーを作成しておいて、そこに期限付きの複数の副鍵を設定し、マスターキーで署名しておくのが一般的です。</para>
     </formalpara>
     <formalpara>
      <title>所有者の信用度:</title>
      <para>ここでは、鍵の所有者の信頼レベルを設定することができます。信頼レベルとは Web of Trust と呼ばれる仕組みで、その鍵をどれだけ信頼しているのかを表わすものです。自分自身で直接信頼し、署名しているもの以外の鍵に対して、その鍵がどれだけの信頼できる人々から信頼されているのかを元にして、度合いを決定するためのものです。</para>
     </formalpara>
     <formalpara>
      <title>秘密鍵のエクスポート:</title>
      <para>ファイルに鍵全体を出力します。</para>
     </formalpara>
     <formalpara>
      <title>副鍵:</title>
      <para>詳しくは <xref linkend="cha.gnome.crypto.modify_key.openpgp.edit_subkey" xrefstyle="HeadingOnPage"/> をお読みください。</para>
     </formalpara>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="seahorse_editpgpkey.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="seahorse_editpgpkey.png" width="86%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para><guimenu>閉じる</guimenu> を押して閉じてください。</para>
    </step>
   </procedure>
   <sect3 xml:id="cha.gnome.crypto.modify_key.openpgp.add_user">
    <title>ユーザ ID の追加</title>
    <para>ユーザ ID には複数の識別情報を設定することができます。これにより、同じ鍵の中に複数の電子メールアドレスを設定することができます。たとえば仕事用のメールアドレスと友人向けのメールアドレスを設定したりします。ユーザ ID は下記のような書式で設定します:</para>
<screen>名前 (<replaceable>コメント</replaceable>) &lt;<replaceable>メールアドレス</replaceable>&gt;</screen>
    <procedure>
     <step>
      <para><menuchoice> <guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu><guimenu>パスワードと鍵</guimenu></menuchoice> を選択します。</para>
     </step>
     <step>
      <para>表示もしくは編集したい PGP 鍵を選んで、ダブルクリックします。 <!--(or select the key, then click <guimenu>Properties</guimenu> in toolbar).--></para>
     </step>
     <step>
      <para><guimenu>名前と署名</guimenu> タブを選択して、 <guimenu>名前の追加</guimenu> を押します。</para>
     </step>
     <step>
      <para><guimenu>氏名</guimenu> 欄に名前を入力します。</para>
      <para>この項目には、最低 5 文字を入力しなければなりません。</para>
     </step>
     <step>
      <para><guimenu>メールアドレス</guimenu> 欄にメールアドレスを入力します。</para>
      <para>メールアドレスは、キーサーバやその他のキー提供元で、ほとんどの人々が鍵を探す際に使用する項目です。内容が正しいことをよくお確かめください。</para>
     </step>
     <step>
      <para><guimenu>鍵の説明</guimenu> 欄には、新しく設定する ID の名前欄に表示される、追加の情報を設定します。</para>
      <para>この情報は、キーサーバ内での検索対象となります。</para>
     </step>
     <step>
      <para>変更点を確認し、必要であればパスフレーズを入力します。</para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="cha.gnome.crypto.modify_key.openpgp.edit_subkey">
    <title>OpenPGP の副鍵の属性編集</title>
    <para>それぞれの OpenPGP 鍵には、署名のみを目的とした単一のマスターキーが存在しています。副鍵は暗号化と署名の両方に使用します。この仕組みにより、副鍵の安全性が損なわれた場合でも、マスターキーそのものを失効させる必要が無くなります。</para>
    <procedure>
     <step>
      <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
     </step>
     <step>
      <para>編集したい PGP 鍵を選んで、ダブルクリックします。 <!--(or select the key, then click <guimenu>Properties</guimenu> in toolbar).--></para>
     </step>
     <step>
      <para><guimenu>詳細</guimenu> タブを選択します。すると <guimenu>副鍵</guimenu> が表示されます。</para>
     </step>
     <step>
      <para>左側の各ボタンを利用することで、鍵の追加や削除、期限切れ日付の設定や失効などを行なうことができます。</para>
      <informalfigure pgwide="0">
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="seahorse_subkeys.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="seahorse_subkeys.png" width="83%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
      <para>それぞれの副鍵には下記のような情報があります:</para>
      <formalpara>
       <title>ID:</title>
       <para>副鍵の識別子です。</para>
      </formalpara>
      <formalpara>
       <title>種類:</title>
       <para>副鍵を生成する際に使用する暗号化アルゴリズムを指定します。 DSA 鍵は署名のみを行なうことができますし、 ElGamal 鍵は暗号化のみを行なうことができます。 RSA 鍵の場合は、署名と暗号化の両方に使用することができます。</para>
      </formalpara>
      <formalpara>
       <title>用途:</title>
       <para>署名／証明／暗号化のうち、どの用途に使用できる鍵なのかを表わします。</para>
      </formalpara>
      <formalpara>
       <title>作成日:</title>
       <para>鍵を作成した日付を表わします。</para>
      </formalpara>
      <formalpara>
       <title>有効期限:</title>
       <para>その日付以降は鍵を使用すべきではない旨を表わします。</para>
      </formalpara>
      <formalpara>
       <title>状態:</title>
       <para>鍵の状態を表わします。</para>
      </formalpara>
      <formalpara>
       <title>強度:</title>
       <para>鍵の長さをビット数で表わします。鍵を長くすると機密性が高まります。ただし、鍵を長くしても弱いパスフレーズへの対策にはなりませんので、ご注意ください。</para>
      </formalpara>
     </step>
     <step>
      <para><guimenu>閉じる</guimenu> を押して閉じてください。</para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="cha.gnome.crypto.modify_key.ssh">
   <title>Secure Shell 鍵の属性編集</title>
   <para>本セクションで説明している内容は、全ての SSH 鍵に対して当てはまります。</para>
   <procedure>
    <step>
     <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
    </step>
    <step>
     <para>表示もしくは編集したい Secure Shell 鍵を選んで、ダブルクリックします。 <!--(or select the key, then click <guimenu>Properties</guimenu> in toolbar).--></para>
    </step>
    <step>
     <para><guimenu>鍵</guimenu> タブでは、鍵の名前や鍵に結びつけられたパスフレーズの変更を行なうことができます。</para>
    </step>
    <step>
     <para><guimenu>詳細</guimenu> タブでは、下記の属性を表示することができます:</para>
     <formalpara>
      <title>アルゴリズム:</title>
      <para>鍵を生成する際に使用した暗号化アルゴリズムが表示されます。</para>
     </formalpara>
     <formalpara>
      <title>強度:</title>
      <para>鍵の長さをビット数で表わします。鍵を長くすると機密性が高まります。ただし、鍵を長くしても弱いパスフレーズへの対策にはなりませんので、ご注意ください。</para>
     </formalpara>
     <formalpara>
      <title>場所:</title>
      <para>秘密鍵の保存先を表わします。</para>
     </formalpara>
     <formalpara>
      <title>指紋:</title>
      <para>この鍵を正確に識別することのできる文字列を表わします。</para>
     </formalpara>
     <formalpara>
      <title>鍵をまるごとエクスポート:</title>
      <para>ファイルに鍵全体を出力します。</para>
     </formalpara>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="seahorse_editsshkey.png" width="56%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="seahorse_editsshkey.png" width="56%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para><guimenu>閉じる</guimenu> を押して閉じてください。</para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.import_key">
  <title>鍵の取り込み</title>

  <para>鍵はテキストファイルに保存することができます。これらのファイルには、冒頭に PGP 鍵であることを示すテキストが、その後ろに鍵そのものが記述されます。この形式を ASCII-armored 鍵と呼びます。</para>

  <para>鍵を取り込むには、下記の手順を実施します:</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>ファイル</guimenu> <guimenu>インポート</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para>少なくとも 1 つ以上の ASCII-armored 公開鍵が含まれているファイルを選択します。</para>
   </step>
   <step>
    <para><guimenu>開く</guimenu> を押すと鍵を取り込むことができます。</para>
   </step>
  </procedure>

  <para>このほかにも、 <guimenu>パスワードと鍵</guimenu> 内に鍵を貼り付ける方法もあります:</para>

  <procedure>
   <step>
    <para>ASCII-armored 公開鍵のテキストを選択して、クリップボードにコピーします。</para>
   </step>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>編集</guimenu> <guimenu>貼り付け</guimenu> </menuchoice> を選択します。</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.export_key">
  <title>鍵の取り出し</title>

  <para>鍵を取り出すには、下記の手順を実施します:</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para>取り出したい鍵を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>ファイル</guimenu> <guimenu>エクスポート</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para>保存先のファイル名と場所をそれぞれ指定します。</para>
   </step>
   <step>
    <para><guimenu>エクスポート</guimenu> を押すと、鍵を取り出すことができます。</para>
   </step>
  </procedure>

  <para>ASCII-armored 形式で鍵を取り出すこともできます:</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para>取り出したい鍵を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>編集</guimenu> <guimenu>コピー</guimenu> </menuchoice> を選択します。</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.sign_key">
  <title>鍵への署名</title>

  <para>他者の鍵に対して署名を付与することで、その人に対する信頼を設定することになります。そのため、鍵に署名を行なう場合は、事前に鍵の指紋をよくご確認になり、その鍵が本当にその人のものなのかをお確かめください。</para>

  <para>信頼とは、その人に対する信頼度を設定するための仕組みです。自分自身で直接信頼し、署名しているもの以外の鍵に対して、その鍵がどれだけの信頼できる人々から信頼されているのかを元にして、度合いを決定するためのものです。</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><!-- Not available anymore? -->署名を設定したい鍵を <guimenu>PGP 鍵</guimenu> のタブの中から選択します。</para>
   </step>
   <step>
    <para><!-- Not available anymore? --><menuchoice> <guimenu>ファイル</guimenu> <guimenu>署名</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><!-- Not available anymore? -->どれだけの確認を行なったのかを選択したあと、署名を公開するかどうかと署名を後から失効させることができるかどうかを選択します:</para>
    <informalfigure pgwide="0">
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="seahorse_signkey.png" width="100%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="seahorse_signkey.png" width="85%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para><!-- Not available anymore? --><guimenu>署名</guimenu> を押します。</para>
   </step>
  </procedure>
 </sect1>
<!-- FIXME openSUSE: Check if valid -->
 <sect1 os="osuse" xml:id="cha.gnome.crypto.nautilus">
  <title>ファイルマネージャとの統合</title>

<!-- Required package nautilus-extension-seahorse is not present on SLE
       - sknorr, 2015-09-21 -->

  <para>パスワードと鍵は &nautilus; と統合することができます。ファイルマネージャのウインドウから暗号化や暗号の解読、署名や署名の検証、公開鍵の取り込みなどを行なうことができます。 <guimenu>パスワードと鍵</guimenu> をわざわざ起動する必要はありません。</para>

  <note>
   <title>ファイルマネージャとの統合の要件について</title>
   <para>ファイルマネージャとの統合機能を利用するには、 <systemitem>nautilus-extension-seahorse</systemitem> パッケージをインストールしなければなりません。</para>
  </note>

  <sect2 xml:id="cha.gnome.crypto.nautilus.encrypt">
   <title>&nautilus; でのファイルの暗号化</title>
   <procedure>
    <step performance="required">
     <para>&nautilus; で暗号化したいファイルを選択して、マウスの右ボタンを押します。</para>
    </step>
    <step performance="required">
     <para><guimenu>暗号化</guimenu> を選択します。</para>
    </step>
    <step performance="required">
     <para>ファイルを送る相手 (受信者) を選択して <guimenu>OK</guimenu> を押します。</para>
    </step>
    <step performance="required">
     <para>場合によっては、秘密鍵のパスフレーズを入力するよう求められることがあります。その場合は、パスフレーズを入力して <guimenu>OK</guimenu> を押します。</para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="cha.gnome.crypto.nautilus.sign">
   <title>&nautilus; でのファイルへの署名</title>
   <procedure>
    <step performance="required">
     <para>&nautilus; で署名を付与したいファイルを選択して、マウスの右ボタンを押します。</para>
    </step>
    <step performance="required">
     <para><guimenu>署名</guimenu> を選択します。</para>
    </step>
    <step performance="required">
     <para>署名者を選択して <guimenu>OK</guimenu> を押します。</para>
    </step>
    <step performance="required">
     <para>場合によっては、秘密鍵のパスフレーズを入力するよう求められることがあります。その場合は、パスフレーズを入力して <guimenu>OK</guimenu> を押します。</para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="cha.gnome.crypto.nautilus.decrypt">
   <title>&nautilus; でのファイルの解読</title>
   <para>&nautilus; で暗号化されたファイルを解読するには、解読したいファイルを選んでダブルクリックします。</para>
   <para>場合によっては、秘密鍵のパスフレーズを入力するよう求められることがあります。その場合は、パスフレーズを入力します。</para>
  </sect2>

  <sect2 xml:id="cha.gnome.crypto.nautilus.verify">
   <title>&nautilus; でのファイル署名の検証</title>
   <para>ファイルの署名を検証するには、対象のファイルとは別に用意された署名ファイルをダブルクリックします。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.prefs.keyrings">
  <title>パスワードキーリング</title>

  <para>パスワードキーリングの設定を行なうことで、キーリングの作成や削除のほか、アプリケーションのパスワードを保存する際の既定のキーリングの指定や、キーリングを解錠する際のパスワードを変更することもできます。新しいキーリングを作成するには、下記の手順を行ないます:</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>ファイル</guimenu> <guimenu>新規</guimenu> <guimenu>パスワードキーリング</guimenu> </menuchoice> を選択して、 <guimenu>続行</guimenu> を押します。</para>
   </step>
   <step>
    <para>キーリングに設定する名前を入力して <guimenu>OK</guimenu> を押します。</para>
   </step>
   <step>
    <para><guimenu>パスワード</guimenu> と <guimenu>再入力</guimenu> の欄に、キーリングに設定するパスワードを 2 回入力して <guimenu>続行</guimenu> を押します。</para>
   </step>
  </procedure>

  <para>既存のキーリングに対して海上用のパスワードを変更するには、 <guimenu>パスワード</guimenu> タブ内でキーリングを選択して右ボタンを押し、 <guimenu>パスワードの変更</guimenu> を選択します。まずはパスワードを変更するため、既存のパスワードの入力を求められます。</para>

  <para>アプリケーションのパスワードを保存する際の既定のキーリングを変更するには、 <guimenu>パスワード</guimenu> タブ内でキーリングを選択して右ボタンを押し、 <guimenu>デフォルトにする</guimenu> を選択します。</para>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.prefs.servers">
  <title>鍵サーバ</title>

  <para>リモートの鍵サーバとの間で定期的に同期を行なうことで、お使いの鍵を常に最新の状態に保つことができます。同期を行なうことで、お使いの鍵に対する署名情報を最新に保つことができますので、 Web of Trust の世界がより効率的になります。</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>編集</guimenu> <guimenu>設定</guimenu> </menuchoice> を選択し、さらに <guimenu>鍵サーバ</guimenu> のタブを選択します。</para>
    <informalfigure pgwide="0">
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="seahorse_keyservers.png" width="100%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="seahorse_keyservers.png" width="86%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
    <para><guimenu>パスワードと鍵</guimenu> では、 HKP と LDAP のキーサーバに対応する機能が用意されています。</para>
    <formalpara>
     <title>HKP 鍵サーバ:</title>
     <para>HKP 鍵サーバは Web ベースの鍵サーバで、著名なところでは <literal>hkp://pgp.mit.edu:11371</literal> などがあります。こちらは <link xlink:href="http://pgp.mit.edu">http://pgp.mit.edu</link> からもアクセスできるようになっています。</para>
    </formalpara>
    <formalpara>
     <title>LDAP 鍵サーバ:</title>
     <para>LDAP 鍵サーバは一般的に使用されるものではありませんが、標準化された LDAP プロトコルを利用して鍵にアクセスを行ないます。著名なところでは、 <literal>ldap://keyserver.pgp.com</literal> などがあります。</para>
    </formalpara>
    <para>左側にあるボタンを利用することで、鍵サーバを <guimenu>追加</guimenu> または <guimenu>削除</guimenu> することができます。新しい鍵サーバを追加するには、種類とホスト名、およびポートをそれぞれ指定します。</para>
   </step>
   <step>
    <para>また、ご自身の公開鍵を自動的に公開するかどうかを選択するほか、どこに対して鍵を公開するのかを選択することもできます。また、鍵サーバから自動的に鍵を取得するよう設定したり、変更した鍵を鍵サーバとの間で自動的に同期したりすることもできます。</para>
   </step>
   <step>
    <para><guimenu>閉じる</guimenu> を押して閉じてください。</para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="cha.gnome.crypto.prefs.sharing">
  <title>鍵の共有</title>

  <para>鍵の共有は DNS-SD (Bonjour や Rendezvous とも呼ばれます) を介して提供されている仕組みで、ローカルの <guimenu>パスワードと鍵</guimenu> にあるユーザの公開鍵を、リモートの検索ダイアログから検索できるようになります。インターネット上のサーバにアクセスするよりは、一般的に高速に動作します。</para>

  <procedure>
   <step>
    <para><menuchoice><guimenu>アプリケーション</guimenu> <guimenu>ユーティリティ</guimenu> <guimenu>パスワードと鍵</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para><menuchoice> <guimenu>編集</guimenu> <guimenu>設定</guimenu> </menuchoice> を選択し、さらに <guimenu>鍵サーバ</guimenu> のタブを選択します。</para>
   </step>
   <step>
    <para><guimenu>変更した鍵を鍵サーバーと自動的に同期する</guimenu> を選択します。</para>
   </step>
   <step>
    <para><guimenu>閉じる</guimenu> を押して閉じてください。</para>
   </step>
  </procedure>
 </sect1>
</chapter>
