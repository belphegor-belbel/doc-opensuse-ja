<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-xen-vhost">
 <title>仮想マシンホストの設定</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
  </dm:docmanager>
 </info>
 <para>本章では、 &productname; &productnumber; を仮想マシンのホストとして設定し、それを使用するまでの手順を説明しています。</para>
 <para>通常、 &dom0; に対するハードウエア要件は特に存在せず、 &productname; オペレーティングシステムの要件と同じになります。ただし、構築予定の &vmguest; システムのリソース要件を全て満たすため、追加の CPU やディスク、メモリやネットワークリソースなどを用意しておくことをお勧めします。</para>
 <tip>
  <title>リソースについて</title>
  <para>物理マシンと同様に、 &vmguest; システムでも、より高速なプロセッサとより大容量のメモリを割り当てておくことで、性能を向上させることができます。</para>
 </tip>
<!-- <para>
  &xen; virtualization technology is available in &productname; products based
  on code path 10 and later. Code path 10 products include Open Enterprise
  Server 2 Linux, &productname; 10, &sled; 10, and &opensuse; 10.x.
 </para> -->
 <para>仮想マシンのホスト側となるには、いくつかのソフトウエアパッケージのほか、それらが必要とする追加のソフトウエアパッケージをインストールする必要があります。必要なパッケージをインストールするには、 &yast; の <guimenu>ソフトウエア管理</guimenu> を起動し、 <menuchoice><guimenu>表示</guimenu> <guimenu>パターン</guimenu></menuchoice> を選択したあと、 <guimenu>&xen; 仮想マシンホストサーバ</guimenu> を選択してインストールを行なってください。この方法のほか、 &yast; の <menuchoice><guimenu>仮想化</guimenu><guimenu>ハイパーバイザとツールのインストール</guimenu></menuchoice> からでもインストールを行なうことができます。</para>
 <para>&xen; 関係のソフトウエアをインストールしたあとはコンピュータを再起動し、ブートローダの画面で &xen; カーネルのオプションを選択してください。</para>
 <para>更新は通常の更新チャンネルを介して提供されます。最新の更新をインストールするには、インストール後に &yast; 内の <guimenu>オンライン更新</guimenu> を実行してください。</para>
 <sect1 xml:id="sec-xen-vhost-best">
  <title>注意事項</title>

  <para>ホスト側に &productname; オペレーティングシステムをインストールして設定するには、下記の事項に注意してください:</para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>ホスト側では &xen; ホストを動作させる必要があります。 &yast; を起動して <menuchoice> <guimenu>システム</guimenu> <guimenu>ブートローダ</guimenu> </menuchoice> を選択して、 &xen; の起動項目を既定値に設定してください。</para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>&yast; を起動して <menuchoice><guimenu>システム</guimenu> <guimenu>ブートローダ</guimenu></menuchoice> を選択します。</para>
     </listitem>
     <listitem>
      <para>既定の起動項目を <guimenu>&xen;</guimenu> ラベル付きのものに設定します。 <!-- NOTE: there is no "Set as Default" button --></para>
     </listitem>
     <listitem>
      <para><!-- NOTE: not "Finish" but "Ok" --><guimenu>Ok</guimenu> ボタンを押します。</para>
     </listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>性能を最大限に発揮するためには、仮想マシンホストには仮想化に必要なアプリケーションのみをインストールし、動作させておくことをお勧めします。</para>
   </listitem>
   <listitem>
    <para>&xen; のイメージを提供するために iSCSI と OCFS2 の両方を使用する場合、 &productname; での OCFS2 の既定のタイムアウト設定では、正しく動作しない場合があります。このタイムアウト設定を調整するには、 <!-- NOTE: "systemctl configure" ?? --><command>systemctl configure o2cb</command> を実行するか、システムの設定内にある <literal>O2CB_HEARTBEAT_THRESHOLD</literal> を設定してください。</para>
   </listitem>
   <listitem>
    <para>&xen; ホストに接続されているウオッチドッグデバイスを使用したいとお考えの場合、同時に複数台の &vmguest; から使用することは避けてください。また、一般的なソフトウエア実装ではなく、実際のハードウエア統合のドライバをお使いください。</para>
   </listitem>
  </itemizedlist>

  <note>
<!-- Bugzilla #878036 -->
   <title>ハードウエアの監視について</title>
   <para>&dom0; カーネルは仮想化環境内で動作する仕組みであるため、 <command>irqbalance</command> や <command>lscpu</command> などのコマンドが、実際のハードウエア特性を表わさないかもしれません。</para>
  </note>
 </sect1>
 <sect1 xml:id="sec-xen-vhost-memory">
  <title>&dom0; のメモリ管理</title>

  <para>以前のバージョンの &productname; では、 &dom0; に対して全ての物理メモリを割り当て、自動バルーン設定が有効化されるよう、 &xen; ホストのメモリ設定が行なわれていました。メモリはドメイン側で要求があるたびに &dom0; 側から自動的に割り当てられる (バルーン) ようになっていました。この設定ではエラーを引き起こしやすくなってしまうことから、現在は無効化しておくことを強くお勧めしています。 &productname; <phrase os="sles;sled">15 SP1</phrase> <phrase os="osuse">15.1</phrase> およびそれ以降のバージョンでは、既定で自動バルーンが無効化されるほか、 &dom0; に対してはホストの物理メモリの 10% + 1&nbsp;GB 程度が割り当てられるようになっています。たとえば物理メモリが 32&nbsp;GB のシステムで使用した場合、 &dom0; には 4.2&nbsp;GB 程度が割り当てられます。</para>
  <para>なお、 <filename>/etc/default/grub</filename> 内で <option>dom0_mem</option> という &xen; コマンドラインオプションを使用することもできます。この方式も現在の推奨となっています。従来の動作に戻したい場合は、 <option>dom0_mem</option> の設定を物理メモリサイズと同じ値に設定し、 <filename>/etc/xen/xl.conf</filename> 内で <option>autoballoon</option> を有効化してください。</para>

  <warning>
   <title>&dom0; のメモリが不足する場合について</title>
   <para>&dom0; 向けに予約するメモリ量は、 &dom0; がそれぞれの &vmguest; に対してバックエンドのネットワークとディスク I/O サービスを提供することから、ホスト内で動作させる &vmguest; の数に従って決まります。ただし、 &dom0; のメモリ割り当てを計算する場合は、それ以外の負荷に対しても考慮を行なってください。一般的には &dom0; も他の仮想マシンと同様にサイズを判断してください。</para>
  </warning>

  <sect2 xml:id="sec-xen-vhost-maxmem">
   <title>&dom0; のメモリ割り当ての設定</title>
   <procedure>
    <step>
     <para>まずは &dom0; に対して必要なメモリ割り当て量を判断します。</para>
    </step>
    <step>
     <para>&dom0; で <command>xl info</command> と入力して実行し、マシンで利用可能なメモリ量を表示します。 &dom0; に対する現在のメモリ割り当ては、 <command>xl list</command> で表示することができます。</para>
    </step>
    <step>
     <para><menuchoice> <guimenu>&yast;</guimenu> <guimenu>ブートローダ</guimenu> </menuchoice> を起動します。</para>
    </step>
    <step>
     <para>&xen; のセクションを選択します。</para>
    </step>
    <step>
     <para><!-- NOTE: Latest YaST bootloader module does not have Xen hypervisor parameter? --><guimenu>オプションのカーネルコマンドラインパラメータ</guimenu> 内にスペース区切りで <command>dom0_mem=<replaceable>メモリ量</replaceable></command> を追加します。このとき、 <replaceable>メモリ量</replaceable> には &dom0; に割り当てる最大のメモリ量を指定します。なお、末尾に <command>K</command> (キロバイト), <command>M</command> (メガバイト), <command>G</command> (ギガバイト) の単位接尾辞を指定することもできます。たとえば <command>dom0_mem=2G</command> のようになります。</para>
    </step>
    <step>
     <para>あとはコンピュータを再起動して、設定を反映させます。</para>
    </step>
   </procedure>
   <warning>
    <title>&xen; の &dom0; メモリについて</title>
    <para>XL ツールスタックと &grub; 内での &xen; ハイパーバイザ向けの <command>dom0_mem=</command> オプションを併用している場合、 <filename>etc/xen/xl.conf</filename> 内で <emphasis>autoballoon</emphasis> を無効化する必要があります。無効化しないと、 VM の起動時に &dom0; のバルーン縮小を行なうことができず、失敗することになってしまいます。そのため &xen; 向けに <command>dom0_mem=</command> を指定した場合は、 <filename>xl.conf</filename> 内で必ず <emphasis>autoballoon=0</emphasis> を設定してください。詳しくは <link xlink:href="http://wiki.xen.org/wiki/Xen_Best_Practices#Xen_dom0_dedicated_memory_and_preventing_dom0_memory_ballooning">Xen dom0 memory</link> (英語) をお読みください。</para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-xen-vhost-netcard">
  <title>完全仮想化環境でのネットワークカード</title>

  <para>完全仮想化環境のゲストでは、既定で Realtek ネットワークカードの擬似版を使用します。しかしながら、 &dom0; と &vmguest; の間での通信が必要となる場合は、個別のネットワークドライバを使用することもできます。オペレーティングシステムによっては両方のインターフェイスを提供しておく必要があることから、既定では両方のインターフェイスを &vmguest; 側に提供します。</para>

  <para>&productname; を使用している場合、既定では &vmguest; に対して、準仮想化ネットワークカードのみを提供します。この場合、下記のネットワークオプションを選ぶことができます:</para>

  <variablelist>
   <varlistentry>
    <term>擬似版</term>
    <listitem>
     <para>擬似版 Realtek カードのような擬似ネットワークインターフェイスを使用するには、ドメイン xl 設定の <literal>vif</literal> デバイスセクション内に、 <literal>type=ioemu</literal> を指定します。たとえば下記のようになります:</para>
<screen>vif = [ 'type=ioemu,mac=00:16:3e:5f:48:e4,bridge=br0' ]</screen>
     <para><filename>xl.conf</filename> 内での xl 設定について、詳しくは <command>man 5 xl.conf</command> で表示されるマニュアルページをお読みください。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>準仮想化版</term>
    <listitem>
     <para><literal>type=vif</literal> を指定して model や種類を指定しないと、準仮想化版のネットワークインターフェイスを使用します:</para>
<screen>vif = [ 'type=vif,mac=00:16:3e:5f:48:e4,bridge=br0,backen=0' ]</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>擬似版と準仮想化版の両方</term>
    <listitem>
     <para>両方のオプションを必要とする場合は、単純に type と model の両方を指定します。 xl の設定は下記のようになります:</para>
<screen>vif = [ 'type=ioemu,mac=00:16:3e:5f:48:e4,model=rtl8139,bridge=br0' ]</screen>
     <para>この場合、 &vmguest; 内ではいずれかのネットワークインターフェイスを無効化する必要があります。</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-xen-vhost-start">
  <title>仮想マシンホストの開始</title>

  <para>仮想化ソフトウエアを正しくインストールすることができたら、あとは &grub; ブートローダで <guimenu>&xen;</guimenu> オプション付きの項目を選択して &xen; を読み込みます。仮想マシンのホスト側では必ず選択するようにしてください。</para>

  <note>
   <title>Xen と Kdump について</title>
   <para>&xen; ではハイパーバイザがメモリリソースを管理します。 &dom0; 内でリカバリカーネル用のシステムメモリ予約を行ないたい場合、ハイパーバイザ側で予約を行なう必要があります。そのため、 <systemitem>crashkernel=<replaceable>サイズ</replaceable></systemitem> のパラメータは、その他の起動パラメータではなく、 <literal>kernel</literal> の行に追加する必要があります。</para>
   <para>crashkernel パラメータに関する詳細は、 <xref linkend="sec-tuning-kexec-crashkernel"/> をお読みください。</para>
  </note>

  <para>&grub; のメニュー内に <guimenu>&xen;</guimenu> オプションが存在しない場合、まずは前述のインストール手順を確認し、 &grub; のブートローダ設定が更新されていることを確認してください。 &xen; のパターンを選択せずにインストールを行なっている場合は、 &yast; の <guimenu>ソフトウエア管理</guimenu> で <guimenu>パターン</guimenu> を選択し、 <guimenu>&xen; 仮想マシンホストサーバ</guimenu> を選択してインストールしてください。</para>

  <para>ハイパーバイザを起動したあとは、 &dom0; 仮想マシンが起動し、グラフィカルなデスクトップ環境を表示します。グラフィカルなデスクトップ環境をインストールしていない場合は、コマンドライン環境が表示されます。</para>

  <tip>
   <title>グラフィックで発生しうる問題について</title>
   <para>場合によってはグラフィックシステムが正しく動作しなくなってしまうことがあります。この場合、起動パラメータに <literal>vga=ask</literal> を追加してください。また、解像度を固定で指定したい場合は、 <literal>vga=mode-0x???</literal> を指定してください。なお、 <literal>???</literal> の値は <literal>0x100</literal> に VESA モード番号を加えることで計算することができます。 VESA モード番号については、 <link xlink:href="http://en.wikipedia.org/wiki/VESA_BIOS_Extensions"/> (英語のみ) に書かれています。</para>
  </tip>

  <para>仮想化ゲストをインストールする前に、まずはシステムの時刻が正しく設定されていることを確認してください。これを行なうには、制御ドメイン側で NTP (Network Time Protocol) を設定します:</para>

  <procedure>
   <step>
    <para>&yast; を起動して <menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>NTP 設定</guimenu> </menuchoice> を選択します。</para>
   </step>
   <step>
    <para>NTP デーモンを起動時に自動的に開始するように設定したあと、既知の NTP サーバを指定して <!-- NOTE: not "Finish" but "Ok" --> <guimenu>OK</guimenu> を押します。</para>
   </step>
  </procedure>

  <note>
   <title>&vmguest; での時刻サービスについて</title>
   <para>ハードウエア側に搭載されている時計は非常に精度の低いものです。全ての新しいオペレーティングシステムでは、設定された時刻情報源から時刻を取得し、ハードウエアの時刻をシステムの時刻にあわせようとします。全ての &vmguest; システムに対して正しい時刻を設定するには、それぞれのゲスト側でも NTP の設定を行なうか、もしくはゲスト側に対してホストが提供する時刻を取得するよう設定してください。 &productname; における <literal>時刻設定</literal> について、詳しくは <xref linkend="sec-xen-guests-suse-time"/> をお読みください。</para>
  </note>

  <para>仮想マシンの管理に関する詳細は、 <xref linkend="cha-xen-manage"/> をお読みください。</para>
 </sect1>
 <sect1 xml:id="sec-xen-vhost-pciback">
  <title>&pciback;</title>

  <para>&vmguest; システムを最大限に活用するには、特定の PCI デバイスを特定の &vmguest; に割り当てる必要がある場合があります。完全仮想化ゲストでこの機能を使用する場合、この機能に対応するチップセットが必要となるほか、 BIOS 側でも有効化しておく必要があります。</para>

  <para>この機能は AMD* および Intel* の両方で使用することができます。 AMD の場合、この機能は <xref linkend="gloss-vt-acronym-iommu"/> と呼ばれ、 Intel の場合は <xref linkend="gloss-vt-acronym-vtd"/> と呼ばれます。なお、 Intel-VT 技術の場合、完全仮想化ゲストで使用するには不十分な機能しか提供されていません。お使いのコンピュータがこの機能に対応しているかどうかを知るには、システムの販売元や提供元にお尋ねください。</para>

  <itemizedlist mark="bullet" spacing="normal">
   <title>制限事項</title>
   <listitem>
    <para>グラフィックドライバによっては、 DMA へのアクセスを高度に最適化しているものがあり、サポート対象外となっているものがあります。そのため、グラフィックカードの使用については難しいものとお考えください。</para>
   </listitem>
   <listitem>
    <para><xref linkend="gloss-vt-acronym-pcie"/> ブリッジ内にある PCI デバイスにアクセスする場合、全ての PCI デバイスを単一のホストに割り当てなければなりません。この制限は、 <xref linkend="gloss-vt-acronym-pcie"/> デバイスには当てはまりません。</para>
   </listitem>
   <listitem>
    <para>専用の PCI デバイスが割り当てられたゲストについては、異なるホストへの移行を行なうことができません。</para>
   </listitem>
  </itemizedlist>

  <para>&pciback; の設定には 2 つのものがあります。 1 つはハイパーバイザ側の設定で、再割り当てを行なうことができるようにするための起動時の設定、もう 1 つは &vmguest; 側での PCI デバイスの割り当て設定です。</para>

  <sect2 xml:id="config-hypervisor-pciback">
   <title>&pciback; に対応するためのハイパーバイザ側の設定</title>
   <procedure>
    <step>
     <para>まずは &vmguest; に再割り当てするデバイスを選択します。 <command>lspci -k</command> コマンドを実行してデバイスの一覧を表示し、デバイス番号のほか、デバイスに元々割り当てられていたモジュール名を記録しておきます:</para>
<screen>06:01.0 Ethernet controller: Intel Corporation Ethernet Connection I217-LM (rev 05)
        Subsystem: Dell Device 0617
        Kernel driver in use: e1000e
        Kernel modules: e1000e</screen>
     <para>上記の例では、デバイス番号が <literal>06:01.0</literal> 、モジュール名が <literal>e1000e</literal> になります。</para>
    </step>
    <step>
     <para><systemitem>xen_pciback</systemitem> がデバイスを制御するための最初のモジュールとなるよう、モジュールの依存関係を指定します。 <filename>/etc/modprobe.d/50-e1000e.conf</filename> というファイルを作成して、下記の内容を記述します:</para>
<screen>install e1000e /sbin/modprobe xen_pciback ; /sbin/modprobe \
 --first-time --ignore-install e1000e</screen>
    </step>
    <step>
     <para><systemitem>xen_pciback</systemitem> モジュールに対して、 'hide' オプションを使用してデバイスを制御するように指定します。 <filename>/etc/modprobe.d/50-xen-pciback.conf</filename> というファイルを編集するか新規作成して、下記の内容を記述します:</para>
<screen>options xen_pciback hide=(06:01.0)</screen>
    </step>
    <step>
     <para>あとはシステムを再起動します。</para>
    </step>
    <step>
     <para>下記のコマンドを実行して、割り当て可能なデバイスとして対象のデバイスが表示されていることを確認します:</para>
<screen>xl pci-assignable-list</screen>
    </step>
   </procedure>
   <sect3 xml:id="config-hypervisor-pciback-xl">
    <title>xl を利用した動的な割り当て</title>
    <para>ホスト側のシステムの再起動を避けるには、 &pciback; を使用する際に xl による動的な割り当てを使用することができます。</para>
    <para>dom0 に対して pciback モジュールを読み込んでおきます:</para>
<screen>&prompt.sudo;modprobe pciback</screen>
    <para>あとは <command>xl pci-assignable-add</command> コマンドを実行して、デバイスを割り当て可能な状態にします。たとえばゲストに対して <emphasis>06:01.0</emphasis> のデバイスを割り当てられるようにするには、下記のコマンドを実行します:</para>
<screen>&prompt.sudo;xl pci-assignable-add 06:01.0</screen>
   </sect3>
  </sect2>

  <sect2 xml:id="config-hypervisor-pciback-guests">
   <title>&vmguest; システムに対する PCI デバイスの割り当て</title>
   <para>&vmguest; に対して PCI デバイスを専用に割り当てるには、いくつかの方法があります:</para>
   <variablelist>
    <varlistentry>
     <term>インストール時のデバイス追加</term>
     <listitem>
      <para>インストール時に設定ファイル内に <literal>pci</literal> 行を追加します:</para>
<screen>pci=['06:01.0']</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&vmguest; システムへの PCI デバイスの活性接続 (ホットプラグ)</term>
     <listitem>
      <para><literal>xl</literal> コマンドを使用することで、 PCI デバイスの追加や削除をその場で行なうことができます。たとえばデバイス番号が <literal>06:01.0</literal> で、仮想マシン名が <literal>sles12</literal> であれば、下記のように入力して実行します:</para>
<screen>xl pci-attach sles12 06:01.0</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Xend に対する PCI デバイスの追加</term>
     <listitem>
      <para>ゲストに対して恒久的にデバイスを追加するには、下記の内容をゲスト側の設定ファイルに追加します:</para>
<screen>pci = [ '06:01.0,power_mgmt=1,permissive=1' ]</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>PCI デバイスを &vmguest; 側に割り当てたあとは、ゲスト側で設定を行なうほか、デバイスドライバについてもインストールを行なってください。</para>
  </sect2>

  <sect2 xml:id="config-hypervisor-vgaback">
   <title>&vgaback;</title>
   <para>&xen; 4.0 およびそれ以降のバージョンでは、完全仮想化環境の &vmguest; に対して、 VGA グラフィックアダプタのパススルーに対応するようになりました。これにより、ゲスト側で高性能な完全 3D 環境やビデオアクセラレーションを使用できるようになっています。</para>
   <itemizedlist mark="bullet" spacing="normal">
    <title>制限事項</title>
    <listitem>
     <para>&vgaback; の機能は &pciback; と同様の仕組みで動作するものであり、こちらについてもメインボード側のチップセットと BIOS の両方で <xref linkend="gloss-vt-acronym-iommu"/> (もしくは Intel VT-d) に対応する必要があります。</para>
    </listitem>
    <listitem>
     <para>プライマリのグラフィックアダプタ (コンピュータの電源を入れた際に使用していたもの) のみを &vgaback; として使用することができます。</para>
    </listitem>
    <listitem>
     <para>&vgaback; は完全仮想化ゲストにのみ対応しています。準仮想化ゲストの場合、サポートされていません。</para>
    </listitem>
    <listitem>
     <para>複数の &vmguest; でグラフィックカードを共用することはできません。いずれか 1 台のゲストでのみ使用することができます。</para>
    </listitem>
   </itemizedlist>
   <para>&vgaback; を有効化するには、完全仮想化ゲスト側の設定ファイル内に、下記の内容を追加します:</para>
<screen>gfx_passthru=1
pci=['yy:zz.n']</screen>
   <para>ここで、 <literal>yy:zz.n</literal> には VGA グラフィックアダプタの PCI デバイス番号を指定します。この値は &dom0; で <command>lspci -v</command> を実行することで、取得することができます。</para>
  </sect2>

  <sect2 xml:id="sec-xen-vm-known">
   <title>トラブルシューティング</title>
   <para>状況によっては &vmguest; のインストール中に問題が発生することがあります。本章では、既知の問題とその解決方法について説明しています。</para>
   <variablelist>
    <varlistentry>
     <term>起動時にシステムがハングアップする</term>
     <listitem>
      <para>ソフトウエア I/O 変換バッファは、起動時の早い段階で low メモリに大きなチャンクを確保しようとします。もしもバッファのサイズ以上にメモリを要求してしまうと、通常は起動処理がハングアップしてしまいます。この問題に該当しているかどうかを調べるには、コンソールの 10 番に切り替えて、下記のようなメッセージが現われていないかどうかを確認してください:</para>
<screen>kernel: PCI-DMA: Out of SW-IOMMU space for 32768 bytes at device 000:01:02.0</screen>
      <para>このような場合、 <literal>swiotlb</literal> のサイズを増やす必要があります。 &dom0; のコマンドラインに対して、 <literal>swiotlb=<replaceable>値</replaceable></literal> の形式で値を設定してください。なお、 <replaceable>値</replaceable> には slab エントリ数を指定します。なお、この値を増やしたり減らしたりして、マシンに対する最適値を判断してください。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <title>PV ゲストでの swiotlb について</title>
    <para>PV ゲスト内で PCI デバイスを動作させるには、 DMA アクセスに対して <literal>swiotlb=force</literal> というカーネルパラメータを指定する必要があります。 IOMMU や <literal>swiotlb</literal> に関するさらに詳しい情報については、 <systemitem>kernel-source</systemitem> パッケージ内にある <filename>boot-options.txt</filename> ファイルをお読みください。</para>
   </note>
  </sect2>

  <sect2 xml:id="sec-xen-vm-info">
   <title>さらなる情報</title>
   <para>&pciback; に関する様々な情報がインターネット上に公開されています (いずれも英語です):</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para><link xlink:href="https://wiki.xenproject.org/wiki/VTd_HowTo"/></para>
    </listitem>
    <listitem>
     <para><link xlink:href="http://software.intel.com/en-us/articles/intel-virtualization-technology-for-directed-io-vt-d-enhancing-intel-platforms-for-efficient-virtualization-of-io-devices/"/></para>
    </listitem>
    <listitem>
     <para><link xlink:href="http://support.amd.com/TechDocs/48882_IOMMU.pdf"/></para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-xen-vhost-usbpass">
  <title>USB パススルー</title>

  <para>ホスト側の USB デバイスをゲスト側にパススルーする方法としては、 2 種類のものがあります。 1 つは擬似 USB デバイスコントローラを介する方法、もう 1 つは PVUSB を使用する方法です。</para>

  <sect2 xml:id="xen-usb-identify">
   <title>USB デバイスの識別方法</title>
   <para>USB デバイスを &vmguest; にパススルーする前に、まずは &vmhost; 内でデバイスを識別する必要があります。ホスト側で <command>lsusb</command> コマンドを実行し、 USB デバイスの一覧を表示してください:</para>
<screen>&prompt.root;lsusb
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 003: ID 0461:4d15 Primax Electronics, Ltd Dell Optical Mouse
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</screen>
   <para>パススルーしたいデバイスを、 <literal><replaceable>製造元 ID</replaceable>:<replaceable>デバイス ID</replaceable></literal> の形式のデバイスタグ (上記の例では (0461:4d15)) もしくは <literal><replaceable>バス番号</replaceable>.<replaceable>デバイス番号</replaceable></literal> の形式のバスアドレス (上記の例では (2.3)) でメモしておきます。なお、冒頭の 0 については削除しておいてください。これは、 0 を取っておかないと、 <command>xl</command> コマンドが 8 進数として解釈してしまうためです。</para>
  </sect2>

  <sect2 xml:id="xen-usb-emulated">
   <title>擬似 USB デバイス</title>
   <para>擬似 USB デバイスを使用する場合、デバイスのモデル (&qemu;) はゲストに対して擬似 USB コントローラを提供します。 USB デバイスは &dom0; から制御され、 USB のコマンドは &vmguest; からホスト側の USB デバイスに送信される際、変換が行なわれます。この方式は、完全仮想化環境の仮想マシン (HVM) でのみ使用することができます。</para>
   <para>擬似 USB ハブを有効化するには、 <option>usb=1</option> オプションを設定します。あとは設定ファイル内で、接続されているデバイスの中からデバイスを選択します。このとき、 <literal>host:USBID</literal> のように指定します。たとえば下記のようになります:</para>
<screen>
usb=1
usbdevice=['tablet','host:2.3','host:0424:460']
</screen>
  </sect2>

  <sect2 xml:id="xen-usb-pv">
   <title>準仮想化 PVUSB</title>
   <para>PVUSB は &dom0; から仮想化ゲストに USB デバイスをパススルーするための新しく高性能な方式です。 PVUSB では、 USB デバイスを追加するにあたって、下記の 2 種類の方式を使用することができます:</para>
   <itemizedlist>
    <listitem>
     <para>仮想マシンの作成時に設定ファイルで指定する方法</para>
    </listitem>
    <listitem>
     <para>VM 動作中のホットプラグ接続による方法</para>
    </listitem>
   </itemizedlist>
   <para>PVUSB では準仮想化によるフロントエンド／バックエンドインターフェイスを使用します。 PVUSB では USB 1.1 と USB 2.0 に対応するほか、 PV と HVM の両方のゲストで使用することができます。 PVUSB を使用するには、ゲスト OS 側に usbfront を、 dom0 もしくは qemu 内の USB バックエンド内で usbback を使用します。 &productname; では、 qemu に USB バックエンドが付属しています。 <!-- Additionally, for easy use of PVUSB, you need support in the toolstack to get the two sides to talk to each other. <!-\-(Alternately, you can write a script to talk over xenstore to the front and backends manually; see the section below for more information.) -\-> --></para>
   <para>Xen バージョン 4.7 およびそれ以降のバージョンで <command>xl</command> の PVUSB サポートとホットプラグサポートが追加されています。</para>
   <para>設定ファイル内で指定する場合は、 <literal>usbctrl</literal> と <literal>usbdev</literal> で USB のコントローラとホストデバイスを指定します。たとえば HVM ゲストの場合、下記のようになります:</para>
<screen>usbctrl=['type=qusb,version=2,ports=4', 'type=qusb,version=1,ports=4', ]
usbdev=['hostbus=2, hostaddr=1, controller=0,port=1', ]</screen>
   <note>
    <para>HVM ゲストのコントローラに対しては、 <literal>type=qusb</literal> を指定する点が重要です。</para>
   </note>
   <para>PVUSB デバイスのホットプラグを管理するには、 <literal>usbctrl-attach</literal> , <literal>usbctrl-detach</literal> , <literal>usb-list</literal> , <literal>usbdev-attach</literal> , <literal>usb-detach</literal> の各サブコマンドを使用します。たとえば下記のようになります:</para>
   <para>USB 1.1 に対応し、 8 ポートを持つ USB コントローラを作成するには:</para>
<screen>&prompt.root;xl usbctrl-attach test_vm version=1 ports=8 type=qusb</screen>
   <para>仮想マシン内にある最初のコントローラ:ポートを検出し、そこにバス番号:デバイス番号が 2:3 である USB デバイスを接続するには (<literal>controller</literal> (コントローラ) と <literal>port</literal> (ポート) を指定することもできます):</para>
<screen>&prompt.root;xl usbdev-attach test_vm hostbus=2 hostaddr=3</screen>
   <para>仮想マシン内で利用可能な全ての USB コントローラとデバイスを表示するには:</para>
<screen>&prompt.root;xl usb-list test_vm
Devid  Type   BE  state usb-ver ports
0      qusb   0   1     1       8
  Port 1: Bus 002 Device 003
  Port 2:
  Port 3:
  Port 4:
  Port 5:
  Port 6:
  Port 7:
  Port 8:</screen>
   <para>コントローラ 0 ポート 1 に接続されている USB デバイスを取り外すには:</para>
<screen>&prompt.root;xl usbdev-detach test_vm 0 1</screen>
   <para><literal>dev_id</literal> で表わされる USB コントローラと、それに接続されている全ての USB デバイスを取り外すには:</para>
<screen>&prompt.root;xl usbctrl-detach test_vm dev_id</screen>
   <para>詳しくは <link xlink:href="https://wiki.xenproject.org/wiki/Xen_USB_Passthrough"/> (英語) をお読みください。</para>
  </sect2>
 </sect1>
</chapter>
