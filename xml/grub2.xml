<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-grub2">
  <title>ブートローダ &grub;</title>
  <info>
    <abstract>
      <para>本章では、 &productnamereg; 内で使用されているブートローダである &grub; について、その設定方法を説明しています。 <phrase os="sled;sles">&grub; は従来バージョンの GRUB ブートローダ (現在は <quote>GRUB Legacy</quote> と呼ばれています) の後継となるバージョンです。 &grub; は &productnamereg; バージョン 12 以降で既定のブートローダになっています。</phrase> なお、 &yast; モジュールを利用すれば、ほとんどの重要な設定を行うことができます。起動処理そのものに関する説明は <xref linkend="cha-boot"/> を、 UEFI 環境における Secure Boot サポートについては <xref linkend="cha-uefi"/> をそれぞれお読みください。</para>
    </abstract>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <sect1 xml:id="sec-grub2-new-features">
    <title>GRUB Legacy と &grub; との主な違い</title>

    <itemizedlist mark="bullet" spacing="normal">
      <listitem>
        <para>設定ファイルのファイル名が変更されています。</para>
      </listitem>
      <listitem>
        <para>さらに多くのファイルシステム (例: btrfs など) に対応しています。</para>
      </listitem>
      <listitem>
        <para>LVM や RAID デバイスに保存されているファイルを直接読み込むことができます。</para>
      </listitem>
      <listitem>
        <para>ユーザインターフェイスを各国語に翻訳したり、テーマで置き換えたりすることができます。</para>
      </listitem>
      <listitem>
        <para>追加のファイルシステムへの対応など、機能を追加するためのモジュールを読み込むことができるようになっています。</para>
      </listitem>
      <listitem>
        <para>他のカーネルやオペレーティングシステム (例: Windows) を検索し、自動的にそれらの起動項目を作成する機能にも対応しています。</para>
      </listitem>
      <listitem>
        <para>最小限の機能に絞った、 bash に似たコンソールが用意されています。</para>
      </listitem>
    </itemizedlist>
  </sect1>
  <sect1 xml:id="sec-grub2-file-structure">
    <title>設定ファイルの構造</title>

    <para>&grub; の設定は、それぞれ下記のファイルが基本となっています:</para>

    <variablelist>
      <varlistentry>
        <term><filename>/boot/grub2/grub.cfg</filename></term>
        <listitem>
          <para>このファイルには、 &grub; のメニュー項目に関する設定が記述されています。 GRUB Legacy では <filename>menu.lst</filename> ファイルとして存在していたものですが、 <filename>grub.cfg</filename> は <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> コマンドで自動生成されるため、編集すべきではありません。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename>/boot/grub2/custom.cfg</filename></term>
        <listitem>
          <para>このファイルは存在していなくてもかまわないファイルで、システムの起動時に <filename>grub.cfg</filename> から参照され、起動メニューに独自の項目を追加するためのファイルです。 &productname; <phrase os="sles;sled">12 SP2</phrase> <phrase os="osuse">Leap 42.2</phrase> 以降では、 <command>grub-once</command> を使用する際にもこれらの項目が処理されます。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename>/etc/default/grub</filename></term>
        <listitem>
          <para>このファイルは、 &grub; のユーザ設定を制御するためのファイルで、通常は背景やテーマなどの追加の環境設定が含まれます。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename>/etc/grub.d/</filename> 以下のスクリプト</term>
        <listitem>
          <para>このディレクトリ内にあるスクリプトは、 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> を実行する際に読み込まれます。これらのスクリプトの実行結果は、メインの設定ファイルである <filename>/boot/grub/grub.cfg</filename> に組み込まれます。</para>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="vle-grub2-sysconfig">
        <term><filename>/etc/sysconfig/bootloader</filename></term>
        <listitem>
          <para>この設定ファイルには、ブートローダの種類や UEFI Secure Boot サポートの有効化可否など、基本的な設定が含まれています。</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename arch="x86_64">/boot/grub2/x86_64-efi</filename> , <filename arch="power">/boot/grub2/power-ieee1275</filename> <phrase os="sles">, <filename arch="zseries">/boot/grub2/s390x</filename></phrase></term>
        <listitem>
          <para>これらの設定ファイルには、アーキテクチャ固有のオプションが含まれています。</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>&grub; は様々な方法で制御を行うことができます。既存のメニュー内にある起動項目の選択であれば、グラフィカルなメニュー (スプラッシュスクリーン) から行うことができますし、そのメニューを表示している設定ファイルは <filename>/boot/grub2/grub.cfg</filename> にあり、このファイルは他の設定ファイル類から生成される仕組みになっています (下記参照) 。なお、全ての &grub; 設定ファイルはシステムファイルですので、編集には &rootuser; の権限が必要となります。</para>

    <note>
      <title>変更した設定の反映</title>
      <para>&grub; の設定ファイルを手作業で編集した場合は、それらを反映させるために <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> を実行する必要があります。ただし、 &yast; で設定を変更した場合は、 &yast; が <xref linkend="vle-grub2-mkconfig"/> を呼び出しますので、後からこれを実行する必要はありません。</para>
    </note>

    <sect2 xml:id="sec-grub2-cfg">
      <title><filename>/boot/grub2/grub.cfg</filename> ファイル</title>
      <para>起動メニュー付きのグラフィカルなスプラッシュスクリーンは、 &grub; の設定ファイル <filename>/boot/grub2/grub.cfg</filename> をベースにして作成されます。このファイルには、メニューから起動することのできる全てのパーティションやオペレーティングシステムに関する情報が含まれています。</para>
      <para>システムを起動する場合、 &grub; はファイルシステムから設定ファイルを毎回読み込みます。このような構造から、 &grub; では設定ファイルを変更しても、再インストールを行う必要はありません。 <filename>grub.cfg</filename> はカーネルを追加したり削除したりするたびに、自動的に再構築されます。</para>
      <para>また、 <filename>grub.cfg</filename> は <filename>/etc/default/grub</filename> ファイルと <filename>/etc/grub.d/</filename> ディレクトリ内にあるスクリプトを利用して、 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> コマンドで生成されます。そのため、上記のファイルを手作業で編集することはお勧めできません。その代わり、関連するソースファイルや &yast; の <guimenu>ブートローダ</guimenu> モジュールを利用して、設定ファイルを変更することをお勧めします。 &yast; での設定方法について、詳しくは <xref linkend="sec-grub2-yast2-config"/> をお読みください。</para>
    </sect2>

    <sect2 xml:id="sec-grub2-etc-default-grub">
      <title><filename>/etc/default/grub</filename> ファイル</title>
      <para>&grub; に関するより一般的なオプションが用意されています。たとえばメニューを表示する時間や起動する既定の OS などです。利用可能な全てのオプションを表示するには、下記のコマンドの出力をお使いください:</para>
<screen>&prompt.user;grep "export GRUB_DEFAULT" -A50 /usr/sbin/grub2-mkconfig | grep GRUB_</screen>
      <para>なお、 <filename>/etc/grub.d</filename> 内のスクリプトから参照するため、独自のユーザ変数を設定することもできます。</para>
      <para><filename>/etc/default/grub</filename> を編集したあとは、 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> を実行してメインの設定ファイルを更新してください。</para>
      <note>
        <title>スコープについて</title>
        <remark>
     Do we really still have Xen-specific kernels? - sknorr, 2017-05-08
    </remark>
        <para>このファイル内で設定したオプションは、全ての起動項目に対して適用される汎用オプションです。 &xen; カーネルや &xen; ハイパーバイザ向けの固有オプションについては、 GRUB_*_XEN_* 設定オプションで設定することができます。詳細は下記をお読みください。</para>
      </note>
      <variablelist>
        <varlistentry>
          <term><literal>GRUB_DEFAULT</literal></term>
          <listitem>
            <para>既定で起動する起動メニューの項目を指定します。数値やメニュー項目の完全な名前で指定することができるほか、 <quote>saved</quote> を指定することもできます。</para>
            <para>たとえば <literal>GRUB_DEFAULT=2</literal> のように指定すると、 3 番目の (数値の場合は 0 から数えます) 起動メニュー項目を起動します。</para>
            <para>また、 <literal>GRUB_DEFAULT="2&gt;0"</literal> のように指定すると、メニュー項目のトップレベルの 3 番目にあるメニュー内の最初のサブメニュー項目を起動します。</para>
            <para>そのほか、 <literal>GRUB_DEFAULT="Example boot menu entry"</literal> のように指定すると、 <quote>Example boot menu entry</quote> というタイトルの起動メニュー項目を起動します。</para>
            <para><literal>GRUB_DEFAULT=saved</literal> を指定すると、 <command>grub2-once</command> や <command>grub2-set-default</command> で指定された項目を起動するようになります。 <command>grub2-reboot</command> では次回の再起動に対してのみ既定の起動項目を設定するのに対して、 <command>grub2-set-default</command> では明示的に変更するまでの間、既定の起動項目を維持し続けるようになります。なお、 <command>grub2-editenv list</command> を実行すると、次回の起動項目を一覧表示することができます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_HIDDEN_TIMEOUT</literal></term>
          <listitem>
            <para>ユーザがキーを押すまで待機する時間を秒単位で指定します。この待機時間中は、何もメニューを表示せず、ユーザがキーを押して初めて表示する動作になります。指定した時間、何もキー入力が行われないと、制御は <literal>GRUB_TIMEOUT</literal> に渡ります。 <literal>GRUB_HIDDEN_TIMEOUT=0</literal> を指定した場合は、まず <keycap function="shift"/> が押されているかどうかを確認し、押されていた場合はメニュー項目を表示し、押されていなかった場合は即時に既定のメニュー項目を起動するようになります。これは &grub; で起動可能な OS が 1 つしか存在しない場合の、既定の動作でもあります。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_HIDDEN_TIMEOUT_QUIET</literal></term>
          <listitem>
            <para><literal>false</literal> を指定すると、 <literal>GRUB_HIDDEN_TIMEOUT</literal> の動作中、画面にカウントダウンタイマーだけを表示します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_TIMEOUT</literal></term>
          <listitem>
            <para>既定の起動項目を自動的に起動するまでの、起動メニューを表示してからの時間を秒単位で指定します。何かキーが押されるとカウントダウンは停止され、 &grub; はいずれかの項目を選択するまで待ち続けるようになります。 <literal>GRUB_TIMEOUT=-1</literal> を指定すると、いずれかの項目を選択するまで、ずっと待ち続けるようになります。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_LINUX</literal></term>
          <listitem>
            <para>この行に書かれた内容は、通常モードと修復モードの両起動項目の末尾に追加されます。起動項目にカーネルのパラメータを指定したい場合に使用します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_LINUX_DEFAULT</literal></term>
          <listitem>
            <para><literal>GRUB_CMDLINE_LINUX</literal> と同じような意味合いを持ちますが、こちらは通常モードの起動項目のみの末尾に追加されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_LINUX_RECOVERY</literal></term>
          <listitem>
            <para><literal>GRUB_CMDLINE_LINUX</literal> と同じような意味合いを持ちますが、こちらは修復モードの起動項目のみの末尾に追加されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal></term>
          <listitem>
            <para>この項目は <literal>GRUB_CMDLINE_LINUX</literal> を置き換えるための項目で、 &xen; の起動項目にのみ適用されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE_DEFAULT</literal></term>
          <listitem>
            <para><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal> と同じような意味合いを持ちますが、こちらは <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> のパラメータを置き換えるためのものです。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_XEN</literal></term>
          <listitem>
            <para>この項目は &xen; ゲストカーネルに対してのみ設定されるカーネルパラメータを指定する項目です。項目の位置づけとしては <literal>GRUB_CMDLINE_LINUX</literal> と似た動作になります。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_CMDLINE_XEN_DEFAULT</literal></term>
          <listitem>
            <para><literal>GRUB_CMDLINE_XEN</literal> と同じような意味合いを持ちますが、こちらは <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> と同じような位置づけの項目です。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_TERMINAL</literal></term>
          <listitem>
            <para>入出力を行う端末デバイスを有効化し、指定するための項目です。 <literal>console</literal> (PC BIOS および EFI コンソール), <literal>serial</literal> (シリアル端末), <literal>ofconsole</literal> (Open Firmware コンソール), <literal>gfxterm</literal> (グラフィックモード出力; 既定値) の中からいずれかを指定します。複数の端末を使用したい場合は、引用符で括って <literal>GRUB_TERMINAL="console serial"</literal> のように指定します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_GFXMODE</literal></term>
          <listitem>
            <para><literal>gfxterm</literal> グラフィック端末で使用する解像度を指定します。ただし、指定可能な解像度はお使いのグラフィックカード (VBE) に依存します。既定値は ‘auto’ で、自動的に解像度を選択する動作を行います。なお、利用可能な解像度を一覧表示したい場合は、 &grub; のコマンドラインから <command>videoinfo</command> と入力して実行してください。コマンドラインは、 &grub; の起動画面が表示されている状態で、 <keycap>C</keycap> を押すとアクセスすることができます。</para>
            <para>解像度の設定に加えて、色数 (色深) も指定することができます。たとえば <literal>GRUB_GFXMODE=1280x1024x24</literal> のようになります。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_BACKGROUND</literal></term>
          <listitem>
            <para><literal>gfxterm</literal> グラフィカル端末で使用する背景画像を指定します。画像は &grub; が起動時に読み込めるファイルでなければならず、 <literal>.png</literal> , <literal>.tga</literal> , <literal>.jpg</literal> , <literal>.jpeg</literal> のいずれかで終わるファイル名でなければなりません。また、必要であれば画面全体に適合するように拡大または縮小されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>GRUB_DISABLE_OS_PROBER</literal></term>
          <listitem>
            <para>このオプションを <literal>true</literal> にすると、他のオペレーティングシステムの自動検出機能が無効化されます。 <filename>/boot/</filename> 内にあるカーネルと、 <filename>/etc/grub.d/</filename> 内にある独自のスクリプトからのオプションのみを検出します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>SUSE_BTRFS_SNAPSHOT_BOOTING</literal></term>
          <listitem>
            <para>このオプションを <literal>true</literal> にすると、 &grub; が snapper のスナップショットから直接起動できるようになります。詳しくは <xref linkend="sec-snapper-snapshot-boot"/> をお読みください。</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>オプションの一覧については、 <link xlink:href="http://www.gnu.org/software/grub/manual/grub.html#Simple-configuration"> GNU GRUB マニュアル</link> をお読みください。</para>
    </sect2>

    <sect2 xml:id="sec-grub2-etc-grub-d">
      <title><filename>/etc/grub.d</filename> 内にあるスクリプト</title>
      <para>このディレクトリ内にあるスクリプトは、 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> コマンド を実行する際に読み込まれます。これらのスクリプトの実行結果は、メインの設定ファイルである <filename>/boot/grub2/grub.cfg</filename> に統合されます。 <filename>grub.cfg</filename> でのメニュー項目内の順序は、このディレクトリ内の実行順になります。つまり、数字の小さいものが先に、大きいものが後に実行されることになります。たとえば <filename>00_header</filename> は、 <filename>10_linux</filename> よりも前に実行されますし、 <filename>10_linux</filename> は <filename>40_custom</filename> よりも前に実行されます。また、アルファベットで始まる名前のファイルが存在する場合は、数字で始まるファイルよりも後に実行されます。また、 <command>grub2-mkconfig</command> の実行時には、実行可能なファイルのみが <filename>grub.cfg</filename> に出力を行います。既定では <filename>/etc/grub.d</filename> 内にある全てのファイルが実行可能ファイルになっています。</para>
      <tip>
        <title><filename>grub.cfg</filename> 内のカスタマイズについて</title>
        <para><filename>/boot/grub2/grub.cfg</filename> は <command>grub2-mkconfig</command> を実行するたびに上書きされる仕組みであるため、独自のカスタマイズを行っても、 <command>grub2-mkconfig</command> が実行されるタイミングで消えてしまいます。<filename>/boot/grub2/grub.cfg</filename> に直接書き込まなければならないカスタマイズがある場合は、そのカスタマイズ項目を下記の 2 つの行の間に記述してください:</para>
<screen>### BEGIN /etc/grub.d/90_persistent ###</screen>
        <para>および</para>
<screen>### END /etc/grub.d/90_persistent ###</screen>
        <para>これにより、 <filename>90_persistent</filename> スクリプトが、その中のコンテンツを維持するようになります。</para>
        <para>最も重要なスクリプトの一覧を下記に示します:</para>
      </tip>
      <variablelist>
        <varlistentry>
          <term><filename>00_header</filename></term>
          <listitem>
            <para>システムファイルの場所やディスプレイの設定、テーマや以前に保存されていた項目など、各種の環境変数を設定します。また、 <filename>/etc/default/grub</filename> 内に書かれている設定も取り込みます。通常は、このファイルを編集する必要はありません。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>10_linux</filename></term>
          <listitem>
            <para>ルートデバイス内の Linux カーネルを判別して、必要なメニュー項目を生成します。これには修復モード用のメニューの生成なども含まれます。ただし、最新のカーネルのみがメインメニューに表示され、それ以外のカーネルはサブメニュー内に表示されるように設定されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>30_os-prober</filename></term>
          <listitem>
            <para>このスクリプトは <command>os-prober</command> を使用して、他の Linux や他のオペレーティングシステムを検出し、その結果を &grub; メニューの形式で出力します。メニューの項目名には、それぞれ Windows や MacOS などの実際の名前が設定されます。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><filename>40_custom</filename></term>
          <listitem>
            <para>このスクリプトは、 <filename>grub.cfg</filename> 内に独自の起動項目を追加するためのシンプルな方法を提供します。ただし、スクリプトの冒頭にある <literal>exec tail -n +3 $0</literal> については、変更してはなりません。</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>処理順序は番号順で、小さい番号から大きい番号の順に行われます。同じ番号のスクリプトが存在した場合は、その後ろの文字のアルファベット順で実行されます。</para>
      <tip>
        <title><filename>/boot/grub2/custom.cfg</filename></title>
        <para><filename>/boot/grub2/custom.cfg</filename> ファイルを作成して独自の項目を設定すると、起動時にその内容が <filename>/boot/grub2/grub.cfg</filename> の <filename>40_custom</filename> の直後に取り込まれるようになります。</para>
      </tip>
    </sect2>

    <sect2 xml:id="sec-grub2-map">
      <title>BIOS ドライブと Linux デバイスのマッピングについて</title>
      <para>GRUB Legacy では、 <filename>device.map</filename> という設定ファイルを利用して BIOS のドライブ番号から Linux デバイス名を紐づけていました。ただし、 BIOS ドライブと Linux デバイス名のマッピングは、必ずしも正しいものであるとは言えませんでした。たとえば GRUB Legacy では、 BIOS の設定内で IDE ドライブと SCSI ドライブの起動順序を入れ替えたりすると、順序を誤って設定してしまうようなことがありました。</para>
      <para>&grub; では、 <filename>grub.cfg</filename> を生成する際、デバイス ID 文字列 (UUID) やファイルシステムラベルを利用することで、この問題を解決しています。 &grub; ユーティリティ側では、一時的なデバイスマップをその場で作成することで、特にディスク 1 台のみのシステムで正しく動作するようにしています。</para>
      <para>しかしながら、 &grub; の自動的なデバイスマッピングの仕組みが期待通りにならない場合があります。そのような場合は、独自のマッピングファイルを <filename>/boot/grub2/device.map</filename> に作成してください。下記の例では、 <literal>ディスク 3</literal> を起動ディスクとして使用しています。ただし、 &grub; のパーティション番号は <literal>1</literal> から始まることに注意してください (GRUB Legacy では <literal>0</literal> から始まっていました) 。</para>
<screen>(hd1)  /dev/disk-by-id/<replaceable>ディスク 3 の ID</replaceable>
(hd2)  /dev/disk-by-id/<replaceable>ディスク 1 の ID</replaceable>
(hd3)  /dev/disk-by-id/<replaceable>ディスク 2 の ID</replaceable></screen>
    </sect2>

    <sect2 xml:id="sec-grub2-menu-change">
      <title>起動処理中でのメニュー項目の編集</title>
      <para>誤った設定を書き込んでしまって起動ができなくなった場合や、システムの設定を一時的に試してみたいなどの場合には、メニュー項目を直接編集する機能が必要となる場合があります。これを行うには、下記の手順を実施してください。</para>
      <procedure>
        <step>
          <para>グラフィカルな起動メニューが表示されたら、矢印キーを利用して編集したい項目を選択します。</para>
        </step>
        <step>
          <para><keycap>E</keycap> を押してテキストベースのエディタを開きます。</para>
        </step>
        <step>
          <para>矢印キーを利用して、編集したい行まで移動します。</para>
          <figure xml:id="fig-grub2-boot-editor">
            <title>&grub; ブートエディタ</title>
            <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="grub2_edit_config.png" width="75%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="grub2_edit_config.png" width="75%"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>以下の 2 つの方法があります:</para>
          <substeps performance="required">
            <step>
              <para>カーネルのパラメータを編集したい場合は、 <literal>linux</literal> や <literal>linuxefi</literal> で始まる行の末尾に、スペース区切りで必要なパラメータを追加します。パラメータの完全な一覧については、 <link xlink:href="https://ja.opensuse.org/Linuxrc"/> をご覧ください。</para>
            </step>
            <step>
              <para>カーネルのバージョンなどの情報を編集したい場合は、一般的なエディタのやり方で必要な項目を編集します。 <keycap function="tab"/> を押すと、補完機能を利用することができます。</para>
            </step>
          </substeps>
        </step>
        <step>
          <para><keycap>F10</keycap> を押すと編集した内容でシステムを起動することができます。また、 <keycap function="escape"/> を押すと編集内容を破棄し、 &grub; のメニューに戻ることができます。</para>
        </step>
      </procedure>
      <para>この方法で変更した内容は、今回の起動処理に限って適用されるものであり、恒久的には保存されません。</para>
      <important>
        <title>起動処理中のキーボードレイアウトについて</title>
        <para>起動時にはアメリカ英語のキーボードレイアウトのみを使用することができます。詳しくは <xref linkend="fig-trouble-install-keyboard-us"/> をご覧ください。</para>
      </important>
      <note arch="x86_64">
        <title>インストールメディア内のブートローダについて</title>
        <para>従来型の BIOS のシステムでは、インストールメディアのブートローダは GRUB Legacy になっています。起動パラメータを追加したい場合は、項目を選んでそのままパラメータを入力してください。ここで入力したパラメータは、インストール後のシステムでも利用できるよう、恒久的に保存されます。</para>
      </note>
      <note os="sles" arch="zseries">
        <title>&zseries; での &grub; メニュー項目の編集について</title>
        <para>&zseries; では、カーソルの移動とコマンドの編集の動作が異なります。詳しくは <xref linkend="sec-grub2-zseries"/> をお読みください。</para>
      </note>
    </sect2>

    <sect2 xml:id="sec-grub2-password">
      <title>起動パスワードの設定</title>
      <para>オペレーティングシステムが起動する前であっても、 &grub; はファイルシステムにアクセスすることができます。 root の権限のない利用者であっても、ブートローダにさえアクセスできてしまえば、システムの起動後はアクセスできないようなファイルにも、アクセスできてしまいます。このような種類のアクセスを防止したり、メニュー項目を自由に選択できる状況を阻止したりしたい場合は、起動パスワードを設定することをお勧めします。</para>
      <important>
        <title>起動時にパスワードを求める設定</title>
        <para>この設定を行うと、起動時にパスワードの入力を求められるようになります。言い換えると、システムは自動では起動しなくなります。</para>
      </important>
      <para>下記の手順で起動パスワードを設定します。下記の手順以外にも、 &yast; (詳しくは <xref linkend="vle-grub2-yast2-boot-password"/> をお読みください) でも設定することができます。</para>
      <procedure>
        <step>
          <para>まずは <command>grub2-mkpasswd-pbkdf2</command> を利用して、パスワードを暗号化します:</para>
<screen>&prompt.sudo;grub2-mkpasswd-pbkdf2
パスワードを入力してください: ****
Reenter password: ****
PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...
</screen>
        </step>
        <step>
          <para>出力された文字列を、 <command>set superusers</command> コマンドと共に<filename>/etc/grub.d/40_custom</filename> 内に貼り付けます。</para>
<screen>set superusers="root"
password_pbkdf2 root grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...</screen>
        </step>
        <step>
          <para>内容をメインの設定ファイルに取り込むには、下記のように実行します:</para>
<screen>&prompt.sudo;grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
        </step>
      </procedure>
      <para>システムを再起動すると、 &grub; は起動メニューの項目を選択する際にユーザ名とパスワードの入力を求めるようになります。それぞれユーザ名には <literal>root</literal> を、パスワードには <command>grub2-mkpasswd-pbkdf2</command> で入力したパスワードを入力してください。両方の項目が正しく入力されると、システムは選択した項目を起動するようになります。</para>
      <para>詳しくは <link xlink:href="https://www.gnu.org/software/grub/manual/grub.html#Security"/> をお読みください。</para>
    </sect2>

    <sect2 xml:id="sec-grub2-authorization">
      <title>起動メニュー項目に対するアクセス保護</title>
      <para>&grub; では、認可レベルを設定して起動メニュー項目へのアクセスを制限することができます。具体的には、複数のユーザアカウントとパスワードを設定して、それぞれ異なるメニュー項目へのアクセス許可を設定することができます。 &grub; でこのようなアクセス制限を設定するには、下記の手順を実施します:</para>
      <procedure>
        <step>
          <para>まずは &grub; 内に設定したいユーザ名とパスワードを用意します。このとき、パスワードは <xref linkend="sec-grub2-password"/> で説明しているとおり、 <command>grub2-mkpasswd-pbkdf2</command> を利用して暗号化しておきます。</para>
        </step>
        <step>
          <para><filename>/etc/grub.d/10_linux</filename> ファイルを削除します。これにより、既定の &grub; メニュー項目が作成されないようにすることができます。</para>
        </step>
        <step>
          <para>あとは <filename>/boot/grub2/custom.cfg</filename> ファイルを編集して、独自のメニュー項目を追加していきます。下記は例ですので、必要に応じて編集してお使いください:</para>
<screen>
set superusers=admin
password admin <replaceable>管理者パスワード</replaceable>
password maintainer <replaceable>メンテナパスワード</replaceable>

menuentry 'Operational mode' {
  insmod ext2
  set root=hd0,1
  echo 'Loading Linux ...'
  linux /boot/vmlinuz root=/dev/vda1 $GRUB_CMDLINE_LINUX_DEFAULT $GRUB_CMDLINE_LINUX mode=operation
  echo 'Loading Initrd ...'
  initrd /boot/initrd
}

menuentry 'Maintenance mode' --users maintainer {
  insmod ext2
  set root=hd0,1
  echo 'Loading Linux ...'
  linux /boot/vmlinuz root=/dev/vda1 $GRUB_CMDLINE_LINUX_DEFAULT $GRUB_CMDLINE_LINUX mode=maintenance
  echo 'Loading Initrd ...'
  initrd /boot/initrd
}
</screen>
        </step>
        <step>
          <para>内容をメインの設定ファイルに取り込むには、下記のように実行します:</para>
<screen>&prompt.sudo;grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
        </step>
      </procedure>
      <para>上記の例は下記のような構成です:</para>
      <itemizedlist>
        <listitem>
          <para>&grub; には 2 種類の項目 <guimenu>Operational mode</guimenu> と <guimenu>Maintenance mode</guimenu> が存在しています。</para>
        </listitem>
        <listitem>
          <para>何もユーザを指定しない場合、いずれのメニュー項目とも使用できますが、 &grub; のコマンドラインに入ることはできず、かつ既存のメニュー項目を編集することもできなくなります。</para>
        </listitem>
        <listitem>
          <para><literal>admin</literal> ユーザを指定した場合、 &grub; のコマンドラインに入ることができるほか、既存のメニュー項目を編集することもできるようになります。</para>
        </listitem>
        <listitem>
          <para><literal>maintenance</literal> ユーザを指定した場合は回復用のメニュー項目を選択できます。</para>
        </listitem>
      </itemizedlist>
    </sect2>
  </sect1>
  <xi:include href="grub2_yast_i.xml"/>
  <sect1 os="sles" xml:id="sec-grub2-zseries">
    <title>&zseries; での端末の使用法の違いについて</title>

    <para>3215 端末や 3270 端末では、 &grub; 内でのカーソルの移動方法や編集コマンドの送信方法について、違いと制限が存在しています。</para>

    <sect2 xml:id="sec-grub2-zseries-limitations">
      <title>制限</title>
      <variablelist>
        <varlistentry>
          <term>対話性</term>
          <listitem>
            <para>対話性という観点では非常に強い制限があります。入力しても視覚的なフィードバックが無い場合があります。また、カーソルの位置を知りたい場合は、アンダースコア ( <keycap>_</keycap> ) を入力してください。</para>
            <note>
              <title>3270 と 3215 の比較</title>
              <para>3270 端末は 3215 端末と比べると、表示や画面の更新がよりよく改善されています。</para>
            </note>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>カーソルの移動</term>
          <listitem>
            <para><quote>従来型の</quote> カーソル移動を行うことはできません。 <keycap function="alt"/> , <keycap function="meta"/> , <keycap function="control"/> のほか、カーソルキーも動作しません。カーソルを移動するには、 <xref linkend="sec-grub2-zseries-keys"/> で示されているキー入力の組み合わせを利用します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>キャレット</term>
          <listitem>
            <para>キャレット ( <keycap>^</keycap> ) は制御文字として使用します。文字として <keycap>^</keycap> を入力して入力を続けるには、 <keycap>^</keycap> , <keycap>^</keycap> , <replaceable>文字</replaceable> のように入力します。</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Enter</term>
          <listitem>
            <para><keycap function="enter"/> キーも動作しません。代わりに <keycombo><keycap>^</keycap> <keycap>J</keycap></keycombo> をお使いください。</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 xml:id="sec-grub2-zseries-keys">
      <title>キーの組み合わせ</title>
      <informaltable>
        <tgroup cols="3">
          <tbody>
            <row>
              <entry morerows="2" valign="top">
                <para>一般的な作業でのキー入力方法:</para>
              </entry>
              <entry>
                <para><keycombo><keycap>^</keycap> <keycap>J</keycap></keycombo></para>
              </entry>
              <entry>
                <para>実行 ( 一般的な PC での <quote>Enter</quote> キー )</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>L</keycap></keycombo></para>
              </entry>
              <entry>
                <para>中止して以前の <quote>状態</quote> に戻る</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>I</keycap></keycombo></para>
              </entry>
              <entry>
                <para>タブ補完 (編集およびシェルモード)</para>
              </entry>
            </row>
            <row>
              <entry morerows="8" valign="top">
                <para>メニューモードで利用可能なキー:</para>
              </entry>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>A</keycap></keycombo></para>
              </entry>
              <entry>
                <para>最初の項目</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>E</keycap></keycombo></para>
              </entry>
              <entry>
                <para>最後の項目</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>P</keycap></keycombo></para>
              </entry>
              <entry>
                <para>前の項目</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>N</keycap></keycombo></para>
              </entry>
              <entry>
                <para>次の項目</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>G</keycap></keycombo></para>
              </entry>
              <entry>
                <para>前のページ</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>C</keycap></keycombo></para>
              </entry>
              <entry>
                <para>次のページ</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>F</keycap></keycombo></para>
              </entry>
              <entry>
                <para>選択した項目の起動もしくはサブメニューの表示 (<keycombo><keycap>^</keycap><keycap>J</keycap></keycombo> と同じです)</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>E</keycap></keycombo></para>
              </entry>
              <entry>
                <para>選択した項目の編集</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>C</keycap></keycombo></para>
              </entry>
              <entry>
                <para>GRUB シェルの起動</para>
              </entry>
            </row>
            <row>
              <entry morerows="13" valign="top">
                <para>編集モードで利用可能なキー:</para>
              </entry>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>P</keycap></keycombo></para>
              </entry>
              <entry>
                <para>前の行</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>N</keycap></keycombo></para>
              </entry>
              <entry>
                <para>次の行</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>B</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字前に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>F</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字後ろに移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>A</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行頭に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>E</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行末に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>H</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字前の文字を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>D</keycap></keycombo></para>
              </entry>
              <entry>
                <para>カーソルのある位置の文字を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>K</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>Y</keycap></keycombo></para>
              </entry>
              <entry>
                <para>ヤンク</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>O</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行を開く</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>L</keycap></keycombo></para>
              </entry>
              <entry>
                <para>画面の更新</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>X</keycap></keycombo></para>
              </entry>
              <entry>
                <para>項目の起動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>C</keycap></keycombo></para>
              </entry>
              <entry>
                <para>GRUB シェルの起動</para>
              </entry>
            </row>
            <row>
              <entry morerows="10" valign="top">
                <para>コマンドラインモードで利用可能なキー:</para>
              </entry>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>P</keycap></keycombo></para>
              </entry>
              <entry>
                <para>前のコマンド</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>N</keycap></keycombo></para>
              </entry>
              <entry>
                <para>履歴内の次のコマンド</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>A</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行頭に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>E</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行末に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>B</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字前に移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>F</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字後ろに移動</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>H</keycap></keycombo></para>
              </entry>
              <entry>
                <para>1 文字前の文字を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>D</keycap></keycombo></para>
              </entry>
              <entry>
                <para>カーソルのある位置の文字を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>K</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行を削除</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>U</keycap></keycombo></para>
              </entry>
              <entry>
                <para>行の破棄</para>
              </entry>
            </row>
            <row>
              <entry>
                <para><keycombo><keycap>^</keycap><keycap>Y</keycap></keycombo></para>
              </entry>
              <entry>
                <para>ヤンク</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-grub2-commands">
    <title>便利な &grub; コマンド</title>

    <variablelist>
      <varlistentry xml:id="vle-grub2-mkconfig">
        <term><command>grub2-mkconfig</command></term>
        <listitem>
          <para><filename>/etc/default/grub</filename> と <filename>/etc/grub.d/</filename> にあるスクリプトからの結果をもとにして、新しい <filename>/boot/grub2/grub.cfg</filename> を生成します。</para>
          <example>
            <title>grub2-mkconfig の使用方法</title>
<screen>grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
          </example>
          <tip>
            <title>文法チェック</title>
            <para><command>grub2-mkconfig</command> を何もパラメータを付けずに実行すると、生成された設定が標準出力 (STDOUT) に出力されますので、ここから想定通りに出力されているかどうかを確認することができます。また、 <filename>/boot/grub2/grub.cfg</filename> に出力した後でも、 <xref linkend="vle-grub2-script-check"/> を利用して文法をチェックすることができます。</para>
          </tip>
          <important>
            <title><command>grub2-mkconfig</command> では UEFI の Secure Boot テーブルを修復できない問題について</title>
            <para>UEFI Secure Boot を使用していて、お使いのシステムが &grub; にまで正しく到達できない場合、 shim の再インストールと UEFI 起動テーブルの再生成が必要となります。具体的には、下記のように実行します:</para>
<screen>&prompt.root;shim-install --config-file=/boot/grub2/grub.cfg</screen>
          </important>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="vle-grub2-mkrescue">
        <term><command>grub2-mkrescue</command></term>
        <listitem>
          <para>インストール済みの &grub; 設定に対して、起動可能なレスキューイメージを作成します。</para>
          <example>
            <title>grub2-mkrescue の使用方法</title>
<screen>grub2-mkrescue -o save_path/name.iso iso</screen>
          </example>
        </listitem>
      </varlistentry>
      <varlistentry xml:id="vle-grub2-script-check">
        <term><command>grub2-script-check</command></term>
        <listitem>
          <para>指定したファイルに文法上のエラーがないかどうかをチェックします。</para>
          <example>
            <title>grub2-script-check の使用方法</title>
<screen>grub2-script-check /boot/grub2/grub.cfg</screen>
          </example>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>grub2-once</command></term>
        <listitem>
          <para>次回の起動時のみに適用する規定の起動項目を設定します。起動項目の一覧を取得したい場合は、 <option>--list</option> オプションをお使いください。</para>
          <example>
            <title>grub2-once の使用方法</title>
<screen>grub2-once <replaceable>番号</replaceable></screen>
          </example>
          <tip>
            <title><command>grub2-once</command> のヘルプ</title>
            <para>何もオプションを指定しないでプログラムを実行すると、利用可能なオプションの一覧を表示することができます。</para>
          </tip>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 xml:id="grub-rescue-target">
    <title>レスキューモード</title>

    <para><emphasis>レスキューモード</emphasis> とは &rootuser; 専用のユーザセッションで、システムの起動が失敗してしまうような場合に、その調査と修復を行うモードです。このモードはシングルユーザモードで、ローカルのファイルシステムと一部のシステムサービスのみが起動され、ネットワークインターフェイスは有効化されません。レスキューモードを開始したい場合は、下記の手順を実施してください。</para>

    <procedure xml:id="proc-rescue-mode">
     <title>レスキューモードへの突入</title>
      <step>
        <para>まずはシステムを再起動します。 &grub; の起動メニューが表示されるまで待ちます。</para>
      </step>
      <step>
        <para>&grub; の起動メニューが表示されたら <keycap>e</keycap> を押し、起動コマンドラインの編集モードに入ります。</para>
      </step>
      <step>
        <para>カーネルパラメータを含む行に、下記のような内容を追記します:</para>
<screen>systemd.unit=rescue.target</screen>
      </step>
      <step>
        <para>あとは <keycap function="control"/> + <keycap>X</keycap> を押して、システムの起動を行います。</para>
      </step>
      <step>
        <para>あとは &rootuser; のパスワードを入力します。</para>
      </step>
      <step>
        <para>必要な調査や修復作業を実施します。</para>
      </step>
      <step>
        <para>作業が終わったら <command>systemctl isolate multi-user.target</command> または <command>systemctl isolate graphical.target</command> を実行することで、通常の起動モードに戻すことができます。</para>
      </step>
    </procedure>
  </sect1>

  <sect1 xml:id="sec-grub2-info">
    <title>さらなる情報</title>

    <para>&grub; に関する広い範囲の情報は、 <link xlink:href="https://www.gnu.org/software/grub/"/> で提供されています。また、 <command>grub</command> の info ページにも、様々な記載があります。 <phrase os="sles;sled">また、<link xlink:href="https://www.suse.com/support"/> にある Technical Information Search で、キーワード <quote>&grub;</quote> を指定して検索すると、様々な問題点などを検索することができます。</phrase></para>
  </sect1>
</chapter>
