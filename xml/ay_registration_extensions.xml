<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="CreateProfile-Register">
 <title>システムの登録と拡張の選択</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>登録サーバ経由でのシステムの登録は、 <literal>suse_register</literal> リソースで設定することができます。下記の例では、 &scc; に対してシステムの登録を行っています。ご利用の組織内に独自の登録サーバが用意されている場合は、 <literal>reg_server*</literal> プロパティで必要なデータを指定する必要があり伸す。詳しくは表をご覧ください。</para>

<screen>&lt;suse_register&gt;
  &lt;do_registration config:type="boolean"&gt;true&lt;/do_registration&gt;
  &lt;email&gt;&exampleuser_plain;@&exampledomain;&lt;/email&gt;
  &lt;reg_code&gt;<replaceable>登録コード</replaceable>&lt;/reg_code&gt;
  &lt;install_updates config:type="boolean"&gt;true&lt;/install_updates&gt;
  &lt;slp_discovery config:type="boolean"&gt;false&lt;/slp_discovery&gt;
  &lt;--! optionally register some add-ons --&gt;
  &lt;addons config:type=&quot;list&quot;&gt;
    &lt;addon&gt;
      &lt;name&gt;sle-module-basesystem&lt;/name&gt;
      &lt;version&gt;<replaceable>15.1</replaceable>&lt;/version&gt;
      &lt;arch&gt;<replaceable>x86_64</replaceable>&lt;/arch&gt;
    &lt;/addon&gt;
  &lt;/addons&gt;
&lt;/suse_register&gt;
 </screen>

 <para>少なくとも Basesystem モジュール (Linux カーネルやシステムライブラリ、システムサービスなどが提供されるモジュール) については登録を行っておき、システムの基本部分を更新できるようにしておくことをお勧めします。</para>

 <para>登録処理を完全に自動化する代わりに、インストール中に &yast; の登録モジュールを開始するよう設定することもできます。この仕組みにより、登録データを手作業で入力することができるようになります。この場合、下記のような XML コードを設定します:</para>

<screen>&lt;general&gt;
 &lt;semi-automatic config:type="list"&gt;
   &lt;semi-automatic_entry&gt;scc&lt;/semi-automatic_entry&gt;
 &lt;/semi-automatic&gt;
&lt;/general&gt;</screen>

 <tip os="sles;sled;osuse">
  <title>インストール時のネットワーク設定の使用</title>
  <para>インストール時に使用するネットワーク設定と同じものを使用する必要がある場合、 &ay; は登録処理を行う前の第 1 ステージで、ネットワーク設定を動作させる必要があることになります。</para>
<screen>&lt;networking&gt;
  &lt;setup_before_proposal config:type="boolean"&gt;true&lt;/setup_before_proposal&gt;
&lt;/networking&gt;</screen>
 </tip>

 <variablelist>
  <title><literal>suse_btrfs</literal></title>
  <varlistentry>
   <term><literal>do_registration</literal></term>
   <listitem>
    <para>ブール値</para>
<screen>&lt;do_registration config:type="boolean"
&gt;true&lt;/do_registration&gt;</screen>
    <para>システムを登録すべきかどうかを指定します。 <literal>false</literal> を指定した場合、その他のオプションは全て無視され、システムは登録されなくなります。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>e-mail</term>
   <listitem>
    <para>電子メールアドレス</para>
<screen>&lt;email&gt;&exampleuser_plain;@&exampledomain;&lt;/email&gt;</screen>
    <para>任意指定です。登録コードに合致する電子メールアドレスを指定します。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>reg_code</term>
   <listitem>
    <para>テキスト</para>
<screen>&lt;reg_code&gt;<replaceable>登録コード</replaceable>&lt;/reg_code&gt;</screen>
    <para>必須です。登録コードを指定します。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><literal>install_updates</literal></term>
   <listitem>
    <para>ブール値</para>
<screen>&lt;install_updates config:type="boolean"
&gt;true&lt;/install_updates&gt;</screen>
    <para>任意指定です。更新チャンネルからの更新をインストールすべきかどうかを指定します。既定ではそれらをインストールしません ( <literal>false</literal> ) 。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>slp_discovery</term>
   <listitem>
    <para>ブール値</para>
<screen>&lt;slp_discovery config:type="boolean"
&gt;true&lt;/slp_discovery&gt;</screen>
    <para>任意指定です。 SLP を介して登録サーバを検索するかどうかを指定します。既定値は <literal>false</literal> です。</para>
    <para>この指定では、登録サーバが 1 台だけ見つかる必要があります。複数の登録サーバが検出されると、インストールが失敗してしまいます。このような場合は、 <literal>reg_server</literal> でいずれか 1 つのサーバを指定してください。</para>
    <para><literal>slp_discovery</literal> も <literal>reg_server</literal> も指定しない場合、システムは &scc; に対して登録を行います。</para>
    <para>この設定は自己更新機能にも影響します。無効化した場合、 SLP での検索は行いません。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>reg_server</term>
   <listitem>
    <para>URL</para>
<screen>&lt;reg_server&gt;
  https://smt.&exampledomain;
&lt;/reg_server&gt;</screen>
    <para>任意指定です。 &rmt; のサーバ URL を指定します。 <literal>slp_discovery</literal> も <literal>reg_server</literal> も指定しない場合、システムは &scc; に対して登録を行います。</para>
    <para>自己更新リポジトリの URL を問い合わせる際、 &rmt; サーバに対して問い合わせが行われます。そのため、 <literal>self_update_url</literal> が設定されていない場合、 &rmt; サーバには自己更新のダウンロード元を設定する必要があります。この機能に関する詳細については、 &deploy; をお読みください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><literal>reg_server_cert_fingerprint_type</literal></term>
   <listitem>
    <para><literal>SHA1</literal> もしくは <literal>SHA256</literal></para>
<screen>&lt;reg_server_cert_fingerprint_type&gt;
  SHA1
&lt;/reg_server_cert_fingerprint_type&gt;</screen>
    <para>任意指定です。 <literal>reg_server_cert_fingerprint</literal> でチェックサム値を指定する場合には必須となります。なお、 SSL の証明書の正当性を確認するため、 <literal>reg_server_cert_fingerprint</literal> の値を設定しておくことをお勧めします。 SSL 通信が検証エラーで失敗した場合、該当する証明書が自動的に取り込まれるようになります。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><literal>reg_server_cert_fingerprint</literal></term>
   <listitem>
    <para>16 進数表記 (大文字と小文字は区別しません) でのサーバ証明書の指紋 (フィンガープリント) の値を指定します。</para>
<screen>&lt;reg_server_cert_fingerprint&gt;
  <replaceable>01:AB...:EF</replaceable>
&lt;/reg_server_cert_fingerprint&gt;</screen>
    <para>任意指定です。 <literal>reg_server_cert_fingerprint_type</literal> とともに指定します。SSL の証明書の正当性を確認するため、 <literal>reg_server_cert_fingerprint</literal> の値は設定しておくことをお勧めします。 SSL 通信が検証エラーで失敗した場合、該当する証明書が自動的に取り込まれるようになります。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><literal>reg_server_cert</literal></term>
   <listitem>
    <para>URL</para>
<screen>&lt;reg_server_cert&gt;
  http://smt.&exampledomain;/smt.crt
&lt;/reg_server_cert&gt;</screen>
    <para>任意指定です。サーバ内での SSL 証明書の URL を指定します。このオプションを設定してしまうと、ダウンロードした証明書の検証が行われなくなってしまうことから、非推奨となります。代わりに <literal>reg_server_cert_fingerprint</literal> をお使いください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>addons</term>
   <listitem>
    <para>アドオンのリスト</para>
    <para os="sles;sled">インストールリポジトリに追加すべき、登録サーバからの拡張を指定します。詳しくは <xref linkend="CreateProfile-Register-Extension"/> をお読みください。</para>
    <para os="slemicro">インストールリポジトリに追加すべき、登録サーバからの拡張を指定します。詳しくは <xref linkend="CreateProfile-Register-Extension"/> をお読みください。</para>
   </listitem>
  </varlistentry>
 </variablelist>

 <tip>
  <title>サーバ証明書に対する指紋の取得</title>
  <para><literal>reg_server_cert_fingerprint</literal> で指定すべきサーバ証明書の指紋を取得するには、 &smt; サーバ内で下記のコマンドを実行します:</para>
<screen>openssl x509 -noout -in /srv/www/htdocs/smt.crt -fingerprint -sha1</screen>
  <para>&smt; サーバから指紋情報を取得するには、下記のコマンドを実行します:</para>
<screen>curl --insecure -v https://scc.suse.com/smt.crt 2&gt; /dev/null | openssl
x509 -noout -fingerprint -sha256</screen>
  <para>なお、 <literal>scc.suse.com</literal> の箇所をお使いのサーバに置き換えてください。</para>
  <para><emphasis>注意:</emphasis> この設定は、信頼のおけるネットワーク内でのみ使用することができます。インターネットなどの信頼できないネットワークを利用している場合、他の方法でサーバから証明書を取得して、指紋を取得してください。指紋は SSH 経由でサーバから取得することもできるほか、他の情報源から取得してもかまいません。このほか、ダウンロードした証明書とサーバの証明書を比較して、同一のものであることを確認してもかまいません。</para>
 </tip>

 <sect2 xml:id="CreateProfile-Register-Extension">
  <title>拡張</title>
  <para os="sles;sled;osuse">&scc; では、インストール時に追加のソースとして含めることのできる、 <literal>sle-module-development-tools</literal> (開発ツールモジュール) などの拡張が提供されています。拡張は <literal>suse_register</literal> ブロック内の <literal>addons</literal> プロパティで追加することができます。 <!-- Below is a list of all extensions available for &productname; on x86_64: --></para>
  <note os="sles;sled;osuse">
   <title>利用可能な拡張</title>
   <para>利用可能な拡張は製品とアーキテクチャによって異なります。全てのアーキテクチャで全ての拡張が利用できるというわけではありません。  <!-- All listed extensions are available for &sls; on the x86_64 architecture. --></para>
   <para>また、 <literal>sle-ha</literal> などの拡張を使用する場合は、登録コードが必要になります。ご契約の内容にもよりますが、拡張向けの専用登録コードを使用するか、もしくは基本製品に対するコードを変更して使用する必要があります。</para>
  </note>
  <para><command>SUSEConnect --list-extensions</command> を実行することで、登録済みのシステム内で利用可能な全ての拡張を表示することができます。出力結果には下記のような内容が現れるはずです:</para>
  <para>
   The following example shows which extensions are already activated, and
   labels the extensions that require their own registration codes:
  </para>
<screen os="sles;sled;osuse">&prompt.sudo;SUSEConnect --list-extensions
AVAILABLE EXTENSIONS AND MODULES

    Basesystem Module 15 SP&nbsp;&product-sp; x86_64 (Activated)
    Deactivate with: SUSEConnect -d -p sle-module-basesystem/15.&product-sp;/x86_64

        Containers Module 15 SP&nbsp;&product-sp; x86_64
        Activate with: SUSEConnect -p sle-module-containers/15.&product-sp;/x86_64

        Desktop Applications Module 15 SP&nbsp;&product-sp; x86_64 (Activated)
        Deactivate with: SUSEConnect -d -p sle-module-desktop-applications/
        15.&product-sp;/x86_64

            SUSE Linux Enterprise Workstation Extension 15 SP&nbsp;&product-sp; x86_64 (BETA)
            Activate with: SUSEConnect -p sle-we/15.&product-sp;/x86_64 -r ADDITIONAL REGCODE             
            [...]
   </screen>
<screen os="slemicro">
   AVAILABLE EXTENSIONS AND MODULES
   
   SUSE Linux Enterprise Live Patching 15 SP3 x86_64
   Activate with: transactional-update register -p sle-module-live-patching/15.3/x86_64 -r ADDITIONAL REGCODE
   
   [...] 
   </screen>
  <para><option>-p</option> パラメータ以下には <replaceable>名前/バージョン/アーキテクチャ</replaceable> の形式で値が表示されますので、下記のように &ay; のプロファイルに変換することができます:</para>
  <para>
   The following example shows how to configure a list of extensions. These go
   in the <literal>suse_register</literal> block:
  </para>
<screen><![CDATA[<suse_register>
  <do_registration config:type="boolean">true</do_registration>
  <email>tux@example.com</email>
  <reg_code>MY_SECRET_REGCODE</reg_code>
  <install_updates config:type="boolean">true</install_updates>
  <slp_discovery config:type="boolean">false</slp_discovery>
  
  <--! optionally register some add-ons -->   
 <addons config:type="list">
   <addon>
    <!-- Development Tools Module -->
    <!-- Depends on: Desktop Applications Module -->     
    <name>sle-module-development-tools</name>
    <version>15.3</version>
    <arch>x86_64</arch>
   </addon>
 
   <addon>
    <!-- SUSE CaaS Platform (BETA) -->
    <!-- Depends on: Containers Module -->
    <name>caasp</name>
    <version>4.0</version>
    <arch>x86_64</arch>
    <reg_code>REG_CODE_REQUIRED</reg_code>
   </addon>

   <addon>
    <!-- SUSE Enterprise Storage -->
    <!-- Depends on: Server Applications Module -->
    <name>ses</name>
    <version>6</version>
    <arch>x86_64</arch>
    <reg_code>REG_CODE_REQUIRED</reg_code>
   </addon>

   <addon>
    <!-- SUSE Linux Enterprise High Availability Extension -->
    <!-- Depends on: Server Applications Module -->
    <name>sle-ha</name>
    <version>15.3</version>
    <arch>x86_64</arch>
    <reg_code>REG_CODE_REQUIRED</reg_code>
   </addon> 
 </addons>
</suse_register>]]></screen>
  <para>
   You may also see all available modules and extensions at
   <link xlink:href="https://scc.suse.com/packages"/>. Select your product and
   architecture, then click the In Module form to see a list of all extensions.
  </para>
  <note os="sles;sled;osuse">
   <title>拡張同士の依存関係</title>
   <para>&slsa; 15 およびそれ以降のバージョンでは、 &ay; は登録時に依存関係を調査して、拡張の順序を自動的に調整することができます。これにより、 &ay; プロファイル内での拡張の順序は、特に重要ではないことになります。</para>
   <para>また、 &ay; ではプロファイル内に拡張が書かれていない場合であっても、依存関係にある拡張に対しては自動的に登録処理を実施します。これにより、拡張の依存関係に関しては、特に気にする必要がないことになります。</para>
   <para>しかしながら、依存関係にある拡張が登録キーを必要とするようなものであった場合、登録キーを含めてプロファイル内に指定を行わなければなりません。プロファイル内に登録キーを設定しないと、登録処理が失敗することになります。</para>
   <para>
    The architecture and version of an extension are not mandatory. The
    registration workflow will evaluate the right one.
   </para>
  </note>
 </sect2>
</sect1>
