<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-print">
 <title>印刷の操作</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>&productnamereg; では、ネットワークプリンタなど、様々な種類のプリンタから印刷することができます。プリンタは手作業で設定することができるほか、 &yast; 経由で設定することもできます。設定方法については <xref linkend="sec-yast-hw-print"/> をお読みください。また、印刷ジョブの開始や管理については、グラフィカルなユーティリティとコマンドラインのユーティリティの両方が用意されています。印刷が正しく動作しない場合は、 <xref linkend="sec-print-prob"/> をお読みください。</para>
 <para>CUPS (Common Unix Printing System) は &productname; での標準印刷システムです。</para>
 <para>各種のプリンタは USB やネットワークなどのインターフェイスで違いがあるほか、プリンタ言語でも違いがあります。プリンタをお買い上げになる場合は、まずインターフェイスが対応可能なものかどうか (USB, イーサネット, Wi-Fi など) とプリンタの言語をご確認ください。プリンタの言語としては、下記の 3 種類に分類することができます:</para>
 <variablelist>
  <varlistentry>
   <term>PostScript プリンタ</term>
   <listitem>
    <para>PostScript は、ほとんどの Linux や Unix での印刷ジョブの作成にあたって使用されるプリンタ言語で、内部の印刷システムでも使用されています。 PostScript 文書をプリンタ側で直接処理できる場合で、印刷システム側でさらなる編集作業などが発生しない場合は、潜在的にエラーの発生しうる可能性を大きく減らすことができます。</para>
    <para>現時点では、標準の印刷ジョブ形式が PostScript から PDF という形式に置き換えられていますが、 PDF を直接印刷することのできる PostScript+PDF 対応のプリンタも現われてきています。従来型の PostScript のみに対応したプリンタの場合、 PDF は印刷のワークフロー内で PostScript に変換する必要があります。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>標準プリンタ (PCL や ESC/P などの言語)</term>
   <listitem>
    <para>既知のプリンタ言語であれば、 Ghostscript を利用することで、印刷システム側で PostScript のジョブをそれぞれの言語に変換することができます。この処理は逐次翻訳処理 (インタプリティング) と呼ばれます。最もよく知られている言語は PCL (HP 社のプリンタなどが対応しています) と ESC/P (EPSON 社のプリンタで使用されています) の 2 種類で、これらの言語は Linux で通常サポートされているため、十分な印刷結果が得られます。ただし、 Linux では特殊な印刷機能に対応していない場合があります。 HP 社と EPSON 社以外の場合は、プリンタの製造元が Linux ドライバを開発しておらず、 Linux のディストリビューションとして配布のできるオープンソースライセンスでは、ソフトウエアが存在しないのが現状です。</para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="sec-print-prep-gdi">
   <term>プロプライエタリプリンタ (GDI プリンタとも呼びます)</term>
   <listitem>
    <para>これらのプリンタは、汎用的なプリンタ言語のいずれにも対応していないものです。これらは非公開のプリンタ言語を使用しているほか、新しい型式が販売されるようになると、言語側にも変更が加えられるようになってしまっています。通常は、 Windows 向けのドライバのみが公開されています。詳しくは <xref linkend="sec-print-gdi"/> をお読みください。</para>
   </listitem>
  </varlistentry>
 </variablelist>
 <para>新しいプリンタを購入される場合は、まず下記の情報源をお読みのうえ、購入予定のプリンタがサポートされているかどうかをご確認ください:</para>
 <variablelist>
  <varlistentry>
   <term><link xlink:href="http://www.openprinting.org/printers"/></term>
   <listitem>
    <para>OpenPrinting の Web ページには、プリンタデータベースが提供されています。データベースには最新の Linux におけるサポート状態が書かれています。ただし、 Linux ディストリビューションは、開発上の都合で決められたタイミングでドライバを取り込むものであるため、 <quote>perfectly supported</quote> (完全対応) とされているプリンタであっても、最新の &productname; バージョンでは対応しきれていない場合があります。そのため、このデータベースは必ずしも正しい状態にはなりませんので、参考情報としてお読みください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><link xlink:href="http://pages.cs.wisc.edu/~ghost/"/></term>
   <listitem>
    <para>Ghostscript の Web ページもご確認ください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><filename>/usr/share/doc/packages/ghostscript/catalog.devices</filename></term>
   <listitem>
    <para>内蔵の Ghostscript ドライバに書かれている一覧です。</para>
   </listitem>
  </varlistentry>
 </variablelist>
 <sect1 xml:id="sec-print-workflow">
  <title>CUPS の流れ</title>

  <para>まずはユーザが印刷ジョブを作成します。印刷ジョブには、印刷するデータそのもののほか、スプーラに対する情報が含まれています。これにはプリンタの名前や印刷キューの名前のほか、プリンタ固有の情報としてフィルタに関する情報などが含まれています。</para>

  <para>それぞれのプリンタに対しては、少なくとも 1 つの専用印刷キューが割り当てられます。スプーラは、目的のプリンタがデータを受信できる状態になるまで、キュー内に印刷ジョブを貯めておきます。プリンタの準備ができると、フィルタとバックエンドを通して、プリンタに対してデータを送信します。</para>

  <para>フィルタは、アプリケーションが生成した印刷用のデータ (通常は PostScript, PDF などですが、 ASCII, JPEG などである場合もあります) をプリンタ固有のデータ (PostScript, PCL, ESC/P など) に変換します。プリンタの機能は PPD ファイルとして定義されていて、プリンタ固有のオプションのほか、プリンタで特定の機能を有効化するためのパラメータなどが定義されています。フィルタシステムでは、ユーザが選択したオプションが有効化されるよう設定します。</para>

  <para>PostScript プリンタを使用している場合は、フィルタシステムがデータをプリンタ固有の PostScript に変換します。この場合、プリンタドライバは不要となります。 PostScript 以外のプリンタの場合は、フィルタシステムが同じくプリンタ固有のデータに変換します。この場合は、お使いのプリンタに合わせたドライバが必要となります。バックエンドは、プリンタ固有のデータをフィルタから受信して、それをプリンタに送信します。</para>
 </sect1>
 <sect1 xml:id="sec-print-method">
  <title>プリンタの接続方式とプロトコル</title>

  <para>システムとプリンタを接続する方式には複数のものがあります。 CUPS ではローカルのプリンタとネットワーク経由で接続されたプリンタを区別せずに設定することができます。プリンタの接続方法について、詳しくは <link xlink:href="http://ja.opensuse.org/SDB:CUPS_in_a_Nutshell"/> をお読みください。</para>

  <para arch="zseries" os="sles">&zseries; メインフレームに対して、ローカルで接続するような z/VM 提供のプリンタ、および類似デバイスは、 CUPS 側でサポートしていません。これらのプラットフォームでは、印刷処理はネットワーク経由でのみ行なうことができます。ネットワークプリンタとのケーブル接続は、プリンタの製造元が提供する手順に従って行なわなければなりません。</para>

  <warning>
   <title>実行中のシステムにおけるケーブル接続の変更</title>
   <para>マシンに対してプリンタを接続するにあたっては、 USB 以外の方式ではホットプラグ (活性挿抜) に対応しておらず、動作中に接続したり、動作中に取り外したりすることができないことに注意してください。お使いのシステムやプリンタが損傷を受けないようにするため、 USB 以外の方式で接続されている場合は、接続を変更する前にシステムをシャットダウンしてください。</para>
  </warning>
 </sect1>
 <sect1 xml:id="sec-print-software">
  <title>ソフトウエアのインストール</title>

  <para>PPD (PostScript Printer Description) はコンピュータ言語の一種で、解像度やオプション、両面印刷の可否などの情報を設定するためのものです。これらの仕組みは、 CUPS で様々なオプションを使用する際に必要となるもので、 PPD ファイルがないと、プリンタに対して <quote>何も加工しない</quote> 状態でデータを送信しなければならなくなってしまいます。</para>

  <para>PostScript プリンタを設定するにあたって最も適切なやり方は、適切な PPD ファイルを取得することです。 <systemitem>manufacturer-PPDs</systemitem> や <systemitem>OpenPrintingPPDs-postscript</systemitem> のパッケージには、多数の PPD ファイルが用意されています。詳しくは <xref linkend="sec-print-special-ppd"/> および<xref linkend="sec-print-prob-ppd"/> をお読みください。</para>

  <para>新しい PPD ファイルは <filename>/usr/share/cups/model/</filename> ディレクトリ内に保存することができるほか、 <xref linkend="sec-yast-hw-print-local-get-ppd"/> の手順に従うことで、 &yast; から印刷システムに追加することもできます。 PPD ファイルを追加したあとは、プリンタの設定時に追加した PPD ファイルを選択することができます。</para>

  <para>なお、プリンタの製造元がソフトウエア (アプリケーション) パッケージ全体をインストールさせようとする場合がありますが、これをそのままインストールしてしまうと、 &productname; で提供しているサポートを受けられなくなってしまう場合があることにご注意ください。これは、ソフトウエアパッケージによっては印刷コマンドの動作を書き換えてしまうものがあるためで、このようなシステムにしてしまうと、他の製造元のプリンタを扱えなくなってしまいます。このような理由から、製造元が提供するソフトウエアのインストールは、お勧めできません。</para>
 </sect1>
 <sect1 xml:id="sec-print-net">
  <title>ネットワークプリンタ</title>

  <para>ネットワークプリンタの場合は様々なプロトコルに対応しているほか、同時に複数のプロトコルに対応できるものもあります。対応するプロトコルのうちのほとんどは標準化されているものですが、製造元によっては非標準のプロトコルを使用している場合があります。この場合は、ごく限られたオペレーティングシステム向けのドライバしか公開していません。残念ながらこのような場合、一般的には Linux 向けのドライバはほとんど公開されていないのが現状です。このような状況から、全てのプロトコルが Linux でスムーズに動作するとは限りません。そのため、いくつかのプロトコルを使ってみて、期待通りに動作するかどうかを試してみる必要があります。</para>

<!--  fs: 2008-10-08:
     wrong place. This would be suitable for a cups server section
  <important>
   <title>Remote access settings</title>
   <para>
    By default, the cupsd only listens on internal network interfaces
    (<systemitem>localhost</systemitem>). When setting up a CUPS network
    server you need to adjust the <literal>Listen</literal> directive in
    <filename>/etc/cups/cupsd.conf</filename> to listen to the outer network.
   </para>
  </important>
-->

  <para>CUPS では <systemitem>ソケット</systemitem> , <systemitem>LPD</systemitem> , <systemitem>IPP</systemitem> <systemitem>smb</systemitem> にそれぞれ対応しています。</para>

  <variablelist>
   <varlistentry>
    <term>ソケット</term>
    <listitem>
     <para><emphasis>ソケット</emphasis> とは、純粋な TCP ソケットを介して純粋な印刷データを送信する仕組みです。一般的には <option>9100</option> や <option>35</option> などのポート番号を使用します。デバイス URI (Uniform Resource Identifier) の文法は下記のとおりです: socket:// <replaceable>プリンタの IP アドレス</replaceable> : <replaceable>ポート番号</replaceable> 。例: <systemitem>socket://&subnetII;.202:9100/</systemitem></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>LPD (ラインプリンタデーモン (Line Printer Daemon))</term>
    <listitem>
     <para>LPD プロトコルは RFC&nbsp;1179 で規定されているプロトコルです。このプロトコルでは、印刷キューの ID などのジョブ関連データが、実際の印刷データよりも前に送信されます。そのため、 LPD プロトコルで印刷する場合は、印刷キューを指定しなければなりません。また、多くのプリンタの製造元の実装では、印刷キューの名前に任意のものを設定することができます。また、プリンタのマニュアル側で使用すべき名前が固定で示されているものもあります (例: LPT, LPT1, LP1 など) 。 LPD サービスのポート番号は <option>515</option> です。デバイス URI はたとえば下記のようになります: <systemitem>lpd://&subnetII;.202/LPT1</systemitem></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>IPP (インターネット印刷プロトコル (Internet Printing Protocol))</term>
    <listitem>
     <para>IPP は HTTP プロトコルをベースにして作られたプロトコルです。 IPP では、他のプロトコルよりも多くのジョブ関連データを送信します。 CUPS では IPP を内部的なデータ転送手段として使用しています。 IPP を正しく設定するため、印刷キューの名前を指定する必要があります。 IPP のポート番号は <literal>631</literal> です。デバイス URI はたとえば下記のようになります:<systemitem>ipp://&subnetII;.202/ps</systemitem> や <systemitem>ipp://&subnetII;.202/printers/ps</systemitem></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SMB (Windows 共有)</term>
    <listitem>
     <para>CUPS は Windows で共有されているプリンタにも接続して印刷することができます。この場合、使用するプロトコルは SMB と呼ばれます。 SMB ではポート番号 <option>137</option> , <option>138</option>, <option>139</option> をそれぞれ使用します。デバイス URI は <systemitem>smb://user:password@workgroup/&smbname;/printer</systemitem> , <systemitem>smb://user:password@&smbname;/printer</systemitem>, <systemitem>smb://&smbname;/printer</systemitem> のいずれかの形態を取ります。</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>プリンタ側で対応しているプロトコルは、接続するまえにあらかじめ設定しておく必要があります。製造元が必要な情報を公開していない場合は、 <command>nmap</command> (<systemitem>nmap</systemitem> パッケージ) コマンドを利用することで、どのようなプロトコルに対応しているのかを調べることができます。 <command>nmap</command> は開いているポートを調べるためのコマンドで、たとえば下記のように実行します:</para>

<screen>&prompt.user;nmap -p 35,137-139,515,631,9100-10000 <replaceable>プリンタの IP アドレス</replaceable></screen>
 </sect1>
 <sect1 xml:id="sec-print-net-config-cmdl">
  <title>コマンドラインツールを利用した CUPS の設定</title>

  <para>CUPS は <command>lpinfo</command> , <command>lpadmin</command>, <command>lpoptions</command> などのコマンドラインツールで設定することもできます。設定を行なうにあたっては、バックエンド (USB など) とパラメータから構成されるデバイス URI を指定する必要があります。お使いのシステムでデバイス URI を判断するには、 <command>lpinfo -v | grep ":/"</command> を実行します:</para>

<screen>&prompt.sudo;lpinfo -v | grep ":/"
direct usb://ACME/FunPrinter%20XL
network socket://&cupsip;</screen>

  <para><command>lpadmin</command> を使用することで、 CUPS サーバに対して印刷キューの追加や削除、管理などを行なうことができます。印刷キューを追加するには、下記の文法で指定します:</para>

<screen>&prompt.sudo;lpadmin -p <replaceable>キュー名</replaceable> -v <replaceable>デバイス URI</replaceable> -P <replaceable>PPD ファイル</replaceable> -E</screen>

  <para>上記のように実行すると、 <option>-v</option> で指定したデバイスが、指定した PPD ファイル ( <option>-P</option> ) および <replaceable>キュー名</replaceable> ( <option>-p</option> ) のキュー名で利用できるようになります。このことから、プリンタを手作業で設定するにあたっては、 PPD ファイルとデバイス URI をあらかじめ知っておかなければならないことになります。</para>

  <para>なお、 <option>-E</option> を最初のオプションとして指定してはなりません。<option>-E</option> オプションを最初に指定すると、全ての CUPS コマンドで暗号化された接続を使用する意味になります。プリンタを有効化するには、 <option>-E</option> を下記のように指定して使用しなければなりません:</para>

<screen>&prompt.sudo;lpadmin -p ps -v usb://ACME/FunPrinter%20XL -P \
/usr/share/cups/model/Postscript.ppd.gz -E</screen>

  <para>ネットワークプリンタを設定するには、下記の例のように実行します:</para>

<screen>&prompt.sudo;lpadmin -p ps -v socket://&subnetII;.202:9100/ -P \
/usr/share/cups/model/Postscript-level1.ppd.gz -E</screen>

  <para><command>lpadmin</command> に対するさらなるオプションについては、 <systemitem>lpadmin(8)</systemitem> のマニュアルページをお読みください。</para>

  <para>プリンタを設定する際、いくつかのオプションには既定値が設定されます。これらのオプションは、それぞれの印刷ジョブで変更することができます (ただし使用している印刷ツールに依存します) 。 &yast; でもそれらの既定値を変更することができます。コマンドラインツールの場合、既定値を設定するには下記の手順で行ないます:</para>

  <procedure>
   <step>
    <para>まずは全てのオプションを表示します:</para>
<screen>&prompt.sudo;lpoptions -p <replaceable>キュー名</replaceable> -l</screen>
    <para>例:</para>
<screen>Resolution/Output Resolution: 150dpi *300dpi 600dpi</screen>
    <para>既定値として設定されている値には、アスタリスク ( <literal>*</literal> ) が付けられています。</para>
   </step>
   <step>
    <para><command>lpadmin</command> を利用することで、このオプションを変更することができます:</para>
<screen>&prompt.sudo;lpadmin -p <replaceable>キュー名</replaceable> -o Resolution=600dpi</screen>
   </step>
   <step>
    <para>変更された設定を確認します:</para>
<screen>&prompt.sudo;lpoptions -p <replaceable>キュー名</replaceable> -l

Resolution/Output Resolution: 150dpi 300dpi *600dpi</screen>
   </step>
  </procedure>

  <para>一般ユーザが <command>lpoptions</command> を実行した場合、設定値は <filename>~/.cups/lpoptions</filename> 内に書き込まれます。 <systemitem class="username">root</systemitem> で実行した場合は、設定値は<filename>/etc/cups/lpoptions</filename> に書き込まれます。</para>
 </sect1>
 <sect1 xml:id="sec-print-appl-commandline">
  <title>コマンドラインからの印刷</title>

  <para>コマンドラインから印刷処理を行なうには、 <command>lp -d</command> <replaceable>キュー名</replaceable> <replaceable>ファイル名</replaceable> のようにして実行します。ここで、 <replaceable>キュー名</replaceable> と <replaceable>ファイル名</replaceable> には適切な値を指定します。</para>

  <para>アプリケーションによっては、 <command>lp</command> コマンドを利用して印刷するものもあります。この場合は、アプリケーションの印刷ダイアログ内で <replaceable>ファイル名</replaceable> 以外の正しいオプションを指定してください。たとえば <command>lp -d</command> <replaceable>キュー名</replaceable> のようになります。</para>
 </sect1>
 <sect1 xml:id="sec-print-special">
  <title>&productname; での特殊機能</title>

  <para>いくつかの CUPS 機能が &productname; にも用意されています。ここでは、重要な変更点が示されています。</para>

  <sect2 xml:id="sec-print-special-cupsfire">
   <title>CUPS とファイアウオール</title>
   <para>&productname; を既定値のままインストールすると、 &firewalld; が有効化され、ネットワークインターフェイスが <literal>public</literal> ゾーンに割り当てられます。この場合、全ての着信接続がブロックされます。</para>
   <para>&firewalld; が有効化されている場合、 internal (内部) ネットワークゾーンに対して <literal>mdns</literal> と <literal>ipp</literal> を許可して、クライアント側からネットワークプリンタを参照できるように設定する必要があります。 public ゾーンに対しては、プリンタキューを公開すべきではありません。</para>
   <para>(&firewalld; の設定について、詳しくは <xref linkend="sec-security-firewall-firewalld"/> および <link xlink:href="http://ja.opensuse.org/SDB:CUPS_and_SANE_Firewall_settings"/> をお読みください。</para>
   <sect3 xml:id="sec-print-special-cupsfire-client">
    <title>CUPS クライアント</title>
    <para>通常、 CUPS はファイアウオールの内側にある、信頼のおけるネットワーク環境内のワークステーションで動作させるものです。この場合は、ネットワークインターフェイスを<literal>Internal</literal> ゾーンに割り当てることをお勧めします。これにより、ネットワーク側からワークステーションにアクセスできるようになります。</para>
   </sect3>
   <sect3 xml:id="sec-print-special-cupsfire-server">
    <title>CUPS サーバ</title>
    <para>CUPS サーバがファイアウオールで保護される信頼のできるネットワーク環境内にある場合、ネットワークインターフェイスはファイアウオールの <literal>Internal</literal> ゾーンに割り当てるべきです。 CUPS サーバを特別なファイアウオールルールで防ぎ、かつ CUPS で機密を保護する設定をしない限り、信頼のできないネットワーク環境内に配置することはおすすめしません。</para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-print-special-browsing">
   <title>ネットワークプリンタの参照</title>
   <para>CUPS サーバは、共有されているプリンタとその状態に関する情報を、ネットワークに対して定期的に提供します。クライアントはこの情報を元にして、たとえば印刷ダイアログ内のプリンタ情報を更新します。これを <quote>ブラウジング</quote> (参照) と呼びます。</para>
   <para>CUPS サーバは、自身の印刷キューに関する情報をネットワーク側に提供する際、以前より用意されている CUPS ブラウジングプロトコルのほか、 Bonjour/DNS-SD も利用することができます。印刷キューに関する情報を参照できるようにするには、全てのクライアントで <systemitem class="daemon">cups-browsed</systemitem> サービスを動作させる必要があります。 <systemitem class="daemon">cups-browsed</systemitem> は既定では起動するように設定されていませんので、今すぐ起動するには <command>sudo systemctl start cups-browsed</command> を、システムの起動時に自動的に開始するように設定するには <command>sudo systemctl enable cups-browsed</command> を、全てのクライアントで実行してください。</para>
   <para><systemitem class="daemon">cups-browsed</systemitem> を開始しても印刷キューが現われない場合、 CUPS サーバが印刷キューを Bonjour/DNS-SD で情報公開しているものと思われます。この場合は、全てのクライアントで <systemitem class="resource">avahi</systemitem> パッケージをインストールし、 <command>sudo systemctl start avahi-daemon</command> を実行して関連するサービスを起動しておく必要があります。</para>
   <para>&firewalld; でプリンタを参照できるように設定する方法については、 <xref linkend="sec-print-special-cupsfire"/> をお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-print-special-ppd">
   <title>様々なパッケージ内にある PPD ファイルについて</title>
   <para>&yast; プリンタ設定モジュールでは、 <filename>/usr/share/cups/model</filename> 内にある PPD ファイルを利用してキューを設定します。特定のプリンタのモデル (型式) 向けの PPD ファイルを見つけるにあたって、 &yast; はハードウエアの検出段階で取り出した製造元とモデルの情報と、インストールされている全ての PPD ファイル内の情報を比較して行ないます。このような仕組みから、 &yast; のプリンタ設定モジュールは、 PPD ファイル内にある情報をデータベース化して検索を高速にできるようにしています。</para>
   <para>PPD ファイルのみを使用し、その他の情報源を使用しない構成であることから、 <filename>/usr/share/cups/model</filename> にある PPD ファイルを自由に編集することもできるようになっています。たとえば特定の PostScript プリンタに対する PPD ファイルが <systemitem>manufacturer-PPDs</systemitem> パッケージにも <systemitem>OpenPrintingPPDs-postscript</systemitem> パッケージにも用意されていないものの、製造元から提供されている場合、これを <filename>/usr/share/cups/model</filename> 内にコピーすることで、プリンタの機能を最大限に生かしながら印刷することができるようになります。</para>
   <para>追加の PPD ファイルは、下記のパッケージ内に含まれています:</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para><systemitem>gutenprint</systemitem>: Gutenprint ドライバとそれを利用する PPD</para>
    </listitem>
    <listitem>
     <para><systemitem>splix</systemitem>: SpliX ドライバとそれを利用する PPD</para>
    </listitem>
    <listitem>
     <para><systemitem>OpenPrintingPPDs-ghostscript</systemitem>: Ghostscript 内蔵ドライバを使用する PPD</para>
    </listitem>
    <listitem>
     <para><systemitem>OpenPrintingPPDs-hpijs</systemitem>: HP 社のプリンタ以外に対する HPIJS ドライバ向け PPD</para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-print-prob">
  <title>トラブルシューティング</title>

  <para>下記には、プリンタハードウエアやソフトウエアで最もよく発生する問題と、その解決策や回避策を説明しています。特に GDI プリンタを利用する場合の問題や、 PPD ファイルやポートの設定などのほか、一般的なネットワークプリンタを使用する際の問題や、印刷が正しく出力されない問題やキューの処理の問題などを示しています。</para>

  <sect2 xml:id="sec-print-gdi">
   <title>標準プリンタ言語に対応していないプリンタについて</title>
   <para>一般的なプリンタ言語には対応しておらず、特殊な非公開の制御シーケンスを通じてのみ制御可能なプリンタの場合は、製造元がドライバを提供しているオペレーティングシステムでしか動作させることができません。 GDI は Microsoft* がグラフィックデバイス向けに作成したプログラミングインターフェイスですが、 Windows 向けのドライバしか製造元が提供していないものの場合、 Windows は GDI を利用してプリンタ出力を行なうことから、 <emphasis>GDI プリンタ</emphasis> と呼んでいます。実際にはプログラミングインターフェイスの問題ではなく、これらのプリンタが非公開のプリンタ言語を使用している点が問題となります。</para>
   <para>このような GDI プリンタの場合、型式によっては GDI モードと標準プリンタ言語モードとを切り替えることができるものがあります。詳しくはプリンタのマニュアルをお読みのうえ、対応可能かどうかをご確認ください。また、型式によっては、特殊な Windows ソフトウエアを利用して切り替えるものもあります。この場合、 Windows 側でプリンタを使用すると、 GDI モードに強制的に切り替わってしまいますので、 Linux 側での印刷の際にはご注意ください。その他の GDI プリンタに対しては、利用可能な標準プリンタ言語向けの拡張モジュールがある場合もあります。</para>
   <para>また、製造元によってはプリンタに対するプロプライエタリな (=オープンソースではない) ドライバを提供している場合があります。このようなドライバは、インストール済みの印刷システムで動作するかどうか、および様々なハードウエアプラットフォームに対応しているかどうかを保証することができません。逆に、標準プリンタ言語に対応しているプリンタであれば、印刷システムもハードウエアプラットフォームにも依存せずに使用することができます。</para>
   <para>プロプライエタリな Linux ドライバの試行錯誤に時間を取られるくらいであれば、標準プリンタ言語 (できれば PostScript) に対応したプリンタを購入してしまったほうが、コスト面でもより有利になることでしょう。これでドライバの問題は一挙に解決できるわけですし、特殊なドライバのインストールや設定を行なう必要もなくなるほか、今後のバージョンアップでも新しいドライバの提供を待つ必要がなくなります。</para>
  </sect2>

  <sect2 xml:id="sec-print-prob-ppd">
   <title>PostScript プリンタに対応する PPD ファイルが存在しない場合について</title>
   <para><systemitem>manufacturer-PPDs</systemitem> や <systemitem>OpenPrintingPPDs-postscript</systemitem> パッケージにお使いの PostScript プリンタに対応した PPD ファイルが含まれていない場合は、プリンタの製造元が提供するドライバ CD 内に PPD ファイルが含まれていたり、プリンタの製造元の Web ページからダウンロードできたりする場合があります。</para>
   <para>PPD ファイルが zip アーカイブ (.zip) や自己展開型の zip アーカイブ ( <filename>.exe</filename> ) で提供されている場合、まず <command>unzip</command> コマンドで展開を行なってください。展開を行なったら、まず PPD ファイルに付属するライセンス条件をご確認のうえ、 <command>cupstestppd</command> ユーティリティをお使いになり、 PPD ファイルが <quote>Adobe PostScript プリンタ定義ファイル仕様 バージョン 4.3</quote> に準拠しているかどうかをご確認ください。ユーティリティが <quote>失敗</quote> を返す場合、 PPD ファイルには致命的な問題があり、重大な問題を引き起こすだろうことが判明します。ご利用になる前に、 <command>cupstestppd</command> で報告される問題点は全て解決しておくべきです。詳しくはプリンタの製造元にお尋ねください。</para>
  </sect2>

  <sect2 xml:id="sec-print-prob-netconnect">
   <title>ネットワークプリンタの設定</title>
   <para/>
   <variablelist>
    <varlistentry>
     <term>ネットワークの問題点の判別</term>
     <listitem>
      <para>まずはプリンタをコンピュータに直接接続してみてください。テスト用にローカル接続してプリンタの動作を確認します。問題なく動作するようであれば、問題点はネットワーク側にあることになります。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>TCP/IP スタックの確認</term>
     <listitem>
      <para>TCP/IP ネットワークと名前解決が正しく動作しなければなりません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>リモートの <command>lpd</command> の確認</term>
     <listitem>
      <para>下記のコマンドを実行して、 <replaceable>ホスト</replaceable> にある <command>lpd</command> (ポート <literal>515</literal> ) に接続できるかどうかを確認します:</para>
<screen>&prompt.user;netcat -z <replaceable>HOST</replaceable> 515 &amp;&amp; echo ok || echo failed</screen>
      <para><command>lpd</command> への接続が確立できない (<quote>failed</quote> と出力される) 場合は、プリンタ側で <command>lpd</command> が正しく動作していないか、基本的なネットワークの問題であることが分かります。</para>
      <para><command>lpd</command> サービスへの接続ができた場合は、さらに次のコマンドを <systemitem class="username">root</systemitem> で実行して、 <replaceable>ホスト</replaceable> 内にある <replaceable>queue</replaceable> という印刷キューの状態を問い合わせます:</para>
<screen>&prompt.root;echo -e "\004queue" \
| netcat -w 2 -p 722 <replaceable>ホスト</replaceable> 515</screen>
      <para><command>lpd</command> が何も応答を返さない場合は、プリンタ側で <command>lpd</command> が正しく動作していないか、基本的なネットワークの問題であることが分かります。 <command>lpd</command> が応答を返した場合は、応答には <literal>ホスト</literal> の <literal>queue</literal> でなぜ印刷ができないのかが表示されるはずです。 <xref linkend="aus-d-lpd"/> のような応答が届いた場合は、問題はリモート側の <command>lpd</command> にあることがわかります。</para>
      <example xml:id="aus-d-lpd">
       <title><command>lpd</command> からのエラーメッセージ</title>
<screen>lpd: your host does not have line printer access
lpd: queue does not exist
printer: spooling disabled
printer: printing disabled</screen>
      </example>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>リモートの <command>cupsd</command> の確認</term>
     <listitem>
      <para>CUPS ネットワークサーバは、自分自身が持つキューを 30 秒間隔で UDP ポート <literal>631</literal> にブロードキャスト (全体通知) します。これを利用することで、ネットワーク内にある CUPS ネットワークサーバを検出することができます。なお、下記を実行するにあたっては、ローカルの CUPS デーモンを停止してから実行してください。</para>
<screen>&prompt.user;netcat -u -l -p 631 &amp; PID=$! ; sleep 40 ; kill $PID</screen>
      <para>ブロードキャストしている CUPS ネットワークサーバが見つかると、 <xref linkend="aus-d-bcast"/> のように出力が現われます。</para>
      <example xml:id="aus-d-bcast">
       <title>CUPS ネットワークサーバからのブロードキャスト</title>
<screen>ipp://&subnetII;.202:631/printers/queue</screen>
      </example>
      <para arch="zseries" os="sles">&zseries; のイーサネットデバイスは、既定ではブロードキャストの受信を行なわないようになっています。</para>
      <para>下記のコマンドを実行して、 <replaceable>ホスト</replaceable> にある <command>lpd</command> (ポート <literal>631</literal> ) に接続できるかどうかを確認します:</para>
<screen>&prompt.user;netcat -z <replaceable>ホスト</replaceable> 631 &amp;&amp; echo ok || echo failed</screen>
      <para><command>cupsd</command> への接続が確立できない (<quote>failed</quote> と出力される) 場合は、プリンタ側で <command>cupsd</command> が正しく動作していないか、基本的なネットワークの問題であることが分かります。また、 <command>lpstat -h</command> <replaceable>ホスト</replaceable> -l -t のように実行すると、 <replaceable>ホスト</replaceable> にある全ての<command>cupsd</command> のキューに対して、 (おそらくは非常に長い) 状態情報が表示されます。これが問題なく出力されれば、 <command>cupsd</command> は問題なく動作していない、問い合わせを受け付けることができるようになっているものと考えられます。</para>
      <para>次のコマンドは、 <replaceable>ホスト</replaceable> 内にある <replaceable>キュー</replaceable> に対して、改行文字 1 文字を含むだけの印刷ジョブを受け付けるかどうかを試しています。これで出力されるものは何もなく、単に空白のページが出力されるはずです。</para>
<screen>&prompt.user;echo -en "\r" \
| lp -d queue -h <replaceable>ホスト</replaceable></screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ネットワークプリンタや印刷サーバ機のトラブルシューティング</term>
     <listitem>
      <para>印刷サーバ機内で動作しているスプーラは、複数の印刷ジョブを取り扱う必要があることから、場合によっては問題が発生することがあります。ただ、この問題は印刷サーバ機側の問題であることから、この問題を解決する方法はありません。ただし、印刷サーバ機に接続されているプリンタに TCP で直接アクセスして、スプーラを使用せずに印刷できる機器もあります。詳しくは <xref linkend="sec-print-net"/> をお読みください。</para>
      <para>このような方法でアクセスする場合、印刷サーバ機はデータ転送の形態を変換する (TCP/IP ネットワークとローカルのプリンタ接続) だけのコンバータとして動作することになります。この方法を使用するには、印刷サーバ機側でどのような TCP ポートを利用できるのかを調べる必要があります。プリンタが接続されていて印刷サーバ機の電源が投入されている場合、 <systemitem>nmap</systemitem> パッケージ内にある<command>nmap</command> ユーティリティを使用することで、判断を行なうことができます。なお、実行にあたっては、印刷サーバ機の電源を投入してからしばらく待って実行してください。たとえば <command>nmap&nbsp;</command> <replaceable>IP アドレス</replaceable> のように実行すると、下記のような出力が現われます:</para>
<screen>Port       State       Service
23/tcp     open        telnet
80/tcp     open        http
515/tcp    open        printer
631/tcp    open        cups
9100/tcp   open        jetdirect</screen>
      <para>この出力により、印刷サーバ機で TCP ソケットのポート <literal>9100</literal> にアクセスすることで、プリンタに直接アクセスできることがわかります。既定の <command>nmap</command> では、 <filename>/usr/share/nmap/nmap-services</filename> ファイル内に書かれた既知のポートのみをチェックしますが、特定の範囲の全ポートをチェックする場合は、 <command>nmap -p&nbsp;</command> <replaceable>開始ポート</replaceable> - <replaceable>終了ポート</replaceable> &nbsp; <replaceable>IP アドレス</replaceable> のように指定してください。これを実行すると、しばらくの時間がかかります。詳しい情報については、 <command>nmap</command> のマニュアルページをお読みください。</para>
      <para>あとは下記のようなコマンドを入力します:</para>
<screen>&prompt.user;echo -en "\rHello\r\f" | netcat -w 1 IP_アドレス ポート
cat file | netcat -w 1 IP_アドレス ポート</screen>
      <para>これにより、プリンタがそのポートで動作している場合、文字列やファイルを特定のポートに送信することができます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-print-prob-defective-printouts">
   <title>エラーメッセージが出力されないものの出力が正しくない場合について</title>
   <para>印刷システムとしては、印刷ジョブは CUPS のバックエンドが宛先 (プリンタ) にデータを転送し終えた時点で完了となります。宛先での処理が失敗したような場合 (たとえば特定のプリンタ固有データの印刷ができなかったなど) は、印刷システム側には何も通知がされませんので、問題に気がつくこともありません。プリンタが特定の固有データを印刷できない場合は、プリンタに対してより適切な PPD ファイルを選択してください。</para>
  </sect2>

  <sect2 xml:id="sec-print-prob-disabled-queues">
   <title>キューの無効化について</title>
   <para>何回転送しようとしても宛先にデータを届けることができない場合、 CUPS バックエンド (<literal>USB</literal> もしくは <literal>socket</literal>) は印刷システム (<command>cupsd</command>) に対してエラーを通知します。バックエンド側では、何回データ送信に失敗したらエラーとして扱うのかを基準として決めています。この場合、それ以降の試行は無駄であるものと判断できるため、 <command>cupsd</command> では対応するキューでの印刷を無効化します。問題の原因が判明し解決したら、システム管理者側で <command>cupsenable</command> を実行して、印刷を再度有効化する必要があります。</para>
  </sect2>

  <sect2 xml:id="sec-print-prob-deleting-jobs">
   <title>CUPS ブラウジング: 印刷キューの削除</title>
   <para>CUPS ネットワークサーバが、キューをクライアントに対してブラウジングでブロードキャスト (全体通知) し、クライアント側の <command>cupsd</command> が動作している場合、クライアント側の <command>cupsd</command> はそのキューに対する印刷ジョブを受け付けるようになり、印刷ジョブが届いたらそれをサーバ宛に送信するようになります。サーバ側の <command>cupsd</command> が印刷ジョブを受け取ると、新しいジョブ番号が割り当てられます。このような仕組みであるため、クライアント側でのジョブ番号とサーバ側でのジョブ番号は、一般的に異なる値になります。ただし、クライアント側では印刷ジョブを即時に転送するため、クライアント側でジョブを削除することができない場合があります。これは、 <command>cupsd</command> が印刷ジョブを転送し終えた時点で、クライアント側ではジョブを削除してしまうためです。</para>
   <para>サーバ側で印刷ジョブを削除するには、まずサーバ側でのジョブ番号を判断するため、 <command>lpstat -h &cupsname; -o</command> のようなコマンドを実行します。ただし、こちらもサーバ側でジョブが完了していない (つまりプリンタからの出力が完了していない) 場合に限ります。ジョブ番号が判明したら、あとはサーバ内で印刷ジョブを削除します:</para>
<screen>&prompt.user;cancel -h &cupsname; <replaceable>キュー名-ジョブ番号</replaceable></screen>
  </sect2>

  <sect2 xml:id="sec-print-prob-brokenjobs">
   <title>出力が正しくない場合やデータ転送エラーが発生する場合について</title>
   <para>印刷処理の最中にプリンタの電源を落としてしまったり、コンピュータをシャットダウンしてしまったりした場合は、印刷ジョブがキュー内に残ったままになってしまうことがあります。印刷処理はコンピュータ (もしくはプリンタ) に再度電源が入った際に再開されます。この場合を含め、出力が正しくない場合は、 <command>cancel</command> でキューから印刷ジョブを削除しなければなりません。</para>
   <para>印刷ジョブにそもそも不正なデータが入っていた場合や、ホストとプリンタとの間で通信エラーが発生した場合、プリンタはデータを正しく処理することができず、意味不明な文字の羅列などの形で、大量のページが出力されてしまったりすることがあります。このような問題を解決するには、下記の手順で修復してください:</para>
   <procedure>
    <step>
     <para>まずは印刷を止めるため、インクジェットプリンタの場合は全ての用紙を取り外し、レーザープリンタの場合はトレイを開きます。高品質なプリンタであれば、現在の出力を止めるためのキャンセルボタンが用意されている場合もあります。</para>
    </step>
    <step>
     <para>印刷ジョブは、プリンタに対してデータを送信し終えるまで、キューを保持したままになりますので、まずは <command>lpstat -o</command> や <command>lpstat -h &cupsname; -o</command> などを実行して、現在印刷中のキューを判断します。あとは <command>cancel</command> <replaceable>キュー名</replaceable> - <replaceable>ジョブ番号</replaceable> もしくは <command>cancel -h &cupsname;</command> <replaceable>キュー名</replaceable> - <replaceable>ジョブ番号</replaceable> で印刷ジョブを削除します。</para>
    </step>
    <step>
     <para>ただし、キューから印刷ジョブを削除しても、しばらくはプリンタが出力を続けてしまう場合がありますので、対応する印刷キューの CUPS のバックエンドプロセスを終了させます。</para>
    </step>
    <step>
     <para>いったんプリンタの電源を落として、プリンタをリセットします。しばらく経ってから用紙を入れ、プリンタの電源を入れてください。</para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-print-prob-debugging">
   <title>CUPS のデバッグ</title>
   <para>CUPS で問題が発生した場合、その原因を探るための一般的な方法は下記のとおりです:</para>
   <procedure>
    <step>
     <para><filename>/etc/cups/cupsd.conf</filename> 内に <command>LogLevel debug</command> を設定します。</para>
    </step>
    <step>
     <para><command>cupsd</command> を停止します。</para>
    </step>
    <step>
     <para>過去の出力の中に埋もれてしまうことを防ぐため、 <filename>/var/log/cups/error_log*</filename> を削除します。</para>
    </step>
    <step>
     <para><command>cupsd</command> を開始します。</para>
    </step>
    <step>
     <para>問題を再現させます。</para>
    </step>
    <step>
     <para><filename>/var/log/cups/error_log*</filename> の内容を確認して、問題の原因を探ります。</para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-print-prob-more-information">
   <title>さらなる情報</title>
   <para>&productname; における印刷時の問題について、より深い情報は openSUSE サポートデータベース (<link xlink:href="https://ja.opensuse.org/Portal:Printing"/>) に用意されています。 <phrase os="sles;sled">なお、多くの問題に対する解決方法が、 SUSE ナレッジベース (<link xlink:href="https://www.suse.com/support/"/>) 内で提供されています。関連する記事は、 <literal>CUPS</literal> で検索してお探しください。</phrase></para>
  </sect2>
 </sect1>
</chapter>
