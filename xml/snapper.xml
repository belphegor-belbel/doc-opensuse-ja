<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-snapper">
 <title>Snapper によるシステムの復元とスナップショット管理</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>snapper はファイルシステムのスナップショットを作成したり、管理したりするためのツールです。ファイルシステムのスナップショットには、あの特定の時点におけるファイルシステムの状態に対するコピーが含まれていて、通常はシステムに対して行った変更を元に戻すために使用します。このほか、ユーザデータのディスク内バックアップ用途にも使用することができます。 snapper の機能は btrfs ファイルシステムのほか、 xfs や ext4 ファイルシステムを使用したシン・プロビジョン型の LVM ボリュームに対して使用することができます。</para>
  </abstract>
 </info>

 <para>snapper にはコマンドラインインターフェイスのほか、 &yast; インターフェイスも提供されています。これにより、下記のような種類のファイルシステムに対して、ファイルシステムのスナップショットを作成したり管理したりすることができます:</para>
 <itemizedlist>
  <listitem>
   <para>btrfs: コピーオンライト型の Linux ファイルシステムで、ファイルシステム内にサブボリュームの機能とスナップショットの機能が用意されています (サブボリュームとは、それぞれ別々にマウントすることのできる、ファイルシステム内パーティションです) 。</para>
   <para>このほか、 <literal>btrfs</literal> スナップショットからの起動を行うこともできます。詳しくは <xref linkend="sec-snapper-snapshot-boot"/> をお読みください。</para>
  </listitem>
  <listitem>
   <para>xfs もしくは ext4 でフォーマットされたシン・プロビジョン型の LVM ボリューム。</para>
  </listitem>
 </itemizedlist>
 <para>Snapper を利用することで、下記のようなことができるようになります:</para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para><command>zypper</command> や &yast; が実行したシステム変更の巻き戻し。詳しくは <xref linkend="sec-snapper-undo"/> をお読みください。</para>
  </listitem>
  <listitem>
   <para>以前のスナップショット時点で存在していたファイルの復元。詳しくは <xref linkend="sec-snapper-undo-delete-file"/> をお読みください。</para>
  </listitem>
  <listitem>
   <para>スナップショットからの起動によるシステム全体の巻き戻し。詳しくは <xref linkend="sec-snapper-snapshot-boot"/> をお読みください。</para>
  </listitem>
  <listitem>
   <para>システムが動作している状態での手作業によるスナップショットの作成と管理。詳しくは <xref linkend="sec-snapper-manage"/> をお読みください。</para>
  </listitem>
 </itemizedlist>

 <sect1 xml:id="sec-snapper-setup">
  <title>既定の設定</title>

  <para>&productname; での Snapper は、システムの変更に対する巻き戻しと復元のためのツールとして動作するように設定されています。既定では、ルートパーティション ( <filename>/</filename> ) が <literal>btrfs</literal> でフォーマットされます。また、ルートパーティション <filename>/</filename> が十分に大きい (おおよそ 16 GB 以上) 場合、スナップショットの採取が自動的に有効化されます。 <filename>/</filename> 以外のパーティションに対するスナップショットは、既定では無効化されます。</para>

  <tip>
   <title>インストール済みシステムにおける Snapper の有効化</title>
   <para>インストール時に Snapper を無効化している場合は、任意の時点であとから有効化することもできます。有効化するには、下記を実行して既定の Snapper 設定を作成してください:</para>
   <screen>&prompt.sudo;snapper -c root create-config /</screen>
   <para>あとは <xref linkend="sec-snapper-setup-customize-auto-snapshots"/> で説明している手順に従って、スナップショットの種類を有効化します。</para>
   <para>なお、 btrfs を設定したルートファイルシステムを使用する場合、スナップショットを採取するには、インストーラで提案したサブボリューム設定でルートファイルシステムを設定し、パーティションのサイズが少なくとも 16 GB 以上である必要があります。</para>
  </tip>

  <para>スナップショットを作成すると、スナップショットと元のブロックはファイルシステム内で同じブロックを指し示します。そのため、スナップショットを採取した時点では、追加のディスク領域を必要とすることはありません。ただし、スナップショットを作成した時点からファイルが変更されると、変更した部分のデータブロックが新しく確保され、元の (スナップショットを採取した時点の) データブロックがそのまま保持されるようになります。そのためスナップショットは、修正された分だけのデータに対応するブロックを占有することになります。また、時間が経過するごとにスナップショットが占有する領域が定期的に増えていくことにも繋がります。そのため、 <literal>Btrfs</literal> ファイルシステムでファイルを削除しても、ディスクの空き領域を増やすことには繋がらない場合があり得ます。</para>

  <note>
   <title>スナップショットの場所</title>
   <para>スナップショットは、採取したファイルシステムと同じパーティションやサブボリューム内に存在します。異なるパーティションやサブボリュームに保存することはできません。</para>
  </note>

  <para>そのため、スナップショットを含むパーティションは、通常のパーティションよりもサイズを大きくする必要があります。正確な容量は、保持すべきスナップショットの数とデータ変更の容量によって異なりますが、一般的には通常必要とするサイズの 2 倍程度を確保しておくことをお勧めします。なお、ディスクの空き容量が枯渇してしまうことがないよう、古いスナップショットは自動的にクリーンアップしておくとよいでしょう。詳しくは <xref linkend="sec-snapper-setup-customize-archiving"/> をお読みください。</para>

  <sect2 xml:id="snapper-default-settings">
   <title>既定の設定</title>
   <variablelist>
    <varlistentry>
     <term>16 GB よりも大きいディスクサイズである場合</term>
     <listitem>
      <itemizedlist>
       <listitem><para>設定ファイル: <filename>/etc/snapper/configs/root</filename></para></listitem>
       <listitem><para><literal>USE_SNAPPER=yes</literal></para></listitem>
       <listitem><para><literal>TIMELINE_CREATE=no</literal></para></listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>16 GB よりも小さいディスクサイズである場合</term>
     <listitem>
      <itemizedlist>
       <listitem><para>設定ファイル: 作成されません</para></listitem>
       <listitem><para><literal>USE_SNAPPER=no</literal></para></listitem>
       <listitem><para><literal>TIMELINE_CREATE=yes</literal></para></listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="snapper-snapshot-type">
   <title>スナップショットの種類</title>
   <para>スナップショットそれ自身は技術的な意味で何も違いがありませんが、それを発生させたイベントごとに、スナップショットの意味が異なります:</para>
   <variablelist>
    <varlistentry>
     <term>タイムラインスナップショット</term>
     <listitem>
      <para>毎時作成される単独型のスナップショットです。古いスナップショットは自動的に削除されます。既定では、直近の 10 日、 10 ヶ月、 10 年の単位で最初のスナップショットのみが保持されます。 &yast; で OS をインストールした既定の場合、タイムライン型のスナップショットはルートファイルシステム以外に対して有効化されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>インストールスナップショット</term>
     <listitem>
      <para>&yast; や zypper で 1 つまたは複数のパッケージをインストールすると、スナップショットの対を作成します。 1 つ目はインストール前のスナップショット ( <quote>Pre</quote> (事前)) で、2 つ目はインストール完了後のスナップショット ( <quote>Post</quote> (事後)) です。また、カーネルなどの重要なシステムコンポーネントがインストールされると、スナップショットの対には重要なものであるマーク ( <literal>important=yes</literal> ) が付けられます。古いスナップショットは自動的に削除されます。既定では、直近の重要な 10 回分のスナップショットと、直近の 10 回分の <quote>定期</quote> スナップショット (管理スナップショットを含む) が保持されます。インストールスナップショットは、既定で有効化されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>管理スナップショット</term>
     <listitem>
      <para>&yast; を利用してシステムの管理を行うと、スナップショットの対を作成します。 1 つ目は &yast; のモジュールを開始した段階 ( <quote>Pre</quote> (事前)) 、 2 つ目は &yast; のモジュールを閉じた段階 ( <quote>Post</quote> (事後)) です。古いスナップショットは自動的に削除されます。既定では、直近の重要な 10 回分のスナップショットと、直近の 10  回分の <quote>定期</quote> スナップショット (インストールスナップショットを含む) が保持されます。管理スナップショットは、既定で有効化されます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="snapper-dir-excludes">
   <title>スナップショットから除外されるディレクトリ</title>
   <para>様々な理由から、いくつかのディレクトリについては除外を設定する必要があります。下記の一覧には、除外される全てのディレクトリを示しています:</para>
   <xi:include href="snapshot_excludes_i.xml"/>
  </sect2>

  <sect2 xml:id="sec-snapper-setup-customize">
   <title>設定のカスタマイズ</title>
   <para>&productname; ではほとんどの用途に対応できる既定値が設定されています。ですが、必要であれば、自動スナップショットやスナップショットの保持設定について、全ての項目を設定することができます。</para>
   <sect3 xml:id="sec-snapper-setup-customize-auto-snapshots">
    <title>スナップショットの有効化／無効化</title>
    <para>3 種類のスナップショット種類 (タイムライン, インストール, 管理) を個別に有効化／無効化することができます。</para>
    <variablelist>
     <varlistentry>
      <term>タイムラインスナップショットの有効化／無効化</term>
      <listitem>
       <formalpara>
        <title>有効化</title>
        <para><command>snapper -c root set-config "TIMELINE_CREATE=yes"</command></para>
       </formalpara>
       <formalpara>
        <title>無効化</title>
        <para><command>snapper -c root set-config "TIMELINE_CREATE=no"</command></para>
       </formalpara>
       <para> &yast; で OS をインストールした既定の場合、タイムライン型のスナップショットはルートファイルシステム以外に対して有効化されます。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>インストールスナップショットの有効化／無効化</term>
      <listitem>
       <formalpara>
        <title>有効化:</title>
        <para><systemitem class="resource">snapper-zypp-plugin</systemitem> パッケージをインストールします。</para>
       </formalpara>
       <formalpara>
        <title>無効化:</title>
        <para><systemitem class="resource">snapper-zypp-plugin</systemitem> パッケージを削除します。</para>
       </formalpara>
       <para>インストールスナップショットは既定で有効化されます。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>管理スナップショットの有効化／無効化</term>
      <listitem>
       <formalpara>
        <title>有効化:</title>
        <para><filename>/etc/sysconfig/yast2</filename> 内の <envar>USE_SNAPPER</envar> に <literal>yes</literal> を設定します。</para>
       </formalpara>
       <formalpara>
        <title>無効化:</title>
        <para><filename>/etc/sysconfig/yast2</filename> 内の <envar>USE_SNAPPER</envar> に <literal>no</literal> を設定します。</para>
       </formalpara>
       <para>管理スナップショットは既定で有効化されます。</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-snapper-setup-customize-inst-snapshots">
    <title>インストールスナップショットの制御</title>
    <para>&yast; や zypper でパッケージをインストールした際、スナップショットは <systemitem class="resource">snapper-zypp-plugin</systemitem> が処理します。このプラグインには XML の設定ファイル <filename>/etc/snapper/zypp-plugin.conf</filename> があり、これでスナップショットを採取するタイミングを設定することができます。既定では、設定ファイルは下記のようになっています:</para>
<screen> 1 &lt;?xml version="1.0" encoding="utf-8"?&gt;
 2 &lt;snapper-zypp-plugin-conf&gt;
 3  &lt;solvables&gt;
 4   &lt;solvable match="w"<co xml:id="zypp-conf-match"/> important="true"<co xml:id="zypp-conf-important"/>&gt;kernel-*<co xml:id="zypp-conf-kernel"/>&lt;/solvable&gt;
 5   &lt;solvable match="w" important="true"&gt;dracut&lt;/solvable&gt;
 6   &lt;solvable match="w" important="true"&gt;glibc&lt;/solvable&gt;
 7   &lt;solvable match="w" important="true"&gt;systemd*&lt;/solvable&gt;
 8   &lt;solvable match="w" important="true"&gt;udev&lt;/solvable&gt;
 9   &lt;solvable match="w"&gt;*&lt;/solvable&gt;<co xml:id="zypp-conf-packages"/>
10  &lt;/solvables&gt;
11 &lt;/snapper-zypp-plugin-conf&gt;</screen>
    <calloutlist>
     <callout arearefs="zypp-conf-match">
      <para>match 属性はパターンの定義方法を決めるもので、 Unix スタイルのワイルドカード ( <literal>w</literal> ) か、 Python の正規表現 ( <literal>re</literal> ) のいずれかを指定することができます。</para>
     </callout>
     <callout arearefs="zypp-conf-important">
      <para>指定したパターンに該当し、関連するパッケージが重要であるとしてマークされている (たとえば kernel パッケージなど) と、スナップショットについても重要であるものとしてマークが付けられます。</para>
     </callout>
     <callout arearefs="zypp-conf-kernel">
      <para>パッケージ名と比較処理される内容です。 <literal>match</literal> 属性の設定に依存しますが、特殊文字はシェルのワイルドカードか、正規表現として扱われます。たとえばこのパターンは、 <literal>kernel-</literal> で始まる全てのパッケージが該当する指定になっています。</para>
     </callout>
     <callout arearefs="zypp-conf-packages">
      <para>この行は、全てのパッケージが該当する箇所です。</para>
     </callout>
    </calloutlist>
    <para>このスナップショットの設定では、パッケージがインストールされると必ずスナップショット対を作成します (9 行目の設定による) 。また、重要であるとマークされた kernel, dracut, glibc, systemd, udev の各パッケージがインストールされると、スナップショットの対にも重要 (important) のマークが付けられます。</para>
    <para>ルールを無効化するには、削除を行うか XML のコメント機能を利用してください。たとえば各パッケージのインストールでスナップショット対を作成したくない場合は、下記のようにして 9 行目をコメントアウトします:</para>
<screen> 1 &lt;?xml version="1.0" encoding="utf-8"?&gt;
 2 &lt;snapper-zypp-plugin-conf&gt;
 3  &lt;solvables&gt;
 4   &lt;solvable match="w" important="true"&gt;kernel-*&lt;/solvable&gt;
 5   &lt;solvable match="w" important="true"&gt;dracut&lt;/solvable&gt;
 6   &lt;solvable match="w" important="true"&gt;glibc&lt;/solvable&gt;
 7   &lt;solvable match="w" important="true"&gt;systemd*&lt;/solvable&gt;
 8   &lt;solvable match="w" important="true"&gt;udev&lt;/solvable&gt;
 9   &lt;!-- &lt;solvable match="w"&gt;*&lt;/solvable&gt; --&gt;
10  &lt;/solvables&gt;
11 &lt;/snapper-zypp-plugin-conf&gt;</screen>
   </sect3>
   <sect3 xml:id="sec-snapper-setup-customizing-new-subvolume">
    <title>新しいサブボリュームの作成とマウント</title>
    <para><filename>/</filename> の階層構造以下に新しいサブボリュームを作成し、恒久的にマウントすることができます。新しく作成したサブボリュームは、スナップショットから除外されます。ただし、既存のスナップショット内には、新しいサブボリュームを作成してはなりません。なぜなら、ロールバックを行った後にスナップショットを削除できなくなってしまうためです。</para>
    <para>&productname; では、 <filename>/opt</filename> , <filename>/srv</filename> , <filename>/home</filename> などのディレクトリに対して、<filename>/@/</filename> で始まる個別のサブボリュームが設定されます。また、新しく作成し恒久的にマウントするサブボリュームは、この初期ルートファイルシステム内に作成しなければなりません。</para>
    <para>これを行うには、下記のコマンドを実行します。下記の例では、新しいサブボリューム<filename>/usr/important</filename> を、 <filename>/dev/sda2</filename> 内に作成します。</para>
<screen>&prompt.sudo;mount /dev/sda2 -o subvol=@ /mnt
&prompt.sudo;btrfs subvolume create /mnt/usr/important
&prompt.sudo;umount /mnt</screen>
    <para><filename>/etc/fstab</filename> 内にサブボリュームのマウントを記述する場合は、下記のようになります:</para>
    <screen>/dev/sda2 /usr/important btrfs subvol=@/usr/important 0 0</screen>

    <tip>
     <title>コピーオンライト (cow) 機能の無効化</title>
     <para>サブボリュームには、仮想マシンのイメージやデータベースファイル、ログファイルなど、絶えず変更されるファイルが含まれることがあります。このような場合は、そのサブボリュームに対してコピーオンライト (Copy On Write (cow)) 機能を無効化し、ディスクブロックの重複を避けるよう設定しておくことをお勧めします。これを行うには、 <filename>/etc/fstab</filename> 内に <option>nodatacow</option> マウントオプションを追加します:</para>
     <screen>/dev/sda2 /usr/important btrfs nodatacow,subvol=@/usr/important 0 0</screen>
     <para>また、単一のファイルやディレクトリに対して cow 機能を無効化することもできます。その場合は、 <command>chattr +C <replaceable>パス</replaceable></command> を実行してください。</para>
    </tip>

   </sect3>
   <sect3 xml:id="sec-snapper-setup-customize-archiving">
    <title>スナップショットのアーカイブの制御</title>
    <para>スナップショットはディスク領域を占有します。ディスクの容量が枯渇してシステムが止まってしまったりしないようにするため、古いスナップショットについては自動的に削除する必要があります。既定では最大で 10 回分までの重要なインストールスナップショットと管理スナップショットが保持されるほか、最大で 10 回分までの定期的なインストールスナップショットおよび管理スナップショットが保持されます。なお、これらのスナップショットが、ルートファイルシステムのサイズの 50% 以上を占有している場合は、さらに多くのスナップショットを削除します。ただし、最小でも 4 回分の重要なスナップショットと、 2 回分の定期スナップショットは必ず保持されます。</para>
    <para>これらの値の変更方法について、詳しくは <xref linkend="sec-snapper-config-modify"/> をお読みください。</para>
   </sect3>
   <sect3 xml:id="sec-snapper-lvm">
    <title>シン・プロビジョン型の LVM ボリュームにおける Snapper の使用</title>
    <para><literal>Btrfs</literal> ファイルシステムに対するスナップショット機能とは別に、 Snapper では xfs/ext4/ext3 でフォーマットされたシン・プロビジョン型の LVM ボリュームに対するスナップショットにも対応しています (通常型の LVM ボリュームに対するスナップショットには対応していません) 。 LVM ボリュームに関する詳細やセットアップ手順については、 <xref linkend="sec-yast-system-lvm"/> をお読みください。</para>
    <para>シン・プロビジョン型の LVM ボリュームに対して Snapper を使用するには、まず Snapper の設定を作成する必要があります。 LVM の場合、ファイルシステムの種類を <option>--fstype=lvm(<replaceable>ファイルシステムの種類名</replaceable>)</option> で指定する必要があります。 <replaceable>ファイルシステムの種類名</replaceable> には、 <literal>ext3</literal> , <literal>ext4</literal> , <literal>xfs</literal> のいずれかを指定します。たとえば下記のようになります:</para>
<screen>&prompt.sudo;snapper -c lvm create-config --fstype="lvm(xfs)" /thin_lvm</screen>
    <para>ここで書き込んだ設定は、必要に応じて変更することができます。詳しくは <xref linkend="sec-snapper-config-modify"/> をお読みください。</para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-snapper-undo">
  <title>Snapper による変更点の巻き戻し</title>

  <para>&productname; における Snapper は、 <command>zypper</command> や &yast; が行った変更点を巻き戻すためのツールとして動作するよう設定されています。この目的を実現するため、 Snapper では <command>zypper</command> や &yast; を実行するごとに、事前と事後のスナップショット対を作成するよう設定しています。また、 Snapper では誤って削除してしまったり、書き換えてしまったりしたシステムファイルを取り戻すためにも利用することができます。この用途で使用する場合は、ルートパーティションに対するタイムラインスナップショットを有効化する必要があります。詳しくは <xref linkend="sec-snapper-setup-customize-auto-snapshots"/> をお読みください。</para>

  <para>既定では、上述の自動スナップショットがルートパーティションとサブボリュームに対して設定されます。たとえば <filename>/home</filename> などの別のパーティションに対して、スナップショットを作成するには、独自の設定を作成する必要があります。</para>

  <important>
   <title>変更点の巻き戻しとロールバックについて</title>
   <para>データを復元する目的でスナップショットを利用する場合、 Snapper が処理できるシナリオとしては、下記の 2 つのものがあることを知っておくのが重要です:</para>
   <variablelist>
    <varlistentry>
     <term>変更点の巻き戻し</term>
     <listitem>
      <para>下記に示す手順で変更点を巻き戻す場合、2 つのスナップショットを比較して、それらの間での変更点を巻き戻すことができます。この方法を利用することで、復元すべきファイルを明示的に選択することができるようになります。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ロールバック</term>
     <listitem>
      <para><xref linkend="sec-snapper-snapshot-boot"/> に示されている手順でロールバックを行うと、システムはスナップショットを採取した時点の状態にリセットされます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>変更点を元に戻す際、現在のシステムとスナップショットとを比較することができます。この比較で <emphasis>全て</emphasis> のファイルを戻す場合は、ロールバックを行ったのと同じ結果になります。ただし、全てのファイルを戻す場合は、 <xref linkend="sec-snapper-snapshot-boot"/> で説明している手順に従ってロールバックを行うことをお勧めします。これは、ロールバックのほうがより高速であるだけでなく、ロールバックを行う前にシステムを確認できるという利点もあります。</para>
  </important>

  <warning>
   <title>データの一貫性について</title>
   <para>スナップショットを作成する際、データの一貫性に関するチェックを行う仕組みは用意されていません。たとえばデータベースファイルなどが顕著ですが、ファイルがスナップショットを採取したタイミングで同時に書き込まれていた場合、データベースファイルが壊れてしまうか、部分的に書き込まれた状態になります。このような場合、このファイルの巻き戻しで問題が発生することになります。これらに加えて、 <filename>/etc/mtab</filename> のようなファイルについても、復元してはなりません。そのため、変更されたファイルの確認では、 <emphasis>必ず</emphasis> 内容をよく確認するようにしてください。また、ファイル単位での復元では、巻き戻したいファイルだけを戻すようにしてください。</para>
  </warning>

  <sect2 xml:id="sec-snapper-undo-yast">
   <title>&yast; や zypper が変更した内容の巻き戻し</title>
   <para>インストール時にルートパーティションを <literal>btrfs</literal> で設定すると、 &yast; や zypper の変更点を自動的に巻き戻すことができる設定を施した状態で、 Snapper が自動的にインストールされます。 &yast; モジュールや zypper のトランザクションを開始すると、 2 種類のスナップショットが必ず作成されるようになっています。 1 つ目は <quote>事前スナップショット</quote> と呼ばれ、モジュールを開始する際にファイルシステムの状態を採取するスナップショットです。 2 つ目は <quote>事後スナップショット</quote> と呼ばれ、モジュールが完了した際に採取するスナップショットです。</para>
   <para>&yast; の Snapper モジュールや <command>snapper</command> コマンドラインツールを使用すると、 &yast; や zypper が行った変更を、 <quote>事前スナップショット</quote> からのファイルで戻すことができるようになります。 2 つのスナップショットを比較する際、ツールではどのファイルが書き換えられたのかを表示することができるほか、変更されたファイルの違い (diff) も表示することができます。</para>
   <procedure xml:id="proc-snapper-undo-yast">
    <title>&yast; を使用した変更点の巻き戻し; <guimenu>Snapper</guimenu> モジュール</title>
    <step>
     <para>&yast; を起動して <guimenu>その他</guimenu> にある <guimenu>Snapper</guimenu> を選択するか、もしくは <command>yast2 snapper</command> と入力して実行します。</para>
    </step>
    <step>
     <para><guimenu>現在の設定</guimenu> が <guimenu>root</guimenu> になっていることを確認してください。 Snapper の設定を手動で追加していない限り、必ず確認すべき項目になります。</para>
    </step>
    <step>
     <para>一覧から事前および事後のスナップショットの対を選択します。 &yast; や zypper で採取されたスナップショット対には、 <guimenu>事前および事後</guimenu> という種類になっているはずです。また、 &yast; でのスナップショットには <guimenu>説明</guimenu> 列に <literal>zypp(y2base)</literal> が書かれています。同様に、 zypper でのスナップショットには、 <literal>zypp(zypper)</literal> が書かれています。</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="snapper_yast2_list.png" width="75%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="snapper_yast2_list.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>2 つのスナップショットの間で変更されたファイルの一覧を表示するには、 <guimenu>変更点の表示</guimenu> を押します。</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="snapper_yast2_changes.png" width="75%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="snapper_yast2_changes.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>ファイルの一覧が表示されます。事前と事後のスナップショットでの <quote>差分</quote> を表示するには、一覧からファイルを選択します。</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="snapper_yast2_diff.png" width="65%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="snapper_yast2_diff.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>1 つまたは複数のファイルを復元するには、ファイルやディレクトリのチェックボックスにチェックを入れてから、 <guimenu>選択したものを復元</guimenu> を押します。その後、確認メッセージが表示されますので、 <guimenu>はい</guimenu> を押して確認します。</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="snapper_yast2_restore.png" width="75%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="snapper_yast2_restore.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>単一のファイルを復元する場合は、その名前欄を押して差分を表示します。あとは <guimenu>最初から復元する</guimenu> を押して確認メッセージを表示させ、 <guimenu>はい</guimenu> を押して確認します。</para>
    </step>
   </procedure>
   <procedure xml:id="proc-snapper-yast-cmdline">
    <title><command>snapper</command> コマンドを使用した変更点の巻き戻し</title>
    <step>
     <para>&yast; や zypper で作成したスナップショットの一覧を表示するには、 <command>snapper list -t pre-post</command> と入力して実行します。 &yast; でのスナップショットの場合、 <guimenu>説明</guimenu> 欄に <literal>yast <replaceable>モジュール名</replaceable></literal> が表示されます。 zypper でのスナップショットの場合は、 <literal>zypp(zypper)</literal> が表示されます。</para>
<screen><?dbsuse-fo font-size="0.60em"?>&prompt.sudo;snapper list -t pre-post
前  # | 後   # | 前日付                  | 後日付                  | 説明
------+--------+-------------------------+------------------------+--------------
311   | 312    | 2018年05月06日 14:05:46 | 2018年05月06日 14:05:52 | zypp(y2base)
340   | 341    | 2018年05月07日 16:15:10 | 2018年05月07日 16:15:16 | zypp(zypper)
342   | 343    | 2018年05月07日 16:20:38 | 2018年05月07日 16:20:42 | zypp(y2base)
344   | 345    | 2018年05月07日 16:21:23 | 2018年05月07日 16:21:24 | zypp(zypper)
346   | 347    | 2018年05月07日 16:41:06 | 2018年05月07日 16:41:10 | zypp(y2base)
348   | 349    | 2018年05月07日 16:44:50 | 2018年05月07日 16:44:53 | zypp(y2base)
350   | 351    | 2018年05月07日 16:46:27 | 2018年05月07日 16:46:38 | zypp(y2base) </screen>
    </step>
    <step>
     <para><command>snapper status</command> <replaceable>前 #</replaceable> .. <replaceable>後 #</replaceable> と入力すると、スナップショット対の間で変更されたファイルの一覧を取得することができます。内容が変更されたファイルには <guimenu>c</guimenu> が表示されるほか、新規に作成されたファイルには <guimenu>+</guimenu> が、削除されたファイルには <guimenu>-</guimenu> がそれぞれ表示されます。</para>
<screen>&prompt.sudo;snapper status 350..351
+..... /usr/share/doc/packages/mikachan-fonts
+..... /usr/share/doc/packages/mikachan-fonts/COPYING
+..... /usr/share/doc/packages/mikachan-fonts/dl.html
c..... /usr/share/fonts/truetype/fonts.dir
c..... /usr/share/fonts/truetype/fonts.scale
+..... /usr/share/fonts/truetype/みかちゃん-p.ttf
+..... /usr/share/fonts/truetype/みかちゃん-pb.ttf
+..... /usr/share/fonts/truetype/みかちゃん-ps.ttf
+..... /usr/share/fonts/truetype/みかちゃん.ttf
c..... /var/cache/fontconfig/7ef2298fde41cc6eeb7af42e48b7d293-x86_64.cache-4
c..... /var/lib/rpm/Basenames
c..... /var/lib/rpm/Dirnames
c..... /var/lib/rpm/Group
c..... /var/lib/rpm/Installtid
c..... /var/lib/rpm/Name
c..... /var/lib/rpm/Packages
c..... /var/lib/rpm/Providename
c..... /var/lib/rpm/Requirename
c..... /var/lib/rpm/Sha1header
c..... /var/lib/rpm/Sigmd5</screen>
    </step>
    <step>
     <para>特定のファイルに対する差分を表示するには、 <command>snapper diff</command> <replaceable>前 #</replaceable> .. <replaceable>後 #</replaceable> <replaceable>ファイル名</replaceable> と入力して実行します。ファイル名を指定しない場合は、全てのファイルに対する差分が表示されます。</para>
<screen>&prompt.sudo;snapper diff 350..351 /usr/share/fonts/truetype/fonts.scale
--- /.snapshots/350/snapshot/usr/share/fonts/truetype/fonts.scale       2014-04-23 15:58:57.000000000 +0200
+++ /.snapshots/351/snapshot/usr/share/fonts/truetype/fonts.scale       2014-05-07 16:46:31.000000000 +0200
@@ -1,4 +1,4 @@
-1174
+1486
 ds=y:ai=0.2:luximr.ttf -b&amp;h-luxi mono-bold-i-normal--0-0-0-0-c-0-iso10646-1
 ds=y:ai=0.2:luximr.ttf -b&amp;h-luxi mono-bold-i-normal--0-0-0-0-c-0-iso8859-1
[...]</screen>
    </step>
    <step>
     <para>1 つまたは複数のファイルを復元するには、 <command>snapper -v undochange</command> <replaceable>Pre の ID</replaceable> .. <replaceable>Post の ID</replaceable> <replaceable>ファイル名 (複数可)</replaceable> のように入力して実行します。ファイル名を何も指定しない場合は、変更された全てのファイルが復元されます。</para>
<screen>&prompt.sudo;snapper -v undochange 350..351
     create:0 modify:13 delete:7
     undoing change...
     deleting /usr/share/doc/packages/mikachan-fonts
     deleting /usr/share/doc/packages/mikachan-fonts/COPYING
     deleting /usr/share/doc/packages/mikachan-fonts/dl.html
     deleting /usr/share/fonts/truetype/みかちゃん-p.ttf
     deleting /usr/share/fonts/truetype/みかちゃん-pb.ttf
     deleting /usr/share/fonts/truetype/みかちゃん-ps.ttf
     deleting /usr/share/fonts/truetype/みかちゃん.ttf
     modifying /usr/share/fonts/truetype/fonts.dir
     modifying /usr/share/fonts/truetype/fonts.scale
     modifying /var/cache/fontconfig/7ef2298fde41cc6eeb7af42e48b7d293-x86_64.cache-4
     modifying /var/lib/rpm/Basenames
     modifying /var/lib/rpm/Dirnames
     modifying /var/lib/rpm/Group
     modifying /var/lib/rpm/Installtid
     modifying /var/lib/rpm/Name
     modifying /var/lib/rpm/Packages
     modifying /var/lib/rpm/Providename
     modifying /var/lib/rpm/Requirename
     modifying /var/lib/rpm/Sha1header
     modifying /var/lib/rpm/Sigmd5
     undoing change done</screen>
    </step>
   </procedure>
   <warning>
    <title>ユーザ作成の巻き戻しについて</title>
    <para>Snapper の巻き戻し機能を利用して、ユーザの作成を巻き戻すのはお勧めできません。特定のディレクトリがスナップショットから除外されるため、これらのユーザに属するファイルがファイルシステム内に残る可能性があるためです。巻き戻し機能でユーザの作成を取り消した後、別のユーザを作成してしまうと、作成を巻き戻したユーザのユーザ ID と、新たに作成したユーザのユーザ ID が同じになってしまうため、残ったファイルをそのユーザがアクセスできてしまいます。ユーザを削除する際は、 &yast; の <guimenu>ユーザとグループの管理</guimenu> を利用して削除することを強くお勧めします。</para>
   </warning>
  </sect2>

  <sect2 xml:id="sec-snapper-undo-delete-file">
   <title>ファイルを復元するための Snapper の使用</title>
   <para>インストールスナップショットや管理スナップショットとは別に、 Snapper にはタイムラインスナップショットという機能があります。これは誤って削除してしまったり、誤って書き換えてしまったりしたファイルを復元するためのバックアップ用スナップショットです。 Snapper の差分表示機能を利用することで、その時点のファイルからどのように書き換えてしまったのかについても、確認を行うことができるようになっています。</para>
   <para>ファイルを復元できるという機能は、特に各種データ類に対して有用な仕組みですが、これらは、既定ではスナップショットの採取されないサブボリュームやパーティション内に置かれている場合があります。たとえばホームディレクトリなどでファイルを復元できるようにするには、 <filename>/home</filename> に対して個別の Snapper 設定を作成し、自動的なタイムラインスナップショットを有効化する必要があります。詳しい手順については、 <xref linkend="sec-snapper-config"/> をお読みください。</para>
   <warning>
    <title>ファイルの復元と巻き戻しの違いについて</title>
    <para>ルートファイルシステムに対して採取したスナップショット (Snapper のルートディレクトリ設定で設定されます) は、システムのロールバックとして使用することができます。システムのロールバックを実施するにあたっては、対応するスナップショットから起動を行って、その後にロールバックを行うのがお勧めです。詳しくは <xref linkend="sec-snapper-snapshot-boot"/> をお読みください。</para>
    <para>ロールバックの方法としては、下記で説明するとおり、特定のルートファイルシステムのスナップショットからファイルを復元する方法もありますが、こちらはお勧めできません。<systemitem>/etc</systemitem> ディレクトリ内にある設定ファイルなど、個別のファイルを取り戻す方法としては有用ですが、全てのファイルを巻き戻す際にはお勧めできません。</para>
    <para>なお、この制限はルートファイルシステムに対して採取されたスナップショットのみに適用すべきものです。</para>
   </warning>
   <procedure xml:id="proc-snapper-restore-yast">
    <title>&yast; <guimenu>Snapper</guimenu> モジュールを利用したファイルの復元</title>
    <step>
     <para>&yast; を起動して <guimenu>その他</guimenu> にある <guimenu>Snapper</guimenu> を選択するか、もしくは <command>yast2 snapper</command> と入力して実行します。</para>
    </step>
    <step>
     <para>スナップショットを選択するため、 <guimenu>現在の設定</guimenu> を選択します。</para>
    </step>
    <step>
     <para>ファイルを復元したいタイムラインスナップショットを選択して、 <guimenu>変更点の表示</guimenu> を押します。タイムラインスナップショットは、種類が <guimenu>単一</guimenu> になっているほか、説明欄に <guimenu>timeline</guimenu> と書かれています。</para>
    </step>
    <step>
     <para>ファイル名を押して、テキストボックスからファイルを選択します。すると、スナップショットで保存された版と現在の版の差分が表示されるようになります。あとは復元したいファイルやディレクトリのチェックボックスに、チェックを入れます。</para>
    </step>
    <step>
     <para> <guimenu>選択したものを復元</guimenu> を押します。その後、確認メッセージが表示されますので、 <guimenu>はい</guimenu> を押して確認します。</para>
    </step>
   </procedure>
   <procedure xml:id="proc-snapper-restore-cmdl">
    <title><command>snapper</command> コマンドを利用したファイルの復元</title>
    <step>
     <para>特定の設定に対するタイムラインスナップショットの一覧を表示するには、下記のコマンドを実行します:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> list -t single | grep timeline</screen>
     <para><replaceable>設定</replaceable> には既存の Snapper 設定の値を指定します。 <command>snapper list-configs</command> と入力して実行すると、設定の一覧を表示することができます。</para>
    </step>
    <step>
     <para>特定のスナップショットで変更されたファイルの一覧を表示するには、下記のコマンドを実行します:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> status <replaceable>スナップショット_ID</replaceable>..0</screen>
     <para><replaceable>スナップショット_ID</replaceable> には、ファイルを復元したいスナップショットの ID を指定します。</para>
    </step>
    <step>
     <para>必要であれば、現在のファイルとスナップショット内のファイルの差分を表示することもできます:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> diff <replaceable>スナップショット_ID</replaceable>..0 <replaceable>ファイル名</replaceable></screen>
     <para><replaceable>ファイル名</replaceable> を指定せずに実行すると、全てのファイルに対する差分が表示されます。</para>
    </step>
    <step>
     <para>1 つまたは複数のファイルを復元するには、下記のように実行します:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> -v undochange <replaceable>スナップショット_ID</replaceable>..0 <replaceable>ファイル名_1</replaceable> <replaceable>ファイル名_2</replaceable></screen>
     <para>ファイル名を指定しない場合は、変更された全てのファイルが復元されます。</para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-snapper-snapshot-boot">
  <title>スナップショットからの起動によるシステムのロールバック</title>

  <para>&productname; に含まれている &grub; では、 btrfs のスナップショットからの起動を行うことができます。これは Snapper のロールバック機能と共に働くもので、これによって誤って設定してしまったシステムを、元に戻すことができるようになります。ただし、既定の Snapper 設定 ( <literal>root</literal> ) で作成したスナップショットのみを起動することができます。</para>

  <important>
   <title>サポートされる設定</title>
   <para><!-- fs 2016-06-17: This will change with SP3 - see FATE #316347 --> &productname; &productnumber; では、ルートパーティションに対する既定のサブボリューム設定を変更していない場合にのみ、システムロールバックをサポートします。</para>
  </important>

  <para>スナップショットから起動を行う場合、スナップショット内に含まれるファイルシステムは読み込み専用でマウントされます。また、その他のファイルシステムやスナップショットから除外されているサブボリュームなどについては、読み書きが可能で修正することができるようになります。</para>

  <important>
   <title>変更点の巻き戻しとロールバックについて</title>
   <para>データを復元する目的でスナップショットを利用する場合、 Snapper が処理できるシナリオとしては、下記の 2 つのものがあることを知っておくのが重要です:</para>
   <variablelist>
    <varlistentry>
     <term>変更点の巻き戻し</term>
     <listitem>
      <para><xref linkend="sec-snapper-undo"/> で説明しているとおりに変更点を巻き戻す場合、 2 つのスナップショット間を比較して、これらの間での違いを元に戻すことになります。この方法を利用することで、選択したファイルが明示的に巻き戻されないようにすることができます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ロールバック</term>
     <listitem>
      <para>下記に示す方法でロールバックを行うと、システムはスナップショットを採取した時点の状態にリセットされます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </important>

  <para>起動可能なスナップショットからロールバックを行うには、下記の要件を満たさなければなりません。既定の状態でインストールを行った場合は、下記の要件を満たすように設定されます。</para>

  <itemizedlist mark="bullet" spacing="normal">
   <title>起動可能なスナップショットからのロールバックに対する必要条件</title>
   <listitem>
    <para>ルートファイルシステムは btrfs でなければなりません。 LVM ボリュームのスナップショットからの起動には、対応していません。</para>
   </listitem>
   <listitem>
    <para>ルートファイルシステムは単一のデバイスかつ単一のパーティションであり、さらに単一のサブボリュームである必要があります。ただし、 <filename>/srv</filename> などのスナップショットから除外されるディレクトリについては、別途のパーティション内に存在していてもかまいません。</para>
   </listitem>
   <listitem>
    <para>システムはインストールされたブートローダから起動できる必要があります。</para>
   </listitem>
  </itemizedlist>

  <para>起動可能なスナップショットからロールバックを行うには、下記のように行います:</para>

  <procedure>
   <step>
    <para>まずはシステムを起動します。起動メニューでは <guimenu>Bootable snapshots</guimenu> (起動可能なスナップショット) を選択して、起動したいスナップショットを選択します。スナップショットは日付順に並べられていて、最も新しいものが最初に表示されます。</para>
   </step>
   <step>
    <para>システムにログインします。全ての処理が期待通りに動作することを確認してください。また、スナップショットの一部になっているディレクトリに対しては、一切書き込むことができないことに注意してください。逆に、それ以外のディレクトリへの書き込みであれば、次の手順でどちらを選択した場合であっても、それらは失われることが <emphasis>ありません</emphasis> 。</para>
   </step>
   <step>
    <para>ロールバックを行いたいかどうかによって、いずれかの手順を実行します:</para>
    <substeps performance="required">
     <step>
      <para>システムが期待通りに動作しない場合は、システムを再起動して現在のシステムに戻してください。再度別のスナップショットを選択してもかまいませんし、レスキューシステムをお使いいただいてもかまいません。</para>
     </step>
     <step>
      <para>ロールバックを実施するには、下記のように実行します:</para>
<screen>&prompt.sudo;snapper rollback</screen>
      <para>上記を実行した後、システムを再起動します。起動画面では既定の起動項目を選択して、復帰したシステムを起動してください。なお、ロールバックを行う前のファイルシステムに対するスナップショットが作成されます。ルートに対する既定のサブボリュームは、新しく読み書き可能なスナップショットに置き換えられます。詳しくは <xref linkend="sec-snapper-snapshot-boot-rollback"/> をお読みください。</para>
       <para>なお、 <option>-d</option> オプションを指定して、スナップショットに説明を設定しておくと便利です。たとえば下記のように指定します:</para>
      <screen><replaceable>日付</replaceable> <replaceable>時刻</replaceable> のロールバック以降の新しいルートファイルシステム</screen>
     </step>
    </substeps>
   </step>
  </procedure>
  <tip>
   <title>特定のインストール時点へのロールバック</title>
   <para>インストール時にスナップショットを無効化していなかった場合、初期の起動可能なスナップショットがシステムインストールの最後に採取されます。このスナップショットから起動を行うことで、いつでも最初の時点に戻れるようになります。このスナップショットには、 <literal>after installation</literal> という説明が設定されます。</para>
   <para>起動可能なスナップショットは、サービスパックへのシステムアップグレードを開始した場合や、新しいメジャーリリースへのシステムアップグレードでも作成されます (ただし、スナップショットを無効化していない場合に限ります) 。</para>
  </tip>
  <sect2 xml:id="sec-snapper-snapshot-boot-rollback">
   <title>ロールバック後のスナップショット</title>
   <para>ロールバックを実施する前に、現在実行中のファイルシステムに対するスナップショットが作成されます。説明には、ロールバックに復元した際のスナップショットの ID が書かれます。</para>
   <para>ロールバックで作成されたスナップショットには、 <literal>Cleanup</literal> 属性に <literal>number</literal> という値が設定されます。そのため、ロールバックスナップショットは設定されたスナップショット数に達したとき、自動的に削除されます。詳しくは <xref linkend="sec-snapper-clean-up"/> をお読みください。スナップショットに重要なデータが含まれる場合は、スナップショットが削除される前に必要なデータを抽出するようにしてください。</para>
   <sect3 xml:id="sec-snapper-snapshot-boot-rollback-example">
    <title>ロールバックスナップショットの例</title>
    <para>たとえば新規インストールを行った場合、システムには下記のスナップショットが作成されます:</para>
<screen>
&prompt.root;<command>snapper</command> --iso list
種類   | # |     | クリーンアップ | 説明                  | ユーザデータ
-------+---+ ... +---------------+-----------------------+--------------
single | 0 |     |               | current               |
single | 1 |     |               | first root filesystem |
single | 2 |     | number        | after installation    | important=yes
</screen>
    <para>ここで <command>sudo snapper rollback</command> を実行すると、スナップショット <literal>3</literal> が作成され、ロールバック前のシステムの状態が保存されます。スナップショット <literal>4</literal> が新しい btrfs のサブボリュームとなり、システムの再起動後に使用されるものとなります。</para>
<screen>
&prompt.root;<command>snapper</command> --iso list
種類   | # |     | クリーンアップ | 説明                  | ユーザデータ
-------+---+ ... +---------------+-----------------------+--------------
single | 0 |     |               | current               |
single | 1 |     | number        | first root filesystem |
single | 2 |     | number        | after installation    | important=yes
single | 3 |     | number        | rollback backup of #1 | important=yes
single | 4 |     |               |                       |
</screen>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-snapper-snapshot-boot-identify">
   <title>スナップショットの起動項目へのアクセスと識別</title>
   <para>スナップショットから起動を行うには、お使いのマシンを再起動して <guimenu>Start Bootloader from a read-only snapshot</guimenu> を選択します。すると、起動可能な全てのスナップショットが一覧表示されます。最も新しいスナップショットが最初に、最も古いスナップショットが最後に表示されます。 <keycap function="down"/> および <keycap function="up"/> を利用して選択して、 <keycap function="enter"/> を押してください。これで選択したスナップショットを有効化することができます。なお、起動メニューでスナップショットを選択しても、マシンはそのまま起動することはありません。選択したスナップショット内のブートローダを表示します。</para>
   <figure xml:id="fig-snapper-snapshot-boot-identify">
    <title>ブートローダ: スナップショット</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="boot_snapshots.png" width="75%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="boot_snapshots.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <warning>
    <title>UEFI を利用している場合に btrfs スナップショットからの &xen; 起動が失敗する問題について</title>
    <para>詳しくは <link xlink:href="https://www.suse.com/support/kb/doc/?id=000020602"/> をお読みください。</para>
   </warning>
   <para>ブートローダ内でのスナップショット項目には、それらを容易に識別できるようにするための名前付け方式が設定されています:</para>
<screen>[*]<co xml:id="snapper-boot-important"/><replaceable>OS</replaceable><co xml:id="snapper-boot-os"/> (<replaceable>カーネル</replaceable><co xml:id="snapper-boot-kernel"/>,<replaceable>日付</replaceable><co xml:id="snapper-boot-date"/>T<replaceable>時刻</replaceable><co xml:id="snapper-boot-time"/>,<replaceable>説明</replaceable><co xml:id="snapper-boot-description"/>)</screen>
   <calloutlist>
    <callout arearefs="snapper-boot-important">
     <para>スナップショットに <literal>important</literal> のマークが付けられている場合、項目には <literal>*</literal> というマークが付けられます。</para>
    </callout>
    <callout arearefs="snapper-boot-os">
     <para>オペレーティングシステムのラベルです。</para>
    </callout>
    <callout arearefs="snapper-boot-date">
     <para><literal>YYYY-MM-DD</literal> 形式での日付です。</para>
    </callout>
    <callout arearefs="snapper-boot-time">
     <para><literal>HH:MM</literal> 形式での時刻です。</para>
    </callout>
    <callout arearefs="snapper-boot-description">
     <para>この項目には、スナップショットの説明が書かれます。手作業で作成したスナップショットの場合、ここには作成時に <option>--description</option> で指定した文字列か、独自の文字列 (詳しくは <xref linkend="tip-snapper-snapshot-boot-custom-descr"/> をお読みください) が設定されます。自動作成されたスナップショットの場合は、呼び出し側のツール名が記録されます (例: <literal>zypp(zypper)</literal> または <literal>yast_sw_single</literal> など) 。説明が長い場合は自動的に後ろ側が切られますが、これは起動画面のサイズに依存して決まります。</para>
    </callout>
   </calloutlist>
   <tip xml:id="tip-snapper-snapshot-boot-custom-descr">
    <title>ブートローダのスナップショット項目に対する説明文の設定</title>
    <para>スナップショットの説明文は、既定の文字列から変更することができます。これはたとえば、自動的に採取されたスナップショットの説明文では不十分だったり、ユーザが指定した説明文が長すぎるような場合に有用です。スナップショット <replaceable>番号</replaceable> に対して <replaceable>文字列</replaceable> を設定するには、下記のようなコマンドを実行します:</para>
<screen>&prompt.sudo;snapper modify --userdata "bootloader=<replaceable>文字列</replaceable>" <replaceable>番号</replaceable></screen>
    <para>なお、この説明は 25 文字以上の長さにはしないでください。このサイズを超過した場合、起動画面に表示しきれなくなることがあります。</para>
   </tip>
  </sect2>

  <sect2 xml:id="sec-snapper-snapshot-boot-limits">
   <title>制限事項</title>
   <para><emphasis>完全な</emphasis> システムロールバックには対応していません。たとえば、スナップショットを採取した時点と全く等価な状態にシステムを戻すことはできません。</para>
   <sect3 xml:id="sec-snapper-limits-snapshot-boot-excludes">
    <title>スナップショットから除外されるディレクトリによる影響</title>
    <para>ルートファイルシステムのスナップショットには、全てのディレクトリが含まれているというわけではありません。詳細と理由については、 <xref linkend="snapper-dir-excludes"/> をお読みください。一般的には、これらのディレクトリのデータは復元されず、下記のような制限事項が生まれます。</para>
    <variablelist>
     <varlistentry>
      <term>ロールバック後のアドオンおよびサードパーティ製ソフトウエアの使用について</term>
      <listitem>
       <para><filename>/opt</filename> など、スナップショットから除外されるサブボリューム内にデータをインストールするアプリケーションやアドオンについては、スナップショットに含まれるサブボリュームにデータをインストールするような場合は、ロールバックを行うことで動作しなくなってしまう場合があります。この場合は、アプリケーションやアドオンを再インストールして問題を解決してください。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>ファイルアクセスの問題について</term>
      <listitem>
       <para>スナップショットと現在動作中のシステムとの間で、アプリケーションがファイルのアクセス権や所有者を変更している場合、アプリケーションがそれらのファイルにアクセスできなくなってしまうことがあります。この場合は、ロールバック後にアクセス権や所有者をリセットして対応してください。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>非互換のデータ形式について</term>
      <listitem>
       <para>スナップショットと現在動作中のシステムでサービスやアプリケーションの使用するデータ形式が変更されているような場合、ロールバックを行うとアプリケーションがデータを読めなくなってしまうことがあります。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>コードとデータが混在するサブボリュームの場合について</term>
      <listitem>
       <para><filename>/srv</filename> のようなサブボリュームの場合、コードとデータが混在していることがあります。この場合ロールバックを行うと、動作しないコードになってしまう場合があります。これは PHP のダウングレードが発生する場合があるためで、これによって Web サーバ内で PHP スクリプトがうく動作しなくなってしまいます。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>ユーザデータについて</term>
      <listitem>
       <para>ロールバックによってシステムからユーザが削除される場合、これらのユーザが所有していたデータは、スナップショットから除外されているディレクトリにあるものについては、削除が行われません。ロールバック後、同じユーザ ID でユーザを作成してしまうと、そのユーザが古いユーザのファイル権限を引き継ぐことになってしまいます。そのため、 <command>find</command> のようなツールを利用して、孤立したファイルを検索して削除することをお勧めします。</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-snapper-limits-snapshot-boot-grub">
    <title>ブートローダデータのロールバックについて</title>
    <para>ブートローダをロールバックすることはできません。なぜなら、ブートローダにおける全ての <quote>ステージ</quote> 同士が密接に関係し合っているためです。そのため、 <filename>/boot</filename> のロールバックを行った場合には、正しく動作する保証ができません。</para>
   </sect3>
  </sect2>
 </sect1>
 
 <sect1 xml:id="sec-snapper-homedirs">
     <title>ユーザのホームディレクトリに対する Snapper の有効化</title>
     
     <para>ユーザの <filename>/home</filename> ディレクトリに対してスナップショットを有効化することもできます。この場合、下記のような用途が考えられます:</para>
     <itemizedlist>
          <listitem>
              <para>ユーザごとにスナップショットとロールバックを管理することができます。</para>
         </listitem>
         <listitem>
             <para>たとえばデータベースやシステム、ネットワークの管理者などのシステムユーザが、設定ファイルやドキュメンテーションなどのコピーを保持しておくことができるようになります。</para>
         </listitem>    
         <listitem>
             <para>ホームディレクトリと btrfs バックエンドの組み合わせを利用した Samba 共有を作成することができます。</para>
         </listitem>
     </itemizedlist>
     <para>それぞれのユーザのホームディレクトリは <filename>/home</filename> の btrfs サブボリュームとなります。このような構成は手作業で設定することができます (詳しくは <xref linkend="sec-snapper-manual-home-config"/> をお読みください) 。ただし、 <literal>pam_snapper</literal> を使用するより便利な方法もあります。 <literal>pam_snapper</literal> パッケージは <literal>pam_snapper.so</literal> モジュールのほか、ユーザの作成や snapper の設定を作成するヘルパースクリプトをインストールします。</para>
     <para><literal>pam_snapper</literal> は <command>useradd</command> コマンドと Pluggable Authentication Modules (PAM) 、そして snapper との間を統合する機能を提供します。既定ではユーザのログイン時とログアウト時にスナップショットを作成するほか、ユーザがしばらくログインしたままの状態にあると、時間ベースのスナップショットも作成します。これらの既定値は通常の snapper コマンドと設定ファイルで変更することができます。</para>

     <sect2 xml:id="sec-snapper-install-pam-snapper">
         <title>pam_snapper のインストールとユーザの作成</title>
         
         <para>最も始めやすい方法は、 btrfs でフォーマットした新しい <filename>/home</filename> ディレクトリを用意し、全くユーザが存在しない状況から行うことです。まずは <literal>pam_snapper</literal> をインストールします:</para>
         <screen>&prompt.root;zypper in pam_snapper</screen>
         <para><filename>/etc/pam.d/common-session</filename> に下記の行を追加します:</para>
         <screen>session optional pam_snapper.so</screen>
         <para>ユーザとホームディレクトリを作成する場合は、 <command>/usr/lib/pam_snapper/pam_snapper_useradd.sh</command> を使用します。既定では、スクリプトは表示のみを行って実行は行いませんので、スクリプトを編集して <literal>DRYRUN=1</literal> を <literal>DRYRUN=0</literal> に変更します。あとは下記のようにして新しいユーザを作成します:</para>
         <screen>&prompt.root;/usr/lib/pam_snapper/pam_snapper_useradd.sh \
<replaceable>ユーザ名</replaceable> <replaceable>グループ</replaceable> passwd=<replaceable>パスワード</replaceable>
Create subvolume '/home/username'
useradd: 警告: ホームディレクトリが既に存在します。
skel ディレクトリからのコピーは行いません。
</screen>
         <para>ユーザ側では、初回ログイン時にホームディレクトリ内に <filename>/etc/skel</filename> の内容がコピーされます。あとは下記のように実行して、ユーザの設定が作成されていることを確認します:</para>
         <screen>&prompt.root;snapper list --all
Config: home_username, subvolume: /home/username
種類   | # | 前 #  | 日付 | ユーザ | クリーンアップ | 説明    | ユーザデータ
-------+---+-------+------+--------+----------------+---------+--------------
single | 0 |       |      | root   |                | current |
</screen>
        <para>時間が経過するごとに上記の出力は増えていきますが、ユーザ側では標準的な snapper コマンドで管理を行うことができます。</para>
     </sect2>

     <sect2 xml:id="sec-snapper-remove-user">
         <title>ユーザの削除</title>
         <para>ユーザの削除についても <command>/usr/lib/pam_snapper/pam_snapper_userdel.sh</command> で行います。既定では、スクリプトは表示のみを行って実行は行いませんので、スクリプトを編集して <literal>DRYRUN=1</literal> を <literal>DRYRUN=0</literal> に変更します。あとは下記のようにしてユーザとユーザのサブボリューム、 snapper の設定と全てのスナップショットを削除します:</para>
         <screen>&prompt.root;/usr/lib/pam_snapper/pam_snapper_userdel.sh username</screen>
     </sect2>

     <sect2 xml:id="sec-snapper-manual-home-config">
         <title>手作業でのホームディレクトリに対するスナップショットの有効化</title>
         
         <para>下記は、 snapper を利用してユーザのホームディレクトリを手作業で設定するための手順を示しています。なお、 <filename>/home</filename> は btrfs でフォーマットされていなければならず、実行する時点でユーザは存在していないものとします。</para>
        <screen>&prompt.root;btrfs subvol create /home/<replaceable>ユーザ名</replaceable>
&prompt.root;snapper -c home_<replaceable>ユーザ名</replaceable> create-config /home/<replaceable>ユーザ名</replaceable>
&prompt.root;sed -i -e "s/ALLOW_USERS=\"\"/ALLOW_USERS=\"<replaceable>ユーザ名</replaceable>\"/g" \
/etc/snapper/configs/home_<replaceable>ユーザ名</replaceable>
&prompt.root;yast users add username=<replaceable>ユーザ名</replaceable> home=/home/<replaceable>ユーザ名</replaceable> password=<replaceable>パスワード</replaceable>
&prompt.root;chown <replaceable>ユーザ名</replaceable>.<replaceable>group</replaceable> /home/<replaceable>ユーザ名</replaceable>
&prompt.root;chmod 755 /home/<replaceable>ユーザ名</replaceable>/.snapshots
</screen>
</sect2>
 </sect1>
 
 <sect1 xml:id="sec-snapper-config">
  <title>Snapper の設定の作成と修正</title>

  <para>Snapper の動作は、各パーティションや <literal>btrfs</literal> サブボリューム別に設定ファイルで設定することができます。設定ファイルは <filename>/etc/snapper/configs/</filename> 内に存在しています。</para>

  <para>ルートファイルシステムが十分に大きい (おおよそ 12 GB 以上) の場合、ルートファイルシステム <filename>/</filename> に対するスナップショットは、インストール時に自動的に有効化されます。この時点で作成される既定の設定は <filename>root</filename> という名前になっています。これにより、 &yast; や zypper のスナップショットを作成して管理しています。既定値の一覧について、詳しくは <xref linkend="sec-snapper-config-modify-values"/> をお読みください。</para>


  <note>
   <title>スナップショットを有効化するための最小ルートファイルシステムサイズ</title>
   <para><xref linkend="sec-snapper-setup"/> で説明しているとおり、スナップショットの有効化を行うには、ルートファイルシステム内に追加の空き領域が必要となります。必要な容量はインストール済みのパッケージ数に依存するほか、スナップショットに含まれるボリュームで行われた変更量に依存して決まります。また、スナップショットの頻度やアーカイブされたスナップショットの数も影響します。</para>
   <para>インストール時に自動的なスナップショットを有効化するのに必要な、最小のルートファイルシステムのサイズが決められています。現時点では、これは 12 GB に設定されています。この値は、アーキテクチャや基本システムのサイズによって、将来的に変更される可能性があります。また、この値はインストールメディア内の <filename>/control.xml</filename> ファイル内にある下記のタグで設定されています:</para>
   <screen>&lt;root_base_size&gt;
&lt;btrfs_increase_percentage&gt;</screen>
   <para>上記の値を利用して、下記の数式で計算することができます: <replaceable>ROOT_BASE_SIZE の値</replaceable> * (1 + <replaceable>BTRFS_INCREASE_PERCENTAGE の値</replaceable> /100)</para>
   <para>ただし、ここでの値は最小値であることに注意してください。ルートファイルシステムに対しては、それ以上のサイズを設定することをお勧めします。一般的には、スナップショットを使用しない場合のサイズ想定の 2 倍程度を設定してください。</para>
  </note>

  <para><literal>btrfs</literal> でフォーマットされた他のパーティションや、 <literal>btrfs</literal> の既存のサブボリュームに対して、独自の設定を作成することもできます。下記の例では、 <filename>/srv/www</filename> にマウントされた <literal>btrfs</literal> パーティション内の Web サーバのデータに対して、これらをバックアップするための設定を作成しています。</para>

  <para>設定を作成したら、 <command>snapper</command> を利用するか、もしくは &yast; の <guimenu>Snapper</guimenu> モジュールを利用して、これらのスナップショットから復元することができるようになります。なお、 &yast; では <guimenu>現在の設定</guimenu> で作成した設定を選択する必要があります。 <command>snapper</command> の場合は、グローバルスイッチ <option>-c</option> で設定を指定してください (例: <command>snapper -c myconfig list</command> ) 。</para>

  <para>Snapper の設定を作成するには、 <command>snapper create-config</command> を実行します:</para>

<screen>&prompt.sudo;snapper -c www-data<co xml:id="snapper-create-name"/> create-config /srv/www<co xml:id="snapper-create-volume"/></screen>

  <calloutlist>
   <callout arearefs="snapper-create-name">
    <para>設定ファイルの名前</para>
   </callout>
   <callout arearefs="snapper-create-volume">
    <para>スナップショットを採取したいパーティションのマウントポイント、もしくは <literal>btrfs</literal> サブボリューム名。</para>
   </callout>
  </calloutlist>

  <para>このコマンドは新しい設定ファイル <filename>/etc/snapper/configs/www-data</filename> を作成し、適切な既定値を設定します (設定値は <filename>/etc/snapper/config-templates/default</filename> にあるものを使用します) 。これらの既定値を調整する方法について、詳しくは <xref linkend="sec-snapper-config-modify"/> をお読みください。</para>

  <tip>
   <title>設定の既定値</title>
   <para>新しい設定に対する既定値は、 <filename>/etc/snapper/config-templates/default</filename> にあるものを使用します。独自の既定値を設定したい場合は、同じディレクトリ内にファイルのコピーを作成して、必要な値を設定して保存してください。あとは設定を作成する際、 create-config コマンドに <option>-t</option> オプションを追加して設定します:</para>
<screen>&prompt.sudo;snapper -c www-data create-config -t <replaceable>MY_DEFAULTS</replaceable> /srv/www</screen>
  </tip>

  <sect2 xml:id="sec-snapper-config-modify">
   <title>既存の設定の管理</title>
   <para><command>snapper</command> コマンドには、既存の設定を管理するためのいくつかのサブコマンドが用意されています。一覧表示のほか、表示と削除、修正にそれぞれ対応しています:</para>
   <variablelist>
    <varlistentry>
     <term>設定の一覧表示</term>
     <listitem>
      <para>既存の全ての設定を一覧表示するには、 <command>snapper list-configs</command> コマンドを使用します:</para>
<screen>&prompt.sudo;snapper list-configs
設定   | サブボリューム
-------+----------
root   | /
usr    | /usr
local  | /local</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>設定の表示</term>
     <listitem>
      <para>指定した設定を表示するには、 <command>snapper -c <replaceable>設定</replaceable> get-config</command> のサブコマンドを使用します。<replaceable>設定</replaceable> の箇所には <command>snapper list-configs</command> で表示される設定の名前を指定します。設定オプションについて、詳しくは <xref linkend="sec-snapper-config-modify-values"/> をお読みください。</para>
      <para>既定の設定値を表示したい場合は、下記のように実行します:</para>
<screen>&prompt.sudo;snapper -c root get-config</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>設定の修正</term>
     <listitem>
      <para>指定した設定のオプションを変更するには、 <command>snapper -c <replaceable>設定</replaceable> set-config <replaceable>オプション</replaceable>=<replaceable>値</replaceable></command> のサブコマンドを使用します。<replaceable>設定</replaceable> の箇所には <command>snapper list-configs</command> で表示される設定の名前を指定します。 <replaceable>オプション</replaceable> と <replaceable>値</replaceable> で設定可能な値は、 <xref linkend="sec-snapper-config-modify-values"/> に一覧表示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>設定の削除</term>
     <listitem>
      <para>指定した設定を削除するには、 <command>snapper -c <replaceable>設定</replaceable> delete-config</command> のサブコマンドを使用します。<replaceable>設定</replaceable> の箇所には <command>snapper list-configs</command> で表示される設定の名前を指定します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <sect3 xml:id="sec-snapper-config-modify-values">
    <title>設定データ</title>
    <para>各設定には、コマンドラインから変更することのできるオプションの一覧が含まれています。下記の一覧には、それぞれのオプションに対する詳細が記されています。値を変更するには、 <command>snapper -c <replaceable>設定</replaceable> set-config "<replaceable>キー</replaceable>=<replaceable>値</replaceable>"</command> の形式で入力して実行します。</para>
    <variablelist>
     <varlistentry>
      <term><literal>ALLOW_GROUPS</literal> , <literal>ALLOW_USERS</literal></term>
      <listitem>
       <para>一般ユーザに対してスナップショットの使用を許可するためのオプションです。詳しくは <xref linkend="sec-snapper-config-user"/> をお読みください。</para>
       <para>既定値は <literal>""</literal> です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>BACKGROUND_COMPARISON</literal></term>
      <listitem>
       <para>事前と事後のスナップショットを作成後、裏でそれらを比較しておくべきかどうかを指定します。</para>
       <para>既定値は <literal>"yes"</literal> (はい) です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>EMPTY_*</literal></term>
      <listitem>
       <para>事前と事後のスナップショット対で、変更がない場合のクリーンアップアルゴリズムを設定します。詳しくは <xref linkend="sec-snapper-clean-up-empty"/> をお読みください。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>FSTYPE</literal></term>
      <listitem>
       <para>パーティションのファイルシステムの種類を指定します。変更してはなりません。</para>
       <para>既定値は <literal>"btrfs"</literal> です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>NUMBER_*</literal></term>
      <listitem>
       <para>インストールスナップショットと管理スナップショットに対するクリーンアップアルゴリズムを指定します。詳しくは <xref linkend="sec-snapper-clean-up-number"/> をお読みください。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>QGROUP</literal> / <literal>SPACE_LIMIT</literal></term>
      <listitem>
       <para>クリーンアップアルゴリズムにクォータへの対応を追加します。詳しくは <xref linkend="sec-snapper-clean-up-quota"/> をお読みください。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>SUBVOLUME</literal></term>
      <listitem>
       <para>スナップショットを採取するパーティションのマウントポイントまたはサブボリュームを指定します。変更してはなりません。</para>
       <para>既定値は <literal>"/"</literal> です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>SYNC_ACL</literal></term>
      <listitem>
       <para>Snapper を一般ユーザから使用している場合 (詳しくは <xref linkend="sec-snapper-config-user"/> をお読みください) 、対象のユーザは <filename>.snapshot</filename> ディレクトリへのアクセス許可と、そのディレクトリ内のファイルの読み込み許可が必要となります。 SYNC_ACL を <literal>yes</literal> に設定していると、 Snapper は ALLOW_USERS と ALLOW_GROUPS の設定にあわせて、自動的にユーザとグループへのアクセス ACL を設定します。</para>
       <para>既定値は <literal>"no"</literal> (いいえ) です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>TIMELINE_CREATE</literal></term>
      <listitem>
       <para><literal>yes</literal> (はい) に設定していると、 1 時間ごとのスナップショットを作成します。設定可能な値は下記のとおりです: <literal>yes</literal> (はい), <literal>no</literal> (いいえ)</para>
       <para>既定値は <literal>"no"</literal> (いいえ) です。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>TIMELINE_CLEANUP</literal> / <literal>TIMELINE_LIMIT_*</literal></term>
      <listitem>
       <para>タイムラインスナップショットに対するクリーンアップアルゴリズムを設定します。詳しくは <xref linkend="sec-snapper-clean-up-timeline"/> をお読みください。</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-snapper-config-user">
    <title>一般ユーザからの Snapper の使用</title>
    <para>既定では、 Snapper は &rootuser; だけが使用できます。しかし、場合によっては特定のグループやユーザに対してアクセスを許可し、スナップショットの作成やスナップショットからの巻き戻しを実施したい場合があります:</para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para><filename>/srv/www</filename> 以下のスナップショットを採取しておきたい Web サイト管理者</para>
     </listitem>
     <listitem>
      <para>自分自身のホームディレクトリのスナップショットを採取しておきたい一般ユーザ</para>
     </listitem>
    </itemizedlist>
    <para>このような目的で、 Snapper には一般ユーザやグループへのアクセス許可を設定することができます。なお、対応する <filename>.snapshots</filename> ディレクトリには、それらのユーザからアクセスできるよう権限を設定する必要があります。権限の設定を最も簡単に行うには、 SYNC_ACL オプションを <literal>yes</literal> に設定するのがお勧めです。</para>
    <procedure>
     <title>一般ユーザに対する Snapper の使用の許可</title>
     <para>ここで示す手順は、いずれも &rootuser; で実施すべきものです。</para>
     <step>
      <para>Snapper の設定をまだ作成していない場合は、設定を作成します。詳しい手順は <xref linkend="sec-snapper-config"/> をお読みください。たとえば下記のように実行します:</para>
<screen>&prompt.sudo;snapper --config web_data create /srv/www</screen>
     </step>
     <step>
      <para>設定ファイルは <filename>/etc/snapper/configs/<replaceable>設定</replaceable></filename> に作成されます (ここで、 <replaceable>設定</replaceable> には <option>-c/--config</option> で指定した値が入ります。たとえば上記の例では、 <filename>/etc/snapper/configs/web_data</filename> になります) 。必要に応じて設定を変更することもできます。詳しくは <xref linkend="sec-snapper-config-modify"/> をお読みください。</para>
     </step>
     <step>
      <para>アクセスを許可したいユーザやグループを、 <envar>ALLOW_USERS</envar> および <envar>ALLOW_GROUPS</envar> でそれぞれ指定します。複数のユーザやグループを指定したい場合は、 <keycap function="space"/> で区切って指定してください。なお、 <systemitem class="username">www_admin</systemitem> ユーザに対して許可を与えたい場合は、下記のように実行します:</para>
<screen>&prompt.sudo;snapper -c web_data set-config "ALLOW_USERS=www_admin" SYNC_ACL="yes"</screen>
     </step>
     <step>
      <para>これで指定した Snapper の設定を指定したユーザやグループから使用できるようになります。たとえば <literal>list</literal> のようなコマンドで、利用できることを確認することができます:</para>
<screen><prompt>www_admin:~ &gt; </prompt>snapper -c web_data list</screen>
     </step>
    </procedure>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-snapper-manage">
  <title>スナップショットの手動作成と管理</title>

  <para>Snapper は設定で自動的にスナップショットを採取したり管理したりするだけでなく、コマンドラインや &yast; モジュールを利用して、スナップショット対 (<quote>事前</quote> および <quote>事後</quote>) や単一のスナップショットを手動で作成することもできます。</para>

  <para>全ての Snapper の操作は、既存の設定に対して行われます (詳しくは <xref linkend="sec-snapper-config"/> をお読みください) 。また、スナップショットは設定の存在するパーティションやボリュームに対してのみ採取することができます。既定では、システム設定 ( <literal>root</literal> ) を使用します。独自の設定でスナップショットを作成したり管理したりしたい場合は、設定を明示的に指定する必要があります。 &yast; の場合は <guimenu>現在の設定</guimenu> のドロップダウンボックスを、コマンドラインの場合は <option>-c</option> をそれぞれ指定してください (例: <command>snapper -c <replaceable>設定</replaceable> <replaceable>COMMAND</replaceable></command>) 。</para>

  <sect2 xml:id="sec-snapper-manage-metadata">
   <title>スナップショットのメタデータ</title>
   <para>それぞれのスナップショットにはメタデータが含まれています。スナップショットを作成する際、メタデータを指定する必要があります。また、スナップショットの内容については変更ができないことから、スナップショットの修正はメタデータの変更を意味することにもなります。 <command>snapper list</command> を実行すると、既存のスナップショットとそのメタデータを表示することができます:</para>
   <variablelist>
    <varlistentry>
     <term><command>snapper --config home list</command></term>
     <listitem>
      <para>上記を実行すると、 <literal>home</literal> という設定のスナップショットを一覧表示します。既定の設定 (root) に対するスナップショットを一覧表示するには、 <command>snapper -c root list</command> もしくは単に <command>snapper list</command> と実行します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper list -a</command></term>
     <listitem>
      <para>全ての既存の設定に対するスナップショットを一覧表示します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper list -t pre-post</command></term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) に対する全ての事前／事後スナップショット対を一覧表示します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper list -t single</command></term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) に対する全ての <literal>単一</literal> スナップショットを一覧表示します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>各スナップショットに対して、下記のメタデータが用意されています:</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para><emphasis role="bold">Type</emphasis> : スナップショットの種類。詳しくは <xref linkend="sec-snapper-manage-metadata-type"/> をお読みください。このデータは変更できません。</para>
    </listitem>
    <listitem>
     <para><emphasis role="bold">Number</emphasis> : スナップショットに対する唯一の番号。このデータは変更できません。</para>
    </listitem>
    <listitem>
     <para><emphasis role="bold">Pre Number</emphasis> : 対応する事前スナップショットの番号。 Type=post のスナップショットにのみ設定されます。このデータは変更できません。</para>
    </listitem>
    <listitem>
     <para><emphasis role="bold">Description</emphasis> : スナップショットの説明。</para>
    </listitem>
    <listitem>
     <para><emphasis role="bold">Userdata</emphasis> : カンマ区切りで key=value 形式の独自データを設定することのできるメタデータです。たとえば下記のように設定します:<literal>reason=testing, project=foo</literal> 。この項目は重要性を表す際に使用される ( <literal>important=yes</literal> ) ほか、一般ユーザが作成したスナップショットに対しても設定されます (user=&exampleuser_plain;) 。</para>
    </listitem>
    <listitem>
     <para><emphasis role="bold">Cleanup-Algorithm</emphasis> : スナップショットに対するクリーンアップアルゴリズム。詳しくは <xref linkend="sec-snapper-clean-up"/> をお読みください。</para>
    </listitem>
   </itemizedlist>
   <sect3 xml:id="sec-snapper-manage-metadata-type">
    <title>スナップショットの種類</title>
    <para>Snapper で採取できるスナップショットには、事前／事後／単一の種類があります。物理的には違いがありませんが、 Snapper 側での処理に違いがあります。</para>
    <variablelist>
     <varlistentry>
      <term><literal>pre</literal> (事前)</term>
      <listitem>
       <para>変更を行う <emphasis>前</emphasis> のファイルシステムのスナップショットです。それぞれの <literal>pre</literal> スナップショットには、対応する <literal>post</literal> スナップショットが存在します。たとえば &yast; や zypper が自動的に採取するスナップショットがこれにあたります。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>post</literal> (事後)</term>
      <listitem>
       <para>変更を行った <emphasis>後</emphasis> のファイルシステムのスナップショットです。それぞれの <literal>post</literal> スナップショットには、対応する <literal>pre</literal> スナップショットが存在します。たとえば &yast; や zypper が自動的に採取するスナップショットがこれにあたります。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>single</literal> (単一)</term>
      <listitem>
       <para>単独で採取されるスナップショットです。自動的な定時スナップショットなどで使用します。スナップショットを作成する際、既定の種類はこれになります。</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-snapper-manage-metadata-cleanup">
    <title>クリーンアップアルゴリズム</title>
    <para>Snapper には、古いスナップショットをクリーンアップ (清掃) するためのアルゴリズムが 3 種類存在しています。アルゴリズムは日々の <systemitem class="daemon">cron</systemitem> ジョブで実行されます。また snapper の設定内に、複数の種類のスナップショットを設定することもできます (詳しくは <xref linkend="sec-snapper-config-modify"/> をお読みください) 。</para>
    <variablelist>
     <varlistentry>
      <term>number</term>
      <listitem>
       <para>特定のスナップショット数に達すると、古いスナップショットを削除します。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>timeline</term>
      <listitem>
       <para>指定した時間が経過すると、古いスナップショットを削除します。ただし、いくつかの定期スナップショット (1 時間ごと, 1 日ごと, 1 ヶ月ごと, 1 年ごと) は保持されます。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>empty-pre-post</term>
      <listitem>
       <para>差分を全く含んでいない事前／事後スナップショット対を削除します。</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-snapper-manage-create">
   <title>スナップショットの採取</title>
   <para>スナップショットの採取は、 <command>snapper create</command> を実行するか、もしくは &yast; モジュールの <guimenu>Snapper</guimenu> で <guimenu>作成</guimenu> を押すことで作成することができます。下記の例では、コマンドラインからスナップショットを採取する方法を示しています。 &yast; インターフェイスであれば、より簡単に採取することができます。</para>
   <tip>
    <title>スナップショットの説明</title>
    <para>スナップショットの説明にはわかりやすい説明を記述しておいて、後から何のために採取したものなのかを判別できるようにしておくことをお勧めします。 <option>--userdata</option> オプションを使用すると、さらに詳しい情報を保存することができます。</para>
   </tip>
   <para/>
   <variablelist>
    <varlistentry>
     <term><command>snapper create --from <replaceable>17</replaceable> --description "with package2"</command></term>
     <listitem>
      <para>上記のように入力して実行すると、既存のスナップショットからの単一スナップショットを作成することができます。スナップショットの一覧は、 <command>snapper list</command> コマンドを実行して確認します (これは Snapper バージョン 0.8.4 もしくはそれ以降のバージョンで利用できます) 。</para>
     </listitem>
    </varlistentry> 
    <varlistentry>
     <term><command>snapper create --description "Snapshot for week 2 2014"</command></term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) に対して単一の (single) スナップショットを作成し、説明文を指定した場合の例です。クリーンアップアルゴリズムを指定していないため、このスナップショットは自動では削除されません。</para>
     </listitem>
    </varlistentry>
     <varlistentry>
     <term><command>snapper --config home create --description "Cleanup in ~&exampleuser_plain;"</command></term>
     <listitem>
      <para><literal>home</literal> という設定に対して単一の (single) スナップショットを作成し、説明文を指定した場合の例です。クリーンアップアルゴリズムを指定していないため、このスナップショットは自動では削除されません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper --config home create --description "Daily data backup" --cleanup-algorithm timeline</command> &gt;</term>
     <listitem>
      <para><literal>home</literal> という独自の設定に対して単一の (single) スナップショットを作成し、説明文を指定した場合の例です。クリーンアップアルゴリズム (cleanup-algorithm) に timeline を指定しているため、その条件を満たすと自動的に削除されるようにもなっています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper create --type pre --print-number --description "Before the Apache config cleanup" --userdata "important=yes"</command></term>
     <listitem>
      <para>種類に <literal>pre</literal> (事前) を指定してスナップショットを作成し、そのスナップショット番号を表示する場合の例です。何を行う <quote>前</quote> と <quote>後</quote> の状態を保存しておく際、 <quote>前</quote> を採取する場合に使用するコマンドです。このスナップショットには important (重要) のマークが付けられます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper create --type post --pre-number 30 --description "After the Apache config cleanup" --userdata "important=yes"</command></term>
     <listitem>
      <para>種類に <literal>post</literal> (事後) を指定してスナップショットを作成し、 <literal>pre</literal> (事前) 側のスナップショット番号を <literal>30</literal> として採取する場合の例です。何を行う <quote>前</quote> と <quote>後</quote> の状態を保存しておく際、 <quote>後</quote> を採取する場合に使用するコマンドです。このスナップショットには important (重要) のマークが付けられます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper create --command <replaceable>コマンド</replaceable> --description "Before and after COMMAND"</command></term>
     <listitem>
      <para><replaceable>コマンド</replaceable> で指定されるコマンドを実行する前後に、スナップショット対を自動的に作成するコマンドです。このオプションは、 snapper をコマンドラインから実行する場合にのみ利用できます。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-snapper-manage-modify">
   <title>スナップショットのメタデータの変更</title>
   <para>Snapper では、スナップショットに対する説明やクリーンアップアルゴリズム、ユーザデータをそれぞれ変更することができます。その他の全てのメタデータは変更できません。下記の例では、コマンドラインからスナップショットを変更する方法を示しています。 &yast; インターフェイスであれば、より簡単に変更することができます。</para>
   <para>コマンドラインからスナップショットの変更を行うには、まずスナップショットの番号を知っておく必要があります。スナップショットの一覧と番号を表示するには、 <command>snapper list</command> を実行してください。</para>
   <para>&yast; <guimenu>Snapper</guimenu> モジュールの場合は、開いた時点で全てのスナップショットが表示されます。一覧からいずれかを選んで <guimenu>修正</guimenu> を押してください。</para>
   <variablelist>
    <varlistentry>
     <term><command>snapper modify --cleanup-algorithm "timeline"</command> 10</term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) のスナップショット 10 に対して、メタデータの修正を行います。この場合は、クリーンアップアルゴリズムを <literal>timeline</literal> に設定します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper --config home modify --description "daily backup" -cleanup-algorithm "timeline" 120</command></term>
     <listitem>
      <para><literal>home</literal> という名前の設定のスナップショット 120 に対して、メタデータの修正を行います。新しい説明を設定し、クリーンアップアルゴリズムを <literal>timeline</literal> に設定します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-snapper-manage-delete">
   <title>スナップショットの削除</title>
   <para>&yast; <guimenu>Snapper</guimenu> モジュールでスナップショットを削除するには、一覧からスナップショットを選んで <guimenu>削除</guimenu> を押します。</para>
   <para>コマンドラインツールからスナップショットを削除するには、まずスナップショットの番号を知っておく必要があります。スナップショットの一覧と番号を表示するには、 <command>snapper list</command> を実行してください。その後、<command>snapper delete</command> <replaceable>番号</replaceable> と入力して実行します。</para>
   <para>現在の既定のサブボリュームスナップショットを削除することはできません。</para>
   <para>Snapper でスナップショットを削除する場合は、裏で動作する btrfs のプロセスが空き領域を開放します。そのため、空き領域の表示も遅れて反映されることになるほか、空き領域を利用する場合もしばらく待ってから行う必要があります。空き領域を即時に反映させたい場合は、 delete コマンドに <option>--sync</option> オプションを指定してください。</para>
   <tip>
    <title>スナップショット対の削除</title>
    <para><literal>pre</literal> (事前) スナップショットを削除する際は、必ず対応する <literal>post</literal> (事後) スナップショットもあわせて削除してください (逆も同様です) 。</para>
   </tip>
   <variablelist>
    <varlistentry>
     <term><command>snapper delete 65</command></term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) のスナップショット 65 を削除します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper -c home delete 89 90</command></term>
     <listitem>
      <para><literal>home</literal> という名前の設定のスナップショット 89 と 90 を削除します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper delete --sync 23</command></term>
     <listitem>
      <para>既定の設定 ( <literal>root</literal> ) のスナップショット 23 を削除し、空き容量を即時に反映させるようにします。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>参照されていないスナップショットの削除</title>
    <para>場合によっては、 btrfs のスナップショットが存在しているものの、メタデータを含む XML ファイルが失われている場合があります。この場合、スナップショットは Snapper で表示することができません。また、手作業で削除する必要があります:</para>
<screen>btrfs subvolume delete /.snapshots/<replaceable>SNAPSHOTNUMBER</replaceable>/snapshot
rm -rf /.snapshots/SNAPSHOTNUMBER</screen>
   </tip>
   <tip>
    <title>古いスナップショットの占有領域について</title>
    <para>ハードディスクの空き容量を増やすためにスナップショットを削除する場合、古いスナップショットから順に削除することをお勧めします。これは、古いスナップショットほどより多くのディスク領域を占有するためです。</para>
   </tip>
   <para>スナップショットは毎日の cron ジョブでも自動的に削除されます。詳しくは <xref linkend="sec-snapper-manage-metadata-cleanup"/> をお読みください。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-snapper-clean-up">
  <title>自動的なスナップショットのクリーンアップ</title>

  <para>スナップショットはディスク領域を占有するだけでなく、時間が経過するごとに占有されるサイズが大きくなっていく、という特徴があります。ディスクの空き容量が枯渇しないようにするため、 Snapper では古いスナップショットを自動的に削除するアルゴリズムを提供しています。これらのアルゴリズムでは、タイムラインスナップショットと番号スナップショット (管理スナップショットとインストールスナップショット) とを区別して扱います。また、それぞれの種類に対して、維持すべきスナップショット数を設定することもできます。</para>

  <para>これに加えて必要であれば、スナップショットが占有するディスク領域の最大サイズとして、ディスククォータを設定することもできます。また、 pre (事前) と post (事後) のスナップショットのうち、差異が無いものを自動削除することもできます。</para>

  <para>クリーンアップのアルゴリズムは、常に 1 つの Snapper 設定に結びつけられています。そのため、それぞれの設定に対してアルゴリズムを設定する必要があります。また、特定のスナップショットを自動削除されないように設定することもできます。詳しくは <xref linkend="faq-snapper-permanent"/> をお読みください。</para>

  <para>既定の設定 ( <literal>root</literal> ) では、番号スナップショットと pre (事前) と post (事後) で差異のないものをクリーンアップするよう設定しています。また、クォータサポートも有効化されていて、ルートパーティションのディスク領域に対して、スナップショットが 50% 以上を占有しないように設定されています。また、タイムラインスナップショットは無効化されているため、タイムラインスナップショットのクリーンアップアルゴリズムも無効化されています。</para>

  <sect2 xml:id="sec-snapper-clean-up-number">
   <title>番号スナップショットのクリーンアップ</title>
   <para>番号スナップショット (管理スナップショットとインストールスナップショット) のクリーンアップは、 Snapper 設定のうち下記のパラメータで制御することができます。</para>
   <variablelist>
    <varlistentry>
     <term><literal>NUMBER_CLEANUP</literal></term>
     <listitem>
      <para>インストールスナップショットと管理スナップショットの対に対して、クリーンアップを有効にするか無効にするかを設定することができます。スナップショットの対は、 <literal>NUMBER_LIMIT</literal> で指定した数を超過するか、もしくは<literal>NUMBER_LIMIT_IMPORTANT</literal> と <literal>NUMBER_MIN_AGE</literal> の<emphasis>両方</emphasis> を超過した場合に削除されます。設定可能な値は <literal>yes</literal> (有効), <literal>no</literal> (無効) のいずれかです。</para>
      <para>既定値は <literal>"yes"</literal> (はい) です。</para>
      <para>変更や設定の例:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> set-config "NUMBER_CLEANUP=no"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NUMBER_LIMIT</literal> / <literal>NUMBER_LIMIT_IMPORTANT</literal></term>
     <listitem>
      <para>通常の番号スナップショットと重要なインストール／管理スナップショットに対して、保持すべきスナップショット対の数を指定します。なお、 <literal>NUMBER_CLEANUP</literal> か <literal>"no"</literal> の場合は無視されます。</para>
      <para>既定値はそれぞれ <literal>NUMBER_LIMIT</literal> が <literal>"2-10"</literal> 、 <literal>NUMBER_LIMIT_IMPORTANT</literal> が <literal>"4-10"</literal> に設定されています。クリーンアップ処理では、それぞれ指定した最大値以上のスナップショットが削除され、不要なスナップショットとその領域が残らないようにします。また、クリーンアップ処理では、スナップショットやファイルシステムに対する制限に到達するまで、上記で指定した最小値を超えるスナップショットも削除します。</para>
      <para>変更や設定の例:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> set-config "NUMBER_LIMIT=10"</screen>
      <important>
       <title>範囲指定と固定値について</title>
       <para>クォータサポートを有効にしている場合 (<xref linkend="sec-snapper-clean-up-quota"/> をお読みください) は、 <literal>2-10</literal> のように最小-最大の形式で制限を範囲指定する必要があります。クォータサポートが無効の場合は、 <literal>10</literal> のように固定値を指定する必要があります。それ以外の場合は、エラーで失敗します。</para>
      </important>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NUMBER_MIN_AGE</literal></term>
     <listitem>
      <para>スナップショットを自動削除するまでの最小経過秒数を指定します。ここで指定した値よりも新しいスナップショットは、どれだけ存在していても削除されません。</para>
      <para>既定値は <literal>"1800"</literal> です。</para>
      <para>変更や設定の例:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> set-config "NUMBER_MIN_AGE=864000"</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <title>制限と世代</title>
    <para><literal>NUMBER_LIMIT</literal> , <literal>NUMBER_LIMIT_IMPORTANT</literal> , <literal>NUMBER_MIN_AGE</literal> は常に自動削除の判断基準となります。スナップショットは、 <emphasis>全て</emphasis> の条件に合致した場合にのみ削除されます。</para>
    <para>新しいか古いかに関係なく、常に <literal>NUMBER_LIMIT*</literal> で設定した数だけスナップショットを保持させたい場合は、 <literal>NUMBER_MIN_AGE</literal> を <literal>0</literal> に設定してください。</para>
    <para>下記の例は、直近の 10 個の重要なスナップショットと通常のスナップショットを、その古さに関係なく保持する設定例です:</para>
<screen>NUMBER_CLEANUP=yes
NUMBER_LIMIT_IMPORTANT=10
NUMBER_LIMIT=10
NUMBER_MIN_AGE=0</screen>
    <para>特定の時間が経過したら常にスナップショットを削除してかまわない場合は、<literal>NUMBER_LIMIT*</literal> に <literal>0</literal> を設定し、 <literal>NUMBER_MIN_AGE</literal> で時間を設定してください。</para>
    <para>下記の例は、常に直近の 10 日分のスナップショットのみを保持する設定です:</para>
<screen>NUMBER_CLEANUP=yes
NUMBER_LIMIT_IMPORTANT=0
NUMBER_LIMIT=0
NUMBER_MIN_AGE=864000</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-snapper-clean-up-timeline">
   <title>タイムラインスナップショットのクリーンアップ</title>
   <para>タイムラインスナップショットのクリーンアップは、 Snapper 設定のうち下記のパラメータで制御することができます。</para>
   <variablelist>
    <varlistentry>
     <term><literal>TIMELINE_CLEANUP</literal></term>
     <listitem>
      <para>タイムラインスナップショットに対して、クリーンアップを有効にするか無効にするかを設定することができます。スナップショットは <literal>TIMELINE_LIMIT_*</literal> と <literal>TIMELINE_MIN_AGE</literal> の <emphasis>両方</emphasis> を超過した場合に削除されます。設定可能な値は <literal>yes</literal> (有効), <literal>no</literal> (無効) のいずれかです。</para>
      <para>既定値は <literal>"yes"</literal> (はい) です。</para>
      <para>変更や設定の例:</para>
<screen>&prompt.sudo;snapper -c <replaceable>設定</replaceable> set-config "TIMELINE_CLEANUP=yes"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>TIMELINE_LIMIT_DAILY</literal> , <literal>TIMELINE_LIMIT_HOURLY</literal> , <literal>TIMELINE_LIMIT_MONTHLY</literal> , <literal>TIMELINE_LIMIT_WEEKLY</literal> , <literal>TIMELINE_LIMIT_YEARLY</literal></term>
     <listitem>
      <para>時間単位／日単位／週単位／年単位に保持すべきスナップショット数を指定します。</para>
      <para>各項目の既定値はそれぞれ <literal>"10"</literal> になっています。ただし、 <literal>TIMELINE_LIMIT_WEEKLY</literal> については、例外的に <literal>"0"</literal> が設定されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>TIMELINE_MIN_AGE</literal></term>
     <listitem>
      <para>スナップショットを自動削除するまでの最小経過秒数を指定します。</para>
      <para>既定値は <literal>"1800"</literal> です。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <example xml:id="ex-snapper-config-timeline">
    <title>タイムライン設定の例</title>
<screen>TIMELINE_CLEANUP="yes"
TIMELINE_CREATE="yes"
TIMELINE_LIMIT_DAILY="7"
TIMELINE_LIMIT_HOURLY="24"
TIMELINE_LIMIT_MONTHLY="12"
TIMELINE_LIMIT_WEEKLY="4"
TIMELINE_LIMIT_YEARLY="2"
TIMELINE_MIN_AGE="1800"</screen>
    <para>この設定例は 1 時間おきのスナップショットを自動的にクリーンアップする例です。<literal>TIMELINE_MIN_AGE</literal> と <literal>TIMELINE_LIMIT_*</literal> の両方が常に自動削除の判断基準となります。この例では、スナップショットを削除するまでの最小経過秒数が 30 分 (1800 秒) になっています。 1 時間おきのスナップショットを設定している場合は、常に最新のスナップショットのみを保持することになります。また、 <literal>TIMELINE_LIMIT_DAILY</literal> を 0 以外にしていると、 1 日の最初のスナップショットも保持されることになります。</para>
    <itemizedlist mark="bullet" spacing="normal">
     <title>保持されるスナップショット</title>
     <listitem>
      <para>1 時間単位: 直近の 24 個のスナップショットを保持します。</para>
     </listitem>
     <listitem>
      <para>1 日単位: 直近の 7 日分に対して、 1 日の最初のスナップショットを保持します。</para>
     </listitem>
     <listitem>
      <para>1 ヶ月単位: 直近の 12 ヶ月分に対して、月の最後の日に作成された最初のスナップショットを保持します。</para>
     </listitem>
     <listitem>
      <para>1 週単位: 直近の 4 週間に対して、週の最後の日に作成された最初のスナップショットを保持します。</para>
     </listitem>
     <listitem>
      <para>1 年単位: 直近の 2 年に対して、年の最後の日に作成された最初のスナップショットを保持します。</para>
     </listitem>
    </itemizedlist>
   </example>
  </sect2>

  <sect2 xml:id="sec-snapper-clean-up-empty">
   <title>違いのないスナップショット対のクリーンアップ</title>
   <para><xref linkend="snapper-snapshot-type"/> で説明しているとおり、 &yast; モジュールや zypper を実行すると、その起動時に pre (事前) スナップショットが作成され、終了時に post (事後) スナップショットが作成されます。ただ、何も変更せずにそれらを終了したような場合など、 pre と post の間で何も変更が無い場合があります。このような <quote>空の</quote> スナップショットは、 Snapper の設定内の下記パラメータを利用することで、自動削除を行うことができます:</para>
   <variablelist>
    <varlistentry>
     <term><literal>EMPTY_PRE_POST_CLEANUP</literal></term>
     <listitem>
      <para><literal>yes</literal> (はい) を指定すると、何も差異のない pre と post のスナップショット対が削除されます。</para>
      <para>既定値は <literal>"yes"</literal> (はい) です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>EMPTY_PRE_POST_MIN_AGE</literal></term>
     <listitem>
      <para>何も差異のない pre/post スナップショット対のうち、自動削除するまでの最小経過秒数を指定します。</para>
      <para>既定値は <literal>"1800"</literal> です。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-snapper-clean-up-manual">
   <title>手作業で作成したスナップショットのクリーンアップ</title>
   <para>Snapper には、手作業で採取したスナップショットに対する独自のクリーンアップアルゴリズムが用意されていません。しかしながら、番号やタイムラインのクリーンアップアルゴリズムを、手作業で作成したスナップショットに適用することができます。これを行うと、スナップショットがアルゴリズムの <quote>クリーンアップキュー</quote> 内に追加されるようになります。また、クリーンアップアルゴリズムは、スナップショットの作成時に指定することができるほか、既存のスナップショットに対して設定することもできます:</para>
   <variablelist>
    <varlistentry>
     <term><command>snapper create --description "Test" --cleanup-algorithm number</command></term>
     <listitem>
      <para>既定の設定 (root) に対して単一の (single) スナップショットを作成し、<literal>number</literal> (番号) クリーンアップアルゴリズムを適用した場合の例です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>snapper modify --cleanup-algorithm "timeline" 25</command></term>
     <listitem>
      <para>スナップショット番号 25 に対して、クリーンアップアルゴリズム <literal>timeline</literal> (タイムライン) を適用した場合の例です。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-snapper-clean-up-quota">
   <title>ディスククォータサポートの追加</title>
   <para>上述の番号／タイムラインのクリーンアップアルゴリズムに加えて、 Snapper ではクォータ (容量制限) を設定することができます。容量制限は利用可能な空き容量に対する比率で指定します。この比率での指定は、それぞれの Snapper 設定内で指定された btrfs サブボリュームに対して常に適用されます。</para>
   <para>btrfs のクォータは、ユーザではなくサブボリュームに対して適用されます。また、 btrfs のクォータは、ユーザやグループに対するクォータ (<command>quota</command> コマンドを使用するクォータ) と併用することができます。</para>
   <para>インストール時に Snapper を有効化していると、クォータサポートも自動的に有効化されます。 Snapper を後から有効化した場合は、 <command>snapper setup-quota</command> を実行することでクォータサポートを有効化することができます。また、この動作には正しい設定が必要です (詳しくは <xref linkend="sec-snapper-config"/> をお読みください) 。</para>
   <para>クォータサポートは、 Snapper 設定のうち下記のパラメータで制御することができます。</para>
   <variablelist>
    <varlistentry>
     <term><literal>QGROUP</literal></term>
     <listitem>
      <para>Snapper で使用されるクォータグループを指定します。何も指定されていない場合は、 <command>snapper setup-quota</command> で設定することができます。既に設定されている場合は、 <command>man 8 btrfs-qgroup</command> をよくお読みのうえ変更してください。また、この値は <command>snapper setup-quota</command> で設定すべきもので、通常は変更すべきではありません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SPACE_LIMIT</literal></term>
     <listitem>
      <para>1 を 100% とする小数で、スナップショットに対して許可される容量を指定します。指定可能な値は 0 から 1 まで (0.1 = 10%, 0.2 = 20%, ...) です。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>なお、下記の制限事項とガイドラインをお読みください:</para>
   <itemizedlist>
    <listitem>
     <para>クォータは既存の番号／タイムラインに対するクリーンアップアルゴリズムに <emphasis>加えて</emphasis> のみ有効化されるべきものです。何もクリーンアップアルゴリズムを指定していないと、クォータによる制限も適用されません。</para>
    </listitem>
    <listitem>
     <para>クォータサポートが有効化されていると、 Snapper は必要に応じて 2 回のクリーンアップ処理を実施します。 1 回目の実行では番号もしくはタイムラインのスナップショットに対するルールを適用し、その時点でクォータを超過している場合、 2 回目の実行としてクォータ固有のルールが適用されます。</para>
    </listitem>
    <listitem>
     <para>クォータサポートが有効化されていても、 Snapper は <literal>NUMBER_LIMIT*</literal> と <literal>TIMELINE_LIMIT*</literal> の各値で指定された数のスナップショットを、クォータを超過している場合でも常に保持します。そのため、 <literal>NUMBER_LIMIT*</literal> と <literal>TIMELINE_LIMIT*</literal> では値の範囲を指定 (<literal><replaceable>MIN</replaceable>-<replaceable>MAX</replaceable></literal>) して、クォータによる削除が適用されるようにしてください。</para>
     <para>たとえば <literal>NUMBER_LIMIT=5-20</literal> という設定の場合、 Snapper は最初のクリーンアップ実行で定期的に採取されたスナップショットを 20 個まで減らします。 20 個まで減らしてもクォータを超過している場合は、 Snapper はクォータを超過しなくなるまで古いスナップショットを削除します。ただし、最新の 5 個分については、領域の問題が解決していなくても、必ず保持する動作になります。</para>
    </listitem>
   </itemizedlist>
  </sect2>
</sect1>
 
  <sect1>
      <title>スナップショットが占有しているディスク容量の表示</title>
     <para>スナップショットではストレージ領域を効率的に使用する目的で、データの共有を行っています。そのため、 <command>du</command> や <command>df</command> 等のコマンドを使用しても、残りのディスク領域を正確に測定することができません。 btrfs でクォータを有効化している場合、ディスク領域を空けるには、まずそれぞれのスナップショットが占有している (共有していない) ディスク容量を正確に把握する必要があります。 snapper 0.6 もしくはそれ以降のバージョンでは、 <literal>使用済み領域</literal> の列内に占有している容量が表示されます:</para>
<screen>&prompt.root;snapper --iso list
  # | 種類   | 前 #  | 日付                        | ユーザ | 使用済み領域 | クリーンアップ| 説明                  | ユーザデータ
----+--------+-------+-----------------------------+--------+--------------+---------------+-----------------------+--------------
 0  | single |       |                             |  root  |              |               | current               |              
 1* | single |       | 2019年07月22日 13時08分38秒 |  root  |   16.00 KiB  |               | first root filesystem |              
 2  | single |       | 2019年07月22日 14時21分05秒 |  root  |   14.23 MiB  |    number     | after installation    | important=yes
 3  | pre    |       | 2019年07月22日 14時26分03秒 |  root  |  144.00 KiB  |    number     | zypp(zypper)          | important=no 
 4  | post   |     3 | 2019年07月22日 14時26分04秒 |  root  |  112.00 KiB  |    number     |                       | important=no 
 5  | pre    |       | 2019年07月23日 08時19分36秒 |  root  |  128.00 KiB  |    number     | zypp(zypper)          | important=no 
 6  | post   |     5 | 2019年07月23日 08時19分43秒 |  root  |   80.00 KiB  |    number     |                       | important=no 
 7  | pre    |       | 2019年07月23日 08時20分50秒 |  root  |  256.00 KiB  |    number     | yast sw_single        |              
 8  | pre    |       | 2019年07月23日 08時23分22秒 |  root  |  112.00 KiB  |    number     | zypp(ruby.ruby2.5)    | important=no 
 9  | post   |     8 | 2019年07月23日 08時23分35秒 |  root  |   64.00 KiB  |    number     |                       | important=no 
10  | post   |     7 | 2019年07月23日 08時24分05秒 |  root  |   16.00 KiB  |    number     |                       |              
</screen>
<para><command>btrfs</command> コマンドを使用しても、それぞれのスナップショットが占有するディスク容量を表示することができます:</para>
<screen>
&prompt.root;btrfs qgroup show -p /
qgroupid         rfer         excl parent  
--------         ----         ---- ------  
0/5          16.00KiB     16.00KiB ---     
[...]    
0/272         3.09GiB     14.23MiB 1/0     
0/273         3.11GiB    144.00KiB 1/0     
0/274         3.11GiB    112.00KiB 1/0     
0/275         3.11GiB    128.00KiB 1/0     
0/276         3.11GiB     80.00KiB 1/0     
0/277         3.11GiB    256.00KiB 1/0     
0/278         3.11GiB    112.00KiB 1/0     
0/279         3.12GiB     64.00KiB 1/0     
0/280         3.12GiB     16.00KiB 1/0     
1/0           3.33GiB    222.95MiB --- 
</screen>
<para><literal>qgroupid</literal> 列には、それぞれのサブボリュームの識別番号と qgroup レベル/ID の組み合わせが表示されます。</para> 
<para><literal>rfer</literal> 列には、サブボリューム内で参照されているデータの容量が表示されます。</para>
<para><literal>excl</literal> 列には、それぞれのサブボリューム内に存在する占有データ容量が表示されます。</para>
<para><literal>parent</literal> 列には、サブボリュームの親 qgroup が表示されます。</para>
<para>末尾にある <literal>1/0</literal> には、親 qgroup に対する合計容量が表示されています。上記の例では、全てのサブボリュームを削除すると、 222.95 MiB が解放されることになります。下記のコマンドを実行すると、スナップショットとサブボリュームの関係性を表示することができます:</para>
<screen>&prompt.root;btrfs subvolume list -st /
ID      gen     top level       path
--      ---     ---------       ----
267     298     266             @/.snapshots/1/snapshot
272     159     266             @/.snapshots/2/snapshot
273     170     266             @/.snapshots/3/snapshot
274     171     266             @/.snapshots/4/snapshot
275     287     266             @/.snapshots/5/snapshot
276     288     266             @/.snapshots/6/snapshot
277     292     266             @/.snapshots/7/snapshot
278     296     266             @/.snapshots/8/snapshot
279     297     266             @/.snapshots/9/snapshot
280     298     266             @/.snapshots/10/snapshot
</screen>
     <para>また、一方のサービスパックから他方のサービスパックにアップグレードを行ったりすると、パッケージの更新により多数のデータが変更されるため、スナップショットがシステムサブボリューム内の多くの領域を占有するようになります。これらは、不要になった段階で、手作業による削除を行うことをお勧めします。詳しくは <xref linkend="sec-snapper-manage-delete"/> をお読みください。</para>
 </sect1>

 <sect1 xml:id="sec-snapper-faqs">
  <title>よくある質問とその回答</title>

  <qandaset defaultlabel="qanda">
   <qandaentry>
    <question>
     <para>Snapper が  <filename>/var/log</filename> や <filename>/tmp</filename> などのディレクトリ内の変更を表示しないのはなぜ？</para>
    </question>
    <answer>
     <para>ディレクトリによってはスナップショットから除外されているものがあります。詳しい一覧とその理由については、 <xref linkend="snapper-dir-excludes"/> をご覧ください。スナップショットからの除外にあたっては、サブボリュームを作成して対応しています。</para>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>ブートローダから特定のスナップショットを起動するには？</para>
    </question>
    <answer>
     <para>詳しくは <xref linkend="sec-snapper-snapshot-boot"/> をお読みください。</para>
    </answer>
   </qandaentry>
   <qandaentry xml:id="faq-snapper-permanent">
    <question>
     <para>スナップショットを削除されたりしないように保護することはできますか？</para>
    </question>
    <answer>
     <para>現時点では、スナップショットを手作業による削除から保護する方法はありません。しかしながら、クリーンアップアルゴリズムで自動削除されないように設定することは可能です。手作業で採取したスナップショットの場合 (詳しくは <xref linkend="sec-snapper-manage-create"/> をお読みください) 、 <option>--cleanup-algorithm</option> でクリーンアップアルゴリズムを指定しない限り、何もクリーンアップアルゴリズムが割り当てられません。また、自動的に採取されたスナップショットには、 <literal>number</literal> または <literal>timeline</literal> のいずれかのアルゴリズムが割り当てられます。 1 つまたは複数のスナップショットに対して、この割り当てを削除したい場合は、下記のようにして行います:</para>
     <procedure>
      <step>
       <para>まずは利用可能な全てのスナップショットを一覧表示します:</para>
<screen>&prompt.sudo;snapper list -a</screen>
      </step>
      <step>
       <para>削除したくないスナップショットの番号 (複数可) を覚えておきます。</para>
      </step>
      <step>
       <para>下記のコマンドを実行します。このとき、上記で覚えておいた番号を <replaceable>#1</replaceable> <replaceable>#2</replaceable>  <replaceable>#n</replaceable> の部分に指定します:</para>
<screen>&prompt.sudo;snapper modify --cleanup-algorithm "" <replaceable>#1</replaceable> <replaceable>#2</replaceable> <replaceable>#n</replaceable></screen>
      </step>
      <step>
       <para>最後にもう一度 <command>snapper list -a</command> を実行して、結果を確認します。変更したスナップショットの <literal>Cleanup</literal> 欄が空白になっていれば成功です。</para>
      </step>
     </procedure>
    </answer>
   </qandaentry>
   <qandaentry>
    <question>
     <para>Snapper に関してさらに詳しい情報を知るには？</para>
    </question>
    <answer>
     <para>Snapper の Web ページ <link xlink:href="http://snapper.io/"/> をご覧ください。</para>
    </answer>
   </qandaentry>
  </qandaset>
 </sect1>
</chapter>
