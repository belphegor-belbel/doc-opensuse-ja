<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="art-jeos-quickstart" xml:lang="ja">

 <info>
  <title>&jeos; Quick Start Guide</title>
  <productname>&sls; JeOS</productname>
  <productnumber>&productnumber;</productnumber>

  <date><?dbtimestamp format="B d, Y"?></date>

  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Documentation</dm:component>
    <dm:product>Public Beta SUSE Linux Enterprise Server 15 SP2</dm:product>
    <dm:assignee>dpopov@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:editurl>https://github.com/SUSE/doc-sle/edit/master/xml/</dm:editurl>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    The following document provides an overview of &sls;
    JeOS and describes the setup procedure.
   </para>
  </abstract>
 </info>

 <sect1 xml:id="sec-introduction">
  <title>Introduction</title>

  <para>
   &jeos; (Just enough Operating System) refers to a minimal customizable
   operating system that is tailored for a specific usage scenario (a container
   host, a virtual machine guest, an appliance base, or a small server
   image). &jeos; acts as a foundation for building systems for use in a data
   center, creating desired virtual application images or appliances. You can
   choose what packages and components to install based on a specific use
   case. To that end, &jeos; provides access to all regular software
   repositories.
  </para>

  <para>
   If you already have &sls; certification, you are automatically certified for &jeos;,
   as it is derived from the same code base. &sls; &jeos; allows you to reduce
   the operating system to the packages essential for the specific usage
   scenario. This minimizes the number of packages and patches that have to be
   managed and applied. By removing unnecessary packages, you also reduce the
   number of potential vulnerabilities, thus making the resulting system more
   secure. Reducing the system's footprint also results in lower resource
   consumption and improved performance.
  </para>

  <para>
    &jeos; is delivered as pre-configured and ready-to-run virtual machine
    images. The system comes with the <systemitem>jeos-firstboot</systemitem>
    wizard for configuring system locales and root password during the first
    boot. &jeos; ships with the SSH server enabled and excluded from the
    firewall configuration. The supplied &kiwi; templates make it possible to
    create customized &jeos; images.
   </para>

  <para>
   &jeos; provides ready to deploy server images on the x86_64 architecture for
   the following usage scenarios:
  </para>
   <itemizedlist>
    <listitem>
     <para>KVM/Xen with HVM</para>
    </listitem>
    <listitem>
     <para>Xen Paravirtualized</para>
    </listitem>
    <listitem>
     <para>Microsoft Hyper-V</para>
    </listitem>
    <listitem>
     <para>VMware</para>
    </listitem>
    <listitem>
     <para>OpenStack Cloud</para>
    </listitem>
   </itemizedlist>

  <sect2 xml:id="sec-system-requirements">
   <title>System Requirements</title>
   <para>
    The minimum &jeos; system
   requirements are similar to &sls;. For more information, refer to <xref linkend="sec-x86-requirements"/>
   </para>
  </sect2>
  <sect2 xml:id="sec-jeos-sles-diff">
   <title>Differences between &jeos; and &sls;</title>
   <para>
    There are several significant differences between &jeos; and &sls;.
   </para>
   <variablelist>
    <title>Differences between &jeos; and &sls;</title>
    <varlistentry>
     <term>
      jeos-firstboot
     </term>
     <listitem>
      <para>
       &jeos; comes with the <package>jeos-firstboot</package> tool that can be
       used to configure basic settings during the first boot. This includes
       keyboard layout and language, time zone, and root password.
      </para>
      <para>
       The default network configuration is set to use DHCP, and the system
       automatically creates a Btrfs snapshot of the initial configuration.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><package>kernel-default-base</package></term>
     <listitem>
      <para>
       Because of size constraints, &jeos; images use the
       <package>kernel-default-base</package> as the default kernel. Since the
       kernel does not contain drivers for bare metal, this allows for a
       smaller footprint.
      </para>
      <para>
       If a specific usage scenario requires any of the omitted modules, install
       the <package>kernel-default</package> package to get a full tree of the
       kernel modules. This is the same kernel used by a regular &sls;
       installation.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>No repositories by default</term>
     <listitem>
      <para>
       When installing a &sls; from the installation media, the system
       automatically sets the installation media as the default offline
       channel.
      </para>
      <para>
       &jeos; has no channel by default, and you have to register your system
       to access online channels. <!-- FIXME Refer to <xref
       linkend="sec-registering-your-system" /> for further information. -->
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Zypper configuration</term>
     <listitem>
      <para>
       &jeos; is a slimmed-down version of &sls;. The reduction in size is
       achieved in part by enabling two options in
       <filename>/etc/zypp/zypp.conf</filename>:
       <literal>rpm.install.excludedocs = yes</literal> (excludes all files
       marked as documentation from being installed by default) and
       <literal>solver.onlyRequires = true</literal> (disables installation of
       suggested and recommended packages by default).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Base packages</term>
     <listitem>
     <para>
      &jeos; images are built using the &kiwi; tool. &kiwi;'s configuration
      files, called templates, explicitly list packages that must be included
      in the images. Keep in mind that these base packages pull their
      dependencies during the image building process. Therefore, the list of
      preinstalled packages in an images usually contains more packages than
      the list of base packages.
     </para>
     <para>
      The &kiwi; configuration files used to create the official &jeos; images
      are available from the openSUSE Build Service at <link xlink:href="https://build.opensuse.org/package/view_file/SUSE:SLE-15-SP1:GA/kiwi-templates-SLES15-&jeos;/&jeos;.kiwi?expand=1">https://build.opensuse.org/</link>.
     </para>
     <note>
      <title>Specific host tools packages</title>
      <para>Each &sls; &jeos; flavor contains certain
      host tools package. Refer to the specific flavors section in the
      documentation for further information.</para>
     </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Disk layout</term>
     <listitem>
      <para>
       Unlike &sls;, which calculates the disk layout during installation,
       &jeos; features the following fixed virtual image partitioning scheme:
      </para>
      <itemizedlist>
       <listitem>
	<para>2MB BIOS boot</para>
       </listitem>
       <listitem>
	<para>33MB EFI System</para>
       </listitem>
       <listitem>
	<para>24GB Linux filesystem</para>
       </listitem>
      </itemizedlist>
    <para>
     To get additional disk space, you can either extend the existing disk from
     the virtual host or add a secondary disk to the virtual machine. If you
     choose the latter option, you have partition and format it manually.
    </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>

<sect1 xml:id="sec-available-image-flavors">
 <title>Available Image Flavors</title>
 <para>
  Ready-to-use &jeos; images are available for the x86_64 architecture
  only. You can download &jeos; for the following deployment targets:
 </para>
 <itemizedlist>
  <listitem>
   <para>Fully Virtual &jeos; for KVM and Xen (FV/HVM)</para>
  </listitem>
       <listitem>
	<para>&jeos; for VMware</para>
       </listitem>
       <listitem>
	<para>&jeos; for Microsoft HyperV</para>
       </listitem>
       <listitem>
	<para>&jeos; for OpenStack</para>
       </listitem>
       <listitem>
	<para>Paravirtual &jeos; for Xen (PV)</para>
       </listitem>
 </itemizedlist>
 
 <important>
  <title>Supported Virtualization Hosts (Hypervisors)</title>
  <para>
   &jeos; can run as a virtualization guest on the same virtualization hosts
   (hypervisors) as &sls;. See <xref linkend="virt-support-hosts"/> for more
   information on what hypervisors are supported.
  </para>
 </important>
 
 <sect2 xml:id="sec-openstack-cloud">
  <title>&jeos; Image for OpenStack Cloud</title>
  <para>
   &jeos; for OpenStack Cloud is an image designed
   specifically for use in an OpenStack environment.
  </para>
  <para>
   Instead of the <package>jeos-firstboot</package> tool, &jeos; for OpenStack Cloud uses
   <link xlink:href="https://cloudinit.readthedocs.io/en/latest/#">cloud-init</link>
   for configuring the image. The image also uses the XFS file system
   and the following kernel configuration:
  </para>
<screen>"plymouth.enable=0 console=ttyS0,115200 console=tty0 net.ifnames=0"</screen>
  <para>
   This means that the image ships without packages required by
   <package>jeos-firstboot</package> and Btrfs.
  </para>
  <para>
   &jeos; for OpenStack Cloud includes several OpenStack-related
   packages, such as <package>cloud-init</package>,
   <package>cloud-init-config-suse</package>, and
   <package>xfsprogs</package>.
  </para>
 </sect2>

 <sect2 xml:id="sec-kvmxen-xen">
  <title>KVM-XEN and XEN Flavor</title>
  <para>&jeos; image for KVM/XEN and XEN ships with the following packages:</para>
  <itemizedlist>
   <listitem>
    <para>xen-tools-domU</para>
   </listitem>
   <listitem>
    <para>grub2-x86_64-xen</para>
   </listitem>
   <listitem>
    <para>xen-libs</para>
   </listitem>
  </itemizedlist>
 </sect2>
 <sect2 xml:id="sec-ms-hyperv">
  <title>Microsoft Hyper-V Flavor</title>
  <para>&jeos; for MicroSoft Hyper-V ships with the following packages:</para>
  <itemizedlist>
   <listitem>
    <para>hyper-v</para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="sec-vmware">
  <title>VMware Flavor</title>
  <para>
   &jeos; for VMware ships with the <package>open-vm-tools</package>
  </para>
 </sect2>
</sect1>

<!-- THE COMMENTED PART IS WIP

 <sect1 xml:id="sec-using-jeos">
  <title>Using &jeos;</title>

  <sect2 xml:id="getting-suse-linux-enterprise-server-12-sp4-jeos">
   <title>Getting &sls; 12 SP4 &jeos;</title>

   <para>
    <emphasis role="strong">&lt;TO BE PROVIDED&gt;</emphasis>
   </para>

   <itemizedlist>
    <listitem>
     <para>Where to get &sls; 12 SP4 &jeos;</para>
   </listitem>
   <listitem>
    <para> How/where to get the different flavors</para>
   </listitem>
  </itemizedlist>

  <para>
   <emphasis role="strong">&lt;TO BE PROVIDED&gt;</emphasis>
  </para>

  <para>
   <emphasis role="strong">&lt;PROVIDE SPECIFIC DOWNLOAD LINKS (LINK AVAILABLE AFTER
   GM) -> VMOUTOUSSAMY&gt;</emphasis>
  </para>
  </sect2>

  <sect2 xml:id="sec-starting-sles12sp4-jeos">
   <title>Starting &sls; 12 SP4 &jeos;</title>

   <para>Refer to your Hypervisor documentation on how to start a virtual machine based on an
    existing image.</para>
  </sect2>
  
  <sect2 xml:id="sec-firstboot">
   <title>First Boot</title>

   <para>
    <emphasis role="strong">&lt; (SCREENSHOT (PNG) ARE IMPORTANT HERE FOR BOTH
     &#8594; VMOUTOUSSAMY)&gt;</emphasis>
   </para>

   <para>The jeos-firstboot will ask you for a root password during the firstboot of the &jeos;
    image.</para>

   <para>
    <emphasis role="strong">&lt;ROOT PASSWORD: YOU HAVE TO CREATE ONE IN THE
    SETTINGS&gt;</emphasis>
   </para>

   <para>However for the OpenStack Cloud images, the root password is not set at all and
    SHOULD be set via <command>cloud-init</command>. We suggest you to set it immediately. </para>

   <para>
    <emphasis role="strong">&lt;(provide the cloud-init link &#8594; vmoutoussamy
     (maybe a second step would be to produce our own for JEOS (based on cloud team feedback))&gt;</emphasis>
   </para>
  </sect2>

  <sect2 xml:id="sec-registering-your-system">
   <title>Registering Your System</title>

   <para>
    <emphasis role="strong">&lt;(JEOS AND SLES ARE SIMILAR IN REGARD OF REGISTRATION -
     FOR NOW COPY AND PASTE THE SLES INSTALLATION PROCEDURE FROM EXISTING
     GUIDE)&gt;</emphasis>
   </para>


   <para>Registering your system gives you access to updates and security fixes for SUSE Linux
    Enterprise Server 12 and is a prerequisite to be eligible for support. Register the
    image by either using your existing SUSE entitlement . To register the system run the
    following command from within the running &jeos;:</para>

   <para>
    <command>sudo SUSEConnect -e &lt;E-MAIL&gt; -r &lt;YOUR_CODE&gt;</command>
   </para>

   <para>Replace <parameter>E-MAIL</parameter>with the e-mail address from your
    organization&#8217;s account at the SUSE Customer Center (SCC). Replace
    <parameter>YOUR_CODE</parameter>with a valid registration code.</para>

   <para>
    <emphasis role="strong">&lt;PLEASE CHECK&gt;</emphasis>
   </para>

   <important>
    <title>Images started with <package>qemu</package></title>

    <para>In case you start an image directly with <package>qemu-kvm</package> on a SUSE
     Linux Enterprise Server 12 host, the virtual BIOS will not provide a system UUID.
     Such a UUID is used when registering systems with <quote>SUSEConnect</quote>. In case
     a system is registered without a UUID, it cannot be properly tracked and may not have
     access to all repositories. Therefore it is recommended to provide a UUID on the
    <package>qemu-kvm</package> command line:</para>

    <screen>qemu-kvm -smbios type=1,uuid=&lt;MYUUID&gt;</screen>

    <para>A simple MYUUID could look like this:</para>
     <screen>00000000-0000-0000-0000-${VIRTUALMACADDRESS}</screen>

   </important>

   <para>This problem does not occur when starting virtual machines with
    <package>libvirt</package> (recommended). Newer versions of <package>qemu</package>
    (for example the one shipped with &sls; 12 SP1) do not have this
   problem either.</para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-building-custom-sles-jeos-images">
  <title>Building Custom &sls; &jeos; Images</title>
  
  <sect2 xml:id="sec-studio-express">
   <title>Using Studio Express</title>
  <para>The easiest way to customize &sls; &jeos; Images
   is via our <link xlink:href="https://build.opensuse.org/image_templates">
   images templates</link> available on <link xlink:href="https://studioexpress.opensuse.org/">Studio Express</link></para>
  </sect2>

  <sect2 xml:id="sec-kiwi-templates">
   <title>KIWI Templates</title>
  <para>The templates used to build the official ready-to-use &sls; 12
   &jeos; images are available from the package <package>kiwi-templates-SLES12-&jeos;</package>
   which can be obtained from</para>
  <para>Having installed this package, the templates can be found in the following
   directory</para>
  <para>
   <filename>/usr/share/kiwi/image/suse-SLE12-Enterprise-&jeos;/</filename>
  </para>
  <para>Detailed instructions on how to customize the templates and build the images are
   provided with the KIWI documentation. You can find the documentation online at <link
   xlink:href="https://osinside.github.io/kiwi/">https://osinside.github.io/kiwi/
   </link>. You can also make the documentation available locally by installing the package
   <package>kiwi-doc</package>.</para>
  </sect2>
 </sect1>

 <sect1 xml:id="faq">
  <title>FAQ</title>

  <itemizedlist>
   <listitem>
    <para>When we have certain SLES version certified, the same version of &jeos; is
     automatically certified too?</para>
   </listitem>
   <listitem>
    <para>Is there any extra differences in between SLES and &jeos;? Meaning &jeos; has anything
     that is not in SLES? </para>
   </listitem>
   <listitem>
    <para>From &jeos; to a Full &sls; System</para>
    <para>You can make a &jeos; image closer to a full &sle;
     Server system by manually installing packages and patterns.</para>
   </listitem>
   <listitem>
    <para>Can &sls; &jeos; be a host for container?</para>
    <para>Yes, &sls; &jeos; can be a host for containers (as described below).
     To install the Containers Module, run the following command after you have
     registered your system:</para>
    <para>
     <command>sudo SUSEConnect -p sle-module-containers/12/x86_64</command>
    </para>
   </listitem>
   <listitem>
    <para>How to report issue related to &sls; &jeos;?</para>
   </listitem>
   <listitem>
    <para>SUPPORT STATUS</para>
    <para>CAN THESE TEMPLATES BE USED TO BUILD IMAGES FOR A DIFFERENT ARCHITECTURE? (YES,
     BUT UNTESTED AND ONLY WITH MORE THAN TRIVIAL CHANGES)</para>
   </listitem>
   </itemizedlist>
   </sect1>
-->

</article>
