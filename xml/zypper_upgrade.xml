<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<!-- Only include this file in openSUSE documentation. For SLE, there are
better supported methods. -->
<sect2 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-update-zypper">
 <title>&zypper; を利用したディストリビューションのアップグレード</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
  </dm:docmanager>
 </info>
 <para><command>zypper</command> コマンドラインユーティリティを利用することで、お使いのシステムを次のバージョンにアップグレードすることができます。それだけではなく、 <command>zypper</command> ではシステムを実行しながらアップグレードを行うことができます。</para>
 <para>このような機能は、リモートからのアップグレードを行いたい高度なユーザや、似たような設定のシステムを多数管理しているようなユーザにとって、便利な仕組みとなります。</para>
 <sect3 xml:id="sec-update-zypper-prep">
  <title>&zypper; を利用したアップグレードの準備</title>
  <para><command>zypper</command> を利用してアップグレード処理を行う場合、予期しないエラーが発生しないようにするため、リスクの原因をできる限り取り除いておくことをお勧めします。</para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>可能な限り多くのアプリケーションを終了し、不要なサービスを停止しておくとともに、全ての一般ユーザにログアウトしてもらってください。</para>
   </listitem>
   <listitem>
    <para>アップグレードを開始する前には、あらかじめサードパーティ製のリポジトリを無効化するか、既定のシステムリポジトリが提供するパッケージが正しくインストールされるよう、サードパーティ製のリポジトリの優先順位を下げてください。アップグレード終了後に再度これらのリポジトリを有効化し、ディストリビューションのバージョンにあわせてリポジトリの URL を変更し、必要なソフトウエアをインストールしてください。</para>
   </listitem>
  </itemizedlist>
 </sect3>
 <sect3 xml:id="sec-update-zypper-proc">
  <title>アップグレード作業</title>
  <warning>
   <title>システムバックアップの確認</title>
   <para>アップグレードの処理を始める前に、まずはシステムバックアップが正しく採取され、かつ最新の状態で復元可能であることをご確認ください。下記の手順では、様々な手作業が発生するため、誤ってシステムを壊してしまう危険性もはらんでいます。そのため、バックアップは非常に重要です。</para>
  </warning>
  <para><command>zypper</command> プログラムでは、長いコマンド名と短いコマンド名の両方に対応しています。たとえば <command>zypper install</command> は <command>zypper in</command> と短くすることができます。下記の文章では、短いほうのコマンドで記述しています。</para>
  <procedure>
   <step>
    <para>オンライン更新を実行して、ソフトウエア管理スタックが最新の状態になっていることを確認します:</para>
<screen>&prompt.sudo;zypper patch</screen>
   </step>
   <step>
    <para>更新に利用したいリポジトリを設定します。このリポジトリの設定は、間違えることなく正しく設定することが重要です。なお、下記の手順で <replaceable>リポジトリ名</replaceable> として示している箇所は、ご利用の OS のカスタマイズ状況によって異なることに注意してください。詳しくは <xref linkend="sec-zypper-instrepo"/> をお読みください。</para>
    <para>現在設定されているリポジトリを一覧表示するには、下記のコマンドを実行します:</para>
<screen>&prompt.user;zypper --releasever=&productnumber-leaprepo; lr -u</screen>
   </step>
   <step>
    <para>上記のコマンドの出力結果のうち、右端の列 ( <guimenu>URL</guimenu> ) をお読みください。この中のバージョン番号に <literal>&productnumber-leaprepo;</literal> のようなバージョン番号が含まれているはずです。バージョン番号が含まれていない場合や、 <filename>/etc/zypp/repos.d/</filename> 内のファイルでバージョン番号が変数ではなく直接書かれてしまっているファイルの場合は、下記の手順を実施してください:</para>
    <substeps>
     <step>
      <para>まずは対象のリポジトリが今も必要かどうかを判断します。不要な場合は下記のコマンドで削除します:</para>
<screen>&prompt.sudo;zypper rr <replaceable>リポジトリ名</replaceable></screen>
      <para>ほかにも不要なリポジトリがあれば、それらも削除してください。</para>
     </step>
     <step>
      <para>サードパーティ製のリポジトリで、バージョン番号を含まないものの場合は、まずリポジトリが &productname; &productnumber; に対応しているかどうかを確認してください。この情報はリポジトリの提供元が公開しているはずです。対応している場合は何もする必要はありません。対応していない場合は、上述の手順でリポジトリを削除してください。</para>
     </step>
     <step>
      <para>次に URL 内にバージョン番号を含むものに対して、 URL を新しいバージョンに書き換えます。なお、次回以降のバージョンアップでいちいちこの作業を繰り返したりする必要が無いようにするため、 <varname>$releasever</varname> という変数を設定しておくことをお勧めします。たとえば <literal>15.3</literal> が書かれている場合は、下記のようなコマンドを実行します:</para>
<screen>&prompt.sudo;sed -i 's/15.3/$releasever/' /etc/zypp/repos.d/*.repo</screen>
      <para>ほかにもバージョン番号を含む箇所があれば、上記を繰り返してください。</para>
      <para>なお、新しく設定したリポジトリの URL が正しいかどうかを、 Web ブラウザを利用して確認しておいてください。また、まだ新しいバージョンに対応していないリポジトリであった場合は、今の時点ではいったん無効化しておき、対応するようになってから有効化することもできます。この場合は、下記のようにして無効化しておいてください。</para>
<screen>&prompt.sudo;zypper mr -d <replaceable>リポジトリ名</replaceable></screen>
      <para>上記のようにリポジトリを無効化した場合でも、依存関係に問題がなければ、インストール済みのパッケージは削除されず維持されます。</para>
     </step>
    </substeps>
   </step>
   <step>
    <para>完了したら、下記のコマンドを実行してリポジトリの一覧を再確認します:</para>
<screen>&prompt.sudo;zypper --releasever=&productnumber-leaprepo; lr -u</screen>
    <para>上記を実行すると、サードパーティ製のリポジトリでバージョン番号を含まないものと、無効化されているもの (<guimenu>Enabled</guimenu> が <literal>いいえ (n)</literal> になっているもの) を除いて、全てのリポジトリが <literal>&productnumber-leaprepo;</literal> を指し示すようになっているはずです。</para>
   </step>
   <step>
    <para>あとはリポジトリのメタデータを更新します:</para>
<screen>&prompt.sudo;zypper --releasever=&productnumber-leaprepo; ref</screen>
   </step>
   <step>
    <para>後は全てのパッケージを新しいバージョンに更新するため、ディストリビューションアップグレードを実施します:</para>
<screen>&prompt.sudo;zypper --releasever=&productnumber-leaprepo; dup</screen>
    <para>選択したソフトウエアによっては、 1 つまたは複数のライセンスに合意する必要がある場合があります。また、コマンドの出力結果はよくご確認ください。全てが問題ないことを確認したら、 <guimenu>y</guimenu> で処理を進めてください。</para>
   </step>
   <step>
    <para>最後にお使いのコンピュータを再起動して、新しいバージョンを起動しなおします:</para>
<screen>&prompt.sudo;shutdown -r now</screen>
   </step>
  </procedure>
  <para><command>zypper dup</command> でお使いのシステムをアップグレードするにあたっては、下記の点に注意してください:</para>
  <itemizedlist>
   <listitem>
     <para><command>zypper dup</command> を利用する際、ディスクの残り容量が少ない場合は、アップグレードが失敗することがあります。このような場合は <option>--pkg-cache-dir <replaceable>ディレクトリ</replaceable></option> オプションを指定して、別のディレクトリにパッケージキャッシュを作成すると回避できます。</para>
    </listitem>
    <listitem>
    <para>なお、依存関係を解決できないパッケージについては削除されます。また、無効化されているリポジトリからインストールしたパッケージについては、依存関係に問題が無い限りそのまま維持されます。このほか、リポジトリ内に存在しなくなったパッケージについては、孤立したパッケージであるものと見なされます。孤立したパッケージは、依存関係を満たすことができない場合は削除され、依存関係を満たすことができる場合はそのまま維持されます (インストールされたままになります) 。</para>
    </listitem>
   <listitem>
     <para><command>zypper dup</command> を実行すると、インストール済みの全てのパッケージを、利用可能なリポジトリ内にあるものと入れ替える処理を行います。このとき、バージョン番号やアーキテクチャに関する考慮は行われませんが、パッケージのベンダ (製造元) については、 <option>--no-allow-vendor-change</option> を指定することで、変更しないようにすることができます。ただし、サードパーティ製のリポジトリを有効化している場合は、アップグレードの際に問題が発生する場合があります。このような場合は、逆に <option>--allow-vendor-change</option> を指定してください。</para>
   </listitem>
  </itemizedlist>
 </sect3>
</sect2>
