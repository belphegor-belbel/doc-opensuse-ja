<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-nfs">
 <title>NFS によるファイル共有</title>
 <info>
  <abstract>
   <para><emphasis>Network File System</emphasis> ( <emphasis>NFS</emphasis> ) とは、サーバ内のファイルにアクセスするためのプロトコルで、これを利用することによってローカルのファイルと同じようなやり方でアクセスすることができるようになる仕組みです。</para>
   <para>&productname; では、スパースファイルやファイルの事前割り当て、サーバ側での複製やコピー、アロケーションデータブロック (ADB) や強制アクセス制御 (MAC) のためのラベル型 NFS (この機能を使用する場合、クライアントとサーバの両方で MAC が必要となります) 等に対応した NFS v4.2 をインストールします。</para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-nfs-overview">
  <title>概要</title>
  <para><emphasis>Network File System</emphasis> (NFS) はコンピュータ間でのファイル共有を行うためのネットワークプロトコルで、標準化されているだけでなく、十分に実証された幅広いサポートが特長のプロトコルです。</para>
  <para>ネットワーク内でのユーザ管理を共通化し、中央でとりまとめる目的で、 <emphasis>Network Information Service</emphasis> (NIS) を併用する場合があります。 NFS と NIS を併用することで、ネットワーク内でのファイルやディレクトリに対するアクセス制御を集中管理することができるようになります。また、ユーザにとっても NFS と NIS を利用することで、ネットワークの資源とローカルの資源を完全に透過的に扱うことができるようになります。</para>
  <para>既定の設定では、 NFS はネットワーク側を完全に信用する設計になっていることから、 NFS サーバを有効化するにあたっては、信頼のできるネットワークに接続するようにしてください。具体的には、 NFS サーバが接続するネットワーク内の全てのコンピュータで管理者権限が適切に管理され、かつ物理的なアクセスに対しても保護があることをお確かめください。</para>
  <para>また、 NFS サーバが接続するネットワークが完全にプライベートなものであり、単一のキャビネット内やマシンルーム内に存在していて、部外者による不正なアクセスができないよう、十分なセキュリティを確保してください。場合によっては、サブネット全体についても十分な制限が必要となるなど、きめ細かく信頼を構築する必要があることもあります。このような場合の要件に適合させるため、 NFS では <emphasis>&krb;</emphasis> インフラストラクチャなどにも対応しています。 &krb; を使用するには NFSv4 が必要となりますが、既定で有効化されています。詳しくは <xref linkend="cha-security-kerberos"/> をお読みください。</para>

  <para>&yast; モジュールでは、下記の用語を使用します。</para>

  <variablelist>
   <varlistentry>
    <term>エクスポート</term>
    <listitem>
     <para>NFS サーバが <emphasis>公開する</emphasis> ディレクトリを意味します。これにより、クライアントは自身のシステム内に、このディレクトリ以下の内容を取り込むことができるようになります。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFS クライアント</term>
    <listitem>
     <para>NFS クライアントは、 NFS (Network File System) プロトコルを介して、 NFS サーバが提供する NFS サービスに接続するシステムを指します。 Linux カーネルには TCP/IP プロトコルが統合されているため、クライアント側で追加のソフトウエアをインストールする必要はありません。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFS サーバ</term>
    <listitem>
     <para>NFS サーバは、クライアントに対して NFS サービスを提供するシステムを意味します。サーバ側では下記のデーモンを動作させてサービスを提供しています: <systemitem class="daemon">nfsd</systemitem> (ワーカー), <systemitem class="daemon">idmapd</systemitem> (NFSv4 向けの ID と名前のマッピングシステム、特定の用途でのみ必要となります), <systemitem class="daemon">statd</systemitem> (ファイルロック (施錠)), and <systemitem class="daemon">mountd</systemitem> (マウント要求)</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSv3</term>
    <listitem>
     <para>NFSv3 はバージョン 3 の実装を意味します。状態遷移機能のない、クライアント認証に対応した <quote>古い</quote> 実装です。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSv4</term>
    <listitem>
     <para>NFSv4 はバージョン 4 の新しい実装で、 &krb; を介して機密を保持することのできるユーザ認証機能に対応しています。また、 NFSv4 ではポートを 1 つだけしか使用しない設計になっているため、 NFSv3 よりもファイアウオール環境には適した仕組みになっています。</para>
     <para>プロトコルは、 <link xlink:href="http://tools.ietf.org/html/rfc3530"/> で規定されています。</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pNFS</term>
    <listitem>
     <para>Parallel NFS の略で、 NFSv4 のプロトコル拡張です。 pNFS に対応したクライアントであれば、 NFS サーバ内の任意のデータに直接アクセスすることができます。</para>
    </listitem>
   </varlistentry>
  </variablelist>
  <important os="sles;osuse">
   <title>DNS 側の要件</title>
   <para>原理上、全てのエクスポートは IP アドレスのみでアクセスすることができます。ただし、タイムアウトの問題を避けるために、 DNS システムをご用意ください。具体的には、 <systemitem class="daemon">mountd</systemitem> デーモンがログの記録時に逆引き参照を行いますので、そのために必要となります。</para>
  </important>
 </sect1>
<!-- == SLED ======================================================= -->
 <sect1 os="sled" xml:id="sec-nfs-installation-sled">
<!-- For the moment, use different IDs -->

  <title>NFS サーバのインストール</title>

  <para>NFS サーバのインストールと設定について、詳しくは &sls; のドキュメンテーションをお読みください。</para>
 </sect1>
<!-- == osuse and SLES ============================================ -->
 <sect1 os="sles;osuse" xml:id="sec-nfs-installation">
  <title>NFS サーバのインストール</title>

   <para>NFS サーバは、既定の設定ではインストールされません。 NFS サーバをインストールするには、 &yast; を起動して <menuchoice> <guimenu>ソフトウエア</guimenu> <guimenu>ソフトウエア管理</guimenu></menuchoice> を選択し、 <guimenu>パターン</guimenu> 内にある <guimenu>サーバ機能</guimenu> の <guimenu>ファイルサーバ</guimenu> を選択してください。あとは <guimenu>了解</guimenu> を押して必要なパッケージをインストールしてください。</para>
  <para>NIS と同様に、 NFS もクライアント／サーバ型のシステムになっています。ですが、 1 台のマシンでネットワークに対してファイルシステムを提供 (エクスポート) しながら、他のホストにあるファイルシステムをマウントする (インポート) することができます。</para>

  <note>
<!-- bnc#870129 -->
   <title>同一のコンピュータ内での NFS マウントについて</title>
   <para>&productname; では、 NFS で公開しているディレクトリを自分自身でマウントすることはできません。</para>
  </note>
 </sect1>
 <sect1 xml:id="sec-nfs-configuring-nfs-server" os="sles;osuse">
  <title>NFS サーバの設定</title>

  <para>NFS サーバの設定は、 &yast; もしくは手作業で実施することができます。認証については、 NFS と &krb; を組み合わせることができます。</para>

  <sect2 xml:id="sec-nfs-export-yast2">
   <title>&yast; を利用したファイルシステムの公開</title>
   <para>&yast; を利用することで、お使いのコンピュータを NFS サーバに仕立て上げることができます。 NFS サーバでは、許可するコンピュータや特定のグループ内の全メンバーに対して、ファイルやディレクトリをエクスポートすることができます。そのため、 NFS を利用することで、それぞれのホストにインストールすることなく、特定のアプリケーションを利用できるようにすることもできます。</para>
   <para>このようなサーバを構築するには、下記の手順で行います:</para>
   <procedure xml:id="pro-nfs-export-yast2-nfs">
    <title>NFS サーバの設定</title>
    <step>
     <para>&yast; を起動し、 <menuchoice> <guimenu>ネットワークサービス</guimenu> <guimenu>NFS サーバ</guimenu> </menuchoice> を選択します (<xref linkend="fig-inst-nfsserver1"/> をご覧ください) 。なお、必要に応じて、追加のソフトウエアをインストールするよう求められることがあります。</para>

     <figure xml:id="fig-inst-nfsserver1">
      <title>NFS サーバ設定ツール</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_inst_nfsserver1.png" width="75%" format="PNG" os="sles;sled"/>
        <imagedata fileref="yast2_inst_nfsserver1_kde.png" width="75%" format="PNG" os="osuse"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_inst_nfsserver1.png" width="75%" format="PNG" os="sles;sled"/>
        <imagedata fileref="yast2_inst_nfsserver1_kde.png" width="75%" format="PNG" os="osuse"/>
       </imageobject>
      </mediaobject>
     </figure>

    </step>
    <step>
     <para>まずは <guimenu>開始</guimenu> のラジオボタンを押します。</para>
    </step>
    <step>
     <para>お使いのシステムで &firewalld; が動作している場合は、 NFS 向けの設定を個別に実施する必要があります (詳しくは <xref linkend="sec-security-firewall-firewalld"/> をお読みください) 。現時点の &yast; では &firewalld; への対応が完全ではありませんので、 "ファイアウオールを設定できません" のメッセージを無視して続行してください。</para>
    </step>
    <step>
     <para>また、必要であれば <guimenu>NFSv4 を有効にする</guimenu> をチェックしてください。 NFSv4 を無効化した場合、 &yast; は NFSv3 のみに対応するようになります。なお、 NFSv2 の有効化については、 <xref linkend="sec-nfs-export-manual-nsfv2"/> をお読みください。</para>
     <substeps performance="required">
      <step>
       <para>NFSv4 を有効化した場合は、追加で NFSv4 ドメイン名を入力します。このパラメータは <systemitem class="daemon">idmapd</systemitem> デーモンが使用するパラメータで、 &krb; の設定時やクライアントが数字のユーザ名では処理できないような場合に利用します。 <systemitem class="daemon">idmapd</systemitem> を動作させない場合や、特に要件がない場合は、 <literal>localdomain</literal> (既定値) のままでかまいません。 <systemitem class="daemon">idmapd</systemitem> について、詳しくは <xref linkend="var-nfs-export-manual-idmapd"/> をお読みください。</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>サーバに対してのアクセスをさらに保護したい場合は、 <guimenu>GSS セキュリティを有効にする</guimenu> を選択します。この仕組みを使用するには、お使いのドメイン内に &krb; がインストールされ、サーバとクライアントの両方で &krb; が設定されている必要があります。 <remark>emap 2011-0824: A reference to a Kerberos chapter would be good.</remark> 設定が終わったら <guimenu>次へ</guimenu> を押すことで、次の設定ダイアログに進むことができます。</para>
    </step>
    <step>
     <para>お使いのディレクトリをエクスポートするには、ダイアログの上半分で <guimenu>ディレクトリの追加</guimenu> を押します。</para>
    </step>
    <step>
     <para>許可するホストの設定を行っていない場合は、クライアントの情報を入力するためのポップアップが自動的に表示されます。ホストをワイルドカードで設定することができます (通常は既定の設定のままでかまいません) 。</para>
<!--<para>The default settings allow every host in your network to
         connect. In case you want to restrict to a set of allowed
         hosts, enter the IP addresses or host names in the
         <guimenu>Host Wild Card</guimenu> textfield. See
         <citetitle>man exports</citetitle> for a detailed view of all
         possible variants.</para>-->
     <para>ホストのワイルドカードでは、下記の 4 種類の設定を行うことができます。 1 種類目は単一のホスト名を指すためのホスト名や IP アドレスの設定、 2 種類目はネットグループによる設定、 3 種類目はワイルドカード (たとえば <literal>*</literal> を指定すると、全てのマシンからアクセスできるようになります) 、そして 4 種類目は IP ネットワークです。</para>
     <para>これらのオプションについて、詳しくは <literal>exports</literal> のマニュアルページをお読みください。</para>
    </step>
    <step>
     <para>最後に <guimenu>完了</guimenu> を押すと、設定を完了することができます。</para>
    </step>
   </procedure>
  </sect2>

<!-- ============================================================== -->

  <sect2 xml:id="sec-nfs-export-manual" os="sles;osuse">
   <title>手作業によるファイルシステムの公開</title>
   <para>NFS のエクスポートサービスで使用される設定ファイルは、 <filename>/etc/exports</filename> と <filename>/etc/sysconfig/nfs</filename> の 2 種類です。これらのファイルに加えて、 Ketberos が有効化された NFSv4 サーバの設定や、クライアントが数字のユーザ名を扱うことができない場合は、 <filename>/etc/idmapd.conf</filename> も必要となります。</para>
   <para>サービスを開始もしくは再起動するには、 <command>systemctl restart nfsserver</command> を実行します。これにより、 NFS サーバが必要とする RPC portmapper も再起動することができます。</para>
   <para>NFS サーバをシステムの起動時に開始するようにするには。 <command>sudo systemctl enable nfsserver</command> を実行します。</para>
   <note>
    <title>NFSv4</title>
    <para>NFSv4 は &productname; で利用できる最新バージョンの NFS プロトコルです。現在の NFSv4 でディレクトリをエクスポートする際の設定は、 NFSv3 と同じです。</para>
    <para><phrase os="sles;sled">&sls; 11</phrase> <phrase os="osuse">Leap 以前の &opensuse; </phrase> では <filename>/etc/exports</filename> 内での bind マウントが必須でした。現在もなお、この構成に対応してはいますが、廃止予定になっています。</para>
   </note>
   <variablelist>
    <varlistentry>
     <term><filename>/etc/exports</filename></term>
     <listitem>
      <para><filename>/etc/exports</filename> ファイルには、エクスポートするディレクトリの設定一覧が含まれています。各行には共有するディレクトリのほか、共有方法の指定も含まれています。 <filename>/etc/exports</filename> では、下記のような書式で各行を設定します:</para>
<screen>/<replaceable>共有</replaceable>/<replaceable>ディレクトリ</replaceable>   <replaceable>ホスト</replaceable>(<replaceable>オプションリスト</replaceable>)</screen>
      <para>たとえば、下記のようになります:</para>
<screen>/export/data   192.168.1.2(rw,sync)</screen>
      <para>この例では、クライアントの識別に際して <literal>192.168.1.2</literal> という IP アドレスを指定しています。クライアントのホスト名を指定することもできますし、ホストの集合を指定するためにワイルドカードを指定することもできる (例: <literal>*.abc.com</literal> , <literal>*</literal> , etc.) ほか、ネットグループ ( <literal>@my-hosts</literal> ) を指定することもできます。</para>
      <para>全てのオプションとそれらの意味に関する説明について、詳しくは <filename>/etc/exports</filename> のマニュアルページ ( <command>man exports</command> ) をお読みください。</para>
      <para>なお、 NFS サーバが動作している間に <filename>/etc/exports</filename> ファイルを変更した場合は、 <command>sudo systemctl restart nfsserver</command> を実行して、変更内容を反映させるために再起動を行う必要があります。</para>
<!--
     <para>
      When clients mount from this server, they just mount
      <literal>servername:/</literal> rather than
      <literal>servername:/export</literal>. It is not necessary to mount
      <literal>servername:/data</literal>, because it will automatically
      appear beneath wherever <literal>servername:/</literal> was mounted.
     </para>
     -->
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/etc/sysconfig/nfs</filename></term>
     <listitem>
      <para><filename>/etc/sysconfig/nfs</filename> ファイルには、 NFSv4 サーバデーモンの動作に関わるいくつかのパラメータが含まれています。特に <systemitem>NFS4_SUPPORT</systemitem> を <literal>yes</literal> (既定値) に設定しておくことが重要です。 <systemitem>NFS4_SUPPORT</systemitem> は NFS サーバが NFSv4 のエクスポートとクライアントに対応するかどうかを決定するパラメータです。</para>
      <para>なお、 NFS サーバが動作している間に <filename>/etc/sysconfig/nfs</filename> ファイルを変更した場合は、 <command>sudo systemctl restart nfsserver</command> を実行して、変更内容を反映させるために再起動を行う必要があります。</para>
      <tip>
       <title>マウントオプション</title>
       <para><phrase os="sles;sled">&sls; 11</phrase> <phrase os="osuse">Leap 以前の &opensuse; </phrase> では、 <filename>/etc/exports</filename> 内で <option>--bind</option> マウントのオプションが必須でした。現在もなお、この構成に対応してはいますが、廃止予定になっています。また、現在の NFSv4 でディレクトリをエクスポートする際の設定は、 NFSv3 と同じです。</para>
      </tip>
      <note xml:id="sec-nfs-export-manual-nsfv2">
<!-- bsc#919708 -->
       <title>NFSv2</title>
       <para>NFS クライアント側で NFSv2 を必要としている場合は、サーバ側でも <filename>/etc/sysconfig/nfs</filename> に下記の設定を行う必要があります:</para>
<screen>NFSD_OPTIONS="-V2"
MOUNTD_OPTIONS="-V2"</screen>
       <para>サービスを再起動したら、下記のコマンドを実行すると、バージョン 2 に対応しているかどうかがわかります:</para>
<screen>&prompt.user;cat /proc/fs/nfsd/versions
+2 +3 +4 +4.1 +4.2</screen>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="var-nfs-export-manual-idmapd">
     <term><filename>/etc/idmapd.conf</filename></term>
     <listitem>
      <para><systemitem class="daemon">idmapd</systemitem> デーモンは、 &krb; 認証を使用している場合や、クライアント側で数字のユーザ名を扱うことができない場合にのみ必要となるデーモンです。 Linux カーネル 2.6.39 以降では、 Linux クライアントは数字のユーザ名にも対応しています。 <systemitem class="daemon">idmapd</systemitem> デーモンは、 NFSv4 のサーバ宛のリクエストやクライアント宛の応答に対して、名前と ID とのマッピングを行います。</para>
      <para>必要であれば、 <systemitem class="daemon">idmapd</systemitem> を NFSv4 サーバ内で動作させる必要があります。クライアント側での名前と ID のマッピングは、 <package>nfs-client</package> パッケージで提供されている <command>nfsidmap</command> が行います。</para>
      <para>なお、ユーザ名と ID (uid) が、 NFS でファイルを共有する可能性のある全てのマシン間で正しく統一されていることをご確認ください。これは NIS や LDAP など、任意のドメイン認証の仕組みで実施することができます。</para>
      <para>また、 <filename>/etc/idmapd.conf</filename> 内の <literal>Domain</literal> パラメータの値が、クライアントとサーバの両方で同じ値になっていることをご確認ください。よく分からない場合は、サーバとクライアントの両方で <literal>localdomain</literal> をドメインとしてお使いください。設定ファイルの例は下記のようになります:</para>
<screen>[General]
Verbosity = 0
Pipefs-Directory = /var/lib/nfs/rpc_pipefs
Domain = localdomain

[Mapping]
Nobody-User = nobody
Nobody-Group = nobody</screen>
      <para><systemitem class="daemon">idmapd</systemitem> デーモンを開始するには、 <command>systemctl start nfs-idmapd</command> を実行します。デーモンが動作している間に <filename>/etc/idmapd.conf</filename> ファイルを変更した場合は、 <command>systemctl start nfs-idmapd</command> を実行して設定を適用してください。</para>
      <para>詳しくは <literal>idmapd</literal> と <literal>idmapd.conf</literal> のマニュアルページをお読みください ( <literal>man idmapd</literal> および <literal>man idmapd.conf</literal> で読むことができます) 。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

<!-- ============================================================== -->

  <sect2 xml:id="sec-nfs-kerberos">
   <title>&krb; 併用 NFS</title>
   <para>NFS 向けに &krb; 認証を使用するには、 Generic Security Services (GSS) を有効化しなければなりません。 &yast; の NFS サーバダイアログの冒頭で、 <guimenu>GSS セキュリティを有効にする</guimenu> にチェックを入れてください。また、この機能を利用するには、動作する &krb; サーバを用意しなければなりません。 &yast; では &krb; サーバの構築を行うことはできませんが、この機能を利用するように設定することは可能です。なお、 &yast; の設定に加えて &krb; 認証を使用するにあたっては、 NFS の設定を完了する前に下記の手順を完了する必要があります:</para>
   <procedure>
    <step>
     <para>サーバとクライアントの両方が、同じ &krb; ドメインに属するようにしてください。同じ KDC (鍵配布センター) サーバにアクセスしなければならないほか、 <filename>krb5.keytab</filename> ファイルを共有しなければなりません (既定では <filename>/etc/krb5.keytab</filename> 内に配置されます) 。 &krb; について、詳しくは <xref linkend="cha-security-kerberos"/> をお読みください。</para>
    </step>
    <step>
     <para>クライアント側で <command>systemctl start rpc-gssd.service</command> を実行して、 gssd サービスを開始します。</para>
    </step>
    <step os="sles;osuse">
     <para>サーバ側で <command>systemctl start rpc-svcgssd.service</command> を実行して、 svcgssd サービスを開始します。</para>
    </step>
   </procedure>
   <para>&krb; 認証を使用するには、サーバ側で <systemitem class="daemon">idmapd</systemitem> デーモンを動作させる必要もあります。詳しくは <xref linkend="var-nfs-export-manual-idmapd"/> をお読みください。</para>
   <para>&krb; が有効化された NFS について、さらに詳しくは <xref linkend="sec-nfs-info" xrefstyle="SectTitleOnPage"/> にあるリンク先をお読みください。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-nfs-configuring-nfs-clients">
  <title>クライアントの設定</title>

  <para>お使いのホストを NFS クライアントとして設定する場合は、追加のソフトウエアをインストールする必要はありません。必要な全てのパッケージが既定でインストールされるためです。</para>

  <sect2 xml:id="sec-nfs-import-yast2">
   <title>&yast; を利用したファイルシステムの取り込み</title>
   <para>認可済みのユーザであれば、 &yast; の NFS クライアントモジュールを利用することで、 NFS サーバ内でエクスポートされたディレクトリをマウントし、ローカルのファイルツリーに組み込むことができます。具体的には、下記の手順で実施します:</para>
   <procedure xml:id="pro-nfs-import-yast2">
    <title>NFS ディレクトリのインポート</title>
    <step>
     <para>まずは &yast; の NFS クライアントモジュールを起動します。</para>
    </step>
<!-- Start: <guimenu>NFS Shares</guimenu> -->
    <step>
     <para><guimenu>NFS 共有</guimenu> タブ内にある <guimenu>追加</guimenu> を押します。 NFS サーバのホスト名と取り込むディレクトリ、そしてローカル側のマウント先ディレクトリをそれぞれ指定します。</para>
    </step>
<!-- End: NFS Shares -->
<!-- Start: <guimenu>NFS Settings</guimenu> -->
    <step>
     <para>NFSv4 を使用している場合は、 <guimenu>NFS 設定</guimenu> タブ内にある <guimenu>NFSv4 を有効にする</guimenu> を選択します。これに加えて、 <guimenu>NFSv4 ドメイン名</guimenu> に、 NFSv4 サーバと同じ値を設定しなければなりません。既定のドメイン名は <literal>localdomain</literal> です。</para>
    </step>
    <step>
     <para>NFS 向けに &krb; 認証を使用するには、 GSS セキュリティを有効化しなければなりません。この場合は、 <guimenu>GSS セキュリティを有効にする</guimenu> を選択します。</para>
    </step>
    <step>
     <para>ファイアウオールをお使いの場合は、 <guimenu>NFS 設定</guimenu> タブ内にある <guimenu>ファイアウオールでポートを開く</guimenu> を選択して、リモートのコンピュータからのサービスへのアクセスを許可します。チェックボックスの下には、ファイアウオールの状態が表示されます。</para>
    </step>
<!-- End: NFS Settings -->
    <step>
     <para>最後に <guimenu>OK</guimenu> を押すと、設定を保存することができます。</para>
    </step>
   </procedure>
   <para>設定した内容は <filename>/etc/fstab</filename> 内に書き込まれ、マウント処理が行われます。後から &yast; の設定を起動した場合は、このファイル内にある既存の設定が読み込まれます。</para>
   <tip>
    <title>ルートファイルシステムとしての NFS について</title>
    <para>ディスクレス (自分自身にはディスクが接続されていない) システムでは一般に、 NFS の共有をネットワーク経由でマウントしてルートファイルシステムにすることがありますが、この場合は NFS 共有にアクセスするネットワークデバイスの設定に注意する必要があります。</para>
    <para>システムをシャットダウンしたり再起動したりする場合、既定の処理順序では、ネットワークの接続を切ってからルートパーティションのマウントを解除します。ルートファイルシステムに NFS を使用している場合は、ルートファイルシステムのマウントを解除しようとしても、その時点では既にネットワークが切断されているため、正しく終了することができなくなってしまいます。この問題を解決するには、 <xref linkend="sec-network-yast-change-start"/> で説明している手順でネットワークデバイスの設定タブを開いて、  <guimenu>デバイスの有効化</guimenu> の値を <guimenu>NFSroot</guimenu> に設定してください。</para>
   </tip>
<!--
   <figure id="fig-yast2-nfs-client">
    <title>NFS client configuration with YaST</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_nfsclient.png" width="75%"
              format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_nfsclient.png" width="75%"
              format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
-->
  </sect2>

  <sect2 xml:id="sec-nfs-import">
   <title>手作業によるファイルシステムの取り込み</title>

<!-- mention nfs.service according to bnc#884690 -->
   <para>NFS サーバを動作させる場合、ファイルシステムを手動で取り込む際にあらかじめ設定しておくべきことは、 RPC portmapper の有効化です。 <option>nfs</option> サービスを開始すれば、 RPC portmapper についても適切に起動が行われますので、 <systemitem class="username">root</systemitem> で <command>systemctl start nfs</command> を実行してください。あとは <command>mount</command> コマンドを利用して、ローカルのファイルシステムをマウントする場合と同様の手順を実施するだけです:</para>
<screen>&prompt.sudo;mount <replaceable>ホスト名</replaceable>:<replaceable>リモートのパス</replaceable> <replaceable>ローカルのパス</replaceable></screen>
   <para>たとえば <systemitem>&nfsname;</systemitem> というマシンのホームディレクトリをマウントしたい場合は、下記のように実行します:</para>
<screen>&prompt.sudo;mount &nfsname;:/home /home</screen>
   <para>NFS クライアントがサーバに対して確立する TCP 接続数を設定するには、 <command>mount</command> コマンドの <literal>nconnect</literal> オプションを使用します。設定値は 1 から 16 までの範囲で、オプションを指定しない場合の既定値は 1 です。</para>
   <para>なお、 <literal>nconnect</literal> の設定は、特定の NFS サーバに対する初めてのマウント処理にのみ適用されます。また、同じクライアント内で同一の NFS サーバに複数のマウントを行うと、既存の接続は共有され、新しい接続は行われません。そのため、 <literal>nconnect</literal> の設定を変更したい場合は、あらかじめ特定の NFS サーバに対するマウントを <emphasis role="bold">すべて</emphasis> 解除しておく必要があります。これで <literal>nconnect</literal> の新しい設定値を適用できるようになります。</para>
   <para>現在使用中の <literal>nconnect</literal> の設定値を確認したい場合は、 <command>mount</command> コマンドの出力を参照するか、もしくは <filename>/proc/mounts</filename> ファイルをお読みください。マウントオプションに何も値が書かれていない場合は、マウント時にオプションを指定しておらず、既定値である <emphasis>1</emphasis> が使用されていることになります。</para>
   <note>
    <title><literal>nconnect</literal> で指定されているものとは異なる可能性がある件について</title>
    <para>初回のマウント後にも接続を開いたり閉じたりすることができるため、実際の接続数は <literal>nconnect</literal> の設定値とは異なる場合があります。</para>
   </note>
   
   <sect3 xml:id="sec-nfs-automount">
    <title>automount サービスの使用</title>
    <para>aufofs デーモンは、リモートのファイルシステムを自動的にマウントする際に使用するデーモンです。下記の内容を <filename>/etc/auto.master</filename> ファイル内に追加してください:</para>
<screen>/nfsmounts /etc/auto.nfs</screen>
    <para>上記のように設定すると、 <filename>/nfsmounts</filename> ディレクトリが NFS マウントのルートディレクトリとして設定され、 <filename>auto.nfs</filename> の内容に応じて自動的にマウントされるようになります。 <filename>auto.nfs</filename> はそのファイル名でなければならないわけではありません。要件に応じて自由に変更してかまいません。また、 <filename>auto.nfs</filename> には、下記のようにして全ての NFS マウントの項目を記述することができます:</para>
<screen>localdata -fstype=nfs server1:/data
nfs4mount -fstype=nfs4 server2:/</screen>
    <para>&rootuser; で <command>systemctl start autofs</command> と実行すると、設定を反映させることができます。この例では、 <filename>/nfsmounts/localdata</filename> ディレクトリが <systemitem>server1</systemitem> の <filename>/data</filename> ディレクトリを、 <filename>/nfsmounts/nfs4mount</filename> が <systemitem>server2</systemitem> のルートディレクトリをそれぞれマウントするように設定しています。</para>
    <para>autofs の動作中に <filename>/etc/auto.master</filename> を変更した場合は、変更内容を反映させるために automounter の再起動を行わなければなりません。 <command>systemctl restart autofs</command> を実行して再起動してください。</para>
   </sect3>
   <sect3 xml:id="sec-nfs-fstab">
    <title><filename>/etc/fstab</filename> の手作業による編集</title>
    <para>NFSv3 の場合、 <filename>/etc/fstab</filename> ファイル内では下記のように設定します:</para>
<screen>&nfsname;:/data /local/path nfs rw,noauto 0 0</screen>
    <para>NFSv4 でマウントする場合は、 3 列目の <literal>nfs</literal> を <literal>nfs4</literal> として設定します:</para>
<screen>&nfsname;:/data /local/pathv4 nfs4 rw,noauto 0 0</screen>
    <para><literal>noauto</literal> オプションを指定することで、システムの起動時には自動的にマウントされないようにしています。このように設定している状況で、手作業でファイルシステムをマウントするには、下記のようにマウントポイントを指定するだけでかまいません:</para>
<screen>&prompt.sudo;mount /local/path</screen>
    <note>
     <title>起動時点でのマウントについて</title>
     <para><literal>noauto</literal> オプションを指定しない場合、システムの起動時に動作する初期化スクリプトが、自動的にマウント処理を行います。</para>
    </note>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-nfs-pnfs">
   <title>Parallel NFS (pNFS)</title>
   <para>NFS は 1980 年代に開発された、最も古いプロトコルのうちの 1 つです。そのため、 NFS は小さなファイルを共有するには十分なプロトコルですが、巨大なファイルや多数のクライアントを扱うような環境では、 NFS がボトルネックとなって、システムの性能に顕著な悪影響を及ぼしてしまいます。これは昔に比べてファイルが容易に巨大化しやすい環境になったためで、イーサネットの速度がそれに追随できていないことによるものです。</para>
   <para>通常の NFS サーバに対してクライアントがファイルを要求すると、サーバはファイルのメタデータを読み込んだあと、全てのデータを収集してネットワーク経由でファイルを転送します。しかしながら、小さなファイルであっても大きなファイルであっても、性能のボトルネックが発生します:</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>小さなファイルの場合、かかる時間の多くはメタデータの収集に費やされています。</para>
    </listitem>
    <listitem>
     <para>大きなファイルの場合、かかる時間の多くはサーバからクライアントへのファイル転送に費やされています。</para>
    </listitem>
   </itemizedlist>
   <para>pNFS (parallel NFS) では、このような制限を、ファイルシステムのメタデータとデータの位置をそれぞれ分離することで克服しています:</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>非データトラフィックを処理する <emphasis>メタデータ</emphasis> もしくは <emphasis>コントロールサーバ</emphasis></para>
    </listitem>
    <listitem>
     <para>データを保持する 1 つもしくは複数の <emphasis>ストレージサーバ</emphasis></para>
    </listitem>
   </itemizedlist>
   <para>メタデータとストレージサーバは単一の論理 NFS サーバを構成します。クライアントがファイルに対して読み込みまたは書き込みの要求を行うと、メタデータサーバが NFSv4 クライアントに対して、ファイルチャンクにアクセスする際に使用するストレージサーバを指定します。クライアントはサーバ内のデータに直接アクセスすることができます。</para>
   <para>&productname; では、 pNFS のクライアント側のみに対応しています。</para>
   <sect3 xml:id="sec-nfs-pnfs-yast">
    <title>&yast; による pNFS クライアントの設定</title>
    <para>基本的には <xref linkend="pro-nfs-import-yast2"/> に示されている手順に従って作業を行いますが、 <guimenu>pNFS (v4.2)</guimenu> のチェックボックスにチェックを入れることと、必要であれば <guimenu>NFSv4 共有</guimenu> を選択する点が異なります。 &yast; でこれを行った場合、必要な手順全てを実施し、必要なオプション類を <filename>/etc/exports</filename> に書き込みます。</para>
   </sect3>
   <sect3 xml:id="sec-nfs-pnfs-manual">
    <title>手作業による pNFS クライアントの設定</title>
    <para>起動については <xref linkend="sec-nfs-import"/> をお読みください。ほとんどの設定は NFSv4 サーバ側で行います。 pNFS の場合、 <command>mount</command> に指定する <option>minorversion</option> オプションと、メタデータサーバを指定する <replaceable>MDS_サーバ</replaceable> が異なります。</para>
<screen>&prompt.sudo;mount -t nfs4 -o minorversion=1 <replaceable>MDS_サーバ</replaceable> <replaceable>マウントポイント</replaceable></screen>
    <para>デバッグ機能を有効にするには、下記の <filename>/proc</filename> ファイルシステム内の値を変更してください:</para>
<screen>&prompt.sudo;echo 32767 &gt; /proc/sys/sunrpc/nfsd_debug
&prompt.sudo;echo 32767 &gt; /proc/sys/sunrpc/nfs_debug</screen>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="nfs4-acls" os="sles;osuse">
  <title>NFSv4 を介したアクセス制御リスト (ACL) の管理</title>
  <para>Linux では、ユーザやグループ、その他 ( <literal>ugo</literal> ) に対して、それぞれ読み込みと書き込み、実行 ( <literal>rwx</literal> ) のフラグを設定するパーミッション機能が標準化されているものの、それより細かい制御を行うアクセス制御リスト (ACL) にについては、統一された標準が存在していないのが現状です。その標準の候補として存在するのが <citetitle>ドラフト POSIX ACL</citetitle> と NFSv4 ACL です。 NFSv4 ACL は NFSv4 ネットワークファイルシステムの一部として存在するもので、 Linux (POSIX) システムと Microsoft Windows (WIN32) システムとの妥当な互換性を提供しようとするものです。</para>
  <para>NFSv4 ACL はドラフト POSIX ACL を正確に実装するには不十分な存在であるため、 NFSv4 クライアントからのアクセスで ACL にマップするような機能は提供されていません (たとえば <command>setfacl</command> など) 。</para>
  <para>NFSv4 を使用する場合、ドラフト POSIX ACL は擬似的にであっても使用することはできず、 NFSv4 ACL を直接使用する必要があります。つまり、 <command>setfacl</command> は NFSv3 に対しては動作するものの、 NFSv4 に対しては動作しないことになります。 NFSv4 ファイルシステムで NFSv4 ACL を使用するには、 SUSE Linux Enterprise Server では <filename>nfs4-acl-tools</filename> というパッケージを提供しています。このパッケージには、下記のようなものが含まれています:</para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para><command>nfs4-getfacl</command></para>
   </listitem>
   <listitem>
    <para><command>nfs4-setfacl</command></para>
   </listitem>
   <listitem>
    <para><command>nfs4-editacl</command></para>
   </listitem>
  </itemizedlist>
  <para>これらのコマンドは <command>getfacl</command> や <command>setfacl</command> に似た動作をするもので、いずれも NFSv4 ACL を調査したり修正したりする際に使用することができます。なお、これらのコマンドは NFSv4 ACL を完全サポートした NFS サーバのファイルシステムに対してのみ動作します。サーバ側で何らかの制限がある場合、これらのプログラムでアクセス制御項目 (ACE) を操作できない場合があります。</para>
  <para>また、 NFS の共有を公開しているサーバで直接 NFS ボリュームをマウントすることもできません。</para>
  <bridgehead>追加の情報</bridgehead>
  <para>詳しくは <link xlink:href="http://wiki.linux-nfs.org/wiki/index.php/ACLs#Introduction_to_NFSv4_ACLs"/> (英語) にある <citetitle>Introduction to NFSv4 ACLs</citetitle> (NFSv4 ACL の紹介) をお読みください。</para>
 </sect1>
 <sect1 xml:id="sec-nfs-info">
  <title>さらなる情報</title>
  <para><command>exports</command> , <command>nfs</command> , <command>mount</command> の各マニュアルページに加え、 NFS サーバと NFS クライアントを設定するための情報が <filename>/usr/share/doc/packages/nfsidmap/README</filename> に用意されています。また、下記の Web サイトには、さらなるオンライン文書が用意されています:</para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>ネットワークセキュリティに関する一般的な情報については、 <xref linkend="cha-security-firewall"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>NFS 共有を自動的にマウントする必要がある場合は、 <xref linkend="sec-autofs-nfs"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>&ay; を利用して NFS を設定する方法については、 <xref linkend="ay-nfs"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>&krb; で NFS 共有の機密性を向上したい場合は、 <xref linkend="sec-security-kerberos-nfs"/> をお読みください。</para>
   </listitem>
   <listitem>
    <para>詳細な技術文書をお読みになりたい場合は、 <link xlink:href="http://nfs.sourceforge.net/">SourceForge</link> (英語) をお読みください。</para>
   </listitem>
  </itemizedlist>
 </sect1>
 
 <sect1 xml:id="sec-nfs-troubleshooting">
  <title>NFS のトラブルシューティングにおける情報収集</title>
   <sect2 xml:id="sec-nfs-common-troubleshooting">
    <title>一般的なトラブルシューティング</title>
     <para>NFS で発生する問題は、表示されるエラーメッセージのほか、 <filename>/var/log/messages</filename> に記録されるログメッセージを読むことで原因を探り当てることができる場合があります。ですが、表示されるメッセージや <filename>/var/log/messages</filename> 内のログメッセージだけでは不十分で、原因を探り当てられないことも多くあります。このような場合、問題を再現させてネットワークのパケットを採取することで、原因に辿り着きやすくすることができます。</para>
 
     <para>まずは問題点を明確にしてください。様々な方法でシステムのテストを実施して問題を再現させ、どこで問題が発生しているのかを明確にしましょう。あとは問題を切り分けていって、最も簡単な再現手順を作り上げてから、下記に示す再現手順を実施してください。</para>
 
     <procedure>
      <title>問題の再現</title>
       <step>
        <para>まずはネットワークパケットの採取を行います。 Linux では <command>tcpdump</command> コマンド (パッケージ名 <literal>tcpdump</literal>) を使用することができます。</para>
        <para><command>tcpdump</command> コマンドは、たとえば下記のように入力して実行します:</para>
<screen>tcpdump -s0 -i <replaceable>eth0</replaceable> -w <replaceable>/tmp/nfs-demo.cap</replaceable> host <replaceable>x.x.x.x</replaceable></screen>
        <para>それぞれのオプションの意味は下記のとおりです:</para>
        <variablelist>
         <varlistentry>
          <term>s0</term>
          <listitem>
           <para>ネットワークパケットの採取時、長いパケットを省略せずに採取するようにしています。</para> 
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>eth0</term>
          <listitem>
           <para>こちらは実際のローカルインターフェイス名に置き換えてください。ここに <literal>any</literal> を指定すると、全てのインターフェイスで送受信されるパケットを採取できますが、不要なデータが多数含まれることになり、分析の際の邪魔になってしまうため、あまりお勧めしません。</para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>w</term>
         <listitem>
          <para>採取したパケットの保存先ファイル名を指定します。</para>
         </listitem>
         </varlistentry>
         <varlistentry>
          <term>x.x.x.x</term>
          <listitem>
           <para>NFS 接続の対向側 IP アドレスを指定します。たとえば NFS のクライアント側で <command>tcpdump</command> を実行してパケットを採取する場合、ここに指定するのは NFS サーバとなります。</para>
          </listitem>
         </varlistentry>
        </variablelist>
       <note>
        <para>場合によっては、 NFS クライアントもしくは NFS サーバのいずれかでパケットを採取すれば原因が判明することもありますが、ネットワークの通信状況が原因のうちの 1 つと疑われる場合は、クライアントとサーバの両方で採取することをお勧めします。</para>
       </note>
       <para>起動した <command>tcpdump</command> コマンドは動作させたままの状態で、次の手順に進んでください。</para>
      </step>
      <step>
       <para>(必要であれば) 直面している問題が <command>nfs mount</command> の実行時に発生しているものである場合は、 <command>nfs mount</command> コマンドに対して冗長出力を指定するオプション ( <literal>-vvv</literal> ) を追加して試してみてもかまいません。</para>
  </step>
  <step>
   <para>(必要であれば) 問題の再現時に <command>strace</command> を取得する方法もあります。再現時に <command>strace</command> を実行すると、どこでどのシステムコールを使用したのかを正確に記録することができます。この情報は <literal>tcpdump</literal> 内のイベント情報とともに使用します。</para>
   <para>たとえば NFS マウント内で <emphasis>mycommand --param</emphasis> を実行すると問題が発生する場合、 <command>strace</command> は下記のように入力して実行します:</para>
<screen>strace -ttf -s128 -o/tmp/nfs-strace.out mycommand --param</screen>
   <para>再現時に <command>strace</command> を採取しない場合は、問題を再現させた時刻を覚えておいて、 <filename>/var/log/messages</filename> 内のログのうち、その時刻の前後に存在するログを確認してもかまいません。</para>
  </step>
  <step>
   <para>問題を再現させることができたら、 <command>tcpdump</command> を動作させている端末内で <keycombo><keycap>CTRL</keycap><keycap>c</keycap></keycombo> を押して、 <command>tcpdump</command> を停止してください。なお、 <command>strace</command> は通常、コマンドの終了後に自動的に終了しますが、停止しない場合は同様の手順で停止してください。</para>
  </step>
  <step>
   <para>採取したパケットや <command>strace</command> のデータは、知識と経験のある管理者であれば分析することができます。上記の手順を実施した場合、それぞれ <filename>/tmp/nfs-demo.cap</filename> と <filename>/tmp/nfs-strace.out</filename> というファイルに保存されています。</para>
  </step>  
  </procedure>
 </sect2>
 
 <sect2 xml:id="sec-advance-debugging">
  <title>高度な NFS デバッグ</title>
   <important>
    <title>高度なデバッグは熟練者向けの仕組みである件について</title>
    <para>本章で説明している内容は、 NFS のコードへの理解がある高度な NFS 管理者向けの説明です。そのため、まずは <xref linkend="sec-nfs-common-troubleshooting"/> で示している説明に従って、問題点を絞り込むところから始めるようにしてください。その後、必要であれば、より詳しく状況を調べるために本章に示すデバッグ手順を実施してください。</para>
   </important>
   <para>NFS 関連の情報を収集するにあたっては、様々な分野のデバッグ用コードが存在しています。しかしながら、デバッグメッセージは非常に分かりにくいものであるほか、出力量も非常に大きいため、性能への影響もあり得ます。場合によっては、デバッグ機能によって問題の再現を妨害してしまうこともあります。ほとんどの場合においてデバッグ機能は不要であり、 NFS のコードを熟知した人間にのみ有用であることに注意してください。</para>
 
   <sect3 xml:id="sec-rpcdebug">
    <title><command>rpcdebug</command> によるデバッグの有効化</title>
    <para><command>rpcdebug</command> は NFS クライアントと NFS サーバの両方でそれぞれデバッグフラグを設定することができます。ご利用の &slea; で <command>rpcdebug</command> が利用できない場合は、 NFS クライアントであれば <literal>nfs-client</literal> パッケージを、 NFS サーバであれば <literal>nfs-kernel-server</literal> パッケージをそれぞれインストールしてください。</para>
    <para>デバッグフラグを設定するには、下記のように入力して実行します:</para>
<screen>rpcdebug -m <replaceable>モジュール名</replaceable> -s flags</screen>
    <para>デバッグフラグの設定を解除するには、下記のように入力して実行します:</para>
<screen>rpcdebug -m <replaceable>モジュール名</replaceable> -c flags</screen>
    <para>ここで、 <replaceable>モジュール名</replaceable> には下記のいずれかを指定します:</para>
    <variablelist>
     <varlistentry>
      <term>nfsd</term>
      <listitem>
      <para>NFS サーバコードのデバッグ向け</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>nfs</term>
      <listitem>
      <para>NFS クライアントコードのデバッグ向け</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>nlm</term>
      <listitem>
       <para>NFS ロック (施錠) マネージャのデバッグ向け。 NFS クライアントと NFS サーバのいずれかで指定します。また、 NFS v2/v3 でのみ使用されます。</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>rpc</term>
      <listitem>
      <para>Remote Procedure Call (リモートプロシージャコール) のデバッグ向け。 NFS クライアントと NFS サーバのいずれかで指定します。</para>
     </listitem>
    </varlistentry> 
   </variablelist>
   <para><command>rpcdebug</command> コマンドの詳しい使い方については、下記のマニュアルページをお読みください:</para>
<screen>man 8 rpcdebug</screen>
  </sect3>
 
 <sect3 xml:id="sec-other-nfs-debug">
  <title>NFS が依存する各種サービスに対するデバッグの有効化</title>
  <para>NFS の動作は他の関連サービスに依存して変化します。これにはたとえば NFS マウントデーモン (<command>rpc.mountd</command>) などがあります。関連サービスに対して設定するオプションは、 <filename>/etc/sysconfig/nfs</filename> で指定します。</para>
  <para>たとえば <filename>/etc/sysconfig/nfs</filename> には下記のようなパラメータがあります:</para>
<screen>MOUNTD_OPTIONS=""</screen>
  <para>デバッグモードを有効化するには、 <literal>-d</literal> オプションに続いて下記のいずれかの値を指定します: <literal>all</literal> , <literal>auth</literal> , <literal>call</literal> , <literal>general</literal> , <literal>parse</literal></para>
  <para>たとえば <command>rpc.mountd</command> の全てのデバッグ機能を有効化するには、下記のように指定します:</para>
<screen>MOUNTD_OPTIONS="-d all"</screen>
  <para>指定可能なオプションについて知りたい場合は、下記のマニュアルページをお読みください:</para>
<screen>man 8 rpc.mountd</screen>
  <para>また、 <filename>/etc/sysconfig/nfs</filename> を変更した場合は、サービスを再起動する必要があります:</para>
<screen>systemctl restart nfsserver  # NFS サーバ関連の変更の場合
systemctl restart nfs  # NFS クライアント関連の変更の場合</screen>
   </sect3>
  </sect2>
 </sect1>
</chapter>
