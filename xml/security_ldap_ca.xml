<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-security-ldap-server-ca">
 <title>TLS 向けの CA (証明機関) 証明書の使用</title>
 <para>&ds389; 向けの CA 証明書の管理にあたっては、下記に示すコマンドラインツールを使用することができます: <command>certutil</command> , <command>openssl</command> , <command>pk12util</command></para>
 <para>テスト用に証明書を作成したい場合は、 <command>dscreate</command> コマンドで自己署名証明書を作成することができます。証明書は <filename>/etc/dirsrv/slapd-localhost/ca.crt</filename> にあるものとして扱われます。リモートから管理を行う場合は、証明書を読み取り可能な場所にコピーしておいてください。本番環境の場合は、ご利用の証明機関にお問い合わせのうえ、サーバ証明書とクライアント証明書、そしてルート証明書をそれぞれ取得してください。</para>
 <para>下記の手順を実行する前に、まずは以下の要件を全て満たしていることをご確認ください:</para>
 <itemizedlist>
  <listitem>
   <para>TLS 接続時に使用するサーバ証明書と、それに対応する機密鍵を保持していること。</para>
  </listitem>
  <listitem>
   <para>NSS (Network Security Services) データベースを設定してあること (例: <command>certutil</command> コマンド) 。</para>
  </listitem>
 </itemizedlist>

 <procedure>
  <para>NSS (Network Security Services) データベース内に機密鍵と証明書を取り込む場合には、あらかじめ機密鍵とサーバ証明書をひとまとめにしておく必要があります。ひとまとめにしたファイルは <filename>*.p12</filename> (PKCS12 形式) というファイル名になります。</para>
  <important>
  <title><filename>*.p12</filename> ファイルとフレンドリ名について</title>
  <para>PKCS12 形式のバンドルファイル (<filename>*.p12</filename>) を作成する場合、鍵と証明書の対に対してフレンドリ名を設定しなければなりません。</para>
  <para>本手順で TLS 接続を有効化する場合は、フレンドリ名を <literal>Server-Cert</literal> に設定してください。それ以外の名前を使用してしまうと、 &ds389; が証明書を検出することができず、 TLS 接続ができなくなってしまいます。</para>
  <para>また、 NSS データベースに <filename>*.p12</filename> ファイルを取り込んでしまうと、フレンドリ名は変更できなくなりますのでご注意ください。</para>
 </important>
 <step>
  <para>PKCS12 バンドルファイルを指定のフレンドリ名で作成するには、下記のように入力して実行します:</para>
 <screen>&prompt.root;openssl pkcs12 -export -in <replaceable>SERVER.crt</replaceable> \
  -inkey <replaceable>SERVER.key</replaceable> -out <replaceable>SERVER.p12</replaceable> \
  -name Server-Cert</screen>
  <para>ここで、 <replaceable>SERVER.crt</replaceable> にはサーバの証明書として使用するファイルを、 <replaceable>SERVER.key</replaceable> には対応する機密鍵のファイルをそれぞれ指定します。なお、 <option>-out</option> では <filename>*.p12</filename> ファイルのファイル名を指定します。 <option>-name</option> はフレンドリ名を指定する箇所で、ここは必ず <literal>Server-Cert</literal> のままにしておいてください。</para>
 </step>
 <step>
   <para>ファイルを NSS データベースに取り込むにあたっては、ファイルのパスワードを指定する必要があります。パスワードを指定するには、下記のようなコマンドを入力して実行します:</para>
<screen>pk12util -i <replaceable>SERVER.p12_ファイルのパス</replaceable> -d sql:<replaceable>NSS_データベースのパス</replaceable> -n Server-cert -W <replaceable>SERVER.p12_ファイルのパスワード</replaceable></screen>
   <para>パスワードを設定すると、 <replaceable>NSS_データベースのパス</replaceable> で指定したディレクトリ内に <filename>pwdfile.txt</filename> ファイルが作成されます。</para>
 </step>
 <step>
  <para>あとは <replaceable>SERVER.p12</replaceable> ファイルを NSS データベース内に取り込みます:</para>
  <screen>pk12util -i <replaceable>SERVER.p12</replaceable> -d <replaceable>NSS_データベースのパス</replaceable></screen>
 </step>
 </procedure>
 </sect1>
