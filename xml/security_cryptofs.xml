<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-security-cryptofs">
 <title>パーティションやファイルの暗号化</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
        </dm:bugtracker>
	<dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
 <para>ファイルやパーティション、ディスク全体の暗号化を行うことで、お使いのデータに対する不正なアクセスを保護し、ファイルや文書に対する機密を保護することができます。</para>
 <para>暗号化を行うにあたっては、下記のいずれかの方法をとることができます:</para>
 <variablelist>
  <varlistentry>
   <term>ハードディスク内のパーティションの暗号化</term>
   <listitem>
    <para>&yast; を利用することで、インストール中でもインストール後でも暗号化されたパーティションを作成することができます。詳しくは <xref linkend="sec-security-cryptofs-y2-part-inst"/> および <xref linkend="sec-security-cryptofs-y2-part-run"/> をお読みください。この方式は外付けのハードディスクなど、リムーバブルメディアに対しても適用することができます。こちらに関する詳細は <xref linkend="sec-security-cryptofs-y2-removables"/> をお読みください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>GPG を利用したファイル単独での暗号化</term>
   <listitem>
    <para>1 つまたは複数のファイルを単純に暗号化したいだけであれば、 GPG ツールをお使いになるとよいでしょう。詳しくは <xref linkend="sec-security-cryptofs-gpg"/> をお読みください。</para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Rage を利用したファイル単独での暗号化</term>
   <listitem>
    <para>1 つまたは複数のファイルを単純に暗号化したいだけであれば、 Rage 暗号化ツールをお使いいただくこともできます。詳しくは <xref linkend="sec-security-cryptofs-rage"/> をお読みください。</para>
   </listitem>
  </varlistentry>
 </variablelist>
 <warning>
  <title>暗号化による保護範囲について</title>
  <para>本章で説明している暗号化は、動作中のシステムでの保護を行う仕組みではありません。たとえ暗号化されているボリュームであっても、マウントが成功してしまえば、アクセス許可での制限がない限り、アクセスができてしまいます。本章での暗号化は、コンピュータをどこかに置き忘れてしまった場合や、盗難にあった場合に役に立つ仕組みであり、このような場合に機密データが読み取られることのないように保護を実現するものです。</para>
 </warning>
 <sect1 xml:id="sec-security-cryptofs-y2">
  <title>&yast; を利用した暗号化ファイルシステムの設定</title>

  <para>&yast; を使用することで、インストール中であってもインストールが終わった後からであっても、暗号化されたパーティションや仮想ハードディスクを作成することができます。しかしながら、インストール済みのシステムに暗号化されたパーティションを追加したい場合、既存のパーティションのサイズを変更したりする作業が必要になることがありますので、比較的難しい作業になります。このような場合は、必要なサイズで暗号化されたファイルを作成して、ファイルやディレクトリなどをその中に書き込むように設定したほうが便利な場合があります。それに対して、パーティション全体を暗号化する場合は、パーティションレイアウト内に専用のパーティションを作成して対応する必要があります。また、 &yast; で表示される標準のパーティション提案では、既定では暗号化されたパーティションが含まれません。インストール時に暗号化されたパーティションを設定したい場合は、パーティションダイアログにて手作業で設定をしてください。</para>

  <sect2 xml:id="sec-security-cryptofs-y2-part-inst">
   <title>インストール時における暗号化パーティションの作成</title>
   <warning>
    <title>パスワードの入力について</title>
    <para>暗号化されたパーティションを作成する際は、パスワードを忘れることがないようにしてください。パスワードを忘れてしまうと、暗号化されたデータにアクセスできなくなってしまいます。</para>
   </warning>
   <para>&yast; の熟練者向けパーティション設定を使用することで、暗号化パーティションを作成することができます。新しい暗号化パーティションを作成するには、下記の手順で行います:</para>
   <procedure>
    <step>
     <para><menuchoice> <guimenu>システム</guimenu><guimenu>パーティション設定</guimenu></menuchoice> を選択して、 &yast; 熟練者向けパーティション設定を起動します。</para>
    </step>
    <step>
     <para>ハードディスクを選択して <guimenu>追加</guimenu> を押します。プライマリもしくは論理パーティション <!-- NOTE: not mentioned for GPT? not 'extended' but 'logical'? --> のいずれかを選択します。</para>
    </step>
    <step>
     <para>パーティションに対して設定するサイズ、もしくは範囲を指定します。</para>
    </step>
    <step>
     <para>パーティションに対して設定するファイルシステムと、マウントポイントを選択します。</para>
    </step>
    <step>
     <para>このとき、 <guimenu>デバイスの暗号化</guimenu> にチェックを入れておきます。</para>
     <note>
      <title>追加のソフトウエアが必要となる件について</title>
      <para><guimenu>デバイスの暗号化</guimenu> にチェックを入れると、追加のソフトウエアをインストールするよう促すポップアップウインドウが表示されることがあります。暗号化パーティションを動作させるには、これら全てのパッケージをインストールする必要があります。</para>
     </note>
    </step>
    <step>
     <para>暗号化されたパーティションを自動ではマウントしたくない場合は、 <guimenu><!-- NOTE: not fstab but mount? -->マウントのオプション</guimenu> で <guimenu><!-- NOTE: not partition but device? -->デバイスをマウントしない</guimenu> を選択します。自動的にマウントする場合は、 <guimenu><!-- NOTE: not partition but device? -->デバイスのマウント</guimenu> を選択してマウントポイントを入力または選択してください。</para>
    </step>
    <step>
     <para><guimenu>次へ</guimenu> を押して、このパーティションを暗号化するためのパスワードを入力します。入力されたパスワードは表示されません。入力ミスを防止するため、パスワードは 2 回入力してください。</para>
    </step>
    <step>
     <para>あとは <guimenu>完了</guimenu> を押して処理を完了します。暗号化パーティションが新しく作成されます。</para>
    </step>
   </procedure>
   <para><filename>/etc/fstab</filename> 内で暗号化されているパーティションを自動的にマウントするように設定している場合、システムの起動時に暗号化パーティションに対するパスワード入力を求めるようになります。パスワードの入力を行うことでマウント処理が実行され、全てのユーザからアクセスできるようになります。</para>
   <para>システムの起動時に暗号化されたパーティションをマウントしたくない場合は、パスワード入力の際に <keycap function="enter"/> を押してください。再度パスワードの入力を求められた場合も、同様に入力を拒否してください。これにより、暗号化されたパーティションがマウントされなくなりますが、オペレーティングシステムの起動処理はそのまま続けられるようになります。この場合、暗号化されたパーティション内のデータにはアクセスができなくなります。</para>
   <para>システムの起動時にマウントしなかった暗号化パーティションをマウントしたい場合は、ファイルマネージャを開いて <guimenu>他の場所</guimenu> を選び、表示された一覧の中から暗号化されたパーティションを選択してください。これにより、パスワードの入力が求められますので、パスワードを入力してください。</para>
   <para>既にパーティションが存在するマシンに対してシステムをインストールしている場合は、インストール時に既存のパーティションを暗号化するように設定することもできます。この場合は、 <xref linkend="sec-security-cryptofs-y2-part-run"/> の手順に従って作業を行ってください。ただし、既存のパーティション内にある全てのデータが削除されることに注意してください。</para>
  </sect2>

  <sect2 xml:id="sec-security-cryptofs-y2-part-run">
   <title>動作中のシステムにおける暗号化パーティションの作成</title>
   <warning>
    <title>動作中のシステムにおける暗号化の有効化について</title>
    <para>動作中のシステムで暗号化されたパーティションを作成することもできます。ただし、既存のパーティションを暗号化すると、その中のデータは全て削除されてしまうほか、場合によっては既存のパーティションのサイズを変更したり、再構築したりする作業が必要になってしまうこともあります。</para>
   </warning>
   <para>動作中のシステムで暗号化されたパーティションを作成するには、 &yast; コントロールセンターから <menuchoice> <guimenu>システム</guimenu> <guimenu>パーティション設定</guimenu> </menuchoice> を選び、表示された警告メッセージには <guimenu>はい</guimenu> を選びます。あとは <guimenu>熟練者向けパーティション設定</guimenu> で暗号化したいパーティションを選び、 <guimenu>編集</guimenu> を押します。残りの作業は <xref linkend="sec-security-cryptofs-y2-part-inst"/> で示している手順と同じです。</para>
  </sect2>

<!-- this feature was removed from YaST in sle15sp0
  https://www.suse.com/releasenotes/x86_64/SUSE-SLES/15/#id5997
  (cjs feb 5 2020)
  <sect2 xml:id="sec-security-cryptofs-y2-vdisk">
   <title>Creating an encrypted virtual disk</title> -->

  <sect2 xml:id="sec-security-cryptofs-y2-removables">
   <title>リムーバブルメディアの内容の暗号化</title>
   <para>&yast; では、リムーバブルメディア (外付けハードディスクや USB フラッシュメモリなど) についても、通常のストレージデバイスと同じように扱います。これまでに説明してきたものと同じ手順で、リムーバブルメディア内に仮想ディスクやパーティションを作成することができます。ただし、システム起動時の自動マウントについては、無効化するようにしてください。これは一般に、リムーバブルメディアはシステムの起動時には接続されていないことがあるためです。</para>
   <para>&yast; でリムーバブルデバイスを暗号化した場合、 &gnome; デスクトップでは暗号化されたパーティションを自動的に認識することができますので、デバイスへのアクセス時にパスワード入力を求めるようになっています。また、 &gnome; の動作時に FAT 形式でフォーマットされたリムーバブルデバイスを接続すると、デスクトップを利用しているユーザがデバイスの所有者になります。 FAT 以外のファイルシステムを使用しているデバイスの場合は、デバイスに対して読み書きができるようにするため、 &rootuser; でパーミッションを変更するなどして、所有権を明示的に設定してください。</para>
     </sect2>
 </sect1>
 <sect1 xml:id="sec-security-cryptofs-gpg">
  <title>GPG を利用したファイルの暗号化</title>

  <para>GNU Privacy Guard (GPG) 暗号化ソフトウエアを使用することで、ファイルや文書を個別に暗号化することができます。</para>

  <para>GPG でファイルを暗号化するには、まず鍵対を生成する必要があります。鍵対を生成するには、 <command>gpg --gen-key</command> を実行して、表示される手順に従って作業を行ってください。鍵対を作成する際、 GPG はユーザ ID (UID) を作成して鍵対を識別するようになります。ユーザ ID には本名やコメント、電子メールアドレスを含めることができます。この UID (もしくは名前の一部や電子メールアドレス) は、ファイルを暗号化する際に指定します。既存の鍵の一覧を取得するには、 <command>gpg --list-keys</command> コマンドを実行します。鍵対を生成したあと、ファイルを暗号化するには、下記のコマンドを実行します:</para>
  <screen>&prompt.user;gpg -e -a --cipher-algo AES256 -r <replaceable>UID</replaceable> <replaceable>ファイル名</replaceable></screen>
  <para>ここで、 <replaceable>UID</replaceable> には UID の一部 (たとえば名前など) を、 <replaceable>ファイル名</replaceable> には暗号化したいファイルを指定します。たとえば下記のようになります:</para>
  <screen>&prompt.user;gpg -e -a --cipher-algo AES256 -r Tux secret.txt</screen>
  <para>このコマンドは、指定したファイルのファイル名に <filename>.asc</filename> という新しい拡張子を追加して、暗号化されたファイルを作成します (今回の例では、 <filename>secret.txt.asc</filename> というファイルが作成されます) 。</para>
  <para><command>-a</command> は ASCII テキスト形式でファイルを出力するための指定です。これにより、ファイルをコピー＆ペーストで貼り付けることができるようになります。 <command>-a</command> を省略した場合はバイナリ形式のファイルが作成され、ファイル名も <filename>secret.txt.gpg</filename> のような名前になります。</para>
  <para>暗号化されたファイルを復号するには、下記のコマンドを実行します:</para>
  <screen>&prompt.user;gpg -d -o <replaceable>復号化したファイル</replaceable> <replaceable>暗号化されたファイル</replaceable></screen>
  <para>ここで、 <replaceable>復号化したファイル</replaceable> には復号後のファイルのファイル名 (出力先) を、 <replaceable>暗号化されたファイル</replaceable> には暗号化されたファイルのファイル名を指定します。</para>
  <para>ただし、この手順でファイルの暗号化を行った場合、暗号化で使用したものと同じ鍵を使用しないと、復号できないことに注意してください。他のユーザに対して暗号化したファイルを送りたい場合は、その相手の公開鍵を取得して、この公開鍵で暗号化を行わなければなりません。</para>
 </sect1>
 <sect1 xml:id="sec-security-cryptofs-rage">
  <title>Rage によるファイルの暗号化</title>
  <para>Rage はファイルを暗号化するための暗号化ソフトウエアです。他のユーザとの間で容易に鍵を交換できる仕組みのほか、不用意な操作ミスや機密データの漏洩の防止機能を備えています。ファイルの暗号化を行う場合は、 Rage の使用をお勧めします。</para>
  <para>Rage のインストールは下記の手順で行います:</para>
   <screen>&prompt.sudo;<command>zypper install rage-encryption</command></screen>
  <para>暗号化したファイルを受信する側のユーザは、まず Rage で鍵対を生成しなければなりません:</para>
   <screen>&prompt.user;rage-keygen -o ~/rage.key 2 ~/rage.pub</screen>
   <para>上記で 2 つのファイルが作成されます; 上記の例では、それぞれ <emphasis>rage.pub</emphasis> と <emphasis>rage.key</emphasis> というファイル名になっています。</para>
   <variablelist>
   <varlistentry>
    <term><literal>rage.pub の例</literal></term>
    <listitem>
    <screen>&prompt.user;cat file.pub
    Public key: age17e4g67cs07jk3lmylyq6gduv26uf7tz7nm9jrsaxn8xxx9uc9amsdg4a5e </screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>rage.key の例</literal></term>
    <listitem>
     <screen>&prompt.user; cat file.key
    # created: 2023-05-30T16:29:20+05:30
    # public key: age17e4g67cs07jk3lmylyq6gduv26uf7tz7nm9jrsaxn8xxx9uc9amsdg4a5e </screen>
    </listitem>
   </varlistentry>
     </variablelist>
    <important><para><emphasis>file.key</emphasis> は機密鍵であるため、他者に開示してはなりません。</para></important>
   <variablelist>
  <varlistentry>
   <term>暗号化</term>
   <listitem>
    <para>ファイルを暗号化するには、コマンドラインで公開鍵を指定して実行します:</para>
   <screen>&prompt.user;rage -e -r <replaceable>公開鍵</replaceable> -o <replaceable>暗号化されたファイル</replaceable> <replaceable>元の_(暗号化前の)_ファイル</replaceable></screen>
  <para>たとえば下記のようになります:</para>
   <screen>&prompt.user;rage -e -r age17e4g67cs07jk3lmylyq6gduv26uf7tz7nm9jrsaxn8xxx9uc9amsdg4a5e -o test.txt.age test.txt</screen>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>復号化</term>
   <listitem>
    <para>暗号化したファイルは、公開鍵に対応する機密鍵を持つユーザのみが復号化できます。つまり、他者と暗号化したファイルをやりとりしたい場合は、相手側の公開鍵を指定して暗号化する必要があります。</para>
<screen>&prompt.user;rage -d -i ~/rage.key -o <replaceable>復号化したファイル</replaceable> <replaceable>暗号化されたファイル</replaceable> <replaceable>ファイル</replaceable></screen>
   <para>たとえば下記のようになります:</para>
   <screen>&prompt.user;rage -d -i ~/rage.key -o test.txt.decrypted test.txt.age</screen>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>パスフレーズ</term>
   <listitem>
    <para><envar>-p</envar> や <envar>--passphrase</envar> のパラメータを指定することで、暗号化したファイルにさらにパスフレーズを設定することもできます。既定では Rage は独自にパスフレーズを設定しますが、パスフレーズを指定しておくこともできます。</para>
  <screen>&prompt.user;rage -e -p -o <replaceable>暗号化されたファイル</replaceable> <replaceable>ファイル</replaceable></screen>
   <para>たとえば下記のようになります:</para>
   <screen>&prompt.user;rage -e -p -o test.txt.age test.txt</screen>
   </listitem>
  </varlistentry>
<varlistentry>
   <term>SSH</term>
   <listitem>
    <para>Rage では、暗号化を行う際、 Rage の鍵対ではなく SSH (Secure Socket Shell) の鍵対を使用することもできます。 Rage ではそれぞれ <emphasis>ssh-rsa</emphasis> と <emphasis>ssh-ed25519</emphasis> の公開鍵に対応し、復号化もそれに対応する機密鍵で実施することができます。なお、 <emphasis>ssh-agent</emphasis> と <emphasis>ssh-sk(FIDO)</emphasis> には対応していません。</para>
  <screen>&prompt.user;rage -e -p -o <replaceable>暗号化されたファイル</replaceable> <replaceable>ファイル</replaceable></screen>
   <para>たとえば下記のようになります:</para>
   <screen>&prompt.user;rage -e -p -o test.txt.age test.txt</screen>
<para>たとえば下記のようになります:</para>
   <screen>&prompt.user; ssh-keygen -t ed25519</screen>
    <para>暗号化するには、下記のようなコマンドを実行します:</para>
   <screen>&prompt.user; rage -e -a -R <replaceable>公開鍵ファイル</replaceable> -o <replaceable>暗号化されたファイル</replaceable> <replaceable>ファイル</replaceable></screen>
    <para>たとえば下記のようになります:</para>
    <screen>&prompt.user; rage -e -a -R id_ed25519.pub -o test.txt.age test.txt</screen>
    <para>復号化するには、下記のようなコマンドを実行します:</para>
    <screen>&prompt.user; rage -d -i <replaceable>SSH_機密鍵ファイル</replaceable> -o <replaceable>復号化したファイル</replaceable><replaceable>暗号化されたファイル</replaceable></screen>
    <para>たとえば下記のようになります:</para>
    <screen>&prompt.user; rage -d -i id_ed25519 -o test.txt.decrypted test.txt.age</screen>
     <important><para>なお、鍵とファイルはそれぞれパスで指定しなければなりません。</para></important>
   </listitem>
  </varlistentry>
<varlistentry>
   <term>複数の宛先への対応</term>
   <listitem>
    <para>Rage は同時に複数の宛先で復号化できる暗号ファイルを作成することもできます。この場合、指定した複数の公開鍵のうち、いずれかの機密鍵を利用して復号化することができます。</para>
    <screen>rage -e -a -R <replaceable>最初の_SSH_公開鍵</replaceable>-r <replaceable>最初の_Rage_公開鍵</replaceable>... -o <replaceable>暗号化されたファイル</replaceable> <replaceable>ファイル</replaceable></screen>
    <para>たとえば下記のようになります:</para>
    <screen>rage -e -a -R id_ed25519.pub -r age1h8equ4vs5pyp8ykw0z8m9n8m3psy6swme52ztth0v66frgu65ussm8gq0t -o -r age1y2lc7x59jcqvrpf3ppmnj3f93ytaegfkdnl5vrdyv83l8ekcae4sexgwkg test.txt.age test.txt</screen>
    </listitem>
  </varlistentry>
   </variablelist>
   <tip>
   <para>Rage のコマンドラインパラメータの一覧を取得したい場合は、 <envar>-h</envar> または <envar>--help</envar> を指定して実行してください。</para>
    </tip>

       <sect2 xml:id="sec-security-cryptofs-rage-additional-resources">
      <title>その他の情報</title>
   <itemizedlist>
      <listitem>
        <para><link xlink:href="https://github.com/str4d/rage"/> Rage 暗号化の GitHub リポジトリ</para>
        </listitem>
        <listitem>
        <para><link xlink:href="https://github.com/C2SP/C2SP/blob/main/age.md"/> Age 暗号化の GitHub リポジトリ</para>
        </listitem>
    </itemizedlist> </sect2>
      </sect1>
</chapter>
