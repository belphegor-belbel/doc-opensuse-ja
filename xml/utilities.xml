<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-util">
 <title>システム監視ユーティリティ</title>
 <info>
  <abstract>
   <para>お使いのシステムの状態を調査する際、提供されているプログラムやツール、ユーティリティは多数存在します。本章では、最も重要なものの紹介のほか、それらでよく使用されるパラメータについて説明しています。</para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
  </dm:docmanager>
 </info>

 <note os="sles;sled">
  <title><command>supportconfig</command> によるシステム情報の収集と分析</title>
  <para>下記に示す様々なユーティリティとは別に、 &productname; には <command>supportconfig</command> と呼ばれるツールが提供されています。このツールは、現在使用しているカーネルのバージョンやハードウエア、インストール済みのパッケージやパーティションの設定など、様々な情報を含むシステムレポートを作成するツールです。作成したレポートは &suse; のサポートを受ける際、求めに応じて提出することができます。これにより、既知の問題を素早く発見することができますので、解決をより早くすることができます。また、このような用途に対応するため、 &productname; ではアプライアンスや Supportconfig Analysis (SCA) も提供しています。詳しくは <xref linkend="cha-adm-support"/> をお読みください。</para>
 </note>

 <para>以降のコマンドの説明では、コマンドの出力例も含めて示されています。たとえば下記の例では、最初の行 (&exampleuser; &gt; や root # 以降) がコマンド自身で、それ以降がコマンドの出力になっています。出力が長い場合は大括弧とピリオド ( <literal>[...]</literal> ) で省略される場合があるほか、 1 行が長い場合は必要に応じて折り返して示しています。なお、行を折り返す場合、行末にはバックスラッシュ ( <literal>\</literal> ) が書かれます。</para>
<screen>&prompt.user;command -x -y
1 行目の出力 1
2 行目の出力
3 行目の出力 ... 非常に長い出力を行なっているため、\
    ここで改行しています
4 行目の出力
[...]
98 行目の出力
99 行目の出力</screen>
 <para>また、できる限り多くのユーティリティを紹介する目的から、説明は短くまとめられています。それぞれのコマンドの詳細については、対応するマニュアルページをお読みください。それ以外にも、ほとんどのコマンドには <option>--help</option> というオプションが用意されていて、ここから指定可能なパラメータ一覧を取得することができます。</para>
 <sect1 xml:id="sec-util-multi">
  <title>多用途ツール</title>

  <para>ほとんどの Linux におけるシステム監視ツールは、システム内の 1 つの要素しか参照しない仕組みになっていますが、ツールによっては幅広く監視を行なってくれるものもあります。システムの問題点を絞り込みたい場合は、まずこれらのツールをお使いのうえ、原因を探ってみてください:</para>

  <sect2 xml:id="sec-util-multi-vmstat">
   <title><command>vmstat</command></title>
   <para>vmstat はプロセスやメモリ、 I/O や割り込み、 CPU に関する情報を収集します:</para>
   <screen>vmstat [オプション] [待ち時間 [回数]]</screen>
   <para>待ち時間と回数のパラメータを指定しないで実行すると、直近の再起動以降の平均値のみを出力します。待ち時間 (秒単位) を指定して実行すると、指定した時間内 (下記の例では 2 秒) での値を表示します。回数を指定した場合は、 vmstat で情報を表示する回数を指定することができます。回数を指定しない場合は、停止するまで何度も情報を採取し続けます。</para>
   <example>
    <title>負荷の軽いマシンにおける <command>vmstat</command> の出力</title>
<screen>&prompt.user;vmstat 2
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 1  0  44264  81520    424 935736    0    0    12    25   27   34  1  0 98   0  0
 0  0  44264  81552    424 935736    0    0     0     0   38   25  0  0 100  0  0
 0  0  44264  81520    424 935732    0    0     0     0   23   15  0  0 100  0  0
 0  0  44264  81520    424 935732    0    0     0     0   36   24  0  0 100  0  0
 0  0  44264  81552    424 935732    0    0     0     0   51   38  0  0 100  0  0
</screen>
   </example>
   <example>
    <title>CPU 負荷の重いマシンにおける <command>vmstat</command> の出力</title>
<screen>&prompt.user;vmstat 2
procs -----------memory----------- ---swap-- -----io---- -system-- -----cpu------
 r  b   swpd   free   buff   cache   si   so    bi    bo   in   cs us sy id wa st
32  1  26236 459640 110240 6312648    0    0  9944     2 4552 6597 95  5  0  0  0
23  1  26236 396728 110336 6136224    0    0  9588     0 4468 6273 94  6  0  0  0
35  0  26236 554920 110508 6166508    0    0  7684 27992 4474 4700 95  5  0  0  0
28  0  26236 518184 110516 6039996    0    0 10830     4 4446 4670 94  6  0  0  0
21  5  26236 716468 110684 6074872    0    0  8734 20534 4512 4061 96  4  0  0  0</screen>
   </example>
   <tip>
    <title>出力の最初の行について</title>
    <para>vmstat の出力のうち最初の行は、直近の再起動からの平均値を示しています。</para>
   </tip>
   <para>それぞれの列の意味は下記のとおりです:</para>
   <variablelist>
    <varlistentry>
     <term><guimenu>r</guimenu></term>
     <listitem>
      <para>実行可能 (Runnable) 状態にあるプロセスの数を表わします。これらのプロセスは実行中でするか、もしくは CPU スロットの空きを待っている状態であることになります。この列に表示されている値が、利用可能な CPU の数よりも定常的に高い場合は、 CPU の能力が不足している可能性を示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>b</guimenu></term>
     <listitem>
      <para>CPU 以外のリソースを待機しているプロセスの数を表わします。この列の値が高い場合、ネットワークやディスクなど I/O の問題が発生している可能性を示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>swpd</guimenu></term>
     <listitem>
      <para>現在使用中の状態にあるスワップ領域 (キロバイト単位) を表わします。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>free</guimenu></term>
     <listitem>
      <para>未使用のメモリ (キロバイト単位) を表わします。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>inact</guimenu></term>
     <listitem>
      <para>回収可能な未使用のメモリ量を表わしています。この列は、 <command>vmstat</command> に <option>-a</option> オプション (推奨) を指定した場合にのみ表示されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>active</guimenu></term>
     <listitem>
      <para>通常は回収することのできない、使用中のメモリ量を表わしています。この列は、 <command>vmstat</command> に <option>-a</option> オプション (推奨) を指定した場合にのみ表示されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>buff</guimenu></term>
     <listitem>
      <para>ファイルシステムのメタデータを含む、メモリ内のファイルバッファキャッシュ量 (キロバイト単位) を表わしています。こちらの列は、 <command>vmstat</command> に <option>-a</option> オプションを指定した場合、表示されません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>cache</guimenu></term>
     <listitem>
      <para>ファイル内の実際の内容を含む、メモリ内のページキャッシュ量 (キロバイト単位) を表わしています。こちらの列は、 <command>vmstat</command> に <option>-a</option> オプションを指定した場合、表示されません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>si / so</guimenu></term>
     <listitem>
      <para>スワップ領域からメモリ ( <literal>si</literal> ) 、もしくはメモリからスワップ領域 ( <literal>so</literal> ) に移動されたメモリ量を、キロバイト毎秒で表わした値です。 <literal>so</literal> の値が長時間にわたって高いままである場合、アプリケーション側でメモリリーク (漏洩) が発生している可能性があり、そのメモリリークによってメモリがスワップ領域内に書き込まれている可能性があります。また <literal>si</literal> の値が長時間にわたって高いままである場合、非常に長い時間アプリケーションが休眠状態にあって、後から活動状態に戻ったことを表わしています。 <literal>si</literal> と <literal>so</literal> の値が両方とも長時間にわたって高いままである場合は、スワップ領域が多用されていることになりますので、アプリケーションの作業に必要なメモリのほうが実際のメモリ量よりも大きいことを示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>bi</guimenu></term>
     <listitem>
      <para>ブロックデバイスから受信された (たとえばディスクから読み込んだ) ブロック数を毎秒単位で表わした値です。この値は、スワップ領域を使用した場合にも上昇します。ただし、ブロックサイズはファイルシステムによっても異なりますが、 stat ユーティリティを使用することで知ることができます。スループットのデータをご希望の場合は、 iostat をお使いください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>bo</guimenu></term>
     <listitem>
      <para>ブロックデバイスに送信した (たとえばディスクに書き込んだ) ブロック数を毎秒単位で表わした値です。この値は、スワップ領域を使用した場合にも上昇します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>in</guimenu></term>
     <listitem>
      <para>毎秒の割り込み数を表わします。この値が高い場合、 I/O (ネットワークもしくはディスク) の負荷が高いことを表わしていますが、他の処理でプロセッサ間割り込みを発生させているなど、他の理由によるものかもしれません。割り込みの詳細については、 <filename>/proc/interrupts</filename> ファイルをご覧ください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>cs</guimenu></term>
     <listitem>
      <para>毎秒のコンテキスト切り替え数を表わしています。この値は、カーネルが一方のプロセスから他方のプロセスに処理を移した回数を表わしています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>us</guimenu></term>
     <listitem>
      <para>アプリケーションコードを実行するのに消費した CPU 時間の割合を示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>sy</guimenu></term>
     <listitem>
      <para>カーネルコードを実行するのに消費した CPU 時間の割合を示しています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>id</guimenu></term>
     <listitem>
      <para>待機状態にあった CPU 時間の割合を示しています。この値がずっと 0 であり続けているような場合、 CPU に空きがないことを示しています。ただし、この値が 0 であったからといって、それが悪い知らせであるとは限りません。十分な CPU 性能があるものとお考えの場合は、 <guimenu>r</guimenu> や <guimenu>b</guimenu> の列の値を読んで原因を探ってみることをお勧めします。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>wa</guimenu></term>
     <listitem>
      <para>"wa" の値が 0 以上になっている場合、入出力処理の待ちによってスループットが落ちていることを表わしています。ただし、ファイルを最初に読み込んだ場合や、裏での書き込みが間に合っていないような場合など、どうしても避けられない場合もあります。また、ハードウエアのボトルネック (ネットワークもしくはハードディスク) を示している可能性もあります。このほか、仮想メモリマネージャ (詳しくは <xref linkend="cha-tuning-memory"/> をお読みください) でチューニングを行なう必要性を示していることもあります。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>st</guimenu></term>
     <listitem>
      <para>仮想マシンであることにより、 CPU 時間が確保できなかった割合を示しています。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>その他のオプションについては、 <command>vmstat</command> <option>--help</option> をお読みください。</para>
  </sect2>

  <xi:include href="tuning_utilities_dstat.xml"/>

  <sect2 xml:id="sec-util-multi-sar">
   <title>システムの動作状況の監視: <command>sar</command></title>
   <para><command>sar</command> コマンドを使用することで、 CPU やメモリ、 IRQ の使用状況や IO 、ネットワーキングに至るまで、ほとんど全てのシステム動作状況を記録することができます。その場でレポートを生成することもできます。また、 <command>sar</command> は元となるデータを <filename>/proc</filename> ファイルシステム内で収集します。</para>
   <note>
    <title>sysstat パッケージについて</title>
    <para><command>sar</command> コマンドは <package>sysstat</package> パッケージ内に含まれています。 &yast; を利用してインストールするか、 <command>zypper in sysstat</command> と入力して実行し、インストールを行なってください。</para>
   </note>
   <sect3 xml:id="sec-util-multi-sar-report">
    <title><command>sar</command> によるレポートの生成</title>
    <para>その場でレポートを生成したい場合は、 <command>sar</command> コマンドに間隔 (秒単位) と回数を指定してください。また、指定したファイルからレポートを生成したい場合は、間隔と回数の代わりに <option>-f</option> でファイル名を指定してください。ファイル名も間隔と回数も指定しない場合、 <command>sar</command> は <filename>/var/log/sa/sa<replaceable>DD</replaceable></filename> からレポートを生成しようとします。ここで、 <replaceable>DD</replaceable> は今日の月内日を表わします。これは <command>sadc</command> (System Activity Data Collector) コマンドがデータを書き込む際の既定の場所として決められているものです。複数のファイルを使用したい場合は、 -f オプションを複数回指定してください。</para>
<screen>sar 2 10                         # その場でレポートを生成、 2 秒間隔で 10 回
sar -f ~/reports/sar_2014_07_17  # sar_2014_07_17 ファイルからレポートを生成
sar                              # /var/log/sa/ 内にある本日分のデータからレポートを生成
cd /var/log/sa &amp;&amp; \
sar -f sa01 -f sa02              # /var/log/sa/0[12] ファイルからレポートを生成</screen>
    <para>下記には、便利な <command>sar</command> コマンドのオプションと、その解釈が示されています。各列の詳しい意味については、 <command>sar</command> のマニュアルページ <systemitem>(1)</systemitem> をお読みください。オプションやレポートに関する詳細についてもマニュアルページをお読みください。</para>
    <note>
     <title>sysstat サービスが停止した際にレポート生成も停止されてしまう件について</title>
     <para>システムの再起動やシャットダウンなどで <systemitem>sysstat</systemitem> サービスが停止されていた場合でも、ツールは <command>/usr/lib64/sa/sa1 -S ALL 1 1</command> コマンドを自動的に実行して直近の統計情報を採取し続けます。収集されたバイナリデータはシステムの動作データファイル内に保存されます。</para>
    </note>
    <sect4 xml:id="sec-util-multi-sar-report-cpu">
     <title>CPU 使用率レポート: <command>sar</command></title>
     <para>何もオプションを指定しないで <command>sar</command> を実行すると、 CPU 使用率に関する基本的なレポートを生成します。マルチプロセッサ環境では、全ての CPU の結果がまとめて出力されます。個別の CPU について出力を行ないたい場合は、 <option>-P ALL</option> オプションを指定してください。</para>
<screen>&prompt.root;sar 10 5
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

17時51分29秒    CPU     %user     %nice   %system   %iowait    %steal     %idle
17時51分39秒    all     57.93      0.00      9.58      1.01      0.00     31.47
17時51分49秒    all     32.71      0.00      3.79      0.05      0.00     63.45
17時51分59秒    all     47.23      0.00      3.66      0.00      0.00     49.11
17時52分09秒    all     53.33      0.00      4.88      0.05      0.00     41.74
17時52分19秒    all     56.98      0.00      5.65      0.10      0.00     37.27
平均値:         all     49.62      0.00      5.51      0.24      0.00     44.62</screen>
     <para><guimenu>%iowait</guimenu> は CPU が I/O リクエストに対する応答を待っていて、待機状態になった時間の割合を示しています。この値が長時間にわたって 0 より高いままである場合は、 I/O システム (ネットワークまたはハードディスク) 内にボトルネックが存在するものと考えられます。また、 <guimenu>%idle</guimenu> が長い時間にわたって 0 になっている場合、お使いの CPU には余裕が無くなっていることを表わしています。</para>
    </sect4>
    <sect4 xml:id="sec-util-multi-sar-report-memory">
     <title>メモリ使用率レポート: <command>sar</command> <option>-r</option></title>
     <para>システムに搭載されたメモリ (RAM) に関する概要を知りたい場合は、オプション <option>-r</option> を使用します:</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;sar -r 10 5
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

17時55分27秒 kbmemfree kbmemused %memused kbbuffers kbcached kbcommit %commit kbactive kbinact kbdirty
17時55分37秒  104232   1834624    94.62        20   627340  2677656   66.24   802052  828024    1744
17時55分47秒   98584   1840272    94.92        20   624536  2693936   66.65   808872  826932    2012
17時55分57秒   87088   1851768    95.51        20   605288  2706392   66.95   827260  821304    1588
17時56分07秒   86268   1852588    95.55        20   599240  2739224   67.77   829764  820888    3036
17時56分17秒  104260   1834596    94.62        20   599864  2730688   67.56   811284  821584    3164
平均値:        96086   1842770    95.04        20   611254  2709579   67.03   815846  823746    2309</screen>
     <para><guimenu>kbcommit</guimenu> と <guimenu>%commit</guimenu> の列は、それぞれ現在の処理内容に応じた最大メモリ量 (物理メモリとスワップ領域) の概算を表わしています。 <guimenu>kbcommit</guimenu> はキロバイト単位で、 <guimenu>%commit</guimenu> は割合でそれぞれ表現されています。</para>
    </sect4>
    <sect4 xml:id="sec-util-multi-sar-report-paging">
     <title>ページング統計レポート: <command>sar</command> <option>-B</option></title>
     <para>カーネルのページングに関する統計情報を表示したい場合は、 <option>-B</option> オプションを使用します。</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;sar -B 10 5
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

18時23分01秒 pgpgin/s pgpgout/s fault/s majflt/s pgfree/s pgscank/s pgscand/s pgsteal/s %vmeff
18時23分11秒   366.80     11.60  542.50     1.10  4354.80      0.00      0.00      0.00   0.00
18時23分21秒     0.00    333.30 1522.40     0.00 18132.40      0.00      0.00      0.00   0.00
18時23分31秒    47.20    127.40 1048.30     0.10 11887.30      0.00      0.00      0.00   0.00
18時23分41秒    46.40      2.50  336.10     0.10  7945.00      0.00      0.00      0.00   0.00
18時23分51秒     0.00    583.70 2037.20     0.00 17731.90      0.00      0.00      0.00   0.00
平均値:         92.08    211.70 1097.30     0.26 12010.28      0.00      0.00      0.00   0.00</screen>
     <para><guimenu>majflt/s</guimenu> (メジャーフォルト毎秒) の列には、ディスクからメモリに読み込まれたページ数が表示されています。フォルトを発生させる要因としては、ファイルへのアクセスのほか、アプリケーションのバグによるものである場合もあります。ただし、メジャーフォルトが大きいからといって、それがそのまま何らかの問題を表わしているとは限りません。たとえばアプリケーションの起動時には、一般的に様々なファイルを読み込むことから、メジャーフォルトも大きくなりがちです。メジャーフォルトがアプリケーションの動作中ずっと高いままで、特にダイレクトスキャンも同時に大きくなっているような場合は、メインメモリが不足していることを表わしている場合があります。</para>
     <para><guimenu>%vmeff</guimenu> の列には、メインメモリやスワップ領域のキャッシュ ( <guimenu>pgsteal/s</guimenu> ) から再利用されたページに対する、スキャン済みページ数 ( <guimenu>pgscand/s</guimenu> ) の割合を示しています。これはページの回収処理の効率性を表わしている値で、性能に問題のないシステムであれば、 100 (スワップアウトした全ての非活動ページが再利用された) もしくは 0 (ページをスキャンしていない) に近い値になるはずです。この値は通常、 30 を下回るべきではありません。</para>
    </sect4>
    <sect4 xml:id="sec-util-multi-sar-report-disk">
     <title>ブロックデバイス統計レポート: <command>sar</command> <option>-d</option></title>
     <para><option>-d</option> オプションを使用することで、ブロックデバイス (ハードディスク、光学ドライブ、 USB ストレージデバイスなど) の統計情報を表示することができます。 <guimenu>DEV</guimenu> 列を読みやすくしたい場合は、追加オプション <option>-p</option> (pretty-print, わかりやすい表示) を指定してください。</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;sar -d -p 10 5
 Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

18時46分09秒 DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
18時46分19秒 sda  1.70    33.60      0.00     19.76      0.00      0.47      0.47      0.08
18時46分19秒 sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00

18時46分19秒 DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
18時46分29秒 sda  8.60   114.40    518.10     73.55      0.06      7.12      0.93      0.80
18時46分29秒 sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00

18時46分29秒 DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
18時46分39秒 sda 40.50  3800.80    454.90    105.08      0.36      8.86      0.69      2.80
18時46分39秒 sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00

18時46分39秒 DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
18時46分49秒 sda  1.40     0.00    204.90    146.36      0.00      0.29      0.29      0.04
18時46分49秒 sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00

18時46分49秒 DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
18時46分59秒 sda  3.30     0.00    503.80    152.67      0.03      8.12      1.70      0.56
18時46分59秒 sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00

平均値: DEV   tps rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
平均値: sda 11.10   789.76    336.34    101.45      0.09      8.07      0.77      0.86
平均値: sr0  0.00     0.00      0.00      0.00      0.00      0.00      0.00      0.00</screen>
     <para><guimenu>平均値</guimenu> 内にある <guimenu>tps</guimenu> , <guimenu>rd_sec/s</guimenu> , <guimenu>wr_sec/s</guimenu> の各値を、全てのディスクに対して比較してください。<guimenu>svctm</guimenu> 列や <guimenu>%util</guimenu> 列の値が定常的に高い場合は、 I/O サブシステムがボトルネックなっている可能性があります。</para>
     <para>お使いのマシンに複数のディスクが接続されている場合、それらのディスクの速度と性能が等しい場合は、 I/O を分散させることが最適です。また、ストレージが複数階層で構成されているかどうかも考慮する必要があります。これに加えて、ストレージへのアクセス方式が複数存在するような場合は、その使用方法を均等にする場合のリンク飽和度についても検討してください。</para>
    </sect4>
    <sect4 xml:id="sec-util-multi-sar-report-net">
     <title>ネットワーク統計レポート: <command>sar</command> <option>-n <replaceable>キーワード</replaceable></option></title>
     <para><option>-n</option> オプションを使用することで、様々なネットワーク関連のレポートを生成することができます。 <option>-n</option> の後ろに指定することのできるキーワードには、下記のものがあります:</para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para><emphasis>DEV</emphasis> : 全てのネットワークデバイスに対する統計レポートを生成</para>
      </listitem>
      <listitem>
       <para><emphasis>EDEV</emphasis> : 全てのネットワークデバイスに対するエラー統計レポートを生成</para>
      </listitem>
      <listitem>
       <para><emphasis>NFS</emphasis> : NFS クライアントに対する統計レポートを生成</para>
      </listitem>
      <listitem>
       <para><emphasis>NFSD</emphasis> : NFS サーバに対する統計レポートを生成</para>
      </listitem>
      <listitem>
       <para><emphasis>SOCK</emphasis> : ソケットに対する統計レポートを生成</para>
      </listitem>
      <listitem>
       <para><emphasis>ALL</emphasis> : 全てのネットワーク統計レポートを生成</para>
      </listitem>
     </itemizedlist>
    </sect4>
   </sect3>
   <sect3 xml:id="sec-util-multi-sar-visual">
    <title><command>sar</command> データの可視化</title>
    <para><command>sar</command> が生成するレポートは、必ずしも読みやすいものであるとは言い切れません。その代わり、 kSar と呼ばれる <command>sar</command> データを可視化するための Java アプリケーションを使用することで、読みやすいグラフを生成することができます。このソフトウエアは PDF 形式のレポートにも対応しているほか、リアルタイムなデータとファイルに保存された過去データの両方に対応しています。 kSar は BSD ライセンスで提供されています。詳しくは <link xlink:href="https://sourceforge.net/projects/ksar/"/> をお読みください。</para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-system">
  <title>システム情報</title>

  <para/>

  <sect2 xml:id="sec-util-system-iostat">
   <title>デバイスの負荷情報: <command>iostat</command></title>
   <para>システムのデバイス負荷を監視したい場合は、 <command>iostat</command> をお使いください。このソフトウエアは、お使いのシステムに接続された複数のディスクの間で、負荷を分散させたいような場合に有用なレポートを生成します。</para>
   <para><command>iostat</command> を使用するには、 <package>sysstat</package> パッケージをインストールしてください。</para>
   <para>最初の <command>iostat</command> レポートには、システムの起動以降の収集データが表示されます。 2 つ目以降のレポートには、前回のレポート生成以降の収集データが表示されます。</para>
<screen>&prompt.user;iostat
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          17.68    4.49    4.24    0.29    0.00   73.31

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sdb               2.02        36.74        45.73    3544894    4412392
sda               1.05         5.12        13.47     493753    1300276
sdc               0.02         0.14         0.00      13641         37</screen>
   <para>この方法で <command>iostat</command> を動作させることで、まずはスループットが期待通りの値になっているかどうかを確認することができます。ただし、原因については示されません。原因を調べたい場合は、 <command>iostat</command> <option>-x</option> のように入力して実行し、さらに詳しい拡張レポートを生成してください。拡張レポートには、平均キューサイズや平均待機時間などの追加情報が含まれます。なお、動作していないブロックデバイスを除外して表示したい場合は、 <option>-z</option> オプションを追加してください。それぞれの列の意味について、詳しくは <command>iostat</command> のマニュアルページ ( <command>man 1 iostat</command> ) をお読みください。</para>
   <remark>
    The man page seemed clear enough on the column titles. What might help
    additionally though is some kind of practical guide like:
    "if (this value) is (lower/higher than expected), check whether
    (this config is set/this hardware is working)".
    - sknorr, 2015-10-09
   </remark>
   <para>指定したデバイスを指定した間隔で監視することもできます。たとえば 3 秒間隔で合計 5 回、 <systemitem>sda</systemitem> デバイスを監視したい場合は、下記のように実行します:</para>
<screen>&prompt.user;<command>iostat</command> -p sda 3 5</screen>
   <para>ネットワークファイルシステム (NFS) の統計情報を表示したい場合は、下記に示す 2 種類の類似ユーティリティをお使いいただくことができます:</para>
   <itemizedlist>
    <listitem>
     <para><command>nfsiostat-sysstat</command>: <package>sysstat</package> パッケージ内に含まれています。</para>
    </listitem>
    <listitem>
     <para><command>nfsiostat</command>: <package>nfs-client</package> パッケージ内に含まれています。</para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-util-system-mpstat-monitoring">
   <title>プロセッサ動作の監視: <command>mpstat</command></title>
   <para><command>mpstat</command> ユーティリティは、利用可能なプロセッサに対して、動作状況を調べることができます。お使いのシステムにプロセッサが 1 つしか接続されていない場合、グローバルな平均統計情報が出力されます。</para>
   <para>間隔の指定は <command>iostat</command> コマンドと同じです。たとえば <command>mpstat 2 5</command> のように入力して実行すると、 2 秒間隔で合計 5 回のレポートを生成します。</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;mpstat 2 5
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

13時51分10秒  CPU   %usr  %nice  %sys  %iowait  %irq  %soft  %steal  %guest  %gnice   %idle
13時51分12秒  all   8,27   0,00  0,50     0,00  0,00   0,00    0,00    0,00    0,00   91,23
13時51分14秒  all  46,62   0,00  3,01     0,00  0,00   0,25    0,00    0,00    0,00   50,13
13時51分16秒  all  54,71   0,00  3,82     0,00  0,00   0,51    0,00    0,00    0,00   40,97
13時51分18秒  all  78,77   0,00  5,12     0,00  0,00   0,77    0,00    0,00    0,00   15,35
13時51分20秒  all  51,65   0,00  4,30     0,00  0,00   0,51    0,00    0,00    0,00   43,54
平均値:       all  47,85   0,00  3,34     0,00  0,00   0,40    0,00    0,00    0,00   48,41</screen>
   <para><command>mpstat</command> のデータは、下記のようにして判断します:</para>
   <itemizedlist>
    <listitem>
     <para>まずは <guimenu>%usr</guimenu> と <guimenu>%sys</guimenu> の比率を調べます。たとえば 10:1 のように、 <guimenu>%usr</guimenu> のほうがずっと高い場合、負荷はアプリケーション側のコードによって生み出されているもので、アプリケーション側の調査を行なう必要があることを示しています。逆に 1:10 のように、 <guimenu>%sys</guimenu> のほうがずっと高い場合、負荷はカーネル側が生み出しているもので、カーネルのチューニングを検討する必要があることになります。このほか、アプリケーションがなぜカーネルを頼りがちなのかや、それを軽減できないかを調べる手もあります。</para>
    </listitem>
    <listitem>
     <para>システム全体では負荷が軽いのに、特定の CPU に負荷が集中しているような事象が発生していないかどうかを調べます。特定の CPU に負荷が集中する場合、それは負荷が適切に並列化されていないことを表わしているため、より高速で少ない数のプロセッサの環境に構成し直したほうが良いことを示していることもあります。</para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-util-system-turbostat" arch="x86_64">
   <title>プロセッサ周波数の監視: <command>turbostat</command></title>
   <para><command>turbostat</command> は &amd64;/&intel64; プロセッサに対して、周波数や負荷、温度や速度を表示するためのコマンドです。このコマンドには 2 つのモードが存在しています。 <command>turbostat</command> の後ろに実行したいコマンドラインを指定した場合は、指定したコマンドラインを実行し、完了時に統計情報を表示します。コマンドラインを指定しない場合、 5 秒間隔で統計情報を更新して表示します。なお <command>turbostat</command> を実行するには、 <systemitem>msr</systemitem> カーネルモジュールを読み込んでおく必要があります。</para>
   <screen>&prompt.sudo;turbostat find /etc -type d -exec true {} \;
0.546880 sec
     CPU Avg_MHz   Busy% Bzy_MHz TSC_MHz
       -     416   28.43    1465    3215
       0     631   37.29    1691    3215
       1     416   27.14    1534    3215
       2     270   24.30    1113    3215
       3     406   26.57    1530    3214
       4     505   32.46    1556    3214
       5     270   22.79    1184    3214</screen>
   <para>出力される内容は CPU によって異なります。温度や消費電力などの追加情報を表示したい場合は、 <option>--debug</option> オプションを指定してください。コマンドラインオプションの説明や、各項目の意味について、詳しくは <command>man 8 turbostat</command> をお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-util-system-pidstat">
   <title>タスクの監視: <command>pidstat</command></title>
   <para>お使いのシステム内で、どの処理 (プロセス) が重いのかを調べたい場合は、 <command>pidstat</command> コマンドをお使いください。選択したプロセスのみの動作状況を表示することができるほか、 Linux カーネルが管理する全てのプロセスを表示することもできます。また、生成するレポート数や生成間隔なども指定することができます。</para>
   <para>たとえば <command>pidstat</command> <option>-C</option> firefox 2 3 のように入力して実行すると、コマンド名に <quote>firefox</quote> という文字列を含むプロセスに関する情報を出力します。レポートは 2 秒間隔で計 3 回出力します。</para>
<screen>&prompt.root;pidstat -C firefox 2 3
Linux 4.4.21-64-default (&wsI;)         2016年12月10日  _x86_64_        (2 CPU)

14時09分11秒    UID       PID    %usr %system  %guest    %CPU   CPU  Command
14時09分13秒   1000       387   22,77    0,99    0,00   23,76     1  firefox

14時09分13秒    UID       PID    %usr %system  %guest    %CPU   CPU  Command
14時09分15秒   1000       387   46,50    3,00    0,00   49,50     1  firefox

14時09分15秒    UID       PID    %usr %system  %guest    %CPU   CPU  Command
14時09分17秒   1000       387   60,50    7,00    0,00   67,50     1  firefox

平均値:       UID       PID    %usr %system  %guest    %CPU   CPU  Command
平均値:      1000       387   43,19    3,65    0,00   46,84     -  firefox</screen>
   <para>同様に、 <command>pidstat</command> <option>-d</option> と入力して実行することで、プロセスがどれだけ I/O を実行しているのか、その I/O の間にプロセスが休眠状態にあるのかどうか、そしてどれだけの時間タスクが停止していたのかを調べることができます。</para>
  </sect2>

  <sect2 xml:id="sec-util-dmesg">
   <title>カーネルのリングバッファの表示: <command>dmesg</command></title>
   <para>Linux カーネルは出力したメッセージをリングバッファ内に保持しています。保持しているメッセージを表示したい場合は、 <command>dmesg -T</command> のように入力して実行します。</para>
   <para>ここに保持されていない古いメッセージは、 &systemd; のジャーナル内に保存されています。ジャーナルに関する詳細は、 <xref linkend="cha-journalctl"/> をお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-util-system-lsof">
   <title>開いているファイルの一覧: <command>lsof</command></title>
   <para>プロセス ID を指定して開いているファイルを表示したい場合は、 <command>lsof</command> <option>-p</option> <replaceable>プロセス_ID</replaceable> のように入力して実行します。たとえば現在のシェルが開いているファイルを表示したい場合は、下記のようにします:</para>
<screen>&prompt.root;lsof -p $$
COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF  NODE NAME
bash    8842 root  cwd    DIR   0,32      222  6772 /root
bash    8842 root  rtd    DIR   0,32      166   256 /
bash    8842 root  txt    REG   0,32   656584 31066 /bin/bash
bash    8842 root  mem    REG   0,32  1978832 22993 /lib64/libc-2.19.so
[...]
bash    8842 root    2u   CHR  136,2      0t0     5 /dev/pts/2
bash    8842 root  255u   CHR  136,2      0t0     5 /dev/pts/2</screen>
   <para>ここで、 <literal>$$</literal> は特殊なシェル変数で、現在使用しているシェルのプロセス ID を表わします。</para>
   <para><option>-i</option> オプションを指定すると、 <command>lsof</command> はネットワーク接続を表示することができます:</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;lsof -i
COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
wickedd-d  917 root    8u  IPv4  16627      0t0  UDP *:bootpc
wickedd-d  918 root    8u  IPv6  20752      0t0  UDP [fe80::5054:ff:fe72:5ead]:dhcpv6-client
sshd      3152 root    3u  IPv4  18618      0t0  TCP *:ssh (LISTEN)
sshd      3152 root    4u  IPv6  18620      0t0  TCP *:ssh (LISTEN)
master    4746 root   13u  IPv4  20588      0t0  TCP localhost:smtp (LISTEN)
master    4746 root   14u  IPv6  20589      0t0  TCP localhost:smtp (LISTEN)
sshd      8837 root    5u  IPv4 293709      0t0  TCP &wsI;.suse.de:ssh-&gt;&wsII;.suse.de:33619 (ESTABLISHED)
sshd      8837 root    9u  IPv6 294830      0t0  TCP localhost:x11 (LISTEN)
sshd      8837 root   10u  IPv4 294831      0t0  TCP localhost:x11 (LISTEN)</screen>
  </sect2>

  <sect2 xml:id="sec-util-system-udevmonitor">
   <title>カーネルと udev のイベントシーケンスの表示: <command>udevadm monitor</command></title>
   <para><command>udevadm monitor</command> のように入力して実行すると、カーネルが生成する udev のイベントや udev ルールによって送信されたイベントのほか、そのイベントのデバイスパス (DEVPATH) をコンソールに出力することができます。下記は USB メモリを接続した場合のイベント例です:</para>
   <note>
    <title>udev イベントの監視について</title>
    <para><command>udevadm</command> コマンドを実行して udev イベントを監視するには、 root 権限が必要となります。</para>
    <remark>aherrmann, 2016-09-30: I think normal users are able to
    run this command; in general double check all examples in this
    chapter whether they really need to be run as root.</remark>
   </note>
<screen>UEVENT[1138806687] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2
UEVENT[1138806687] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2/4-2.2
UEVENT[1138806687] add@/class/scsi_host/host4
UEVENT[1138806687] add@/class/usb_device/usbdev4.10
UDEV  [1138806687] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2
UDEV  [1138806687] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2/4-2.2
UDEV  [1138806687] add@/class/scsi_host/host4
UDEV  [1138806687] add@/class/usb_device/usbdev4.10
UEVENT[1138806692] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2/4-2.2
UEVENT[1138806692] add@/block/sdb
UEVENT[1138806692] add@/class/scsi_generic/sg1
UEVENT[1138806692] add@/class/scsi_device/4:0:0:0
UDEV  [1138806693] add@/devices/pci0000:00/0000:00:1d.7/usb4/4-2/4-2.2/4-2.2
UDEV  [1138806693] add@/class/scsi_generic/sg1
UDEV  [1138806693] add@/class/scsi_device/4:0:0:0
UDEV  [1138806693] add@/block/sdb
UEVENT[1138806694] add@/block/sdb/sdb1
UDEV  [1138806694] add@/block/sdb/sdb1
UEVENT[1138806694] mount@/block/sdb/sdb1
UEVENT[1138806697] umount@/block/sdb/sdb1</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-processes">
  <title>プロセス</title>

  <para/>

  <sect2 xml:id="sec-util-processes-ipcs">
   <title>プロセス間通信の情報: <command>ipcs</command></title>
   <para><command>ipcs</command> コマンドは、現在使用されている IPC リソースの一覧を表示します:</para>
<screen>&prompt.root;ipcs
------ メッセージキュー --------
キー       msqid      所有者     権限        使用済みバイト数  メッセージ

------ 共有メモリセグメント --------
キー       shmid      所有者     権限        バイト     nattch     状態
0x00000000 65536      tux        600        524288     2          dest
0x00000000 98305      tux        600        4194304    2          dest
0x00000000 884738     root       600        524288     2          dest
0x00000000 786435     tux        600        4194304    2          dest
0x00000000 12058628   tux        600        524288     2          dest
0x00000000 917509     root       600        524288     2          dest
0x00000000 12353542   tux        600        196608     2          dest
0x00000000 12451847   tux        600        524288     2          dest
0x00000000 11567114   root       600        262144     1          dest
0x00000000 10911763   tux        600        2097152    2          dest
0x00000000 11665429   root       600        2336768    2          dest
0x00000000 11698198   root       600        196608     2          dest
0x00000000 11730967   root       600        524288     2          dest

------ セマフォ配列 --------
キー       semid      所有者     権限       nsems
0xa12e0919 32768      tux        666        2
</screen>
  </sect2>

  <sect2 xml:id="sec-util-processes-ps">
   <title>プロセス一覧: <command>ps</command></title>
   <para><command>ps</command> コマンドはプロセスの一覧を表示します。このコマンドでは、ほとんどのパラメータをハイフン無しで指定しなければなりません。簡潔なヘルプを読みたい場合は <command>ps --help</command> と入力して実行し、より詳細な説明を読みたい場合はマニュアルページを参照してください。</para>
   <para>ユーザとコマンドライン情報を含めて全てのプロセスを一覧表示するには、 <command>ps axu</command> のように入力して実行します:</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.user;ps axu
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.3  34376  4608 ?        Ss   Jul24   0:02 /usr/lib/systemd/systemd
root         2  0.0  0.0      0     0 ?        S    Jul24   0:00 [kthreadd]
root         3  0.0  0.0      0     0 ?        S    Jul24   0:00 [ksoftirqd/0]
root         5  0.0  0.0      0     0 ?        S&lt;   Jul24   0:00 [kworker/0:0H]
root         6  0.0  0.0      0     0 ?        S    Jul24   0:00 [kworker/u2:0]
root         7  0.0  0.0      0     0 ?        S    Jul24   0:00 [migration/0]
[...]
&exampleuser_plain;      12583  0.0  0.1 185980  2720 ?        Sl   10:12   0:00 /usr/lib/gvfs/gvfs-mtp-volume-monitor
&exampleuser_plain;      12587  0.0  0.1 198132  3044 ?        Sl   10:12   0:00 /usr/lib/gvfs/gvfs-gphoto2-volume-monitor
&exampleuser_plain;      12591  0.0  0.1 181940  2700 ?        Sl   10:12   0:00 /usr/lib/gvfs/gvfs-goa-volume-monitor
&exampleuser_plain;      12594  8.1 10.6 1418216 163564 ?      Sl   10:12   0:03 /usr/bin/gnome-shell
&exampleuser_plain;      12600  0.0  0.3 393448  5972 ?        Sl   10:12   0:00 /usr/lib/gnome-settings-daemon-3.0/gsd-printer
&exampleuser_plain;      12625  0.0  0.6 227776 10112 ?        Sl   10:12   0:00 /usr/lib/gnome-control-center-search-provider
&exampleuser_plain;      12626  0.5  1.5 890972 23540 ?        Sl   10:12   0:00 /usr/bin/nautilus --no-default-window
[...]</screen>
   <para>どれだけの数の <command>sshd</command> プロセスが動作しているのかを調べたい場合は、 <option>-p</option> オプションとともに <command>pidof</command> コマンドを併用してください。 <command>pidof</command> コマンドは、指定した名前のプロセス ID を列挙するためのコマンドです。</para>
<screen>&prompt.user;ps -p $(pidof sshd)
  PID TTY      STAT   TIME COMMAND
 1545 ?        Ss     0:00 /usr/sbin/sshd -D
 4608 ?        Ss     0:00 sshd: root@pts/0</screen>
   <para>プロセス一覧の表示は、必要に応じて書式を変更することができます。 <option>L</option> オプションを使用すると、全てのキーワードの一覧を表示することができます。たとえばメモリの使用率順に全てのプロセスを一覧表示したい場合は、下記のように入力して実行します:</para>
<screen>&prompt.user;ps ax --format pid,rss,cmd --sort rss
  PID   RSS CMD
  PID   RSS CMD
    2     0 [kthreadd]
    3     0 [ksoftirqd/0]
    4     0 [kworker/0:0]
    5     0 [kworker/0:0H]
    6     0 [kworker/u2:0]
    7     0 [migration/0]
    8     0 [rcu_bh]
[...]
12518 22996 /usr/lib/gnome-settings-daemon-3.0/gnome-settings-daemon
12626 23540 /usr/bin/nautilus --no-default-window
12305 32188 /usr/bin/Xorg :0 -background none -verbose
12594 164900 /usr/bin/gnome-shell</screen>
   <variablelist>
    <title>便利な <command>ps</command> のオプション</title>
    <varlistentry>
     <term><command>ps aux</command> <option>--sort <replaceable>列名</replaceable></option></term>
     <listitem>
      <para><replaceable>列名</replaceable> で指定した項目の値で並べ替えを行ないます。 <replaceable>列名</replaceable> には下記の名前を指定することができます:</para>
      <simplelist>
       <member><option>pmem</option>: 物理メモリの比率</member>
       <member><option>pcpu</option>: CPU 使用率</member>
       <member><option>rss</option>: 常駐セットサイズ (スワップ領域に移動していない物理メモリ)</member>
      </simplelist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ps axo pid,%cpu,rss,vsz,args,wchan</command></term>
     <listitem>
      <para>各プロセスに対して、プロセス ID, CPU 使用率, メモリサイズ (常駐および仮想), 名前, システムコールをそれぞれ表示します。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ps axfo pid,args</command></term>
     <listitem>
      <para>プロセスをツリー形式で表示します。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-util-pstree">
   <title>プロセスのツリー表示: <command>pstree</command></title>
   <para><command>pstree</command> コマンドは、プロセスの一覧をツリー形式で出力します:</para>
<!-- fs: Updated on 2014-02-13 -->
<screen>&prompt.user;pstree
systemd---accounts-daemon---{gdbus}
        |                 |-{gmain}
        |-at-spi-bus-laun---dbus-daemon
        |                 |-{dconf worker}
        |                 |-{gdbus}
        |                 |-{gmain}
        |-at-spi2-registr---{gdbus}
        |-cron
        |-2*[dbus-daemon]
        |-dbus-launch
        |-dconf-service---{gdbus}
        |               |-{gmain}
        |-gconfd-2
        |-gdm---gdm-simple-slav---Xorg
        |     |                 |-gdm-session-wor---gnome-session---gnome-setti+
        |     |                 |                 |               |-gnome-shell+++
        |     |                 |                 |               |-{dconf work+
        |     |                 |                 |               |-{gdbus}
        |     |                 |                 |               |-{gmain}
        |     |                 |                 |-{gdbus}
        |     |                 |                 |-{gmain}
        |     |                 |-{gdbus}
        |     |                 |-{gmain}
        |     |-{gdbus}
        |     |-{gmain}
[...]</screen>
   <para><option>-p</option> オプションを指定すると、プロセス名に加えてプロセス ID が表示されるようになります。コマンドラインについても表示したい場合は、 <option>-a</option> を指定してください。</para>
  </sect2>

  <sect2 xml:id="sec-util-processes-top">
   <title>プロセスの一覧表示: <command>top</command></title>
   <para><command>top</command> (<quote>Table Of Processes</quote> (プロセス表) の略) コマンドは、 2 秒間隔で更新されるプロセス表を表示します。プログラムを終了するには <keycap>Q</keycap> を押します。 <option>-n 1</option> とパラメータを指定すると、プロセス表を一度だけ表示して終了します。下記は <command>top -n 1</command> コマンドの出力例です:</para>
   <remark>aherrmann, 2016-09-30: It seems that default refressh time
   (called delay) differs, for example 3 seconds</remark>
<screen>&prompt.user;top -n 1
Tasks: 128 total,   1 running, 127 sleeping,   0 stopped,   0 zombie
%Cpu(s):  2.4 us,  1.2 sy,  0.0 ni, 96.3 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem:   1535508 total,   699948 used,   835560 free,      880 buffers
KiB Swap:  1541116 total,        0 used,  1541116 free.   377000 cached Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
    1 root      20   0  116292   4660   2028 S 0.000 0.303   0:04.45 systemd
    2 root      20   0       0      0      0 S 0.000 0.000   0:00.00 kthreadd
    3 root      20   0       0      0      0 S 0.000 0.000   0:00.07 ksoftirqd+
    5 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 kworker/0+
    6 root      20   0       0      0      0 S 0.000 0.000   0:00.00 kworker/u+
    7 root      rt   0       0      0      0 S 0.000 0.000   0:00.00 migration+
    8 root      20   0       0      0      0 S 0.000 0.000   0:00.00 rcu_bh
    9 root      20   0       0      0      0 S 0.000 0.000   0:00.24 rcu_sched
   10 root      rt   0       0      0      0 S 0.000 0.000   0:00.01 watchdog/0
   11 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 khelper
   12 root      20   0       0      0      0 S 0.000 0.000   0:00.00 kdevtmpfs
   13 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 netns
   14 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 writeback
   15 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 kintegrit+
   16 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 bioset
   17 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 crypto
   18 root       0 -20       0      0      0 S 0.000 0.000   0:00.00 kblockd</screen>
   <para>既定では、出力は CPU の使用率 (<guimenu>%CPU</guimenu> 列) の降順に並んでいます。下記のキー入力を行なうことで、並べ替えに使用する項目を変更することができます (CPU の使用率に戻したい場合は、 <keycombo> <keycap function="shift"/> <keycap>P</keycap> </keycombo> を押します) :</para>
   <simplelist>
    <member><keycombo><keycap function="shift"/><keycap>M</keycap></keycombo> : 常駐メモリ ( <guimenu>RES</guimenu> )</member>
    <member><keycombo><keycap function="shift"/><keycap>N</keycap></keycombo> : プロセス ID ( <guimenu>PID</guimenu> )</member>
    <member><keycombo><keycap function="shift"/><keycap>T</keycap></keycombo> : CPU 時間 ( <guimenu>TIME+</guimenu> )</member>
   </simplelist>
   <para>その他の項目で並べ替えを行ないたい場合は、 <keycap>F</keycap> を押し表示された項目から選んでください。並べ替えの順序を逆にしたい場合は、 <keycombo> <keycap function="shift"/> <keycap>R</keycap> </keycombo> を押してください。</para>
   <para>また、 <option>-U <replaceable>UID</replaceable></option> のようにオプションを指定することで、特定のユーザに結びついているプロセスのみを監視することができます。なお、 <replaceable>UID</replaceable> はユーザの ID を表わします。現在使用しているユーザのプロセスを表示したい場合は、 <command>top -U $(id -u)</command> と入力して実行してください。</para>
  </sect2>

  <sect2 xml:id="sec-util-processes-virtualtop" arch="zseries">
   <title>&zseries; ハイパーバイザモニタ: <command>hyptop</command></title>
   <remark condition="generic"> 2011-07-18 - fs: Fate #311766 </remark>
   <para><command>hyptop</command> は &zseries; のハイパーバイザ環境に対する動的でリアルタイムな表示を行なうプログラムで、 debugfs を介したカーネルインフラストラクチャを使用します。このプログラムは z/VM もしくは LPAR のハイパーバイザで動作します。利用可能なデータによっても異なりますが、たとえば動作中の LPAR や z/VM ゲストの CPU 使用率やメモリ使用量などを表示することができます。また、 <command>top</command> に似た curses ベースのユーザインターフェイスが提供されています。なお、 <command>hyptop</command> には下記の 2 つのウインドウが表示されます:</para>
   <itemizedlist>
    <listitem>
     <para><guimenu>sys_list</guimenu> : 現在のハイパーバイザが実行しているシステムの一覧を表示します</para>
    </listitem>
    <listitem>
     <para><guimenu>sys</guimenu> : 1 つのシステムをさらに詳しく表示します</para>
    </listitem>
   </itemizedlist>
   <para><command>hyptop</command> は対話モード (既定値) で動作させることができるほか、 <option>-b</option> を指定することでバッチモードに切り替えることもできます。対話モードでヘルプを表示したい場合は、 <command>hyptop</command> を起動してから <keycap>?</keycap> を押してください。</para>
   <para>LPAR 配下の <guimenu>sys_list</guimenu> ウインドウの出力例:</para>
<screen>12:30:48 | CPU-T: IFL(18) CP(3) UN(3)     ?=help
system  #cpu    cpu   mgm    Cpu+  Mgm+   online
(str)    (#)    (%)   (%)    (hm)  (hm)    (dhm)
H05LP30   10 461.14 10.18 1547:41  8:15 11:05:59
H05LP33    4 133.73  7.57  220:53  6:12 11:05:54
H05LP50    4  99.26  0.01  146:24  0:12 10:04:24
H05LP02    1  99.09  0.00  269:57  0:00 11:05:58
TRX2CFA    1   2.14  0.03    3:24  0:04 11:06:01
H05LP13    6   1.36  0.34    4:23  0:54 11:05:56
TRX1      19   1.22  0.14   13:57  0:22 11:06:01
TRX2      20   1.16  0.11   26:05  0:25 11:06:00
H05LP55    2   0.00  0.00    0:22  0:00 11:05:52
H05LP56    3   0.00  0.00    0:00  0:00 11:05:52
         413 823.39 23.86 3159:57 38:08 11:06:01</screen>
   <para>z/VM 配下の "sys_list" ウインドウの出力例:</para>
<screen>12:32:21 | CPU-T: UN(16)                          ?=help
system   #cpu    cpu    Cpu+   online memuse memmax wcur
(str)     (#)    (%)    (hm)    (dhm)  (GiB)  (GiB)  (#)
T6360004    6 100.31  959:47 53:05:20   1.56   2.00  100
T6360005    2   0.44    1:11  3:02:26   0.42   0.50  100
T6360014    2   0.27    0:45 10:18:41   0.54   0.75  100
DTCVSW1     1   0.00    0:00 53:16:42   0.01   0.03  100
T6360002    6   0.00  166:26 40:19:18   1.87   2.00  100
OPERATOR    1   0.00    0:00 53:16:42   0.00   0.03  100
T6360008    2   0.00    0:37 30:22:55   0.32   0.75  100
T6360003    6   0.00 3700:57 53:03:09   4.00   4.00  100
NSLCF1      1   0.00    0:02 53:16:41   0.03   0.25  500
EREP        1   0.00    0:00 53:16:42   0.00   0.03  100
PERFSVM     1   0.00    0:53  2:21:12   0.04   0.06    0
TCPIP       1   0.00    0:01 53:16:42   0.01   0.12 3000
DATAMOVE    1   0.00    0:05 53:16:42   0.00   0.03  100
DIRMAINT    1   0.00    0:04 53:16:42   0.01   0.03  100
DTCVSW2     1   0.00    0:00 53:16:42   0.01   0.03  100
RACFVM      1   0.00    0:00 53:16:42   0.01   0.02  100
           75 101.57 5239:47 53:16:42  15.46  22.50 3000</screen>
   <para>LPAR 配下の <guimenu>sys</guimenu> ウインドウの出力例:</para>
<screen>14:08:41 | H05LP30 | CPU-T: IFL(18) CP(3) UN(3)                  ? = help
cpuid   type    cpu   mgm visual.
(#)    (str)    (%)   (%) (vis)
0        IFL  96.91  1.96 |############################################ |
1        IFL  81.82  1.46 |#####################################        |
2        IFL  88.00  2.43 |########################################     |
3        IFL  92.27  1.29 |##########################################   |
4        IFL  83.32  1.05 |#####################################        |
5        IFL  92.46  2.59 |##########################################   |
6        IFL   0.00  0.00 |                                             |
7        IFL   0.00  0.00 |                                             |
8        IFL   0.00  0.00 |                                             |
9        IFL   0.00  0.00 |                                             |
             534.79 10.78</screen>
   <para>z/VM 配下の <guimenu>sys</guimenu> の出力例:</para>
<screen>15:46:57 | T6360003 | CPU-T: UN(16)                  ? = help
cpuid     cpu visual
(#)       (%) (vis)
0      548.72 |#########################################    |
        548.72</screen>
  </sect2>

  <sect2 xml:id="sec-util-processes-iotop">
   <title>top コマンドに似た I/O モニタ: <command>iotop</command></title>
   <para><command>iotop</command> ユーティリティは、プロセスやスレッドごとの I/O 使用率を表示します。</para>
   <note>
    <title><command>iotop</command> のインストールについて</title>
    <para><command>iotop</command> は既定ではインストールされません。 &rootuser; で <command>zypper in iotop</command> と入力して実行し、インストールを行なってください。</para>
   </note>
   <para><command>iotop</command> は一定のサンプリング期間内に行なわれた読み込みおよび書き込みの処理を、プロセスごとにまとめて表示します。スワップ領域の読み込みや I/O の完了待ちなどで消費されたプロセス時間の割合も表示することができます。また、各プロセスの I/O 優先度 (クラス／レベル) も表示されます。これに加えて、システム全体での読み込みおよび書き込みの処理を、インターフェイスの上部に表示します。</para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para><keycap function="left"/> や <keycap function="right"/> のキーを押すことで、並べ替える項目を選択することができます。</para>
    </listitem>
    <listitem>
     <para><keycap>R</keycap> を押すと並び順を逆にすることができます。</para>
    </listitem>
    <listitem>
     <para><keycap>O</keycap> を押すと、全てのプロセスおよびスレッドを表示するビュー (既定の表示) と、 I/O が実際に行なわれているもののみを表示するビューとの間を切り替えることができます (この機能は、コマンドラインに <option>--only</option> オプションを追加した場合に似た表示になります) 。</para>
    </listitem>
    <listitem>
     <para><keycap>P</keycap> を押すと、スレッド表示 (既定の表示) とプロセス表示との間を切り替えることができます (この機能は、コマンドラインに <option>--only</option> オプションを追加した場合に似た表示になります) 。</para>
    </listitem>
    <listitem>
     <para><keycap>A</keycap> を押すと、現在の I/O 帯域 (既定の表示) と <command>iotop</command> 起動時からの累積値表示との間を切り替えることができます  (この機能は、コマンドラインに <option>--only</option> オプションを追加した場合に似た表示になります) 。</para>
    </listitem>
    <listitem>
     <para><keycap>I</keycap> を押すと、スレッドやプロセス内のスレッドに対して、優先順位を変更することができます。</para>
    </listitem>
    <listitem>
     <para><keycap>Q</keycap> を押すと <command>iotop</command> を終了することができます。</para>
    </listitem>
    <listitem>
     <para>上記以外のキーを押すと、更新処理を行ないます。</para>
    </listitem>
   </itemizedlist>
   <para>下記は <command>iotop --only</command> の出力例で、ここでは <command>find</command> と <command>emacs</command> が動作しています:</para>
<screen>&prompt.root;iotop --only
Total DISK READ: 50.61 K/s | Total DISK WRITE: 11.68 K/s
  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND
 3416 be/4 &exampleuser_plain;         50.61 K/s    0.00 B/s  0.00 %  4.05 % find /
  275 be/3 root        0.00 B/s    3.89 K/s  0.00 %  2.34 % [jbd2/sda2-8]
 5055 be/4 &exampleuser_plain;          0.00 B/s    3.89 K/s  0.00 %  0.04 % emacs</screen>
   <para><command>iotop</command> コマンドはバッチモード ( <literal>-b</literal> ) でも動作させることができます。この場合、ファイルに出力して後から分析するような使い方をすることもできます。オプションの一覧について、詳しくは ( <command>man 8 iotop</command> ) で表示されるマニュアルページをお読みください。</para>
  </sect2>

  <sect2 xml:id="sec-util-processes-nice">
   <title>プロセスの優先順位設定: <command>nice</command> および <command>renice</command></title>
   <para>カーネルはプロセスの優先順位 (nice レベル, niceness) を利用して、他のプロセスとの間の CPU 時間の調整を行ないます。プロセスの <quote>nice</quote> レベルが高いほど、割り当てられる CPU 時間は少なくなります。 nice レベルは -20 (最も低い <quote>nice</quote> レベル) から 19 までの間で指定します。また、負の値の nice レベルは、 &rootuser; のみが設定可能です。</para>
   <para>niceness レベルの調整は、長時間 CPU 時間を占有し続けるような処理で、特に時間的な制約のない処理を動作させるような場合に有用です。たとえば他の処理も同時に動作しているシステム内で、カーネルのコンパイル処理を行なったりするような場合が該当します。このような処理の <quote>nice</quote> レベルを上げることで、たとえば Web サーバの処理をより優先して動作させることができるようになります。</para>
   <para><command>nice</command> コマンドに何もパラメータを指定しないで実行すると、現在の niceness を表示することができます:</para>
<screen>&prompt.user;nice
0</screen>
   <para><command>nice</command> <replaceable>コマンド</replaceable> のようにしてコマンドを実行すると、そのコマンドを起動する際に nice レベルを 10 足して実行します。また、 <command>nice</command> <option>-n <replaceable>レベル</replaceable></option> <replaceable>コマンド</replaceable> のように入力して実行すると、現在の nice レベルに指定したレベルを足して、コマンドを実行することができます。</para>
   <para>動作中のプロセスに対して nice レベルを変更したい場合は、 <command>renice</command> <replaceable>レベル</replaceable> <option>-p <replaceable>プロセス_ID</replaceable></option> のように入力して実行します。たとえば下記のようになります:</para>
<screen>&prompt.user;renice +5 3266</screen>
   <para>特定のユーザが所有する全てのプロセスの nice レベルを変更したい場合は、 <option>-u <replaceable>ユーザ</replaceable></option> のように指定して実行します。 <remark>sknorr, 2014-07-23: as far as verbs go, "(to) renice" is pretty terrible</remark> プロセスグループを指定して nice レベルを変更する場合は、 <option>-g <replaceable>プロセスグループ_ID</replaceable></option> のように入力して実行します。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-memory">
  <title>メモリ</title>

  <para/>

  <sect2 xml:id="sec-util-memory-free">
   <title>メモリ使用率の表示: <command>free</command></title>
   <para><command>free</command> コマンドはメモリとスワップ領域の使用量を表示します。それぞれ空き／使用中のメモリとスワップ領域の詳細が出力されます:</para>
<screen>&prompt.user;free
             total       used       free     shared    buffers     cached
Mem:      32900500   32703448     197052          0     255668    5787364
-/+ buffers/cache:   26660416    6240084
Swap:      2046972     304680    1742292</screen>
   <para>表示の単位を変更したい場合は、 <option>-b</option> (バイト単位), <option>-k</option> (キロバイト単位), <option>-m</option> (メガバイト単位), <option>-g</option> (ギガバイト単位) のように指定します。 <option>-s <replaceable>遅延時間</replaceable></option> のようにオプションを指定すると、 <replaceable>遅延時間</replaceable> で指定した時間ごとに更新を行なって表示します。たとえば <command>free -s 1.5</command> のように入力して実行すると、 1.5 秒間隔で更新して表示します。</para>
  </sect2>

  <!-- Info provider: Michal Hocko <mhocko@suse.cz> -->
  <sect2 xml:id="sec-util-memory-meminfo">
   <title>詳細なメモリ使用率情報の取得: <filename>/proc/meminfo</filename></title>
   <para><command>free</command> で出力されるメモリ使用率よりも詳しい情報を取得したい場合は、 <filename>/proc/meminfo</filename> ファイルをお使いください。このファイルは <command>free</command> コマンドも使用しているファイルです。 64 ビット環境での出力例を下記に示します。なお、 32 ビット環境ではメモリの管理方式が異なるため、出力が少し異なることに注意してください:</para>
<screen>MemTotal:        1942636 kB
MemFree:         1294352 kB
MemAvailable:    1458744 kB
Buffers:             876 kB
Cached:           278476 kB
SwapCached:            0 kB
Active:           368328 kB
Inactive:         199368 kB
Active(anon):     288968 kB
Inactive(anon):    10568 kB
Active(file):      79360 kB
Inactive(file):   188800 kB
Unevictable:          80 kB
Mlocked:              80 kB
SwapTotal:       2103292 kB
SwapFree:        2103292 kB
Dirty:                44 kB
Writeback:             0 kB
AnonPages:        288592 kB
Mapped:            70444 kB
Shmem:             11192 kB
Slab:              40916 kB
SReclaimable:      17712 kB
SUnreclaim:        23204 kB
KernelStack:        2000 kB
PageTables:        10996 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:     3074608 kB
Committed_AS:    1407208 kB
VmallocTotal:   34359738367 kB
VmallocUsed:      145996 kB
VmallocChunk:   34359588844 kB
HardwareCorrupted:     0 kB
AnonHugePages:     86016 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:       79744 kB
DirectMap2M:     2017280 kB</screen>
   <para>項目の意味は下記のとおりです:</para>
   <!--
   Helpful:
   + https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/proc.txt?id=HEAD#n809
   + http://wiki.fcctt.org/index.php?title=FC39Understanding_Virtual_Memory_Statistics_in_/proc/meminfo/en
   - sknorr, 2015-10-06
   -->
   <variablelist>
    <varlistentry>
     <term><guimenu>MemTotal</guimenu></term>
     <listitem>
      <para>搭載されているメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>MemFree</guimenu></term>
     <listitem>
      <para>未使用のメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>MemAvailable</guimenu></term>
     <listitem>
      <para>新しく起動するアプリケーションで、スワップ処理を行なわずに確保できるメモリ量の見積もり値です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Buffers</guimenu></term>
     <listitem>
      <para>ファイルシステムのメタデータを含むメモリ内のバッファキャッシュ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Cached</guimenu></term>
     <listitem>
      <para>メモリ内のページキャッシュ量です。この量にはバッファキャッシュとスワップキャッシュが含まれていませんが、 <guimenu>Shmem</guimenu> のメモリ量は含まれています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>SwapCached</guimenu></term>
     <listitem>
      <para>スワップアウトされたメモリに対するページキャッシュ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Active</guimenu> , <guimenu>Active(anon)</guimenu> , <guimenu>Active(file)</guimenu></term>
     <listitem>
      <para>必要とされたり明示的に指定されたりしない限り回収されることのない、使用中のメモリ量。 <guimenu>Active</guimenu> は <guimenu>Active(anon)</guimenu> と <guimenu>Active(file)</guimenu> の合計値です:</para>
      <itemizedlist>
       <listitem>
        <para><guimenu>Active(anon)</guimenu> はスワップ領域に結びつけられているメモリ量です。この量には、コピーオンライト後のプライベート, 共有匿名マッピング, プライベートファイルページが含まれています。</para>
       </listitem>
       <listitem>
        <para><guimenu>Active(file)</guimenu> はファイルシステムに結びつけられているメモリ量です。</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Inactive</guimenu> , <guimenu>Inactive(anon)</guimenu> , <guimenu>Inactive(file)</guimenu></term>
     <listitem>
      <para>通常は真っ先に回収される、直近では未使用のメモリ量です。 <guimenu>Inactive</guimenu> は <guimenu>Inactive(anon)</guimenu> と <guimenu>Inactive(file)</guimenu> の合計値です:</para>
      <itemizedlist>
       <listitem>
        <para><guimenu>Inactive(anon)</guimenu> はスワップ領域に結びつけられているメモリ量です。この量には、コピーオンライト後のプライベート, 共有匿名マッピング, プライベートファイルページが含まれています。</para>
       </listitem>
       <listitem>
        <para><guimenu>Inactive(file)</guimenu> はファイルシステムに結びつけられているメモリ量です。</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Unevictable</guimenu></term>
     <listitem>
      <para>回収することのできない (たとえば <guimenu>Mlocked</guimenu> されているものや RAM ディスクとして使用されているものなど) メモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Mlocked</guimenu></term>
     <listitem>
      <para><systemitem>mlock</systemitem> システムコールに結びつけられているメモリ量です。 <systemitem>mlock</systemitem> はプロセスに対して、仮想メモリをどの物理メモリに割り当てるのかを指定できる仕組みです。しかしながら、 <systemitem>mlock</systemitem> はその配置を保証できるものではありません。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>SwapTotal</guimenu></term>
     <listitem>
      <para>スワップ領域の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>SwapFree</guimenu></term>
     <listitem>
      <para>未使用のスワップ領域の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Dirty</guimenu></term>
     <listitem>
      <para>ディスクに書き込むべきデータを保持していて、ディスクへの書き込みを待っているメモリの量です。 <guimenu>Dirty</guimenu> に指定されたデータはアプリケーション側から明示的に同期を行なうか、しばらくしてカーネルが同期を行なうことになります。この <guimenu>Dirty</guimenu> 領域が大きい場合、ディスクへの書き込みに時間を要することが考えられます。また、任意の時点での <guimenu>Dirty</guimenu> 領域のサイズは、 <command>sysctl</command> パラメータの <literal>vm.dirty_ratio</literal> もしくは <literal>vm.dirty_bytes</literal> で設定することができます (詳しくは <xref linkend="cha-tuning-memory-usage-writeback"/> をお読みください) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Writeback</guimenu></term>
     <listitem>
      <para>現在ディスクに書き込もうとしているメモリの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Mapped</guimenu></term>
     <listitem>
      <para><systemitem>mmap</systemitem> システムコールで確保されたメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Shmem</guimenu></term>
     <listitem>
      <para>IPC データや <systemitem>tmpfs</systemitem> 、および共有匿名メモリなどのプロセス間共有メモリの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Slab</guimenu></term>
     <listitem>
      <para>カーネルの内部データ構造向けの割り当て済みメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>SReclaimable</guimenu></term>
     <listitem>
      <para>キャッシュ (inode, dentry ほか) などの回収可能な Slab セクションの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>SUnreclaim</guimenu></term>
     <listitem>
      <para>回収することのできない Slab セクションの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>KernelStack</guimenu></term>
     <listitem>
      <para>システムコールを介して、アプリケーションが使用しているカーネル領域メモリの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>PageTables</guimenu></term>
     <listitem>
      <para>全てのプロセスのページテーブル専用メモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>NFS_Unstable</guimenu></term>
     <listitem>
      <para>既にサーバ宛には送信されたものの、まだコミットされていない NFS ページの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Bounce</guimenu></term>
     <listitem>
      <para>ブロックデバイスのバウンスバッファ向けに使用されているメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>WritebackTmp</guimenu></term>
     <listitem>
      <para>一時的な書き戻しバッファのために FUSE が使用するメモリ量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>CommitLimit</guimenu></term>
     <listitem>
      <para>オーバーコミット比率設定をベースにした、システムで利用できるメモリ量です。この項目は、厳密なオーバーコミットアカウンティングが有効な場合にのみ強制されます。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Committed_AS</guimenu></term>
     <listitem>
      <para>現在の負荷量で、最悪の場合に必要となるメモリ量 (物理メモリとスワップ) の合計見積もり値です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>VmallocTotal</guimenu></term>
     <listitem>
      <para>割り当て済みのカーネルの仮想アドレス領域の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>VmallocUsed</guimenu></term>
     <listitem>
      <para>カーネルの仮想アドレス領域のうち、使用中の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>VmallocChunk</guimenu></term>
     <listitem>
      <para>利用可能なカーネルの仮想アドレス領域のうち、最も大きく連続したブロックの量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>HardwareCorrupted</guimenu></term>
     <listitem>
      <para>障害の発生しているメモリの量です (ECC メモリを使用している場合にのみ検出可能です) 。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>AnonHugePages</guimenu></term>
     <listitem>
      <para>ユーザスペースのページテーブルにマップされている、匿名の hugepage の量です。これらは特にプロセス側から要求されることなく透過的に割り当てられるため、 <emphasis>透過型 hugepage</emphasis> としても知られています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>HugePages_Total</guimenu></term>
     <listitem>
      <para><systemitem>SHM_HUGETLB</systemitem> と <systemitem>MAP_HUGETLB</systemitem> 、もしくは <systemitem>hugetlbfs</systemitem> ファイルシステムを介して使用することのできる、事前割当型の hugepage の量です。 <filename>/proc/sys/vm/nr_hugepages</filename> で定義されています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>HugePages_Free</guimenu></term>
     <listitem>
      <para>利用可能な hugepage の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>HugePages_Rsvd</guimenu></term>
     <listitem>
      <para>コミット済みの hugepage の量です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>HugePages_Surp</guimenu></term>
     <listitem>
      <para><guimenu>HugePages_Total</guimenu> を越えて使用することのできる hugepage  ( <quote>surplus</quote> ) の量です。 <filename>/proc/sys/vm/nr_overcommit_hugepages</filename> で定義されています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Hugepagesize</guimenu></term>
     <listitem>
      <para>hugepage のサイズです。 &x86-64; の既定値は 2048&nbsp;KB です。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>DirectMap4k</guimenu> など</term>
     <listitem>
      <para>指定のサイズ (例: 4&nbsp;kB) でページにマップされたカーネルメモリの量です。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-util-memory-smaps">
   <title>プロセスのメモリ使用率状況の表示: smaps</title>
   <para><command>top</command> や <command>ps</command> コマンドのような標準ツールを使用しても、特定のプロセスがどれだけのメモリを使用しているのかを正確に知るのは困難です。正確なデータを必要とする場合は、カーネルバージョン 2.6.14 で導入された smaps サブシステムをお使いください。 smaps サブシステムでは、プロセスごとに <filename>/proc/<replaceable>プロセス_ID</replaceable>/smaps</filename> ファイルが提供されます。ここには、その時点で特定のプロセスが使用していたメモリ量のうち、クリーンなものとダーティなものの両方を表示することができます。また、共有メモリとプライベートメモリを区別して表示しますので、他のプロセスとは共有していないメモリ量を正確に知ることができます。詳しくは <filename>/usr/src/linux/Documentation/filesystems/proc.txt</filename> ファイル (英語, <systemitem class="resource">kernel-source</systemitem> パッケージをインストールする必要があります) をお読みください。</para>
   <para>smaps は読みにくい出力形態になってしまっています。そのため、定期的な監視としては使用せず、プロセスを特定してからお読みになることをお勧めします。</para>
  </sect2>
  <sect2 xml:id="sec-util-memory-numatop">
    <title>numaTOP</title>
    <para>
      numaTOP is a tool for NUMA (Non_uniform Memory Access)
      systems. The tool helps to identify NUMA-related performance
      bottlenecks by providing real-time analysis of a NUMA system.
    </para>
    <para>
      Generally speaking, numaTOP allows you to identify and
      investigate processes and threads with poor locality (that is
      poor ratio of local versus remote memory usage) by analyzing
      number of Remote Memory Accesses (RMA), number of Local Memory
      Accesses (LMA), and RMA/LMA ratio.
    </para>
    <para>
      numaTOP is supported on PowerPC and the following Intel Xeon
      processors: 5500-series, 6500/7500-series, 5600 series,
      E7-x8xx-series, and E5-16xx/24xx/26xx/46xx-series.
    </para>
    <para>
      numaTOP is available in the official software repositories, and
      you can install the tool using the <command>sudo zypper in
      numatop</command> command. To launch numaTOP, run the
      <command>numatop</command> command. To get an overview of
      numaTOP functionality and usage, use the <command>man
      numatop</command> command.
    </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-networking">
  <title>ネットワーク</title>

  <tip>
   <title>トラフィックシェイピングについて</title>
   <para>ネットワーク帯域が期待よりも狭いと感じた場合、まずはお使いのネットワークセグメント内で、トラフィックシェイピングルールが有効化されているかどうかをご確認ください。</para>
  </tip>

  <sect2 xml:id="sec-util-networking-ip">
   <title>基本的なネットワーク設定: <command>ip</command></title>
   <para><command>ip</command> はシステム内のネットワークインターフェイスを設定したり制御したりすることのできるパワフルなツールです。ネットワークインターフェイスの基本的な統計情報なども取得することができます。たとえばインターフェイスが動作しているかどうかや、エラーの数、廃棄されたパケットやコリジョン (衝突) などの数を表示することができます。</para>
   <para>何もパラメータを指定せずに <command>ip</command> コマンドを実行すると、ヘルプメッセージが表示されます。ネットワークインターフェイスの一覧を表示したい場合は、 <command>ip addr show</command> (もしくは省略形で <command>ip a</command>) と入力して実行してください。 <command>ip addr show up</command> と入力して実行すると、動作中のネットワークインターフェイスのみを表示することができます。また、 <command>ip -s link show</command> <replaceable>デバイス名</replaceable> のように入力して実行すると、指定したインターフェイスの統計情報のみを表示します:</para>
<screen>&prompt.root;ip -s link show br0
6: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP mode DEFAULT
    link/ether 00:19:d1:72:d4:30 brd ff:ff:ff:ff:ff:ff
    RX: bytes  packets  errors  dropped overrun mcast
    6346104756 9265517  0       10860   0       0
    TX: bytes  packets  errors  dropped carrier collsns
    3996204683 3655523  0       0       0       0</screen>
   <para><command>ip</command> コマンドはインターフェイスの表示 ( <option>link</option> ) のほか、ルーティングテーブルの表示 ( <option>route</option> ) など、多数の機能が用意されています。詳しくは <command>man 8 ip</command> をお読みください。</para>
<screen>&prompt.root;ip route
default via 192.168.2.1 dev eth1
192.168.2.0/24 dev eth0  proto kernel  scope link  src 192.168.2.100
192.168.2.0/24 dev eth1  proto kernel  scope link  src 192.168.2.101
192.168.2.0/24 dev eth2  proto kernel  scope link  src 192.168.2.102</screen>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;ip link
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:44:30:51 brd ff:ff:ff:ff:ff:ff
3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:a3:c1:fb brd ff:ff:ff:ff:ff:ff
4: eth2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
    link/ether 52:54:00:32:a4:09 brd ff:ff:ff:ff:ff:ff</screen>
  </sect2>

  <sect2 xml:id="sec-util-networking-nethogs">
   <title>プロセスごとのネットワーク使用率の表示: <command>nethogs</command></title>
   <para>たとえばネットワークトラフィックが急激に増加したような場合、その原因となるアプリケーションを素早く見つけることができたほうが都合のよいことがあります。 <command>nethogs</command> コマンドは <command>top</command> コマンドに似た設計で、それぞれのプロセスが処理している送受信トラフィックを表示することができます:</para>
   <screen>PID   USER  PROGRAM                                DEV   SENT   RECEIVED
27145 root   zypper                                eth0  5.719  391.749 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30015        0.102    2.326 KB/sec
26635 tux    /usr/lib64/firefox/firefox            eth0  0.026    0.026 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30045        0.000    0.021 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30045        0.000    0.018 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30015        0.000    0.018 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30045        0.000    0.017 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30045        0.000    0.017 KB/sec
?     root   ..0:113:80c0:8080:10:160:0:100:30045        0.069    0.000 KB/sec
?     root   unknown TCP                                 0.000    0.000 KB/sec

TOTAL                                                  5.916  394.192 KB/sec</screen>
   <para><command>top</command> コマンドと同様に、 <command>nethogs</command> コマンドも対話的にコマンドを入力することができます:</para>
   <simplelist>
    <member><keycap>M</keycap> : 表示モードの切り替え (kb/s, kb, b, mb)</member>
    <member><keycap>R</keycap> : <guimenu>RECEIVED</guimenu> (受信) で並べ替え</member>
    <member><keycap>S</keycap> : <guimenu>SENT</guimenu> (送信) で並べ替え</member>
    <member><keycap>Q</keycap> : 終了</member>
   </simplelist>
  </sect2>
  <sect2 xml:id="sec-util-networking-cards">
   <title>詳細なイーサネットカードの設定: <command>ethtool</command></title>
   <para><command>ethtool</command> はお使いのイーサネットデバイスの詳細な要素を表示したり、変更したりすることのできるツールです。既定では、指定したデバイスに対する現在の設定値を表示します。</para>
<screen>&prompt.root;ethtool eth0
Settings for eth0:
 Supported ports: [ TP ]
 Supported link modes:   10baseT/Half 10baseT/Full
                         100baseT/Half 100baseT/Full
                         1000baseT/Full
 Supports auto-negotiation: Yes
 Advertised link modes:  10baseT/Half 10baseT/Full
                         100baseT/Half 100baseT/Full
                         1000baseT/Full
 Advertised pause frame use: No
[...]
 Link detected: yes</screen>
   <para>下記の表には、様々な情報を取得するための <command>ethtool</command> オプションを示しています:</para>
   <table>
    <title><command>ethtool</command> の問い合わせオプションの一覧</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="50*"/>
     <colspec colnum="2" colname="2" colwidth="50*"/>
     <thead>
      <row>
       <entry>
        <para><command>ethtool</command> のオプション</para>
       </entry>
       <entry>
        <para>意味</para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>-a</para>
       </entry>
       <entry>
        <para>Pause パラメータの情報の表示</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>-c</para>
       </entry>
       <entry>
        <para>Interrupt Coalescing の情報の表示</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>-g</para>
       </entry>
       <entry>
        <para>Rx/Tx (送信／受信) の Ring パラメータ情報の表示</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>-i</para>
       </entry>
       <entry>
        <para>対応するドライバに関する情報の表示</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>-k</para>
       </entry>
       <entry>
        <para>オフロード設定の表示</para>
       </entry>
      </row>
      <row>
       <entry>
        <para>-S</para>
       </entry>
       <entry>
        <para>NIC およびドライバ固有の統計情報の表示</para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-util-networking-netstat">
   <title>ネットワーク状態の表示: <command>ss</command></title>
   <para><command>ss</command> はソケットの統計情報を表示するコマンドで、以前に用いられていた <command>netstat</command> コマンドを置き換えるものです。全ての接続を表示したい場合は、何もパラメータを指定せずに <command>ss</command> を実行してください:</para>
<screen>&prompt.root;ss
Netid  State      Recv-Q Send-Q   Local Address:Port       Peer Address:Port
u_str  ESTAB      0      0                    * 14082                 * 14083
u_str  ESTAB      0      0                    * 18582                 * 18583
u_str  ESTAB      0      0                    * 19449                 * 19450
u_str  ESTAB      0      0      @/tmp/dbus-gmUUwXABPV 18784           * 18783
u_str  ESTAB      0      0      /var/run/dbus/system_bus_socket 19383 * 19382
u_str  ESTAB      0      0      @/tmp/dbus-gmUUwXABPV 18617           * 18616
u_str  ESTAB      0      0      @/tmp/dbus-58TPPDv8qv 19352           * 19351
u_str  ESTAB      0      0                    * 17658                 * 17657
u_str  ESTAB      0      0                    * 17693                 * 17694
[..]</screen>
   <para>現在開いている全てのネットワークポートを表示したい場合は、下記のように実行してください:</para>
<screen>&prompt.root;ss -l
Netid  State      Recv-Q Send-Q      Local Address:Port  Peer Address:Port
nl     UNCONN     0      0                 rtnl:4195117                  *
nl     UNCONN     0      0       rtnl:wickedd-auto4/811                  *
nl     UNCONN     0      0       rtnl:wickedd-dhcp4/813                  *
nl     UNCONN     0      0                 rtnl:4195121                  *
nl     UNCONN     0      0                 rtnl:4195115                  *
nl     UNCONN     0      0       rtnl:wickedd-dhcp6/814                  *
nl     UNCONN     0      0                  rtnl:kernel                  *
nl     UNCONN     0      0             rtnl:wickedd/817                  *
nl     UNCONN     0      0                 rtnl:4195118                  *
nl     UNCONN     0      0                rtnl:nscd/706                  *
nl     UNCONN     4352   0              tcpdiag:ss/2381                  *
[...]</screen>
   <para>ネットワーク接続を表示する際、特定のソケットタイプに限定することもできます。それぞれ TCP ( <option>-t</option> ) もしくは UDP ( <option>-u</option> ) などを指定してください。また、 <option>-p</option> オプションを指定すると、それぞれのソケットが属するプロセス ID と、その名前を表示することができます。</para>
   <para>下記の例では、全ての TCP 接続とそれに結びつけられたプログラムを表示しています。 <option>-a</option> オプションは、確立済みの全ての接続 (待ち受け中のものを含む) を表示するためのオプションです。 <option>-p</option> オプションを指定すると、それぞれのソケットが属するプロセス ID と、その名前を表示することができます。</para>
<screen><?dbsuse-fo font-size="7pt"?>&prompt.root;ss -t -a -p
State    Recv-Q Send-Q  Local Address:Port   Peer Address:Port
LISTEN   0      128                  *:ssh                 *:*  users:(("sshd",1551,3))
LISTEN   0      100         127.0.0.1:smtp                 *:*  users:(("master",1704,13))
ESTAB    0      132      10.120.65.198:ssh  10.120.4.150:55715  users:(("sshd",2103,5))
LISTEN   0      128                 :::ssh                :::*  users:(("sshd",1551,4))
LISTEN   0      100               ::1:smtp                :::*  users:(("master",1704,14))</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-proc">
  <title><filename>/proc</filename> ファイルシステム</title>

  <para><filename>/proc</filename> ファイルシステムは擬似的なファイルシステムで、仮想的なファイルの形式で、カーネル内の様々な情報にアクセスすることができます。たとえば CPU の種類を表示したい場合は、下記のように実行します:</para>

<screen>&prompt.user;cat /proc/cpuinfo
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 30
model name      : Intel(R) Core(TM) i5 CPU         750  @ 2.67GHz
stepping        : 5
microcode       : 0x6
cpu MHz         : 1197.000
cache size      : 8192 KB
physical id     : 0
siblings        : 4
core id         : 0
cpu cores       : 4
apicid          : 0
initial apicid  : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm sse4_1 sse4_2 popcnt lahf_lm ida dtherm tpr_shadow vnmi flexpriority ept vpid
bogomips        : 5333.85
clflush size    : 64
cache_alignment : 64
address sizes   : 36 bits physical, 48 bits virtual
power management:
[...]</screen>

  <tip arch="x86_64">
   <title>詳細なプロセッサ情報の取得について</title>
   <para>&x86-64; アーキテクチャでプロセッサの詳細情報を取得したい場合は、 <command>x86info</command> コマンドをお使いいただいてもかまいません。</para>
  </tip>

  <para>割り込みの割り当てと使用状況を確認するには、下記のように実行します:</para>

<screen>&prompt.user;cat /proc/interrupts
           CPU0       CPU1       CPU2       CPU3
  0:        121          0          0          0   IO-APIC-edge      timer
  8:          0          0          0          1   IO-APIC-edge      rtc0
  9:          0          0          0          0   IO-APIC-fasteoi   acpi
 16:          0      11933          0          0   IO-APIC-fasteoi   ehci_hcd:+
 18:          0          0          0          0   IO-APIC-fasteoi   i801_smbus
 19:          0     117978          0          0   IO-APIC-fasteoi   ata_piix,+
 22:          0          0    3275185          0   IO-APIC-fasteoi   enp5s1
 23:     417927          0          0          0   IO-APIC-fasteoi   ehci_hcd:+
 40:    2727916          0          0          0  HPET_MSI-edge      hpet2
 41:          0    2749134          0          0  HPET_MSI-edge      hpet3
 42:          0          0    2759148          0  HPET_MSI-edge      hpet4
 43:          0          0          0    2678206  HPET_MSI-edge      hpet5
 45:          0          0          0          0   PCI-MSI-edge      aerdrv, P+
 46:          0          0          0          0   PCI-MSI-edge      PCIe PME,+
 47:          0          0          0          0   PCI-MSI-edge      PCIe PME,+
 48:          0          0          0          0   PCI-MSI-edge      PCIe PME,+
 49:          0          0          0        387   PCI-MSI-edge      snd_hda_i+
 50:     933117          0          0          0   PCI-MSI-edge      nvidia
NMI:       2102       2023       2031       1920   Non-maskable interrupts
LOC:         92         71         57         41   Local timer interrupts
SPU:          0          0          0          0   Spurious interrupts
PMI:       2102       2023       2031       1920   Performance monitoring int+
IWI:      47331      45725      52464      46775   IRQ work interrupts
RTR:          2          0          0          0   APIC ICR read retries
RES:     472911     396463     339792     323820   Rescheduling interrupts
CAL:      48389      47345      54113      50478   Function call interrupts
TLB:      28410      26804      24389      26157   TLB shootdowns
TRM:          0          0          0          0   Thermal event interrupts
THR:          0          0          0          0   Threshold APIC interrupts
MCE:          0          0          0          0   Machine check exceptions
MCP:         40         40         40         40   Machine check polls
ERR:          0
MIS:          0</screen>

  <para>実行ファイルとライブラリのアドレス割り当てに関する情報は、 <filename>maps</filename> ファイル内に含まれています:</para>

<screen>&prompt.user;cat /proc/self/maps
08048000-0804c000 r-xp 00000000 03:03 17753      /bin/cat
0804c000-0804d000 rw-p 00004000 03:03 17753      /bin/cat
0804d000-0806e000 rw-p 0804d000 00:00 0          [heap]
b7d27000-b7d5a000 r--p 00000000 03:03 11867      /usr/lib/locale/en_GB.utf8/
b7d5a000-b7e32000 r--p 00000000 03:03 11868      /usr/lib/locale/en_GB.utf8/
b7e32000-b7e33000 rw-p b7e32000 00:00 0
b7e33000-b7f45000 r-xp 00000000 03:03 8837       /lib/libc-2.3.6.so
b7f45000-b7f46000 r--p 00112000 03:03 8837       /lib/libc-2.3.6.so
b7f46000-b7f48000 rw-p 00113000 03:03 8837       /lib/libc-2.3.6.so
b7f48000-b7f4c000 rw-p b7f48000 00:00 0
b7f52000-b7f53000 r--p 00000000 03:03 11842      /usr/lib/locale/en_GB.utf8/
[...]
b7f5b000-b7f61000 r--s 00000000 03:03 9109       /usr/lib/gconv/gconv-module
b7f61000-b7f62000 r--p 00000000 03:03 9720       /usr/lib/locale/en_GB.utf8/
b7f62000-b7f76000 r-xp 00000000 03:03 8828       /lib/ld-2.3.6.so
b7f76000-b7f78000 rw-p 00013000 03:03 8828       /lib/ld-2.3.6.so
bfd61000-bfd76000 rw-p bfd61000 00:00 0          [stack]
ffffe000-fffff000 ---p 00000000 00:00 0          [vdso]</screen>

  <para>/proc ファイルシステムを利用することで、数多くの情報を取得することができます。主なファイルとその内容を下記に示します:</para>

  <variablelist>
   <varlistentry>
    <term><filename>/proc/devices</filename></term>
    <listitem>
     <para>利用可能なデバイスに関する情報</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/modules</filename></term>
    <listitem>
     <para>読み込み済みのカーネルモジュール</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/cmdline</filename></term>
    <listitem>
     <para>カーネルのコマンドライン</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/meminfo</filename></term>
    <listitem>
     <para>メモリの使用率に関する詳細情報</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/config.gz</filename></term>
    <listitem>
     <para><command>gzip</command> 形式で圧縮された、現在動作中のカーネルの設定ファイル</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>/proc/<replaceable>PID</replaceable>/</term>
    <listitem>
     <para>現在動作中のプロセスに関する情報が含まれています。ここで <replaceable>PID</replaceable> には、プロセスのプロセス ID を代入します。自分自身のプロセスを参照したい場合は、 <filename>/proc/self/</filename> で参照することができます。</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>さらに詳しい情報をご希望の場合は、 <filename>/usr/src/linux/Documentation/filesystems/proc.txt</filename> ファイル (英語, <systemitem class="resource">kernel-source</systemitem> パッケージをインストールする必要があります) をお読みください。</para>

  <sect2 xml:id="sec-util-proc-procinfo">
   <title><command>procinfo</command></title>
   <para><filename>/proc</filename> ファイルシステム内で取得できる情報から主なものを抜き出すためのコマンドとして、 <command>procinfo</command> が用意されています:</para>
<screen>&prompt.user;procinfo
Linux 3.11.10-17-desktop (geeko@buildhost) (gcc 4.8.1 20130909) #1 4CPU [&wsIname;]

Memory:      Total        Used        Free      Shared     Buffers      Cached
Mem:       8181908     8000632      181276           0       85472     2850872
Swap:     10481660        1576    10480084

Bootup: Mon Jul 28 09:54:13 2014    Load average: 1.61 0.85 0.74 2/904 25949

user  :       1:54:41.84  12.7%  page in :    2107312  disk 1:    52212r   20199w
nice  :       0:00:00.46   0.0%  page out:    1714461  disk 2:    19387r   10928w
system:       0:25:38.00   2.8%  page act:     466673  disk 3:      548r      10w
IOwait:       0:04:16.45   0.4%  page dea:     272297
hw irq:       0:00:00.42   0.0%  page flt:  105754526
sw irq:       0:01:26.48   0.1%  swap in :          0
idle  :      12:14:43.65  81.5%  swap out:        394
guest :       0:02:18.59   0.2%
uptime:       3:45:22.24         context :   99809844

irq  0:       121 timer                 irq 41:   3238224 hpet3
irq  8:         1 rtc0                  irq 42:   3251898 hpet4
irq  9:         0 acpi                  irq 43:   3156368 hpet5
irq 16:     14589 ehci_hcd:usb1         irq 45:         0 aerdrv, PCIe PME
irq 18:         0 i801_smbus            irq 46:         0 PCIe PME, pciehp
irq 19:    124861 ata_piix, ata_piix, f irq 47:         0 PCIe PME, pciehp
irq 22:   3742817 enp5s1                irq 48:         0 PCIe PME, pciehp
irq 23:    479248 ehci_hcd:usb2         irq 49:       387 snd_hda_intel
irq 40:   3216894 hpet2                 irq 50:   1088673 nvidia</screen>
   <para>全ての情報を表示するには <option>-a</option> オプションを指定してください。また、 <option>-n</option><replaceable>N</replaceable> とオプションを指定すると、 <replaceable>N</replaceable> 秒間隔で情報を更新し続けることができます。この場合、 <keycap>Q</keycap> を押すと終了することができます。</para>
   <para>既定では累積値を表示しますが、 <option>-d</option> を指定すると差分値を表示することもできます。たとえば <command>procinfo -dn5</command> とオプションを指定すると、直近の 5 秒間に変化した値が表示されます。</para>
  </sect2>

  <sect2 xml:id="sec-util-proc-procinfo-sysctl">
   <title>システム制御パラメータ: <filename>/proc/sys/</filename></title>
   <para>システム制御パラメータを使用することで、 Linux カーネルのパラメータを動作中に変更することができます。これらのファイルは <filename>/proc/sys/</filename> ディレクトリ内に存在し、 <command>sysctl</command> コマンドで表示および変更を行なうことができます。全てのパラメータを一覧表示するには、 <command>sysctl</command> <option>-a</option> と入力して実行してください。また、特定の値のみを表示したい場合は、 <command>sysctl</command> <replaceable>パラメータ名</replaceable> と入力して実行します。</para>
   <para>パラメータは分野ごとに分類されていて、 <command>sysctl</command> <replaceable>分類名</replaceable> のように入力して実行するか、もしくは対応するディレクトリ内の一覧を表示することで、確認することができます。主な分類の一覧を下記に示します。なお、詳細情報を説明しているファイルは、いずれも英語のみの提供で、 <systemitem class="resource">kernel-source</systemitem> パッケージをインストールしておく必要があります。</para>
   <variablelist>
    <varlistentry>
     <term><command>sysctl dev</command> ( <filename>/proc/sys/dev/</filename> )</term>
     <listitem>
      <para>デバイス固有の情報が含まれています。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sysctl fs</command> ( <filename>/proc/sys/fs/</filename> )</term>
     <listitem>
      <para>使用済みのファイルハンドルやクオータ、その他のファイルシステム指向のパラメータが含まれています。詳しくは <filename>/usr/src/linux/Documentation/sysctl/fs.txt</filename> ファイルをお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sysctl kernel</command> ( <filename>/proc/sys/kernel/</filename> )</term>
     <listitem>
      <para>タスクスケジューラやシステムの共有メモリ、そしてその他のカーネル関連のパラメータが含まれています。詳しくは <filename>/usr/src/linux/Documentation/sysctl/kernel.txt</filename> ファイルをお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sysctl net</command> ( <filename>/proc/sys/net/</filename> )</term>
     <listitem>
      <para>ネットワークブリッジのほか、一般的なネットワークパラメータが含まれています (主に <filename>ipv4/</filename> サブディレクトリ内にあります) 。詳しくは <filename>/usr/src/linux/Documentation/sysctl/net.txt</filename> ファイルをお読みください。</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>sysctl vm</command> ( <filename>/proc/sys/vm/</filename> )</term>
     <listitem>
      <para>このパス内に存在するファイルには、仮想メモリやスワップ処理、キャッシュ処理に関するパラメータが含まれています。詳しくは <filename>/usr/src/linux/Documentation/sysctl/vm.txt</filename> ファイルをお読みください。</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>システムを再起動するまでの間、パラメータを設定したい場合は、 <command>sysctl</command> <option>-w</option> <replaceable>パラメータ名</replaceable> = <replaceable>設定値</replaceable> のように入力して実行してください。また、パラメータ設定を恒久的に行ないたい場合は、 <filename>/etc/sysctl.conf</filename> ファイル内に <replaceable>パラメータ名</replaceable> = <replaceable>設定値</replaceable> の形式で行を追加してください。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-hardware">
  <title>ハードウエア情報</title>

  <para/>

  <sect2 xml:id="sec-util-hardware-lspci">
   <title>PCI リソースの表示: <command>lspci</command></title>
   <note>
    <title>PCI 情報へのアクセスについて</title>
    <para>ほとんどの環境では、コンピュータの PCI 設定にアクセスするにあたって root 権限が必要となります。</para>
   </note>
   <para><command>lspci</command> コマンドは、 PCI リソースの一覧を表示します:</para>
<screen>&prompt.root;lspci
00:00.0 Host bridge: Intel Corporation 82845G/GL[Brookdale-G]/GE/PE \
    DRAM Controller/Host-Hub Interface (rev 01)
00:01.0 PCI bridge: Intel Corporation 82845G/GL[Brookdale-G]/GE/PE \
    Host-to-AGP Bridge (rev 01)
00:1d.0 USB Controller: Intel Corporation 82801DB/DBL/DBM \
    (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #1 (rev 01)
00:1d.1 USB Controller: Intel Corporation 82801DB/DBL/DBM \
    (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #2 (rev 01)
00:1d.2 USB Controller: Intel Corporation 82801DB/DBL/DBM \
    (ICH4/ICH4-L/ICH4-M) USB UHCI Controller #3 (rev 01)
00:1d.7 USB Controller: Intel Corporation 82801DB/DBM \
    (ICH4/ICH4-M) USB2 EHCI Controller (rev 01)
00:1e.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 81)
00:1f.0 ISA bridge: Intel Corporation 82801DB/DBL (ICH4/ICH4-L) \
    LPC Interface Bridge (rev 01)
00:1f.1 IDE interface: Intel Corporation 82801DB (ICH4) IDE \
    Controller (rev 01)
00:1f.3 SMBus: Intel Corporation 82801DB/DBL/DBM (ICH4/ICH4-L/ICH4-M) \
    SMBus Controller (rev 01)
00:1f.5 Multimedia audio controller: Intel Corporation 82801DB/DBL/DBM \
    (ICH4/ICH4-L/ICH4-M) AC'97 Audio Controller (rev 01)
01:00.0 VGA compatible controller: Matrox Graphics, Inc. G400/G450 (rev 85)
02:08.0 Ethernet controller: Intel Corporation 82801DB PRO/100 VE (LOM) \
    Ethernet Controller (rev 81)</screen>
   <para><option>-v</option> オプションを指定すると、さらに詳しい情報を表示することができます:</para>
<screen>&prompt.root;lspci -v
[...]
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet \
Controller (rev 02)
  Subsystem: Intel Corporation PRO/1000 MT Desktop Adapter
  Flags: bus master, 66MHz, medium devsel, latency 64, IRQ 19
  Memory at f0000000 (32-bit, non-prefetchable) [size=128K]
  I/O ports at d010 [size=8]
  Capabilities: [dc] Power Management version 2
  Capabilities: [e4] PCI-X non-bridge device
  Kernel driver in use: e1000
  Kernel modules: e1000</screen>
   <para>デバイス名の情報は <filename>/usr/share/pci.ids</filename> ファイルから取得しています。そのため、このファイル内に書かれていないデバイスについては、 <quote>Unknown device</quote> (未知のデバイス) として表示されます。</para>
   <para><option>-vv</option> パラメータを指定すると、プログラムから問い合わせることのできる全ての情報を出力することができます。また、文字ではなく数値で表示したい場合は、 <option>-n</option> オプションをお使いください。</para>
  </sect2>

  <sect2 xml:id="sec-util-hardware-lsusb">
   <title>USB デバイスの一覧表示: <command>lsusb</command></title>
   <para><command>lsusb</command> コマンドは USB デバイスの一覧を表示します。 <option>-v</option> オプションを指定すると、さらに詳しい情報を表示することができます。詳しい情報は <filename>/proc/bus/usb/</filename> 内から取得します。下記は USB バスにハブと USB メモリ、ハードディスクとマウスがそれぞれ接続された環境での、 <command>lsusb</command> の出力例です。</para>
<screen>&prompt.root;lsusb
Bus 004 Device 007: ID 0ea0:2168 Ours Technology, Inc. Transcend JetFlash \
    2.0 / Astone USB Drive
Bus 004 Device 006: ID 04b4:6830 Cypress Semiconductor Corp. USB-2.0 IDE \
    Adapter
Bus 004 Device 005: ID 05e3:0605 Genesys Logic, Inc.
Bus 004 Device 001: ID 0000:0000
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 001: ID 0000:0000
Bus 001 Device 005: ID 046d:c012 Logitech, Inc. Optical Mouse
Bus 001 Device 001: ID 0000:0000</screen>
  </sect2>

  <sect2 xml:id="sec-util-hardware-tmon">
   <title>サーマルサブシステムの監視とチューニング: <command>tmon</command></title>
   <para><command>tmon</command> は複雑なサーマル (温度管理) サブシステムを可視化したり、チューニングしたりテストしたりするためのツールです。何もパラメータを指定しないで起動すると、 <command>tmon</command> は監視モードで動作します:</para>
   <screen>┌──────THERMAL ZONES(SENSORS)──────────────────────────────┐
│Thermal Zones:                 acpitz00                   │
│Trip Points:                   PC                         │
└──────────────────────────────────────────────────────────┘
┌─────────── COOLING DEVICES ──────────────────────────────┐
│ID  Cooling Dev   Cur    Max   Thermal Zone Binding       │
│00    Processor     0      3   ││││││││││││               │
│01    Processor     0      3   ││││││││││││               │
│02    Processor     0      3   ││││││││││││               │
│03    Processor     0      3   ││││││││││││               │
│04 intel_powerc    -1     50   ││││││││││││               │
└──────────────────────────────────────────────────────────┘
┌──────────────────────────────────────────────────────────┐
│                         10        20        30        40 │
│acpitz 0:[  8][&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;P9                    C31         │
└──────────────────────────────────────────────────────────┘
┌────────────────── CONTROLS ──────────────────────────────┐
│PID gain: kp=0.36 ki=5.00 kd=0.19 Output 0.00             │
│Target Temp: 65.0C, Zone: 0, Control Device: None         │
└──────────────────────────────────────────────────────────┘

 Ctrl-c - Quit   TAB - Tuning
</screen>
   <para>データの解釈方法に関して、および温度データの記録方法に関して、そして <command>tmon</command> で冷却デバイスやセンサーをテストしたりチューニングしたりする方法について、詳しくは <command>man 8 tmon</command> にあるマニュアルページをお読みください。なお、 <package>tmon</package> パッケージは既定ではインストールされません。</para>
  </sect2>

  <sect2 xml:id="sec-util-hardware-mcelog">
   <title>MCELog: マシンチェック例外 (MCE; Machine Check Exceptions)</title>
   <para><systemitem class="resource">mcelog</systemitem> パッケージは、 I/O や CPU 、メモリエラーなどのハードウエアエラーが発生した際に発せられるマシンチェック例外 (Machine Check Exceptions (MCE)) を記録し、解釈／翻訳するためのパッケージです。これに加えて mcelog は、不正なページのオフライン化や、キャッシュエラーが発生した際に自動的にコアをオフライン化するなどの処理も行ないます。以前のバージョンでは cron ジョブとして 1 時間に 1 回動作していましたが、現在は mcelog デーモンの形で、ハードウエアエラーを即時に処理するようになっています。</para>
   <note>
       <title>AMD Scalable MCA のサポートについて</title>
       <para>&sle; バージョン 15.0 以降では、 AMD 社の Scalable Machine Check Architecture (Scalable MCA) に対応するようになっています。 Scalable MCA は AMD 社の Zen プロセッサでハードウエアエラー報告の機能を改善するための仕組みで、エラー報告やその後の解析を支援するために MCA バンク内に保存される情報を拡張しています。</para>
       <para>mcelog は MCA メッセージを捕捉 (rasdaemon や dmesg でも MCA メッセージを捕捉することができます) 。詳しくは <citetitle>Processor ProgrammingReference (PPR) for AMD Family 17hModel 01h, Revision B1Processors</citetitle> ( <link xlink:href="http://developer.amd.com/wordpress/media/2017/11/54945_PPR_Family_17h_Models_00h-0Fh.pdf"/> ) 内にある第 3.1 章: Machine Check Architecture をお読みください。</para>
   </note>
   <para>mcelog は <filename>/etc/mcelog/mcelog.conf</filename> ファイルで設定を行ないます。設定オプションは <command>man mcelog</command> 内や <link xlink:href="http://mcelog.org/"/> 内で説明されています。なお下記の例は、既定のファイルに対する変更箇所のみを示しています:</para>
  <screen>daemon = yes
filter = yes
filter-memory-errors = yes
no-syslog = yes 
logfile = /var/log/mcelog
run-credentials-user = root
run-credentials-group = nobody
client-group = root
socket-path = /var/run/mcelog-client
</screen>
  <para>mcelog サービスは既定では有効化されていません。 &yast; システムサービスエディタを使用するか、下記のコマンドラインを実行することで、有効化することができます:</para>
<screen>&prompt.root;systemctl enable mcelog
&prompt.root;systemctl start mcelog</screen>
   </sect2>

  <sect2 xml:id="sec-util-hardware-dmicecode" arch="x86_64">
   <title>x86_64: dmidecode: DMI テーブルデコーダ</title>
   <para><command>dmidecode</command> はハードウエアのシリアル番号や BIOS のリビジョンなどを含む、マシンの DMI テーブルを表示することのできるツールです。</para>
<screen>&prompt.root;dmidecode
# dmidecode 2.12
SMBIOS 2.5 present.
27 structures occupying 1298 bytes.
Table at 0x000EB250.

Handle 0x0000, DMI type 4, 35 bytes
Processor Information
        Socket Designation: J1PR
        Type: Central Processor
        Family: Other
        Manufacturer: Intel(R) Corporation
        ID: E5 06 01 00 FF FB EB BF
        Version: Intel(R) Core(TM) i5 CPU         750  @ 2.67GHz
        Voltage: 1.1 V
        External Clock: 133 MHz
        Max Speed: 4000 MHz
        Current Speed: 2667 MHz
        Status: Populated, Enabled
        Upgrade: Other
        L1 Cache Handle: 0x0004
        L2 Cache Handle: 0x0003
        L3 Cache Handle: 0x0001
        Serial Number: Not Specified
        Asset Tag: Not Specified
        Part Number: Not Specified
[..]</screen>
  </sect2>

  <sect2 xml:id="sec-util-hardware-lshw" arch="power">
   <title>&power;: ハードウエア情報</title>
   <para><command>lshw</command> はマシンのハードウエア設定を抽出し、表示することのできるツールです。</para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-file">
  <title>ファイルとファイルシステム</title>

  <para os="sled;osuse"/>

  <para os="sles">ファイルシステム固有の情報を取得したい場合は、 <xref linkend="book-storage"/> をお読みください。</para>

  <sect2 xml:id="sec-util-file-file">
   <title>ファイルの種類判別: <command>file</command></title>
   <para><command>file</command> は指定したファイル (複数可) の種類を判別します。その際、 <filename>/usr/share/misc/magic</filename> ファイル内に書かれた情報を使用します。</para>
<screen>&prompt.user;file /usr/bin/file
/usr/bin/file: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), \
    for GNU/Linux 2.6.4, dynamically linked (uses shared libs), stripped</screen>
   <para><option>-f <replaceable>一覧ファイル</replaceable></option> オプションを指定すると、 <replaceable>一覧ファイル</replaceable> に指定したファイル内を読み込み、読み込んだ内容をファイル名として解釈し、ファイルの種類を判別します。また <option>-z</option> オプションを指定すると、 <command>file</command> が圧縮ファイル内を調査するようにすることができます:</para>
<screen>&prompt.user;file /usr/share/man/man1/file.1.gz
/usr/share/man/man1/file.1.gz: gzip compressed data, from Unix, max compression
&prompt.user;file -z /usr/share/man/man1/file.1.gz
/usr/share/man/man1/file.1.gz: troff or preprocessor input text \
    (gzip compressed data, from Unix, max compression)</screen>
   <para><option>-i</option> オプションを指定すると、ファイルの種類に対する詳しい説明ではなく、 MIME タイプを表示するようになります。</para>
<screen>&prompt.user;file -i /usr/share/misc/magic
/usr/share/misc/magic: text/plain charset=utf-8</screen>
  </sect2>

  <sect2 xml:id="sec-util-file-mount-dudf">
   <title>ファイルシステムと使用率の表示: <command>mount</command> , <command>df</command> , <command>du</command></title>
   <para><command>mount</command> コマンドは、どのファイルシステム (デバイスおよび種類) がどこにマウントされているのかを表示します:</para>
<screen>&prompt.root;mount
/dev/sda2 on / type ext4 (rw,acl,user_xattr)
proc on /proc type proc (rw)
sysfs on /sys type sysfs (rw)
debugfs on /sys/kernel/debug type debugfs (rw)
devtmpfs on /dev type devtmpfs (rw,mode=0755)
tmpfs on /dev/shm type tmpfs (rw,mode=1777)
devpts on /dev/pts type devpts (rw,mode=0620,gid=5)
/dev/sda3 on /home type ext3 (rw)
securityfs on /sys/kernel/security type securityfs (rw)
fusectl on /sys/fs/fuse/connections type fusectl (rw)
gvfs-fuse-daemon on /home/tux/.gvfs type fuse.gvfs-fuse-daemon \
(rw,nosuid,nodev,user=tux)</screen>
   <para>それぞれのファイルシステム内での使用率を調べたい場合は、 <command>df</command> コマンドを使用します。このコマンドに対して <option>-h</option> (もしくは <option>--human-readable</option> ) オプションを指定すると、人間にとってわかりやすい、単位付きの表示に切り替えることができます。</para>
<screen>&prompt.user;df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/sda2              20G  5,9G   13G  32% /
devtmpfs              1,6G  236K  1,6G   1% /dev
tmpfs                 1,6G  668K  1,6G   1% /dev/shm
/dev/sda3             208G   40G  159G  20% /home</screen>
   <para>指定したディレクトリ内、およびそのサブディレクトリ内にある全ファイルのサイズ合計を知りたい場合は、 <command>du</command> コマンドを使用します。 <option>-s</option> オプションを指定すると、詳細な出力を省略して、パラメータで指定したディレクトリの合計値のみを表示します。また、このコマンドでも <option>-h</option> を指定することで、人間にとってわかりやすい、単位付きの表示に切り替えることができます。</para>
<screen>&prompt.user;du -sh /opt
192M    /opt</screen>
  </sect2>

  <sect2 xml:id="sec-util-file-readelf">
   <title>ELF 形式バイナリに対する追加情報</title>
   <para>バイナリファイルの内容を表示したい場合は、 <command>readelf</command> ユーティリティを使用します。このプログラムは、 ELF 形式であれば、どのアーキテクチャ向けのファイルであっても読み込むことができます:</para>
<screen>&prompt.user;readelf --file-header /bin/ls
ELF Header:
  マジック:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00
  クラス:                            ELF64
  データ:                            2's complement, little endian
  バージョン:                        1 (current)
  OS/ABI:                            UNIX - System V
  ABI バージョン:                    0
  型:                                EXEC (Executable file)
  マシン:                            Advanced Micro Devices X86-64
  バージョン:                        0x1
  エントリポイントアドレス:           0x402540
  プログラムヘッダ始点:               64 (bytes into file)
  セクションヘッダ始点:               95720 (bytes into file)
  フラグ:                            0x0
  このヘッダのサイズ:                 64 (bytes)
  プログラムヘッダサイズ:             56 (bytes)
  プログラムヘッダ数:                 9
  セクションヘッダサイズ:             64 (bytes)
  セクションヘッダ数:                 32
  セクションヘッダ文字列表索引:        31</screen>
  </sect2>

  <sect2 xml:id="sec-util-file-stat">
   <title>ファイル属性の表示: <command>stat</command></title>
   <para><command>stat</command> コマンドはファイルの属性を表示します:</para>
<screen>&prompt.user;stat /etc/profile
  File: `/etc/profile'
  Size: 9662            Blocks: 24         IO Block: 4096   regular file
Device: 802h/2050d      Inode: 132349      Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2009-03-20 07:51:17.000000000 +0100
Modify: 2009-01-08 19:21:14.000000000 +0100
Change: 2009-03-18 12:55:31.000000000 +0100</screen>
   <para><option>--file-system</option> パラメータを指定すると、指定したファイルが存在するファイルシステム内での情報を表示することができます:</para>
<screen>&prompt.user;stat /etc/profile --file-system
  File: "/etc/profile"
    ID: d4fb76e70b4d1746 Namelen: 255     Type: ext2/ext3
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 2581445    Free: 1717327    Available: 1586197
Inodes: Total: 655776     Free: 490312</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-user">
  <title>ユーザ情報</title>

  <para/>

  <sect2 xml:id="sec-util-system-fuser">
   <title>ユーザがアクセスしているファイルの表示: <command>fuser</command></title>
   <para>どのプロセスやユーザが、どのファイルにアクセスしているのかを知りたいような場合があります。たとえば <filename>/mnt</filename> をマウント解除したいような場合がそれにあたります。 <command>umount</command> コマンドが "device is busy" と出力してマウント解除に失敗した場合、 <command>fuser</command> コマンドを使用することで、どのプロセスがデバイスにアクセスしているのかがわかります:</para>
<screen>&prompt.user;fuser -v /mnt/*

                     USER        PID ACCESS COMMAND
/mnt/notes.txt       &exampleuser_plain;    26597 f....  less</screen>
   <para>あとは <command>less</command> プロセスが終了するのを待つか、もしくは強制終了させることで、ファイルシステムのマウントを解除できるようになります。なお、 <command>fuser</command> コマンドに <option>-k</option> オプションを指定すると、ファイルにアクセスしているプロセスを終了させることができます。</para>
  </sect2>

  <sect2 xml:id="sec-util-user-w">
   <title>ユーザの活動状況表示: <command>w</command></title>
   <para><command>w</command> コマンドを使用すると、現在システムに誰がログインしているのかと、そのユーザが今何をしているのかを知ることができます。たとえば下記のようになります:</para>
<screen>&prompt.user;w
 16:00:59 up 1 day,  2:41,  3 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
tux      :0       console          Wed13   ?xdm?   8:15   0.03s /usr/lib/gdm/gd
tux      console  :0               Wed13   26:41m  0.00s  0.03s /usr/lib/gdm/gd
tux      pts/0    :0               Wed13   20:11   0.10s  2.89s /usr/lib/gnome-</screen>
   <para><!-- NOTE: remark told it --> <option>-f</option> オプションを指定すると、リモートからアクセスしている場合のアクセス元の表示を切り替えることもできます。<remark>aherrmann, 2016-10-11: In fact '-f' toggles printing the 'from' field. Some systems have a 'w' command which was built such that 'from' field is shown by default. In this case using '-f' causes 'from' field not to be shown.</remark></para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-time">
  <title>日付と時刻</title>

  <para/>

  <sect2 xml:id="sec-util-time-time">
   <title><command>time</command> による時間測定</title>
   <para>コマンドで使用した時間を計測したい場合は、 <command>time</command> ユーティリティをお使いください。このユーティリティは、 bash の内蔵コマンドとしても用意されているほか、純粋なプログラム ( <command>/usr/bin/time</command> ) としても提供されています。</para>
<screen>&prompt.user;time find . &gt; /dev/null

real    0m4.051s<co xml:id="co-util-time-real"/>
user    0m0.042s<co xml:id="co-util-time-user"/>
sys     0m0.205s<co xml:id="co-util-time-sys"/></screen>
   <calloutlist>
    <callout arearefs="co-util-time-real">
     <para>コマンドが起動して終了するまでに経過した実時間を表わしています。</para>
    </callout>
    <callout arearefs="co-util-time-user">
     <para><literal>times</literal> システムコールで報告された、ユーザ部分の CPU 時間を表わしています。</para>
    </callout>
    <callout arearefs="co-util-time-sys">
     <para><literal>times</literal> システムコールで報告された、システム部分の CPU 時間を表わしています。</para>
    </callout>
   </calloutlist>
   <para><filename>/usr/bin/time</filename> コマンドの場合は、出力をより詳しく行なうことができます。読みやすい表示をご希望の場合は、 <option>-v</option> オプションを指定してください。</para>
<screen>/usr/bin/time -v find . &gt; /dev/null
        Command being timed: "find ."
        User time (seconds): 0.24
        System time (seconds): 2.08
        Percent of CPU this job got: 25%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.03
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 2516
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1564
        Voluntary context switches: 36660
        Involuntary context switches: 496
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-util-rrdtool">
  <title>データのグラフ化: RRDtool</title>

  <para>コンピュータシステムを扱っていると、様々なデータを採取できることがわかります。たとえばコンピュータの温度の変化やネットワークインターフェイスが送信もしくは受信したデータ量などがあります。 RRDtool では、そのようなデータを詳細に保存し、カスタマイズ可能なグラフとして可視化する機能を提供しています。</para>

  <para>RRDtool はほとんどの Unix プラットフォームや Linux ディストリビューション向けに提供されています。 &productnamereg; でも RRDtool をご利用いただけます。 &yast; からインストールを行なうか、もしくは &rootuser; で下記のように入力して実行してください:</para>

  <para><command>zypper</command> <option>install</option> <replaceable>rrdtool</replaceable></para>

  <tip>
   <title>バインディングについて</title>
   <para>RRDtool には Perl, Python, Ruby, PHP などのバインディングが用意されています。そのため、お使いのスクリプト言語を利用して、独自の監視スクリプトを作成することができます。</para>
  </tip>

  <sect2 xml:id="sec-util-rrdtool-howitworks">
   <title>RRDtool の仕組み</title>
   <para>RRDtool は <emphasis>Round Robin Database tool</emphasis> の略で、 <quote>ラウンドロビン型のデータベースツール</quote> という意味です。 <emphasis>ラウンドロビン</emphasis> とは <quote>持ち回り</quote> のような意味で、一定量のデータを保持し続け、古いものから順に破棄していく仕組みを意味します。そのため、データには始まりも終わりもありません。 RRD tool では、このようなラウンドロビン型のデータベースを利用してデータを保存し、読み込みを行ないます。</para>
   <para>上述のとおり、 RRDtool は時間が経過するごとに変化していくようなデータを扱うよう設計されています。よくある使用例としては、測定データを繰り返し読み取ることのできるセンサー (温度や速度など) からデータを採取して、特定の形式でグラフ化するなどの例が考えられます。このようなデータであれば、 RRDtool は完璧に動作しますし、データの処理や必要な出力の作成も容易に行なうことができます。</para>
   <para>データを自動的に採取できないようなデータや、定期的に採取できないようなデータに対しては、 RRDtool にデータを与える際、特定の書式を使用する必要があります。また、このようなデータの場合、 RRDtool を手作業で動作させる必要があるかもしれません。</para>
   <para>下記は RRDtool の基本的な使い方を説明するための例です。ここでは RRDtool における 3 つのフェーズ (<emphasis>データベースの作成</emphasis>, <emphasis>測定データの更新</emphasis>, <emphasis>測定データの可視化</emphasis>) を示しています。</para>
  </sect2>

  <sect2 xml:id="sec-util-rrdtool-example">
   <title>実際の例</title>
   <para>たとえば Linux システム内において随時変化する、メモリの使用率について情報を収集し、可視化したいと考えたとします。わかりやすいように、今回は 4 秒間隔で 40 秒間にわたって、空きメモリ量を計測するものとします。また、メモリを大きく使用するアプリケーションを 3 種類 (Firefox Web ブラウザ, Evolution 電子メールクライアント, Eclipse 開発フレームワーク) 動作させて終了し、メモリの使用率を変化させてみます。</para>
   <sect3 xml:id="sec-util-rrdtool-example-collect">
    <title>データの収集</title>
    <para>RRDtool はネットワークトラフィックを測定し、可視化するためによく使用されます。このような場合、 Simple Network Management Protocol (SNMP) を使用して行ないます。このプロトコルはネットワークデバイスに対して、内部カウンタの情報からさまざまな値を生成させて取得することができます。 SNMP に関する詳細は、 <link xlink:href="http://www.net-snmp.org/"/> をお読みください。</para>
    <para>今回の例は上記と少し異なります。データを手作業で取得する必要があります。下記のようなヘルパースクリプト <command>free_mem.sh</command> を使用して、現在の空きメモリ量を調べて、標準出力に書き込むことを行ないます。</para>
<screen>&prompt.user;cat free_mem.sh
INTERVAL=4
for steps in {1..10}
do
    DATE=`date +%s`
    FREEMEM=`free -b | grep "Mem" | awk '{ print $4 }'`
    sleep $INTERVAL
    echo "rrdtool update free_mem.rrd $DATE:$FREEMEM"
done</screen>
    <remark>sknorr, 2014-07-23: This should be a calloutlist.</remark>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>時間間隔は 4 秒で、間隔を空ける際に <command>sleep</command> コマンドを使用します。</para>
     </listitem>
     <listitem>
      <para>RRDtool は日時形式を <emphasis>Unix 時間</emphasis> と呼ばれる特殊な形式で受け付けます。これは 1970 年 1 月 1 日深夜からの経過秒数で日時を表わすもので、たとえば 1272907114 は 2010 年 5 月 3 日 17:18:34 を意味することになります。</para>
     </listitem>
     <listitem>
      <para>空きメモリの情報は <command>free</command> <option>-b</option> コマンドで取得します。つまり、 <quote>キロ</quote> などの接頭辞のない純粋なバイト単位の値を取得しています。</para>
     </listitem>
     <listitem>
      <para><command>echo</command> で始まる行には、次の手順で使用するデータベースのファイル名 ( <literal>free_mem.rrd</literal> ) と、 RRDtool で値を更新する際のコマンドラインが書かれています。</para>
     </listitem>
    </itemizedlist>
    <para><command>free_mem.sh</command> を実行して、下記のような結果が得られたものとします:</para>
<screen>&prompt.user;sh free_mem.sh
rrdtool update free_mem.rrd 1272974835:1182994432
rrdtool update free_mem.rrd 1272974839:1162817536
rrdtool update free_mem.rrd 1272974843:1096269824
rrdtool update free_mem.rrd 1272974847:1034219520
rrdtool update free_mem.rrd 1272974851:909438976
rrdtool update free_mem.rrd 1272974855:832454656
rrdtool update free_mem.rrd 1272974859:829120512
rrdtool update free_mem.rrd 1272974863:1180377088
rrdtool update free_mem.rrd 1272974867:1179369472
rrdtool update free_mem.rrd 1272974871:1181806592</screen>
    <para>なお、このままでは端末に結果を書き出しているだけで、次の手順で使用することができませんので、下記のように実行してファイルに保存しておきます:</para>
    <para><command>sh free_mem.sh &gt; free_mem_updates.log</command></para>
    <para>"\n  <!-- NOTE: nothing needed for translation -->\n"</para>
   </sect3>
   <sect3 xml:id="sec-util-rrdtool-example-create">
    <title>データベースの作成</title>
    <para>まずは下記のようにコマンドを入力して実行し、ラウンドロビン型のデータベースを作成します:</para>
<screen>&prompt.user;rrdtool create free_mem.rrd --start 1272974834 --step=4 \
DS:memory:GAUGE:600:U:U RRA:AVERAGE:0.5:1:24</screen>
    <itemizedlist mark="bullet" spacing="normal">
     <title>注目すべき点</title>
     <listitem>
      <para>このコマンドは <filename>free_mem.rrd</filename> というファイルを作成します。このファイル内に測定したデータを書き込むことになります。</para>
     </listitem>
     <listitem>
      <para><option>--start</option> オプションは、開始日時を Unix 時間で表わしたものを指定しています。この値は、データベースに追加される最初の値となります。この例では、 <command>free_mem.sh</command> の出力に現われた Unix 時間 (1272974835) よりも前の日時を指定しています。</para>
     </listitem>
     <listitem>
      <para><option>--step</option> オプションは測定したデータの時間間隔を指定するためのものです。</para>
     </listitem>
     <listitem>
      <para><literal>DS:memory:GAUGE:600:U:U</literal> の部分は、データベースに対して新しいデータソース (DS) を設定している箇所です。 <emphasis>memory</emphasis> という名称で <emphasis>gauge</emphasis> という種類を設定し、データとデータの間の間隔は最大で 600 秒、値の <emphasis>最小値</emphasis> と <emphasis>最大値</emphasis> は未知 (U; Unknown) としています。</para>
     </listitem>
     <listitem>
      <para><literal>RRA:AVERAGE:0.5:1:24</literal> はラウンドロビンアーカイブ (RRA) と呼ばれるもので、データ点の <emphasis>平均値</emphasis> を計算する <emphasis>統合関数</emphasis> を利用して処理を行ない、データを格納することを表わしています。このとき、行末には 3 種類の統合関数向けのパラメータが指定されています。</para>
     </listitem>
    </itemizedlist>
    <para>何もエラーが発生することなく終了すれば、 <filename>free_mem.rrd</filename> がカレント (現在居る) ディレクトリ内に作成されているはずです:</para>
<screen>&prompt.user;ls -l free_mem.rrd
-rw-r--r-- 1 tux users 776 May  5 12:50 free_mem.rrd</screen>
   </sect3>
   <sect3 xml:id="sec-util-rrdtool-example-update">
    <title>データベースの値の更新</title>
    <para>データベースを作成したら、あとは測定したデータをデータベースに投入していきます。 <xref linkend="sec-util-rrdtool-example-collect"/> で行なったとおり、既に <filename>free_mem_updates.log</filename> というファイルを作成してあり、この中には <command>rrdtool update</command> で始まる更新コマンドの羅列が記載されていますので、あとはそのままそれらを実行するだけです。</para>
<screen>&prompt.user;sh free_mem_updates.log; ls -l free_mem.rrd
-rw-r--r--  1 tux users  776 May  5 13:29 free_mem.rrd</screen>
    <para>上記のとおり、データを更新しても <filename>free_mem.rrd</filename> のサイズは変わりません。</para>
   </sect3>
   <sect3 xml:id="sec-util-rrdtool-example-view">
    <title>記録された値の表示</title>
    <para>データを測定し、データベースを作成し、測定されたデータをデータベースに投入したら、あとはデータベースを利用するだけです。ここでは値を読んでみることにします。</para>
    <para>データベース内に保存された全てのデータを取得するには、下記のように入力して実行します:</para>
<screen>&prompt.user;rrdtool fetch free_mem.rrd AVERAGE --start 1272974830 \
--end 1272974871
          memory
1272974832: nan
1272974836: 1.1729059840e+09
1272974840: 1.1461806080e+09
1272974844: 1.0807572480e+09
1272974848: 1.0030243840e+09
1272974852: 8.9019289600e+08
1272974856: 8.3162112000e+08
1272974860: 9.1693465600e+08
1272974864: 1.1801251840e+09
1272974868: 1.1799787520e+09
1272974872: nan</screen>
    <itemizedlist mark="bullet" spacing="normal">
     <title>注目すべき点</title>
     <listitem>
      <para><literal>AVERAGE</literal> はデータベース内のデータ点の平均値を算出するためのもので、データソースを指定する際に設定したものです ( <xref linkend="sec-util-rrdtool-example-create"/> を参照) 。それ以外の関数は指定していません。</para>
     </listitem>
     <listitem>
      <para>出力の最初の行には、 <xref linkend="sec-util-rrdtool-example-create"/> で行なったデータソースの設定時に指定した名前が現われています。</para>
     </listitem>
     <listitem>
      <para>左側の列は時刻を、右側の列には指数表記での測定値の平均が示されています。</para>
     </listitem>
     <listitem>
      <para><literal>nan</literal> は <quote>not a number</quote> (数値ではない) の意味で、 <!-- NOTE: additional explanation --> 最初と最後では平均値を算出できないため、このような表示になっています。</para>
     </listitem>
    </itemizedlist>
    <para>あとはデータベース内に保存されたデータをグラフ化するだけです:</para>
<screen>&prompt.user;rrdtool graph free_mem.png \
--start 1272974830 \
--end 1272974871 \
--step=4 \
DEF:free_memory=free_mem.rrd:memory:AVERAGE \
LINE2:free_memory#FF0000 \
--vertical-label "GB" \
--title "Free System Memory in Time" \
--zoom 1.5 \
--x-grid SECOND:1:SECOND:4:SECOND:10:0:%X</screen>
    <itemizedlist mark="bullet" spacing="normal">
     <title>注目すべき点</title>
     <listitem>
      <para><filename>free_mem.png</filename> は、作成するグラフのファイル名です。</para>
     </listitem>
     <listitem>
      <para><option>--start</option> と <option>--end</option> は、グラフを作成する際の日時範囲の指定です。</para>
     </listitem>
     <listitem>
      <para><option>--step</option> はグラフの時間間隔を秒単位で指定しているものです。</para>
     </listitem>
     <listitem>
      <para><literal>DEF:...</literal> の部分は <emphasis>free_memory</emphasis> という名前のデータを定義している箇所です。データは <filename>free_mem.rrd</filename> データベースから読み込み、データソース名は <emphasis>memory</emphasis> 、データポイントは <emphasis>average</emphasis> という名前であることを定義しています (<xref linkend="sec-util-rrdtool-example-create"/> ではそれ以外のデータポイントは定義していないためです) 。</para>
     </listitem>
     <listitem>
      <para><literal>LINE...</literal> の部分はグラフに描画する際の線を定義しているものです。 2 ピクセルの太さで <emphasis>free_memory</emphasis> という名前のデータを、赤色で描画する旨を表わしています。</para>
     </listitem>
     <listitem>
      <para><option>--vertical-label</option> は <emphasis>y</emphasis> 軸に表示するラベルを、 <option>--title</option> にはグラフ全体のタイトルをそれぞれ指定しています。</para>
     </listitem>
     <listitem>
      <para><option>--zoom</option> ではグラフの拡大率を指定しています。この値は 0 より大きい値でなければなりません。</para>
     </listitem>
     <listitem>
      <para><option>--x-grid</option> では、グラフ内のグリッド線の描画方法とラベルを指定しています。この例では 1 秒間隔でグリッド線を描画し、 4 秒間隔で赤点線を、 10 秒間隔でラベルをそれぞれ描画しています。</para>
     </listitem>
    </itemizedlist>
    <figure xml:id="util-rrdtool-example-create-graph1">
     <title>RRDtool で作成したグラフの例</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata width="75%" fileref="rrdtool_graph1.png" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata width="55%" fileref="rrdtool_graph1.png" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-util-rrdtool-moreinfo">
   <title>さらなる情報</title>
   <para>RRDtool は非常に複雑なツールであり、多数のサブコマンドやコマンドラインオプションが用意されています。それらの中には分かりやすいものもある一方、期待するような出力を行なおうとすると、いろいろ試行錯誤を行なって調整する必要に迫られることもあります。</para>
   <para>基本的な情報のみを提供している RRDtool のマニュアルページ ( <command>man 1 rrdtool</command> ) とは別に、 <link xlink:href="http://oss.oetiker.ch/rrdtool/">RRDtool home page</link> (英語のみ) をご覧になることをお勧めします。ここには <command>rrdtool</command> コマンドやそのサブコマンドに対する詳細な <link xlink:href="http://oss.oetiker.ch/rrdtool/doc/index.en.html">ドキュメンテーション</link> <!-- NOTE: translation link --> (日本語訳が <link xlink:href="http://agj.at/~fors/sysworks/data/rrdtool/">RRDtool マニュアル訳</link> などにあります) が用意されています。また <link xlink:href="http://oss.oetiker.ch/rrdtool/tut/index.en.html">チュートリアル</link> (英語) には、一般的な RRDtool の作業手順が示されています。</para>
   <para>ネットワークトラフィックの監視を行ないたい場合は、 <link xlink:href="http://oss.oetiker.ch/mrtg/">MRTG (Multi Router Traffic Grapher)</link> (英語) プロジェクトをご覧になるとよいでしょう。 MRTG は、様々なネットワークデバイスから収集した情報をグラフ化することができます。この中でも RRDtool を使用しています。</para>
  </sect2>
 </sect1>
</chapter>
