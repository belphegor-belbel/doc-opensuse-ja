# translation of security_auth.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2018.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2018, 2019, 2020, 2021, 2023.
msgid ""
msgstr ""
"Project-Id-Version: security_auth.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2025-08-04 22:05+0000\n"
"PO-Revision-Date: 2023-12-01 08:12+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: security_auth.xml:11
#, no-c-format
msgid "Setting up authentication clients using &yast;"
msgstr "&yast; を利用した認証クライアントの設定"

#. Tag: para
#: security_auth.xml:17
#, no-c-format
msgid "Whereas Kerberos is used for authentication, LDAP is used for authorization and identification. Both can work together. For more information about LDAP, see <xref linkend=\"cha-security-ldap\"/> , and about Kerberos, see <xref linkend=\"cha-security-kerberos\"/> ."
msgstr "Kerberos は認証時に使用するプロトコルですが、 LDAP は認可と識別を行うためのプロトコルです。両方を組み合わせて使用することもできます。 LDAP に関する詳細は <xref linkend=\"cha-security-ldap\"/> を、 Kerberos に関する詳細は <xref linkend=\"cha-security-kerberos\"/> をそれぞれお読みください。"

#. Tag: date
#: security_auth.xml:26
#, no-c-format
msgid "2023-11-30"
msgstr "2023-11-30"

#. Tag: title
#: security_auth.xml:35
#, no-c-format
msgid "Configuring an authentication client with &yast;"
msgstr "&yast; を利用した認証クライアントの設定"

#. Tag: para
#: security_auth.xml:37
#, no-c-format
msgid "&yast; allows setting up authentication to clients using different modules:"
msgstr "&yast; では、下記のようなモジュールを利用して、クライアントに対する認証を設定することができます:"

#. Tag: title
#: security_auth.xml:47
#, no-c-format
msgid "SSSD"
msgstr "SSSD"

#. Tag: para
#: security_auth.xml:48
#, no-c-format
msgid "Two of the &yast; modules are based on SSSD: <guimenu>User Logon Management</guimenu> and <guimenu>LDAP and Kerberos Authentication</guimenu> ."
msgstr "&yast; では、 2 種類のモジュールで SSSD を使用しています。それぞれ <guimenu>ユーザログイン管理</guimenu> と <guimenu>LDAP と Kerberos の認証</guimenu> です。"

#. Tag: para
#: security_auth.xml:53
#, no-c-format
msgid "SSSD stands for System Security Services Daemon. SSSD talks to remote directory services that provide user data and provides authentication methods, such as LDAP, &krb;, or &ad; (&ada;). It also provides an NSS (Name Service Switch) and PAM (Pluggable Authentication Module) interface."
msgstr "SSSD は System Security Services Daemon の略であり、ネットワーク上離れた場所に存在するディレクトリサービスにアクセスして、ユーザデータの提供や様々な認証方式 (LDAP, &krb;, &ad; (&ada;) など) の提供を受けることができるデーモンです。このデーモンには NSS (Name Service Switch) と PAM (Pluggable Authentication Module) の各インターフェイスも用意されています。"

#. Tag: para
#: security_auth.xml:60
#, no-c-format
msgid "SSSD can locally cache user data and then allow users to use the data, even if the real directory service is (temporarily) unreachable."
msgstr "SSSD はユーザデータをローカルにキャッシュ (一時記憶) してデータを提供しています。そのため、実際のディレクトリサービスに対して、一時的にアクセスができない状況に陥った場合も、 SSSD はサービスを続けることができます。"

#. Tag: title
#: security_auth.xml:65
#, no-c-format
msgid "Checking the status"
msgstr "状態の確認"

#. Tag: para
#: security_auth.xml:66
#, no-c-format
msgid "After running one of the &yast; authentication modules, you can check whether SSSD is running with:"
msgstr "&yast; の認証モジュールで設定を行ったあとは、下記のように実行することで、 SSSD が動作しているかどうかを確認することができます:"

#. Tag: screen
#: security_auth.xml:70
#, no-c-format
msgid ""
"&prompt.root;<command>systemctl status sssd</command>\n"
"sssd.service - System Security Services Daemon\n"
"   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled)\n"
"   Active: active (running) since Thu 2015-10-23 11:03:43 CEST; 5s ago\n"
"   [...]"
msgstr ""
"&prompt.root;<command>systemctl status sssd</command>\n"
"sssd.service - System Security Services Daemon\n"
"   Loaded: loaded (/usr/lib/systemd/system/sssd.service; enabled)\n"
"   Active: active (running) since Thu 2015-10-23 11:03:43 CEST; 5s ago\n"
"   [...]"

#. Tag: title
#: security_auth.xml:78
#, no-c-format
msgid "Caching"
msgstr "キャッシュ"

#. Tag: para
#: security_auth.xml:79
#, no-c-format
msgid "To allow logging in when the authentication back-end is unavailable, SSSD uses its cache even if it was invalidated. This happens until the back-end is available again."
msgstr "認証用のバックエンドが利用できなくなってしまっている状態でもログインができるようにするため、 SSSD はキャッシュの有効期限が切れてもキャッシュを使用するようになっています。これはバックエンドが再度利用できるようになるまで動作します。"

#. Tag: para
#: security_auth.xml:84
#, no-c-format
msgid "To invalidate the cache, run <command>sss_cache -E</command> (the command <command>sss_cache</command> is part of the package <package>sssd-tools</package> )."
msgstr "キャッシュの内容を消去したい場合は、 <command>sss_cache -E</command> (<command>sss_cache</command> コマンドは <package>sssd-tools</package> パッケージに含まれています) を実行します。"

#. Tag: para
#: security_auth.xml:89
#, no-c-format
msgid "To remove the SSSD cache, run:"
msgstr "SSSD キャッシュを削除したい場合は、下記を実行します:"

#. Tag: screen
#: security_auth.xml:92
#, no-c-format
msgid ""
"&prompt.sudo;<command>systemctl stop sssd</command>\n"
"&prompt.sudo;<command>rm -f /var/lib/sss/db/*</command>\n"
"&prompt.sudo;<command>systemctl start sssd</command>"
msgstr ""
"&prompt.sudo;<command>systemctl stop sssd</command>\n"
"&prompt.sudo;<command>rm -f /var/lib/sss/db/*</command>\n"
"&prompt.sudo;<command>systemctl start sssd</command>"

