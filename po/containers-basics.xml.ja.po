# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
# Automatically generated, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-08-02 22:01+0000\n"
"PO-Revision-Date: 2020-09-15 22:20+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: containers-basics.xml:8
#, no-c-format
msgid "Introduction to Linux containers"
msgstr ""

#. Tag: para
#: containers-basics.xml:14
#, no-c-format
msgid ""
"The Linux kernel's namespaces and kernel control groups features enable the "
"container to be isolated from the rest of the host system and other "
"containers. Linux containers offer a lightweight virtualization method to "
"run multiple isolated environments simultaneously on a single host. Unlike "
"&xen; and &kvm;, where a full guest operating system is executed through a "
"virtualization layer, Linux containers share and directly use the host OS "
"kernel. This reduces the overhead required for accessing the operating "
"system resources and allows for better overall performance compared to a "
"generic Virtual Machine environment."
msgstr ""

#. Tag: title
#: containers-basics.xml:26
#, no-c-format
msgid "Advantages of using containers"
msgstr ""

#. Tag: para
#: containers-basics.xml:28
#, no-c-format
msgid ""
"Containers make it possible to isolate applications in self-contained units."
msgstr ""

#. Tag: para
#: containers-basics.xml:34
#, no-c-format
msgid ""
"Containers provide near-native performance, as the kernel overhead is lower "
"compared to virtualization and emulation."
msgstr ""

#. Tag: para
#: containers-basics.xml:40
#, no-c-format
msgid ""
"It is possible to control network interfaces and apply resources inside "
"containers through kernel control groups (cgroups)."
msgstr ""

#. Tag: para
#: containers-basics.xml:46
#, no-c-format
msgid ""
"Portability and ease of development for application developers as the "
"container will hold all necessary libraries, dependencies, and files needed."
msgstr ""

#. Tag: title
#: containers-basics.xml:54
#, no-c-format
msgid "Limitations of containers"
msgstr ""

#. Tag: para
#: containers-basics.xml:56
#, no-c-format
msgid ""
"Containers run on the host system's kernel, so the containers will have to "
"use the specific kernel version provided by the host."
msgstr ""

#. Tag: para
#: containers-basics.xml:62
#, no-c-format
msgid "Only Linux-based applications can be containerized."
msgstr ""

#. Tag: para
#: containers-basics.xml:67
#, no-c-format
msgid ""
"A container encapsulates binaries for a specific architecture (x86_64 or "
"aarch64 for instance). So a container made for x86_64 only runs on a x86_64 "
"system host."
msgstr ""

#. Tag: para
#: containers-basics.xml:74
#, no-c-format
msgid ""
"Containers in themselves are no more secure than executing binaries outside "
"of a container, and the overall security of containers depends on the host "
"system. While containerized applications can be secured through &aa; or "
"&selnx; profiles, container security require putting in place tools and "
"policies that ensure security of the container infrastructure and "
"applications."
msgstr ""

#. Tag: title
#: containers-basics.xml:85
#, no-c-format
msgid "Key concepts and brief introduction to &podman;"
msgstr ""

#. Tag: para
#: containers-basics.xml:87
#, no-c-format
msgid ""
"Although &deng; is a popular choice for working with images and containers, "
"&podman; provides a drop-in replacement for &docker; that offers several "
"advantages. While <xref linkend=\"cha-podman-overview\"/> provides more "
"information on &podman;, this chapter offers a quick introduction to key "
"concepts and a basic procedure for creating a container image and using it "
"to run a container."
msgstr ""

#. Tag: para
#: containers-basics.xml:96
#, no-c-format
msgid "The basic &podman; workflow is as follows:"
msgstr ""

#. Tag: para
#: containers-basics.xml:111
#, no-c-format
msgid ""
"Running a container, either on a local machine or cloud service, usually "
"involves the following steps:"
msgstr ""

#. Tag: para
#: containers-basics.xml:118
#, no-c-format
msgid "Fetch a base image by pulling it from a registry to your local machine."
msgstr ""

#. Tag: para
#: containers-basics.xml:123
#, no-c-format
msgid ""
"Create a Dockerfile and use it to build a custom image on top of the base "
"image."
msgstr ""

#. Tag: para
#: containers-basics.xml:129
#, no-c-format
msgid "Use the created image to start one or more containers."
msgstr ""

#. Tag: para
#: containers-basics.xml:135
#, no-c-format
msgid ""
"To run a container, you need an image. An image includes all dependencies "
"needed to run the application. For example, the &slea; base image contains "
"the &slea; distribution with a minimal package selection."
msgstr ""

#. Tag: para
#: containers-basics.xml:141
#, no-c-format
msgid ""
"While it is possible to create an image from scratch, few applications would "
"work in such an empty environment. Thus, using an existing base image is "
"more practical in most situations. A base image has no parent, meaning it is "
"not based on another image."
msgstr ""

#. Tag: para
#: containers-basics.xml:148
#, no-c-format
msgid ""
"Although you can use a base image for running containers, the main purpose "
"of base images is to serve as foundations for creating custom images that "
"can run containers with specific applications, servers, services, and so on."
msgstr ""

#. Tag: para
#: containers-basics.xml:154
#, no-c-format
msgid ""
"Both base and custom images are usually available through a repository of "
"images called a registry. Unless a registry is explicitly specified, "
"&podman; pulls images from the &dhub; registry. While you can fetch a base "
"image manually, &podman; can do that automatically when building a custom "
"image."
msgstr ""

#. Tag: para
#: containers-basics.xml:162
#, no-c-format
msgid ""
"To build a custom image, you need to create a special file called a "
"Containerfile or Dockerfile, containing building instructions. For example, "
"a Dockerfile can contain instructions to update the system software, install "
"the desired application, open specific network ports, run commands, etc."
msgstr ""

#. Tag: para
#: containers-basics.xml:169
#, no-c-format
msgid ""
"You can build images not only from base images, but also on top of custom "
"images. So you can have an image consisting of multiple layers:"
msgstr ""

#. Tag: title
#: containers-basics.xml:186
#, no-c-format
msgid "Practical example"
msgstr ""

#. Tag: para
#: containers-basics.xml:187
#, no-c-format
msgid ""
"The following procedure shows how to build a custom &docker; image that can "
"be used to run a container with a simple PHP application called "
"<literal>example</literal> , served using the built-in PHP development "
"server."
msgstr ""

#. Tag: title
#: containers-basics.xml:194
#, no-c-format
msgid "Building an image and running a container"
msgstr ""

#. Tag: para
#: containers-basics.xml:196
#, no-c-format
msgid "Install &podman;:"
msgstr ""

#. Tag: screen
#: containers-basics.xml:199
#, no-c-format
msgid "&prompt.sudo;zypper in podman"
msgstr ""

#. Tag: para
#: containers-basics.xml:202
#, no-c-format
msgid ""
"Switch to the PHP project's directory (in this case, the directory is called "
"<filename>example</filename> ) and create a file named <filename>Dockerfile</"
"filename> :"
msgstr ""

#. Tag: screen
#: containers-basics.xml:207
#, no-c-format
msgid ""
"&prompt.user;cd example\n"
"&prompt.user;touch Dockerfile"
msgstr ""

#. Tag: para
#: containers-basics.xml:211
#, no-c-format
msgid ""
"Open the <filename>Dockerfile</filename> file for editing and add the "
"following:"
msgstr ""

#. Tag: screen
#: containers-basics.xml:215
#, no-c-format
msgid ""
"\n"
"FROM php:7.4-cli\n"
"COPY . /usr/src/example\n"
"WORKDIR /usr/src/example\n"
"EXPOSE 8000\n"
"CMD [ \"php\", \"-S\", \"0.0.0.0:8000\" ]"
msgstr ""

#. Tag: para
#: containers-basics.xml:223
#, no-c-format
msgid "Build a container image:"
msgstr ""

#. Tag: screen
#: containers-basics.xml:226
#, no-c-format
msgid "&prompt.sudo;podman build -t example ."
msgstr ""

#. Tag: para
#: containers-basics.xml:227
#, no-c-format
msgid "When prompted, select the image in the Docker registry."
msgstr ""

#. Tag: para
#: containers-basics.xml:232
#, no-c-format
msgid "Run a container:"
msgstr ""

#. Tag: screen
#: containers-basics.xml:235
#, no-c-format
msgid "&prompt.sudo;podman run -it -p 8000:8000 --rm example"
msgstr ""

#. Tag: para
#: containers-basics.xml:238
#, no-c-format
msgid ""
"Point the browser to <literal>localhost:8000</literal> to access the "
"application running in the container."
msgstr ""

#. Tag: para
#: containers-basics.xml:244
#, no-c-format
msgid ""
"Note that &suse; does not provide support for third-party images, such as "
"the one used in this example."
msgstr ""
