# translation of vt_io.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2018.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2019.
msgid ""
msgstr ""
"Project-Id-Version: vt_io.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2018-06-28 08:14+0000\n"
"PO-Revision-Date: 2019-04-05 12:20+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: vt_io.xml:9
#, no-c-format
msgid "I/O Virtualization"
msgstr "I/O の仮想化"

#. Tag: para
#: vt_io.xml:17
#, no-c-format
msgid ""
"&vmguest;s not only share CPU and memory resources of the host system, but "
"also the I/O subsystem. Because software I/O virtualization techniques "
"deliver less performance than bare metal, hardware solutions that deliver "
"almost <quote>native</quote> performance have been developed recently. "
"&productname; supports the following I/O virtualization techniques:"
msgstr ""
"&vmguest; はホストシステム内の CPU やメモリリソースを共有するだけでなく、 I/O "
"サブシステムを共有することもできます。ソフトウエアによる I/O 仮想化技術はベアメタル"
" (物理的なサーバ) に比べると性能が落ちますが、ハードウエアによる技術を使用すると、"
"ほぼ <quote>ネイティブ</quote> に近い性能を発揮できるようになっています。"
" &productname; では、下記のような I/O 仮想化技術に対応しています:"

#. Tag: term
#: vt_io.xml:27
#, no-c-format
msgid "Full Virtualization"
msgstr "完全仮想化"

#. Tag: para
#: vt_io.xml:29
#, no-c-format
msgid ""
"Fully Virtualized (FV) drivers emulate widely supported real devices, which "
"can be used with an existing driver in the &vmguest;. The guest is also "
"called <emphasis>Hardware Virtual Machine</emphasis> (HVM). Since the "
"physical device on the &vmhost; may differ from the emulated one, the "
"hypervisor needs to process all I/O operations before handing them over to "
"the physical device. Therefore all I/O operations need to traverse two "
"software layers, a process that not only significantly impacts I/O "
"performance, but also consumes CPU time."
msgstr ""
"完全仮想化 (Fully Virtualized (FV)) ドライバでは、幅広く使用されている実在デバイスを"
"擬似する仕組みであるため、 &vmguest; 内でも既存のドライバを使用することができます。"
"ゲストは <emphasis>ハードウエア仮想マシン</emphasis> (Hardware Virtual Machine; HVM) "
"も呼ぶこともあります。 &vmhost; 内の物理デバイスは擬似されているデバイスとは異なる"
"ため、ハイパーバイザはゲスト側からの全ての I/O 操作を物理デバイスに渡す際、それらを"
"正しく処理しなければならないことを意味します。そのため、全ての I/O 操作はソフトウエア"
"層にまで引き上げて処理を行なうことになりますので、 I/O 性能がかなり落ちてしまう"
"だけでなく、 CPU 側にも負荷がかかることになります。"

#. Tag: term
#: vt_io.xml:42
#, no-c-format
msgid "Paravirtualization"
msgstr "準仮想化"

#. Tag: para
#: vt_io.xml:44
#, no-c-format
msgid ""
"Paravirtualization (PV) allows direct communication between the hypervisor "
"and the &vmguest;. With less overhead involved, performance is much better "
"than with full virtualization. However, paravirtualization requires either "
"the guest operating system to be modified to support the paravirtualization "
"API or paravirtualized drivers. <phrase os=\"sles;sled\">See <xref linkend="
"\"sec.kvm.requires.guests.virt_drivers\"/> for a list of guest operating "
"systems supporting paravirtualization.</phrase>"
msgstr ""
"準仮想化 (Paravirtualization (PV)) ではハイパーバイザと &vmguest; の間で直接的な"
"通信を行ないます。オーバーヘッドの少ない仕組みであることから、性能は完全仮想化に"
"比べてずっと良好になります。しかしながら、準仮想化ではゲスト側のオペレーティング"
"システムを修正し、準仮想化 API に対応させるようにするか、準仮想化用のドライバを"
"使用する必要があります。 <phrase os=\"sles;sled\">準仮想化に対応するゲスト側の"
"オペレーティングシステムの一覧について、詳しくは <xref linkend=\"sec.kvm.requires."
"guests.virt_drivers\"/> をお読みください。</phrase>"

#. Tag: term
#: vt_io.xml:57
#, no-c-format
msgid "PVHVM"
msgstr "PVHVM"

#. Tag: para
#: vt_io.xml:59
#, no-c-format
msgid ""
"This type of virtualization enhances HVM (see <xref linkend=\"vt.io.fullv\"/"
"> ) with paravirtualized (PV) drivers, and PV interrupt and timer handling."
msgstr ""
"この種類の仮想化では、 HVM (<xref linkend=\"vt.io.fullv\"/> をお読みください) で"
"ありながら、準仮想化 (PV) ドライバと PV による割り込みやタイマー処理を使用します。"

#. Tag: term
#: vt_io.xml:67
#, no-c-format
msgid "VFIO"
msgstr "VFIO"

#. Tag: para
#: vt_io.xml:69
#, no-c-format
msgid ""
"VFIO stands for <emphasis>Virtual Function I/O</emphasis> and is a new user-"
"level driver framework for Linux. It replaces the traditional &kvm; "
"&pciback; device assignment. The VFIO driver exposes direct device access to "
"user space in a secure memory ( <xref linkend=\"gloss.vt.acronym.iommu\"/> ) "
"protected environment. With VFIO, a &vmguest; can directly access hardware "
"devices on the &vmhost; (pass-through), avoiding performance issues caused "
"by emulation in performance critical paths. This method does not allow to "
"share devices&mdash;each device can only be assigned to a single &vmguest;. "
"VFIO needs to be supported by the &vmhost; CPU, chipset and the BIOS/EFI."
msgstr ""
"VFIO は <emphasis>Virtual Function I/O</emphasis> の略で、 Linux 向けの新しい"
"ユーザレベルドライバのフレームワークです。従来の &kvm; &pciback; デバイス割り当て"
"を置き換えるものです。 VFIO ドライバはユーザスペースに対して、メモリの機密を保持"
" ( <xref linkend=\"gloss.vt.acronym.iommu\"/> ) しながら、保護環境下で直接の"
"デバイスアクセス機能を提供するものです。 VFIO を利用することで、 &vmguest; は"
" &vmhoest; 内のハードウエアデバイスに、性能面のクリティカルパスの擬似による性能"
"劣化を引き起こすことなく、直接アクセスできるようになります。ただし、この方式は"
"デバイスの共有には使用できません。各デバイスは単一の &vmguest; にのみ割り当てる"
"ことができます。また、 VFIO は &vmhost; の CPU やチップセット、 BIOS/EFI で"
"それぞれ対応している必要があります。"

#. Tag: para
#: vt_io.xml:82
#, no-c-format
msgid ""
"Compared to the legacy &kvm; PCI device assignment, VFIO has the following "
"advantages:"
msgstr "従来型の &kvm; PCI デバイス割り当てと比較して、 VFIO には下記のような利点があります:"

#. Tag: para
#: vt_io.xml:88
#, no-c-format
msgid "Resource access is compatible with secure boot."
msgstr "リソースへのアクセスは Secure Boot との互換性があります。"

#. Tag: para
#: vt_io.xml:93
#, no-c-format
msgid "Device is isolated and its memory access protected."
msgstr "デバイスは孤立した存在になり、メモリアクセスも保護されます。"

#. Tag: para
#: vt_io.xml:98
#, no-c-format
msgid "Offers a user space device driver with more flexible device ownership model."
msgstr "より柔軟なデバイス所有者モデルを採用した、ユーザスペースのデバイスドライバが提供されています。"

#. Tag: para
#: vt_io.xml:104
#, no-c-format
msgid "Is independent of &kvm; technology, and not bound to x86 architecture only."
msgstr "&kvm; 技術とは独立しているほか、 x86 アーキテクチャのみに固有のものでもありません。"

#. Tag: para
#: vt_io.xml:110
#, no-c-format
msgid ""
"As of <phrase os=\"sles;sled\">&sls; 12 SP2</phrase> <phrase os=\"osuse"
"\">openSUSE 42.2</phrase> , the USB and PCI Pass-through methods of device "
"assignment are considered deprecated and were superseded by the VFIO model."
msgstr ""
"<phrase os=\"sles;sled\">&sls; 12 SP2</phrase> <phrase os=\"osuse\">openSUSE "
"42.2</phrase> およびそれ以降のバージョンでは、 USB と PCI のパススルーによる"
"デバイスの割り当ては廃止予定とされ、 VFIO モデルで置き換えられています。"

#. Tag: term
#: vt_io.xml:119
#, no-c-format
msgid "SR-IOV"
msgstr "SR-IOV"

#. Tag: para
#: vt_io.xml:121
#, no-c-format
msgid ""
"The latest I/O virtualization technique, Single Root I/O Virtualization SR-"
"IOV combines the benefits of the aforementioned techniques&mdash;performance "
"and the ability to share a device with several &vmguest;s. SR-IOV requires "
"special I/O devices, that are capable of replicating resources so they "
"appear as multiple separate devices. Each such <quote>pseudo</quote> device "
"can be directly used by a single guest. However, for network cards for "
"example the number of concurrent queues that can be used is limited, "
"potentially reducing performance for the &vmguest; compared to "
"paravirtualized drivers. On the &vmhost;, SR-IOV must be supported by the I/"
"O device, the CPU and chipset, the BIOS/EFI and the hypervisor&mdash;for "
"setup instructions see <xref linkend=\"sec.libvirt.config.pci\"/> . <!-- fs "
"2014-02-21: no list available ATM &productname; supports the SRV-IOV capable "
"network cards listed below -->"
msgstr ""
"最新の I/O 仮想化技術で、 Single Root I/O Virtualization の略です。 SR-IOV では"
"前述の技術の利点を組み合わせて作られています。性能を強化しているだけでなく、複数の"
" &vmguest; でデバイスを共有する機能を備えています。 SR-IOV では、リソースを複製して"
"複数のデバイスとしてアクセスすることのできる、特殊な I/O デバイスが必要となります。"
"この場合、それぞれの <quote>擬似</quote> デバイスは 1 台のゲストからアクセスする"
"ことになります。しかしながら、たとえばネットワークカードなどの場合、同時に使用する"
"ことのできるキュー数は制限されているため、準仮想化に比べると &vmguest; の性能が"
"落ちる可能性があることになります。 &vmhost; 側としては、 SR-IOV が I/O デバイス側"
"と CPU 、チップセットと BIOS/EFI 、そしてハイパーバイザでそれぞれ対応していなければ"
"なりません。詳しい設定手順については、 <xref linkend=\"sec.libvirt.config.pci\"/> "
"をお読みください。 <!-- fs 2014-02-21: no list available ATM &productname; supports "
"the SRV-IOV capable network cards listed below -->"

#. Tag: title
#: vt_io.xml:143
#, no-c-format
msgid "Requirements for VFIO and SR-IOV"
msgstr "VFIO および SR-IOV の要件について"

#. Tag: para
#: vt_io.xml:144
#, no-c-format
msgid ""
"To be able to use the VFIO and SR-IOV features, the &vmhost; needs to "
"fulfill the following requirements:"
msgstr ""
"VFIO や SR-IOV の機能を使用できるようにするには、 &vmhost; 側が下記の要件を"
"満たす必要があります:"

#. Tag: para
#: vt_io.xml:150
#, no-c-format
msgid "IOMMU needs to be enabled in the BIOS/EFI."
msgstr "BIOS や EFI で IOMMU が有効化されていること。"

#. Tag: para
#: vt_io.xml:155
#, no-c-format
msgid ""
"For Intel CPUs, the kernel parameter <literal>intel_iommu=on</literal> needs "
"to be provided on the kernel command line. For more information, see <xref "
"linkend=\"sec.grub2.yast2.config.advanced.kernel_parameters\"/> ."
msgstr ""
"Intel CPU の場合、カーネルのコマンドライン内のパラメータに <literal>intel_iommu=on"
"</literal> を追加する必要があります。詳しくは <xref linkend=\"sec.grub2.yast2.config."
"advanced.kernel_parameters\"/> をお読みください。"

#. Tag: para
#: vt_io.xml:162
#, no-c-format
msgid ""
"The VFIO infrastructure needs to be available. This can be achieved by "
"loading the kernel module <systemitem class=\"resource\">vfio_pci</"
"systemitem> . For more information, see <xref linkend=\"sec.boot.systemd."
"advanced.kernel_modules\"/> ."
msgstr ""
"VFIO インフラストラクチャを利用できるようにする必要があります。こちらはカーネルモジュール"
"である <systemitem class=\"resource\">vfio_pci</systemitem> を読み込むことで、"
"利用できるようになります。詳しくは <xref linkend=\"sec.boot.systemd."
"advanced.kernel_modules\"/> をお読みください。"

