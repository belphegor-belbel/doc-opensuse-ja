# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-04-29 22:16+0000\n"
"PO-Revision-Date: 2022-04-29 22:16+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: containers-bci.xml:12
#, no-c-format
msgid "&bci;s"
msgstr ""

#. Tag: title
#: containers-bci.xml:15
#, no-c-format
msgid "BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox"
msgstr ""

#. Tag: para
#: containers-bci.xml:17
#, no-c-format
msgid ""
"&suse; offers several general-purpose &bci;s that are intended as deployment "
"targets or as foundations for creating customized images: BCI-Base, BCI-"
"Minimal, BCI-Micro, and BCI-BusyBox. These images share the common &slsa; "
"base, and none of them ship with a specific language or an application "
"stack. All images feature the RPM database (even if the specific image does "
"not include the RPM package manager) that can be used to verify the "
"provenance of every file in the image. Each image includes the &slsa; "
"certificate bundle, which allows the deployed applications to use the "
"system's certificates to verify TLS connections."
msgstr ""

#. Tag: title
#: containers-bci.xml:30
#, no-c-format
msgid "Quick overview"
msgstr ""

#. Tag: para
#: containers-bci.xml:31
#, no-c-format
msgid ""
"The table below provides a quick overview of the differences between BCI-"
"Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox."
msgstr ""

#. Tag: title
#: containers-bci.xml:48
#, no-c-format
msgid "BCI-Base and BCI-Init: When you need flexibility"
msgstr ""

#. Tag: para
#: containers-bci.xml:49
#, no-c-format
msgid ""
"This &bci; comes with the Zypper package manager and a free SLE-BCI "
"repository. This allows you to install software available in the repository "
"and customize the image during the build. The downside is the size of the "
"image. It is the largest of the general-purpose &bci;s, so it is not always "
"the best choice for a deployment image."
msgstr ""

#. Tag: para
#: containers-bci.xml:56
#, no-c-format
msgid ""
"A variant of BCI-Base called BCI-Init comes with systemd preinstalled. The "
"BCI-Init container image can be useful in scenarios requiring systemd for "
"managing services in a single container."
msgstr ""

#. Tag: title
#: containers-bci.xml:64
#, no-c-format
msgid "BCI-Minimal: When you do not need Zypper"
msgstr ""

#. Tag: para
#: containers-bci.xml:65
#, no-c-format
msgid ""
"This is a stripped-down version of the BCI-Base image. BCI-Minimal comes "
"without Zypper, but it does have the RPM package manager installed. This "
"significantly reduces the size of the image. However, while RPM can install "
"and remove packages, it lacks support for repositories and automated "
"dependency resolution. The BCI-Minimal image is therefore intended for "
"creating deployment containers, and then installing the desired RPM packages "
"inside the containers. Although you can install the required dependencies, "
"you need to download and resolve them manually. However, this approach is "
"not recommended as it is prone to errors."
msgstr ""

#. Tag: title
#: containers-bci.xml:79
#, no-c-format
msgid "BCI-Micro: When you need to deploy static binaries"
msgstr ""

#. Tag: para
#: containers-bci.xml:80
#, no-c-format
msgid ""
"This image is similar to BCI-Minimal but without the RPM package manager. "
"The primary use case for the image is deploying static binaries produced "
"externally or during multi-stage builds. As there is no straightforward way "
"to install additional dependencies inside the container image, we recommend "
"deploying a project using the BCI-Minimal image only when the final build "
"artifact bundles all dependencies and has no external runtime requirements "
"(like Python or Ruby)."
msgstr ""

#. Tag: title
#: containers-bci.xml:92
#, no-c-format
msgid "BCI-BusyBox: When you need the smallest and GPLv3-free image"
msgstr ""

#. Tag: para
#: containers-bci.xml:93
#, no-c-format
msgid ""
"Similar to BCI-Micro, the BCI-BusyBox image comes with the most basic tools "
"only. However, these tools are provided by the BusyBox project. This has the "
"benefit of further size reduction. Furthermore, the image contains no GPLv3 "
"licensed software. When using the image, keep in mind that there are certain "
"differences between the BusyBox tools and the GNU Coreutils. So scripts "
"written for a system that uses GNU Coreutils may require modification to "
"work with BusyBox."
msgstr ""

#. Tag: title
#: containers-bci.xml:105
#, no-c-format
msgid "Approximate sizes"
msgstr ""

#. Tag: para
#: containers-bci.xml:106
#, no-c-format
msgid ""
"For your reference, the list below provides an approximate size of each "
"&bci;. Keep in mind that the provided numbers are rough estimations."
msgstr ""

#. Tag: para
#: containers-bci.xml:112
#, no-c-format
msgid "<literal>BCI-Base</literal> ~94&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:117
#, no-c-format
msgid "<literal>BCI-Minimal</literal> ~42&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:122
#, no-c-format
msgid "<literal>BCI-Micro</literal> ~26&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:127
#, no-c-format
msgid "<literal>BCI-BusyBox</literal> ~14&nbsp;MB"
msgstr ""
