# translation of tuning_tracing.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2018.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2019, 2020, 2021, 2022, 2023.
msgid ""
msgstr ""
"Project-Id-Version: tuning_tracing.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2023-08-09 03:34+0000\n"
"PO-Revision-Date: 2023-08-09 18:04+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: tuning_tracing.xml:9
#, no-c-format
msgid "Tracing tools"
msgstr "トレーシングツール"

#. Tag: para
#: tuning_tracing.xml:17
#, no-c-format
msgid ""
"&productname; comes with several tools that help you obtain useful "
"information about your system. You can use the information for different "
"purposes. For example, to debug and find problems in your program, to "
"discover places causing performance drops, or to trace a running process to "
"find out what system resources it uses. <phrase os=\"sles;sled\">Most of the "
"tools are part of the installation media. In certain cases, they need to be "
"installed from the &sdk;, which is a separate download.</phrase>"
msgstr ""
"&productname; には、お使いのシステムに関して情報の採取を行うためのツールがい"
"くつか用意されています。この情報採取では、たとえばプログラム内での問題を解析 "
"(デバッグ) したり検出したり、性能面での問題点となっている箇所の発見や、プログ"
"ラムの動作中に使用しているシステムリソースを見つけたりすることができます。"
"<phrase os=\"sles;sled\">これらのツールのうちのほとんどは、インストールメディ"
"ア内に含まれていますが、場合によっては &sdk; 内に含まれているものもあり、この"
"場合は個別にダウンロードを行う必要があります。</phrase>"

#. Tag: title
#: tuning_tracing.xml:27
#, no-c-format
msgid "Tracing and impact on performance"
msgstr "トレーシングによる性能面への影響について"

#. Tag: para
#: tuning_tracing.xml:28
#, no-c-format
msgid ""
"While a running process is being monitored for system or library calls, the "
"performance of the process is heavily reduced. You are advised to use "
"tracing tools only for the time you need to collect the data."
msgstr ""
"動作中のプロセスに対してシステムコールやライブラリコールの監視を行うと、その"
"プロセスの性能が大幅に落ちることになります。そのため、トレーシングツールの使"
"用は、データ収集の際にのみ実施することをお勧めします。"

#. Tag: title
#: tuning_tracing.xml:35
#, no-c-format
msgid "Tracing system calls with strace"
msgstr "strace によるシステムコールの追跡"

#. Tag: para
#: tuning_tracing.xml:37
#, no-c-format
msgid ""
"The <command>strace</command> command traces system calls of a process and "
"signals received by the process. <command>strace</command> can either run a "
"new command and trace its system calls, or you can attach <command>strace</"
"command> to an already running command. Each line of the command's output "
"contains the system call name, followed by its arguments in parentheses and "
"its return value."
msgstr ""
"<command>strace</command> コマンドは、プロセスが使用したシステムコールと、プ"
"ロセスが受信したシグナルを追跡するためのコマンドです。 <command>strace</"
"command> では新しくプロセスを起動してシステムコールを追跡することができるほ"
"か、既に実行されているコマンドに接続して、システムコールを追跡することもでき"
"ます。コマンドの出力の各行にはシステムコールの名前のほか、括弧でくくられたパ"
"ラメータの一覧と返り値も表示されます。"

#. Tag: para
#: tuning_tracing.xml:46
#, no-c-format
msgid ""
"To run a new command and start tracing its system calls, enter the command "
"to be monitored as you normally do, and add <command>strace</command> at the "
"beginning of the command line:"
msgstr ""
"新しくコマンドを起動してシステムコールの追跡を開始したい場合は、通常のコマン"
"ドラインの前に <command>strace</command> を入れて実行します:"

#. Tag: screen
#: tuning_tracing.xml:52
#, no-c-format
msgid ""
"&prompt.user;strace ls\n"
"execve(\"/bin/ls\", [\"ls\"], [/* 52 vars */]) = 0\n"
"brk(0)                                  = 0x618000\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"        = 0x7f9848667000\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"        = 0x7f9848666000\n"
"access(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT \\\n"
"(No such file or directory)\n"
"open(\"/etc/ld.so.cache\", O_RDONLY)      = 3\n"
"fstat(3, {st_mode=S_IFREG|0644, st_size=200411, ...}) = 0\n"
"mmap(NULL, 200411, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f9848635000\n"
"close(3)                                = 0\n"
"open(\"/lib64/librt.so.1\", O_RDONLY)     = 3\n"
"[...]\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"= 0x7fd780f79000\n"
"write(1, \"Desktop\\nDocuments\\nbin\\ninst-sys\\n\", 31Desktop\n"
"Documents\n"
"bin\n"
"inst-sys\n"
") = 31\n"
"close(1)                                = 0\n"
"munmap(0x7fd780f79000, 4096)            = 0\n"
"close(2)                                = 0\n"
"exit_group(0)                           = ?"
msgstr ""
"&prompt.user;strace ls\n"
"execve(\"/bin/ls\", [\"ls\"], [/* 52 vars */]) = 0\n"
"brk(0)                                  = 0x618000\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"        = 0x7f9848667000\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"        = 0x7f9848666000\n"
"access(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT \\\n"
"(No such file or directory)\n"
"open(\"/etc/ld.so.cache\", O_RDONLY)      = 3\n"
"fstat(3, {st_mode=S_IFREG|0644, st_size=200411, ...}) = 0\n"
"mmap(NULL, 200411, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f9848635000\n"
"close(3)                                = 0\n"
"open(\"/lib64/librt.so.1\", O_RDONLY)     = 3\n"
"[...]\n"
"mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) \\\n"
"= 0x7fd780f79000\n"
"write(1, \"Desktop\\nDocuments\\nbin\\ninst-sys\\n\", 31Desktop\n"
"Documents\n"
"bin\n"
"inst-sys\n"
") = 31\n"
"close(1)                                = 0\n"
"munmap(0x7fd780f79000, 4096)            = 0\n"
"close(2)                                = 0\n"
"exit_group(0)                           = ?"

#. Tag: para
#: tuning_tracing.xml:79
#, no-c-format
msgid ""
"To attach <command>strace</command> to an already running process, you need "
"to specify the <option>-p</option> with the process ID ( <systemitem>PID</"
"systemitem> ) of the process that you want to monitor:"
msgstr ""
"既に起動しているプロセスに対して <command>strace</command> を接続するには、接"
"続先のプロセスのプロセス ID ( <systemitem>PID</systemitem> ) を <option>-p</"
"option> パラメータで指定します:"

#. Tag: screen
#: tuning_tracing.xml:85
#, no-c-format
msgid ""
"&prompt.user;strace -p `pidof cron`\n"
" Process 1261 attached\n"
" restart_syscall(&lt;... resuming interrupted call ...&gt;) = 0\n"
"  stat(\"/etc/localtime\", {st_mode=S_IFREG|0644, st_size=2309, ...}) = 0\n"
"  select(5, [4], NULL, NULL, {0, 0})      = 0 (Timeout)\n"
"  socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 5\n"
"  connect(5, {sa_family=AF_LOCAL, sun_path=\"/var/run/nscd/socket\"}, 110) = "
"0\n"
"  sendto(5, \"\\2\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0root\\0\", 17, "
"MSG_NOSIGNAL, NULL, 0) = 17\n"
"  poll([{fd=5, events=POLLIN|POLLERR|POLLHUP}], 1, 5000) = 1 ([{fd=5, "
"revents=POLLIN|POLLHUP}])\n"
"  read(5, "
"\"\\2\\0\\0\\0\\1\\0\\0\\0\\5\\0\\0\\0\\2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0\\6\\0\\0\\0\"..., "
"36) = 36\n"
"  read(5, \"root\\0x\\0root\\0/root\\0/bin/bash\\0\", 28) = 28\n"
"  close(5)                                = 0\n"
"  rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0\n"
"  rt_sigaction(SIGCHLD, NULL, {0x7f772b9ea890, [], SA_RESTORER|SA_RESTART, "
"0x7f772adf7880}, 8) = 0\n"
"  rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0\n"
"  nanosleep({60, 0}, 0x7fff87d8c580)      = 0\n"
"  stat(\"/etc/localtime\", {st_mode=S_IFREG|0644, st_size=2309, ...}) = 0\n"
"  select(5, [4], NULL, NULL, {0, 0})      = 0 (Timeout)\n"
"  socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 5\n"
"  connect(5, {sa_family=AF_LOCAL, sun_path=\"/var/run/nscd/socket\"}, 110) = "
"0\n"
"  sendto(5, \"\\2\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0root\\0\", 17, "
"MSG_NOSIGNAL, NULL, 0) = 17\n"
"  poll([{fd=5, events=POLLIN|POLLERR|POLLHUP}], 1, 5000) = 1 ([{fd=5, "
"revents=POLLIN|POLLHUP}])\n"
"  read(5, "
"\"\\2\\0\\0\\0\\1\\0\\0\\0\\5\\0\\0\\0\\2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0\\6\\0\\0\\0\"..., "
"36) = 36\n"
"  read(5, \"root\\0x\\0root\\0/root\\0/bin/bash\\0\", 28) = 28\n"
"  close(5)\n"
"  [...]\n"
msgstr ""
"&prompt.user;strace -p `pidof cron`\n"
" Process 1261 attached\n"
" restart_syscall(&lt;... resuming interrupted call ...&gt;) = 0\n"
"  stat(\"/etc/localtime\", {st_mode=S_IFREG|0644, st_size=2309, ...}) = 0\n"
"  select(5, [4], NULL, NULL, {0, 0})      = 0 (Timeout)\n"
"  socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 5\n"
"  connect(5, {sa_family=AF_LOCAL, sun_path=\"/var/run/nscd/socket\"}, 110) = "
"0\n"
"  sendto(5, \"\\2\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0root\\0\", 17, "
"MSG_NOSIGNAL, NULL, 0) = 17\n"
"  poll([{fd=5, events=POLLIN|POLLERR|POLLHUP}], 1, 5000) = 1 ([{fd=5, "
"revents=POLLIN|POLLHUP}])\n"
"  read(5, "
"\"\\2\\0\\0\\0\\1\\0\\0\\0\\5\\0\\0\\0\\2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0\\6\\0\\0\\0\"..., "
"36) = 36\n"
"  read(5, \"root\\0x\\0root\\0/root\\0/bin/bash\\0\", 28) = 28\n"
"  close(5)                                = 0\n"
"  rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0\n"
"  rt_sigaction(SIGCHLD, NULL, {0x7f772b9ea890, [], SA_RESTORER|SA_RESTART, "
"0x7f772adf7880}, 8) = 0\n"
"  rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0\n"
"  nanosleep({60, 0}, 0x7fff87d8c580)      = 0\n"
"  stat(\"/etc/localtime\", {st_mode=S_IFREG|0644, st_size=2309, ...}) = 0\n"
"  select(5, [4], NULL, NULL, {0, 0})      = 0 (Timeout)\n"
"  socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 5\n"
"  connect(5, {sa_family=AF_LOCAL, sun_path=\"/var/run/nscd/socket\"}, 110) = "
"0\n"
"  sendto(5, \"\\2\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0root\\0\", 17, "
"MSG_NOSIGNAL, NULL, 0) = 17\n"
"  poll([{fd=5, events=POLLIN|POLLERR|POLLHUP}], 1, 5000) = 1 ([{fd=5, "
"revents=POLLIN|POLLHUP}])\n"
"  read(5, "
"\"\\2\\0\\0\\0\\1\\0\\0\\0\\5\\0\\0\\0\\2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\5\\0\\0\\0\\6\\0\\0\\0\"..., "
"36) = 36\n"
"  read(5, \"root\\0x\\0root\\0/root\\0/bin/bash\\0\", 28) = 28\n"
"  close(5)\n"
"  [...]\n"

#. Tag: para
#: tuning_tracing.xml:113
#, no-c-format
msgid ""
"The <option>-e</option> option understands several sub-options and "
"arguments. For example, to trace all attempts to open or write to a "
"particular file, use the following:"
msgstr ""
"<option>-e</option> オプションはいくつかのサブオプションを指定するための仕組"
"みです。たとえばファイルに対する open や write だけを追跡したい場合は、下記の"
"ように入力して実行します:"

#. Tag: screen
#: tuning_tracing.xml:119
#, no-c-format
msgid ""
"&prompt.user;strace -e trace=open,write ls ~\n"
"open(\"/etc/ld.so.cache\", O_RDONLY)       = 3\n"
"open(\"/lib64/librt.so.1\", O_RDONLY)      = 3\n"
"open(\"/lib64/libselinux.so.1\", O_RDONLY) = 3\n"
"open(\"/lib64/libacl.so.1\", O_RDONLY)     = 3\n"
"open(\"/lib64/libc.so.6\", O_RDONLY)       = 3\n"
"open(\"/lib64/libpthread.so.0\", O_RDONLY) = 3\n"
"[...]\n"
"open(\"/usr/lib/locale/cs_CZ.utf8/LC_CTYPE\", O_RDONLY) = 3\n"
"open(\".\", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 3\n"
"write(1, \"addressbook.db.bak\\nbin\\ncxoffice\\n\"..., 311) = 311\n"
msgstr ""
"&prompt.user;strace -e trace=open,write ls ~\n"
"open(\"/etc/ld.so.cache\", O_RDONLY)       = 3\n"
"open(\"/lib64/librt.so.1\", O_RDONLY)      = 3\n"
"open(\"/lib64/libselinux.so.1\", O_RDONLY) = 3\n"
"open(\"/lib64/libacl.so.1\", O_RDONLY)     = 3\n"
"open(\"/lib64/libc.so.6\", O_RDONLY)       = 3\n"
"open(\"/lib64/libpthread.so.0\", O_RDONLY) = 3\n"
"[...]\n"
"open(\"/usr/lib/locale/cs_CZ.utf8/LC_CTYPE\", O_RDONLY) = 3\n"
"open(\".\", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 3\n"
"write(1, \"addressbook.db.bak\\nbin\\ncxoffice\\n\"..., 311) = 311\n"

#. Tag: para
#: tuning_tracing.xml:132
#, no-c-format
msgid ""
"To trace only network related system calls, use <option>-e trace=network</"
"option> :"
msgstr ""
"ネットワーク関連のシステムコールのみを追跡したい場合は、 <option>-e "
"trace=network</option> を指定します:"

#. Tag: screen
#: tuning_tracing.xml:137
#, no-c-format
msgid ""
"&prompt.user;strace -e trace=network -p 26520\n"
"Process 26520 attached - interrupt to quit\n"
"socket(PF_NETLINK, SOCK_RAW, 0)         = 50\n"
"bind(50, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 0\n"
"getsockname(50, {sa_family=AF_NETLINK, pid=26520, groups=00000000}, \\\n"
"[12]) = 0\n"
"sendto(50, \"\\24\\0\\0\\0\\26\\0\\1\\3~p\\315K\\0\\0\\0\\0\\0\\0\\0\\0\", "
"20, 0,\n"
"{sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 20\n"
"[...]"
msgstr ""
"&prompt.user;strace -e trace=network -p 26520\n"
"Process 26520 attached - interrupt to quit\n"
"socket(PF_NETLINK, SOCK_RAW, 0)         = 50\n"
"bind(50, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 0\n"
"getsockname(50, {sa_family=AF_NETLINK, pid=26520, groups=00000000}, \\\n"
"[12]) = 0\n"
"sendto(50, \"\\24\\0\\0\\0\\26\\0\\1\\3~p\\315K\\0\\0\\0\\0\\0\\0\\0\\0\", "
"20, 0,\n"
"{sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 20\n"
"[...]"

#. Tag: para
#: tuning_tracing.xml:147
#, no-c-format
msgid ""
"The <option>-c</option> calculates the time the kernel spent on each system "
"call:"
msgstr ""
"<option>-c</option> オプションを指定すると、それぞれのシステムコールでカーネ"
"ルが費やした時間を計算することができます:"

#. Tag: screen
#: tuning_tracing.xml:152
#, no-c-format
msgid ""
"&prompt.user;strace -c find /etc -name xorg.conf\n"
"/etc/X11/xorg.conf\n"
"% time     seconds  usecs/call     calls    errors syscall\n"
"------ ----------- ----------- --------- --------- ----------------\n"
" 32.38    0.000181         181         1           execve\n"
" 22.00    0.000123           0       576           getdents64\n"
" 19.50    0.000109           0       917        31 open\n"
" 19.14    0.000107           0       888           close\n"
"  4.11    0.000023           2        10           mprotect\n"
"  0.00    0.000000           0         1           write\n"
"[...]\n"
"  0.00    0.000000           0         1           getrlimit\n"
"  0.00    0.000000           0         1           arch_prctl\n"
"  0.00    0.000000           0         3         1 futex\n"
"  0.00    0.000000           0         1           set_tid_address\n"
"  0.00    0.000000           0         4           fadvise64\n"
"  0.00    0.000000           0         1           set_robust_list\n"
"------ ----------- ----------- --------- --------- ----------------\n"
"100.00    0.000559                  3633        33 total"
msgstr ""
"&prompt.user;strace -c find /etc -name xorg.conf\n"
"/etc/X11/xorg.conf\n"
"% time     seconds  usecs/call     calls    errors syscall\n"
"------ ----------- ----------- --------- --------- ----------------\n"
" 32.38    0.000181         181         1           execve\n"
" 22.00    0.000123           0       576           getdents64\n"
" 19.50    0.000109           0       917        31 open\n"
" 19.14    0.000107           0       888           close\n"
"  4.11    0.000023           2        10           mprotect\n"
"  0.00    0.000000           0         1           write\n"
"[...]\n"
"  0.00    0.000000           0         1           getrlimit\n"
"  0.00    0.000000           0         1           arch_prctl\n"
"  0.00    0.000000           0         3         1 futex\n"
"  0.00    0.000000           0         1           set_tid_address\n"
"  0.00    0.000000           0         4           fadvise64\n"
"  0.00    0.000000           0         1           set_robust_list\n"
"------ ----------- ----------- --------- --------- ----------------\n"
"100.00    0.000559                  3633        33 total"

#. Tag: para
#: tuning_tracing.xml:172
#, no-c-format
msgid "To trace all child processes of a process, use <option>-f</option> :"
msgstr "子プロセスについても追跡を行いたい場合は、 <option>-f</option> を指定します:"

#. Tag: screen
#: tuning_tracing.xml:176
#, no-c-format
msgid ""
"\n"
"&prompt.user;strace -f systemctl status apache2.service\n"
"execve(\"/usr/bin/systemctl\", [\"systemctl\", \"status\", \"apache2.service"
"\"], \\\n"
" 0x7ffea44a3318 /* 56 vars */) = 0\n"
"brk(NULL)                               = 0x5560f664a000\n"
"[...]\n"
"mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = "
"0x7f98c58a5000\n"
"mmap(NULL, 4420544, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = "
"0x7f98c524a000\n"
"mprotect(0x7f98c53f4000, 2097152, PROT_NONE) = 0\n"
"[...]\n"
"[pid  9130] read(0, \"\\342\\227\\217 apache2.service - The Apache\"..., "
"8192) = 165\n"
"[pid  9130] read(0, \"\", 8027)           = 0\n"
"● apache2.service - The Apache Webserver227\\217 apache2.service - Th\"..., "
"193\n"
"   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled; vendor "
"preset: disabled)\n"
"   Active: inactive (dead)\n"
") = 193\n"
"[pid  9130] ioctl(3, SNDCTL_TMR_STOP or TCSETSW, {B38400 opost isig icanon "
"echo ...}) = 0\n"
"[pid  9130] exit_group(0)               = ?\n"
"[pid  9130] +++ exited with 0 +++\n"
"&lt;... waitid resumed&gt;{si_signo=SIGCHLD, si_code=CLD_EXITED, "
"si_pid=9130, \\\n"
" si_uid=0, si_status=0, si_utime=0, si_stime=0}, WEXITED, NULL) = 0\n"
"--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=9130, si_uid=0, "
"\\\n"
"  si_status=0, si_utime=0, si_stime=0} ---\n"
"exit_group(3)                           = ?\n"
"+++ exited with 3 +++\n"
msgstr ""
"\n"
"&prompt.user;strace -f systemctl status apache2.service\n"
"execve(\"/usr/bin/systemctl\", [\"systemctl\", \"status\", \"apache2.service"
"\"], \\\n"
" 0x7ffea44a3318 /* 56 vars */) = 0\n"
"brk(NULL)                               = 0x5560f664a000\n"
"[...]\n"
"mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = "
"0x7f98c58a5000\n"
"mmap(NULL, 4420544, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = "
"0x7f98c524a000\n"
"mprotect(0x7f98c53f4000, 2097152, PROT_NONE) = 0\n"
"[...]\n"
"[pid  9130] read(0, \"\\342\\227\\217 apache2.service - The Apache\"..., "
"8192) = 165\n"
"[pid  9130] read(0, \"\", 8027)           = 0\n"
"● apache2.service - The Apache Webserver227\\217 apache2.service - Th\"..., "
"193\n"
"   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled; vendor "
"preset: disabled)\n"
"   Active: inactive (dead)\n"
") = 193\n"
"[pid  9130] ioctl(3, SNDCTL_TMR_STOP or TCSETSW, {B38400 opost isig icanon "
"echo ...}) = 0\n"
"[pid  9130] exit_group(0)               = ?\n"
"[pid  9130] +++ exited with 0 +++\n"
"&lt;... waitid resumed&gt;{si_signo=SIGCHLD, si_code=CLD_EXITED, "
"si_pid=9130, \\\n"
" si_uid=0, si_status=0, si_utime=0, si_stime=0}, WEXITED, NULL) = 0\n"
"--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=9130, si_uid=0, "
"\\\n"
"  si_status=0, si_utime=0, si_stime=0} ---\n"
"exit_group(3)                           = ?\n"
"+++ exited with 3 +++\n"

#. Tag: para
#: tuning_tracing.xml:203
#, no-c-format
msgid ""
"If you need to analyze the output of <command>strace</command> and the "
"output messages are too long to be inspected directly in the console window, "
"use <option>-o</option> . In that case, unnecessary messages, such as "
"information about attaching and detaching processes, are suppressed. You can "
"also suppress these messages (normally printed on the standard output) with "
"<option>-q</option> . To add time stamps at the beginning of each line with "
"a system call, use <option>-t</option> :"
msgstr ""
"<command>strace</command> の出力を分析したいものの、コンソールウインドウ内に"
"表示してしまうと長すぎるような場合は、 <option>-o</option> オプションをお使い"
"ください。この場合、プロセスへの接続や接続終了などのメッセージが省略されま"
"す。また、通常は標準出力に書かれるようなメッセージについても、 <option>-q</"
"option> を指定することで省略することができます。このほか、それぞれのシステム"
"コールの行に対して、行頭に時刻を表示させたい場合は、 <option>-t</option> を指"
"定します:"

#. Tag: screen
#: tuning_tracing.xml:213
#, no-c-format
msgid ""
"&prompt.user;strace -t -o strace_sleep.txt sleep 1; more strace_sleep.txt\n"
"08:44:06 execve(\"/bin/sleep\", [\"sleep\", \"1\"], [/* 81 vars */]) = 0\n"
"08:44:06 brk(0)                         = 0x606000\n"
"08:44:06 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, "
"\\\n"
"-1, 0) = 0x7f8e78cc5000\n"
"[...]\n"
"08:44:06 close(3)                       = 0\n"
"08:44:06 nanosleep({1, 0}, NULL)        = 0\n"
"08:44:07 close(1)                       = 0\n"
"08:44:07 close(2)                       = 0\n"
"08:44:07 exit_group(0)                  = ?"
msgstr ""
"&prompt.user;strace -t -o strace_sleep.txt sleep 1; more strace_sleep.txt\n"
"08:44:06 execve(\"/bin/sleep\", [\"sleep\", \"1\"], [/* 81 vars */]) = 0\n"
"08:44:06 brk(0)                         = 0x606000\n"
"08:44:06 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, "
"\\\n"
"-1, 0) = 0x7f8e78cc5000\n"
"[...]\n"
"08:44:06 close(3)                       = 0\n"
"08:44:06 nanosleep({1, 0}, NULL)        = 0\n"
"08:44:07 close(1)                       = 0\n"
"08:44:07 close(2)                       = 0\n"
"08:44:07 exit_group(0)                  = ?"

#. Tag: para
#: tuning_tracing.xml:225
#, no-c-format
msgid ""
"The behavior and output format of strace can be controlled. For more "
"information, see the relevant manual page (man 1 strace)."
msgstr ""
"strace の動作や出力形式は変更することができます。詳しくは strace の"
"マニュアルページ (man 1 strace) をお読みください。"

#. Tag: title
#: tuning_tracing.xml:231
#, no-c-format
msgid "Tracing library calls with ltrace"
msgstr "ltrace によるライブラリコールの追跡"

#. Tag: para
#: tuning_tracing.xml:233
#, no-c-format
msgid ""
"<command>ltrace</command> traces dynamic library calls of a process. It is "
"used in a similar way to <command>strace</command> , and most of their "
"parameters have a similar or identical meaning. By default, <command>ltrace</"
"command> uses <filename>/etc/ltrace.conf</filename> or <filename>~/.ltrace."
"conf</filename> configuration files. You can, however, specify an "
"alternative one with the <option>-F <replaceable>CONFIG_FILE</replaceable></"
"option> option."
msgstr ""
"<command>ltrace</command> はプロセスの動的なライブラリコールを追跡することが"
"できます。 <command>strace</command> と同様の用途で使用するツールであり、ほと"
"んどのパラメータは似通っているか、同じ意味になっています。既定では "
"<command>ltrace</command> は、 <filename>/etc/ltrace.conf</filename> もしく"
"は <filename>~/.ltrace.conf</filename> にある設定ファイルを使用します。それ以"
"外の設定ファイルを使用したい場合は、 <option>-F <replaceable>設定ファイル</"
"replaceable></option> オプションを指定してください。"

#. Tag: para
#: tuning_tracing.xml:243
#, no-c-format
msgid ""
"In addition to library calls, <command>ltrace</command> with the <option>-S</"
"option> option can trace system calls as well:"
msgstr ""
"<command>ltrace</command> で <option>-S</option> オプションを指定すると、ライ"
"ブラリコールに加えて システムコールについても追跡を行うことができます:"

#. Tag: screen
#: tuning_tracing.xml:248
#, no-c-format
msgid ""
"&prompt.user;ltrace -S -o ltrace_find.txt find /etc -name \\\n"
"xorg.conf; more ltrace_find.txt\n"
"SYS_brk(NULL)                                              = 0x00628000\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327ea1000\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327ea0000\n"
"[...]\n"
"fnmatch(\"xorg.conf\", \"xorg.conf\", 0)                       = 0\n"
"free(0x0062db80)                                           = &lt;void&gt;\n"
"__errno_location()                                         = 0x7f1327e5d698\n"
"__ctype_get_mb_cur_max(0x7fff25227af0, 8192, 0x62e020, -1, 0) = 6\n"
"__ctype_get_mb_cur_max(0x7fff25227af0, 18, 0x7f1327e5d6f0, 0x7fff25227af0,\n"
"0x62e031) = 6\n"
"__fprintf_chk(0x7f1327821780, 1, 0x420cf7, 0x7fff25227af0, 0x62e031\n"
"&lt;unfinished ...&gt;\n"
"SYS_fstat(1, 0x7fff25227230)                               = 0\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327e72000\n"
"SYS_write(1, \"/etc/X11/xorg.conf\\n\", 19)                   = 19\n"
"[...]"
msgstr ""
"&prompt.user;ltrace -S -o ltrace_find.txt find /etc -name \\\n"
"xorg.conf; more ltrace_find.txt\n"
"SYS_brk(NULL)                                              = 0x00628000\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327ea1000\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327ea0000\n"
"[...]\n"
"fnmatch(\"xorg.conf\", \"xorg.conf\", 0)                       = 0\n"
"free(0x0062db80)                                           = &lt;void&gt;\n"
"__errno_location()                                         = 0x7f1327e5d698\n"
"__ctype_get_mb_cur_max(0x7fff25227af0, 8192, 0x62e020, -1, 0) = 6\n"
"__ctype_get_mb_cur_max(0x7fff25227af0, 18, 0x7f1327e5d6f0, 0x7fff25227af0,\n"
"0x62e031) = 6\n"
"__fprintf_chk(0x7f1327821780, 1, 0x420cf7, 0x7fff25227af0, 0x62e031\n"
"&lt;unfinished ...&gt;\n"
"SYS_fstat(1, 0x7fff25227230)                               = 0\n"
"SYS_mmap(0, 4096, 3, 34, 0xffffffff)                       = 0x7f1327e72000\n"
"SYS_write(1, \"/etc/X11/xorg.conf\\n\", 19)                   = 19\n"
"[...]"

#. Tag: para
#: tuning_tracing.xml:267
#, no-c-format
msgid ""
"You can change the type of traced events with the <option>-e</option> "
"option. The following example prints library calls related to "
"<systemitem>fnmatch</systemitem> and <systemitem>strlen</systemitem> "
"functions:"
msgstr ""
"<option>-e</option> オプションを指定することで、追跡するイベントの種類を変更"
"することができます。下記の例では、 <systemitem>fnmatch</systemitem> と "
"<systemitem>strlen</systemitem> に関連したライブラリコールを表示しています:"

#. Tag: screen
#: tuning_tracing.xml:274
#, no-c-format
msgid ""
"&prompt.user;ltrace -e fnmatch,strlen find /etc -name xorg.conf\n"
"[...]\n"
"fnmatch(\"xorg.conf\", \"xorg.conf\", 0)             = 0\n"
"strlen(\"Xresources\")                             = 10\n"
"strlen(\"Xresources\")                             = 10\n"
"strlen(\"Xresources\")                             = 10\n"
"fnmatch(\"xorg.conf\", \"Xresources\", 0)            = 1\n"
"strlen(\"xorg.conf.install\")                      = 17\n"
"[...]"
msgstr ""
"&prompt.user;ltrace -e fnmatch,strlen find /etc -name xorg.conf\n"
"[...]\n"
"fnmatch(\"xorg.conf\", \"xorg.conf\", 0)             = 0\n"
"strlen(\"Xresources\")                             = 10\n"
"strlen(\"Xresources\")                             = 10\n"
"strlen(\"Xresources\")                             = 10\n"
"fnmatch(\"xorg.conf\", \"Xresources\", 0)            = 1\n"
"strlen(\"xorg.conf.install\")                      = 17\n"
"[...]"

#. Tag: para
#: tuning_tracing.xml:284
#, no-c-format
msgid ""
"To display only the symbols included in a specific library, use <option>-l "
"<replaceable>/path/to/library</replaceable></option> :"
msgstr ""
"特定のライブラリ内に含まれているシンボルのみを表示したい場合は、 <option>-l "
"<replaceable>ライブラリのパス</replaceable></option> オプションを指定します:"

#. Tag: screen
#: tuning_tracing.xml:289
#, no-c-format
msgid ""
"&prompt.user;ltrace -l /lib64/librt.so.1 sleep 1\n"
"clock_gettime(1, 0x7fff4b5c34d0, 0, 0, 0)                  = 0\n"
"clock_gettime(1, 0x7fff4b5c34c0, 0xffffffffff600180, -1, 0) = 0\n"
"+++ exited (status 0) +++"
msgstr ""
"&prompt.user;ltrace -l /lib64/librt.so.1 sleep 1\n"
"clock_gettime(1, 0x7fff4b5c34d0, 0, 0, 0)                  = 0\n"
"clock_gettime(1, 0x7fff4b5c34c0, 0xffffffffff600180, -1, 0) = 0\n"
"+++ exited (status 0) +++"

#. Tag: para
#: tuning_tracing.xml:294
#, no-c-format
msgid ""
"You can make the output more readable by indenting each nested call by the "
"specified number of space with the <option>-n <replaceable>NUM_OF_SPACES</"
"replaceable></option> ."
msgstr ""
"入れ子になった呼び出し構造を読みやすくするため、 <option>-n <replaceable>ス"
"ペース数</replaceable></option> というオプションを指定すると、インデントを設"
"定することもできます。"

#. Tag: title
#: tuning_tracing.xml:301
#, no-c-format
msgid "Debugging and profiling with Valgrind"
msgstr "Valgrind によるデバッグとプロファイリング"

#. Tag: para
#: tuning_tracing.xml:303
#, no-c-format
msgid ""
"Valgrind is a set of tools to debug and profile your programs so that they "
"can run both faster and with fewer errors. Valgrind can detect problems "
"related to memory management and threading, or can also serve as a framework "
"for building new debugging tools. It is well known that this tool can incur "
"high overhead, causing, for example, higher runtimes or changing the normal "
"program behavior under concurrent workloads based on timing."
msgstr ""
"Valgrind はプログラムをデバッグしたりプロファイルしたりするためのツール集で、"
"これによってより高速に、エラーの少ないプログラムを作ることができるようになり"
"ます。 Valgrind はメモリ管理やスレッドに関する問題点を検出することができるほ"
"か、新しいデバッグツールを作成するためのフレームワークとしても使用することが"
"できます。ただし、このツールはオーバーヘッドが大きく、複数の処理を同時に実行"
"するような状況では、通常よりもずっと遅い速度になってしまうことに注意する必要"
"があります。"

#. Tag: title
#: tuning_tracing.xml:313
#, no-c-format
msgid "Installation"
msgstr "インストール"

#. Tag: para
#: tuning_tracing.xml:314
#, no-c-format
msgid ""
"Valgrind is not shipped with standard &productname; distribution. To install "
"it on your system, you need to obtain &sdk;, and either install it and run"
msgstr ""
"Valgrind は &productname; の標準ディストリビューションには含まれていません。"
"お使いのシステムにインストールするには、 &sdk; を取得してから下記のように入力"
"して実行します:"

#. Tag: para
#: tuning_tracing.xml:319
#, no-c-format
msgid ""
"<command>zypper</command> <option>install <replaceable>VALGRIND</"
"replaceable></option>"
msgstr ""
"<command>zypper</command> <option>install <replaceable>VALGRIND</"
"replaceable></option>"

#. Tag: para
#: tuning_tracing.xml:323
#, no-c-format
msgid ""
"or browse through the &sdk; directory tree, locate the Valgrind package and "
"install it with"
msgstr ""
"もしくは、 &sdk; のディレクトリツリーから直接インストールすることもできま"
"す。 Valgrind のパッケージを見つけたら、下記のように入力して実行することで、"
"インストールを行うことができます:"

#. Tag: para
#: tuning_tracing.xml:327
#, no-c-format
msgid ""
"<command>rpm</command> <option>-i</option> valgrind- "
"<replaceable>VERSION_ARCHITECTURE</replaceable> .rpm"
msgstr ""
"<command>rpm</command> <option>-i</option> valgrind- <replaceable>バージョン"
"／アーキテクチャ</replaceable> .rpm"

#. Tag: para
#: tuning_tracing.xml:331
#, no-c-format
msgid ""
"The SDK is a module for &sle; and is available via an online channel from "
"the &scc;. Refer to <xref linkend=\"article-modules\"/> for details."
msgstr ""
"SDK は &sle; 向けのモジュールで、 &scc; のオンラインチャンネルから取得するこ"
"とができます。 詳しくは <xref linkend=\"article-modules\"/> をお読みくださ"
"い。"

#. Tag: title
#: tuning_tracing.xml:338
#, no-c-format
msgid "Supported architectures"
msgstr "対応するアーキテクチャ"

#. Tag: para
#: tuning_tracing.xml:339
#, no-c-format
msgid "&productname; supports Valgrind on the following architectures:"
msgstr "&productname; の Valgrind では、下記のアーキテクチャに対応しています:"

#. Tag: para
#: tuning_tracing.xml:344
#, no-c-format
msgid "&x86-64;"
msgstr "&x86-64;"

#. Tag: para
#: tuning_tracing.xml:349
#, no-c-format
msgid "&ppc;"
msgstr "&ppc;"

#. Tag: para
#: tuning_tracing.xml:354
#, no-c-format
msgid "&zseries;"
msgstr "&zseries;"

#. Tag: title
#: tuning_tracing.xml:362
#, no-c-format
msgid "General information"
msgstr "一般的な情報"

#. Tag: para
#: tuning_tracing.xml:363
#, no-c-format
msgid ""
"The main advantage of Valgrind is that it works with existing compiled "
"executables. You do not need to recompile or modify your programs to use it. "
"Run Valgrind like this:"
msgstr ""
"Valgrind の主な利点は、コンパイル済みの実行ファイルの問題を直接検出できる点に"
"あります。プログラムをコンパイルし直したり、修正したりする必要はありません。 "
"Valgrind は下記のようにして使用します:"

#. Tag: para
#: tuning_tracing.xml:368
#, no-c-format
msgid ""
"<command>valgrind</command> <replaceable>VALGRIND_OPTIONS</replaceable> your-"
"prog <replaceable>YOUR-PROGRAM-OPTIONS</replaceable>"
msgstr ""
"<command>valgrind</command> <replaceable>Valgrind_のオプション</replaceable> "
"&nbsp; <replaceable>プログラム名</replaceable> &nbsp; <replaceable>プログラム"
"のオプション</replaceable>"

#. Tag: para
#: tuning_tracing.xml:372
#, no-c-format
msgid ""
"Valgrind consists of several tools, and each provides specific "
"functionality. Information in this section is general and valid regardless "
"of the used tool. The most important configuration option is <option>--tool</"
"option> . This option tells Valgrind which tool to run. If you omit this "
"option, <systemitem>memcheck</systemitem> is selected by default. For "
"example, to run <command>find ~</command> <option>-name</option> .bashrc "
"with Valgrind's <systemitem>memcheck</systemitem> tools, enter the following "
"in the command line:"
msgstr ""
"Valgrind には、様々な機能を持つツールが含まれています。本章で説明しているのは"
"非常に一般的なもので、ツールとは無関係に使用できるものばかりです。 Valgrind "
"の設定オプションで最も重要なものは <option>--tool</option> で、ここではどの"
"ツールを使用するのかを指定することができます。このオプションを省略すると、既"
"定では <systemitem>memcheck</systemitem> が選択されたものと見なされます。たと"
"えば Valgrind の memcheck ツールで <command>find ~</command> <option>-name</"
"option> .bashrc を実行したい場合は、下記のように入力して実行します:"

#. Tag: para
#: tuning_tracing.xml:383
#, no-c-format
msgid ""
"<command>valgrind</command> <option>--tool</option> =memcheck find ~ -name ."
"bashrc"
msgstr ""
"<command>valgrind</command> <option>--tool</option> =memcheck find ~ -name ."
"bashrc"

#. Tag: para
#: tuning_tracing.xml:387
#, no-c-format
msgid "A list of standard Valgrind tools with a brief description follows:"
msgstr "Valgrind で提供されているツールの一覧と、その簡潔な説明は下記のとおりです:"

#. Tag: term
#: tuning_tracing.xml:392
#, no-c-format
msgid "<systemitem>memcheck</systemitem>"
msgstr "<systemitem>memcheck</systemitem>"

#. Tag: para
#: tuning_tracing.xml:395
#, no-c-format
msgid "Detects memory errors. It helps you tune your programs to behave correctly."
msgstr ""
"メモリエラーを検出します。お使いのプログラムの動作をチェックして、正しく動作"
"するように支援するためのツールです。"

#. Tag: term
#: tuning_tracing.xml:402
#, no-c-format
msgid "<systemitem>cachegrind</systemitem>"
msgstr "<systemitem>cachegrind</systemitem>"

#. Tag: para
#: tuning_tracing.xml:405
#, no-c-format
msgid "Profiles cache prediction. It helps you tune your programs to run faster."
msgstr ""
"キャッシュ予測のプロファイルを行います。お使いのプログラムをより高速に動作さ"
"せるためのヒントを提示する仕組みです。"

#. Tag: term
#: tuning_tracing.xml:412
#, no-c-format
msgid "<systemitem>callgrind</systemitem>"
msgstr "<systemitem>callgrind</systemitem>"

#. Tag: para
#: tuning_tracing.xml:415
#, no-c-format
msgid ""
"Works in a similar way to <systemitem>cachegrind</systemitem> but also "
"gathers additional cache-profiling information."
msgstr ""
"<systemitem>cachegrind</systemitem> と同様の処理を行うツールですが、追加で"
"キャッシュプロファイル情報も収集します。"

#. Tag: term
#: tuning_tracing.xml:422
#, no-c-format
msgid "<systemitem>exp-drd</systemitem>"
msgstr "<systemitem>exp-drd</systemitem>"

#. Tag: para
#: tuning_tracing.xml:425
#, no-c-format
msgid ""
"Detects thread errors. It helps you tune your multi-threaded programs to "
"behave correctly."
msgstr ""
"スレッドのエラーを検出します。マルチスレッド型のプログラムの動作をチェックし"
"て、正しく動作するように支援する仕組みです。"

#. Tag: term
#: tuning_tracing.xml:432
#, no-c-format
msgid "<systemitem>helgrind</systemitem>"
msgstr "<systemitem>helgrind</systemitem>"

#. Tag: para
#: tuning_tracing.xml:435
#, no-c-format
msgid ""
"Another thread error detector. Similar to <systemitem>exp-drd</systemitem> "
"but uses different techniques for problem analysis."
msgstr ""
"もう 1 つのスレッドエラー検出ツールです。 <systemitem>exp-drd</systemitem> に"
"似ていますが、問題の分析に際して異なる技術を使用します。"

#. Tag: term
#: tuning_tracing.xml:443
#, no-c-format
msgid "<systemitem>massif</systemitem>"
msgstr "<systemitem>massif</systemitem>"

#. Tag: para
#: tuning_tracing.xml:446
#, no-c-format
msgid ""
"A heap profiler. Heap is an area of memory used for dynamic memory "
"allocation. This tool helps you tune your program to use less memory."
msgstr ""
"ヒーププロファイラです。ヒープは動的なメモリ管理に使用するメモリ領域で、この"
"ツールは少ないメモリ量で動作するように、プログラムをチューニングする支援を行"
"います。"

#. Tag: term
#: tuning_tracing.xml:453
#, no-c-format
msgid "<systemitem>lackey</systemitem>"
msgstr "<systemitem>lackey</systemitem>"

#. Tag: para
#: tuning_tracing.xml:456
#, no-c-format
msgid "An example tool showing instrumentation basics."
msgstr "基本的な仕組みを説明するためのサンプルツールです。"

#. Tag: title
#: tuning_tracing.xml:465
#, no-c-format
msgid "Default options"
msgstr "既定のオプション"

#. Tag: para
#: tuning_tracing.xml:466
#, no-c-format
msgid ""
"Valgrind can read options at start-up. There are three places which Valgrind "
"checks:"
msgstr ""
"Valgrind はその起動時にオプションを読み込みます。 Valgrind がオプションを"
"チェックする箇所には、下記の 3 種類のものがあります:"

#. Tag: para
#: tuning_tracing.xml:472
#, no-c-format
msgid ""
"The file <filename>.valgrindrc</filename> in the home directory of the user "
"who runs Valgrind."
msgstr ""
"Valgrind を起動するユーザのホームディレクトリ内にある、 <filename>."
"valgrindrc</filename> ファイル。"

#. Tag: para
#: tuning_tracing.xml:478
#, no-c-format
msgid "The environment variable <literal>$VALGRIND_OPTS</literal>"
msgstr "環境変数 <literal>$VALGRIND_OPTS</literal> 。"

#. Tag: para
#: tuning_tracing.xml:483
#, no-c-format
msgid ""
"The file <filename>.valgrindrc</filename> in the current directory where "
"Valgrind is run from."
msgstr ""
"Valgrind を起動する時点でのカレントディレクトリ内にある <filename>."
"valgrindrc</filename> ファイル。"

#. Tag: para
#: tuning_tracing.xml:489
#, no-c-format
msgid ""
"These resources are parsed exactly in this order, while later given options "
"take precedence over earlier processed options. Options specific to a "
"particular Valgrind tool must be prefixed with the tool name and a colon. "
"For example, if you want <systemitem>cachegrind</systemitem> to always write "
"profile data to the <filename>/tmp/cachegrind_<replaceable>PID</replaceable>."
"log</filename> , add the following line to the <filename>.valgrindrc</"
"filename> file in your home directory:"
msgstr ""
"これらのリソースは上記の順序で処理が行われます。そのため、前のほうのファイル"
"で設定を行っていても、後ろのほうのファイル内に同じ設定があれば、上書きされる"
"ことになります。また、特定の Valgrind ツールに固有のオプションを指定する場合"
"は、ツールの名前とコロンを付けなければなりません。たとえば "
"<systemitem>cachegrind</systemitem> に対して、プロファイルデータを "
"<filename>/tmp/cachegrind_<replaceable>PID</replaceable>.log</filename> に書"
"き込むように指定するには、ホームディレクトリの <filename>.valgrindrc</"
"filename> ファイル内に、下記の内容を記述します:"

#. Tag: para
#: tuning_tracing.xml:499
#, no-c-format
msgid "<literal>--cachegrind:cachegrind-out-file=/tmp/cachegrind_%p.log</literal>"
msgstr "<literal>--cachegrind:cachegrind-out-file=/tmp/cachegrind_%p.log</literal>"

#. Tag: title
#: tuning_tracing.xml:505
#, no-c-format
msgid "How Valgrind works"
msgstr "Valgrind の動作原理"

#. Tag: para
#: tuning_tracing.xml:506
#, no-c-format
msgid ""
"Valgrind takes control of your executable before it starts. It reads "
"debugging information from the executable and related shared libraries. The "
"executable's code is redirected to the selected Valgrind tool, and the tool "
"adds its own code to handle its debugging. Then the code is handed back to "
"the Valgrind core and the execution continues."
msgstr ""
"Valgrind は実行ファイルの起動が行われる前から、その制御を実施します。実行ファ"
"イルのデバッグ情報を読み込み、関連する共有ライブラリを読み込みます。実行ファ"
"イルのコードは、選択された Valgrind ツールに転送され、ツール側でデバッグ処理"
"のためのコードを追加したあと、 Valgrind のコアに戻され、実際の実行が行われま"
"す。"

#. Tag: para
#: tuning_tracing.xml:513
#, no-c-format
msgid ""
"For example, <systemitem>memcheck</systemitem> adds its code, which checks "
"every memory access. As a consequence, the program runs much slower than in "
"the native execution environment."
msgstr ""
"たとえば <systemitem>memcheck</systemitem> では、それぞれのメモリアクセスに対"
"してチェックを行うコードを追加します。そのため、プログラムは通常の実行よりも"
"ずっと遅くなります。"

#. Tag: para
#: tuning_tracing.xml:518
#, no-c-format
msgid ""
"Valgrind simulates every instruction of your program. Therefore, it not only "
"checks the code of your program, but also all related libraries (including "
"the C library), libraries used for graphical environment, and so on. If you "
"try to detect errors with Valgrind, it also detects errors in associated "
"libraries (like C, X11, or Gtk libraries). Because you do not need all these "
"errors frequently, Valgrind can selectively suppress these error messages to "
"suppression files. The <option>--gen-suppressions=yes</option> tells "
"Valgrind to report these suppressions which you can copy to a file."
msgstr ""
"Valgrind はプログラム内の各インストラクションを擬似します。そのため、プログラ"
"ムのコードをチェックするだけでなく、関連するライブラリ (C ライブラリを含む) "
"やグラフィカル環境で使用されるライブラリまでも、チェックすることができます。 "
"Valgrind でエラーを検出しようとすると、関連するライブラリ (C ライブラリ, "
"X11, Gtk ライブラリなど) のエラーも検出することになります。これらのエラーにつ"
"いては通常検出する必要はありませんので、省略設定ファイルを作成して Valgrind "
"側で省略するように指定することができます。 <option>--gen-suppressions=yes</"
"option> を指定して実行すると、 Valgrind に対して省略用の設定を作成させること"
"ができます。"

#. Tag: para
#: tuning_tracing.xml:529
#, no-c-format
msgid ""
"You should supply a real executable (machine code) as a Valgrind argument. "
"If your application is run, for example, from a shell or Perl script, you "
"can by mistake get error reports related to <command>/bin/sh</command> (or "
"<command>/usr/bin/perl</command> ). In such cases, you can use <option>--"
"trace-children=yes</option> to work around this issue. However, using the "
"executable itself avoids any confusion over this issue."
msgstr ""
"Valgrind のパラメータには実際の実行ファイル (マシンコード) を指定してくださ"
"い。シェルや Perl のスクリプトなどからお使いのアプリケーションを起動してしま"
"うと、 <command>/bin/sh</command> (または <command>/usr/bin/perl</command> ) "
"を起動することによる無関係なエラーが表示されることがありますので、この場合は "
"<option>--trace-children=yes</option> を指定して、エラーを回避してください。"
"ただし、通常は実行ファイルを直接指定して実行してください。"

#. Tag: title
#: tuning_tracing.xml:542
#, no-c-format
msgid "Messages"
msgstr "メッセージ"

#. Tag: para
#: tuning_tracing.xml:543
#, no-c-format
msgid ""
"During its runtime, Valgrind reports messages with detailed errors and "
"important events. The following example explains the messages:"
msgstr ""
"Valgrind は、その実行中に詳細なエラーメッセージや重要なイベントを報告すること"
"があります。下記にメッセージの出力例を示します:"

#. Tag: screen
#: tuning_tracing.xml:547
#, no-c-format
msgid ""
"&prompt.user;valgrind --tool=memcheck find ~ -name .bashrc\n"
"[...]\n"
"==6558== Conditional jump or move depends on uninitialised value(s)\n"
"==6558==    at 0x400AE79: _dl_relocate_object (in /lib64/ld-2.11.1.so)\n"
"==6558==    by 0x4003868: dl_main (in /lib64/ld-2.11.1.so)\n"
"[...]\n"
"==6558== Conditional jump or move depends on uninitialised value(s)\n"
"==6558==    at 0x400AE82: _dl_relocate_object (in /lib64/ld-2.11.1.so)\n"
"==6558==    by 0x4003868: dl_main (in /lib64/ld-2.11.1.so)\n"
"[...]\n"
"==6558== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n"
"==6558== malloc/free: in use at exit: 2,228 bytes in 8 blocks.\n"
"==6558== malloc/free: 235 allocs, 227 frees, 489,675 bytes allocated.\n"
"==6558== For counts of detected errors, rerun with: -v\n"
"==6558== searching for pointers to 8 not-freed blocks.\n"
"==6558== checked 122,584 bytes.\n"
"==6558==\n"
"==6558== LEAK SUMMARY:\n"
"==6558==    definitely lost: 0 bytes in 0 blocks.\n"
"==6558==      possibly lost: 0 bytes in 0 blocks.\n"
"==6558==    still reachable: 2,228 bytes in 8 blocks.\n"
"==6558==         suppressed: 0 bytes in 0 blocks.\n"
"==6558== Rerun with --leak-check=full to see details of leaked memory."
msgstr ""
"&prompt.user;valgrind --tool=memcheck find ~ -name .bashrc\n"
"[...]\n"
"==6558== Conditional jump or move depends on uninitialised value(s)\n"
"==6558==    at 0x400AE79: _dl_relocate_object (in /lib64/ld-2.11.1.so)\n"
"==6558==    by 0x4003868: dl_main (in /lib64/ld-2.11.1.so)\n"
"[...]\n"
"==6558== Conditional jump or move depends on uninitialised value(s)\n"
"==6558==    at 0x400AE82: _dl_relocate_object (in /lib64/ld-2.11.1.so)\n"
"==6558==    by 0x4003868: dl_main (in /lib64/ld-2.11.1.so)\n"
"[...]\n"
"==6558== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n"
"==6558== malloc/free: in use at exit: 2,228 bytes in 8 blocks.\n"
"==6558== malloc/free: 235 allocs, 227 frees, 489,675 bytes allocated.\n"
"==6558== For counts of detected errors, rerun with: -v\n"
"==6558== searching for pointers to 8 not-freed blocks.\n"
"==6558== checked 122,584 bytes.\n"
"==6558==\n"
"==6558== LEAK SUMMARY:\n"
"==6558==    definitely lost: 0 bytes in 0 blocks.\n"
"==6558==      possibly lost: 0 bytes in 0 blocks.\n"
"==6558==    still reachable: 2,228 bytes in 8 blocks.\n"
"==6558==         suppressed: 0 bytes in 0 blocks.\n"
"==6558== Rerun with --leak-check=full to see details of leaked memory."

#. Tag: para
#: tuning_tracing.xml:570
#, no-c-format
msgid ""
"The <literal>==6558==</literal> introduces Valgrind's messages and contains "
"the process ID number (PID). You can easily distinguish Valgrind's messages "
"from the output of the program itself, and decide which messages belong to a "
"particular process."
msgstr ""
"上記の Valgrind の出力例には <literal>==6558==</literal> が含まれていますが、"
"これはプロセス ID 番号 (PID) を表しています。これにより、 Valgrind のメッセー"
"ジとプログラム自身の出力を区別できるようになっているほか、 Valgrind のメッ"
"セージがどのプロセスに対するものであるのかがわかるようにもなっています。"

#. Tag: para
#: tuning_tracing.xml:576
#, no-c-format
msgid ""
"To make Valgrind's messages more detailed, use <option>-v</option> or even "
"<option>-v -v</option> ."
msgstr ""
"Valgrind のメッセージをより詳細に出力させたい場合は、 <option>-v</option> も"
"しくは <option>-v -v</option> のように指定してください。"

#. Tag: para
#: tuning_tracing.xml:580
#, no-c-format
msgid "You can make Valgrind send its messages to three different places:"
msgstr "Valgrind の出力するメッセージを制御するには、下記のようにして行います:"

#. Tag: para
#: tuning_tracing.xml:585
#, no-c-format
msgid ""
"By default, Valgrind sends its messages to the file descriptor 2, which is "
"the standard error output. You can tell Valgrind to send its messages to any "
"other file descriptor with the <option>--log-"
"fd=<replaceable>FILE_DESCRIPTOR_NUMBER</replaceable></option> option."
msgstr ""
"既定では、 Valgrind がメッセージを送信する際、出力先をファイルディスクリプタ"
"の 2 番 (つまり標準エラー出力) に設定します。それ以外のファイルディスクリプタ"
"番号を使用したい場合は、 <option>--log-fd=<replaceable>ファイルディスクリプタ"
"番号</replaceable></option> のように指定してください。"

#. Tag: para
#: tuning_tracing.xml:594
#, no-c-format
msgid ""
"The second, and a more useful way, is to send Valgrind's messages to a file "
"with <option>--log-file=<replaceable>FILENAME</replaceable></option> . This "
"option accepts several variables, for example, <literal>%p</literal> gets "
"replaced with the PID of the currently profiled process. This way you can "
"send messages to different files based on their PID. <literal>%q{env_var}</"
"literal> is replaced with the value of the related <literal>env_var</"
"literal> environment variable."
msgstr ""
"おそらくはこちらの方法のほうが期待されるとは思いますが、もう 1 つの方法とし"
"て、 <option>--log-file=<replaceable>ファイル名</replaceable></option> のよう"
"に指定することで、ログを指定したファイルに書き込むこともできます。このオプ"
"ションを指定するにあたっては、いくつかのプレースホルダを使用することができま"
"す。たとえばファイル名の一部に <literal>%p</literal> を指定すると、その部分に"
"はプロファイル対象のプログラムのプロセス ID (PID) が埋め込まれるようになりま"
"す。また、 <literal>%q{env_var}</literal> のように指定すると、 "
"<literal>env_var</literal> という名前の環境変数の値を展開して出力することがで"
"きます。"

#. Tag: para
#: tuning_tracing.xml:604
#, no-c-format
msgid ""
"The following example checks for possible memory errors during the Apache "
"Web server restart, while following children processes and writing detailed "
"Valgrind's messages to separate files distinguished by the current process "
"PID:"
msgstr ""
"下記の例では、 Apache Web サーバの再起動時にメモリエラーが発生していないかど"
"うかを確認している例となります。この場合、子プロセスも追跡して、詳細な "
"Valgrind メッセージをプロセス ID ごとに分けて別々のファイルに書き込むように指"
"定しています:"

#. Tag: screen
#: tuning_tracing.xml:610
#, no-c-format
msgid ""
"&prompt.user;valgrind -v --tool=memcheck --trace-children=yes \\\n"
"--log-file=valgrind_pid_%p.log systemctl restart apache2.service"
msgstr ""
"&prompt.user;valgrind -v --tool=memcheck --trace-children=yes \\\n"
"--log-file=valgrind_pid_%p.log systemctl restart apache2.service"

#. Tag: para
#: tuning_tracing.xml:612
#, no-c-format
msgid ""
"This process created 52 log files in the testing system, and took 75 seconds "
"instead of the usual 7 seconds needed to run <command>sudo systemctl restart "
"apache2.service</command> without Valgrind, which is approximately 10 times "
"more."
msgstr ""
"この処理を実行すると、テストで使用した環境の場合 52 個のログファイルを作成し"
"ていたほか、通常であれば 7 秒程度で <command>sudo systemctl restart apache2."
"service</command> を処理できていたところ、 Valgrind を入れることによって、お"
"およそ 10 倍の 75 秒程度かかるようになっていました。"

#. Tag: screen
#: tuning_tracing.xml:618
#, no-c-format
msgid ""
"&prompt.user;ls -1 valgrind_pid_*log\n"
"valgrind_pid_11780.log\n"
"valgrind_pid_11782.log\n"
"valgrind_pid_11783.log\n"
"[...]\n"
"valgrind_pid_11860.log\n"
"valgrind_pid_11862.log\n"
"valgrind_pid_11863.log"
msgstr ""
"&prompt.user;ls -1 valgrind_pid_*log\n"
"valgrind_pid_11780.log\n"
"valgrind_pid_11782.log\n"
"valgrind_pid_11783.log\n"
"[...]\n"
"valgrind_pid_11860.log\n"
"valgrind_pid_11862.log\n"
"valgrind_pid_11863.log"

#. Tag: para
#: tuning_tracing.xml:628
#, no-c-format
msgid ""
"You may also prefer to send the Valgrind's messages over the network. You "
"need to specify the <literal>aa.bb.cc.dd</literal> IP address and "
"<literal>port_num</literal> port number of the network socket with the "
"<option>--log-socket=<replaceable>AA.BB.CC.DD:PORT_NUM</replaceable></"
"option> option. If you omit the port number, 1500 is used."
msgstr ""
"Valgrind のメッセージをネットワーク経由で送信したいと思うことがあるかもしれま"
"せん。そのような場合は、 <option>--log-socket=<replaceable>aa.bb.cc.dd:"
"port_num</replaceable></option> のような形式でオプションを指定してください。"
"ここで、 <literal>aa.bb.cc.dd</literal> には送信先の IP アドレスを、"
"<literal>port_num</literal> には送信先のポート番号をそれぞれ指定します。ポー"
"ト番号を省略した場合は、 1500 を使用します。"

#. Tag: para
#: tuning_tracing.xml:635
#, no-c-format
msgid ""
"It is useless to send Valgrind's messages to a network socket if no "
"application is capable of receiving them on the remote machine. That is why "
"<command>valgrind-listener</command> , a simple listener, is shipped "
"together with Valgrind. It accepts connections on the specified port and "
"copies everything it receives to the standard output."
msgstr ""
"Valgrind のメッセージをネットワークソケット経由で送信する場合、受信側のアプリ"
"ケーションを用意しないと意味がありません。 Valgrind では <command>valgrind-"
"listener</command> と呼ばれるシンプルなリスナーが同梱されていて、指定したポー"
"トで接続を待ち受けて、受信した内容をそのまま標準出力に出力することができま"
"す。"

#. Tag: title
#: tuning_tracing.xml:648
#, no-c-format
msgid "Error messages"
msgstr "エラーメッセージ"

#. Tag: para
#: tuning_tracing.xml:649
#, no-c-format
msgid ""
"Valgrind remembers all error messages, and if it detects a new error, the "
"error is compared against old error messages. This way Valgrind checks for "
"duplicate error messages. In case of a duplicate error, it is recorded but "
"no message is shown. This mechanism prevents you from being overwhelmed by "
"millions of duplicate errors."
msgstr ""
"Valgrind では全てのエラーメッセージを記憶していて、新しいエラーを検出すると既"
"存のエラーメッセージと比較を行います。この方法により、 Valgrind はエラーを繰"
"り返し表示するような事態を防いでいます。同じエラーが発生した場合、 Valgrind "
"は単純にそのメッセージを記録するだけで、メッセージを表示しなくなります。この"
"仕組みにより、似たようなエラーを多数受け取って混乱を起こすことがないように"
"なっています。"

#. Tag: para
#: tuning_tracing.xml:656
#, no-c-format
msgid ""
"The <option>-v</option> option adds a summary of all reports (sorted by "
"their total count) to the end of the Valgrind's execution output. Moreover, "
"Valgrind stops collecting errors if it detects either 1000 different errors, "
"or 10 000 000 errors in total. To suppress this limit and see all error "
"messages, use <option>--error-limit=no</option> ."
msgstr ""
"<option>-v</option> オプションを指定すると、 Valgrind の実行出力の最後に全て"
"の概要レポート (発生回数順に並べたもの) を表示することができます。これに加え"
"て、 Valgrind では 1000 種類以上のエラーが発生した場合や、合計で 10,000,000 "
"回以上のエラーが発生した場合、エラーの収集処理を停止する機能があります。この"
"ような制限を無効化して、全てのエラーメッセージを表示するようにしたい場合は、 "
"<option>--error-limit=no</option> を指定してください。"

#. Tag: para
#: tuning_tracing.xml:664
#, no-c-format
msgid ""
"Certain errors cause other errors. Therefore, fix errors in the same order "
"as they appear and re-check the program continuously."
msgstr ""
"エラーによっては他のエラーを引き起こす種類のものもあります。そのため、エラー"
"を修正する場合は、その発生順に行うものとし、プログラムを繰り返しチェックし直"
"してください。"

#. Tag: title
#: tuning_tracing.xml:671
#, no-c-format
msgid "More information"
msgstr "さらなる情報"

#. Tag: para
#: tuning_tracing.xml:675
#, no-c-format
msgid ""
"For a complete list of options related to the described tracing tools, see "
"the corresponding man page ( <command>man 1 strace</command> , <command>man "
"1 ltrace</command> , and <command>man 1 valgrind</command> )."
msgstr ""
"上記のトレーシングツールに関連する全オプションの一覧を確認するには、それぞれ"
"対応するマニュアルページ ( <command>man 1 strace</command> , <command>man 1 "
"ltrace</command> , <command>man 1 valgrind</command> ) をお読みください。"

#. Tag: para
#: tuning_tracing.xml:683
#, no-c-format
msgid ""
"To describe advanced usage of Valgrind is beyond the scope of this document. "
"It is well documented, see <link xlink:href=\"http://valgrind.org/docs/"
"manual/manual.html\">Valgrind User Manual</link> . These pages are "
"indispensable if you need more advanced information on Valgrind or the usage "
"and purpose of its standard tools."
msgstr ""
"Valgrind の高度な使用方法については、本書では説明していません。詳しい説明を読"
"みたい場合は、 <link xlink:href=\"http://valgrind.org/docs/manual/manual.html"
"\">Valgrind User Manual</link> (英語) をお読みください。これらのページは "
"Valgrind をより高度に使用したり、標準ツールの使い方や目的を知ったりしたい場合"
"には、必須の情報源です。"

