# translation of ay_erb_templates.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2021.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2021, 2022.
msgid ""
msgstr ""
"Project-Id-Version: ay_erb_templates.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-03-16 22:03+0000\n"
"PO-Revision-Date: 2022-03-17 08:43+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: ay_erb_templates.xml:13
#, no-c-format
msgid "ERB templates"
msgstr "ERB テンプレート"

#. Tag: para
#: ay_erb_templates.xml:20
#, no-c-format
msgid ""
"ERB templates are for embedding Ruby code within an &ay; profile to modify "
"the profile during the installation. With this approach, you can inspect the "
"system and adjust the profile by setting values, adding or skipping "
"sections, and so on."
msgstr ""
"ERB テンプレートとは、プロファイル内に Ruby 言語のコードを埋め込むことのでき"
"る機能で、インストール時にプロファイルを修正する機能を提供します。この仕組み"
"を利用することで、システムの状態を検知してプロファイル内の設定値を調整した"
"り、セクションの追加や削除などを行ったりすることができます。"

#. Tag: para
#: ay_erb_templates.xml:26
#, no-c-format
msgid ""
"To activate the ERB processing, the profile must have the extension "
"<filename>.erb</filename> (for example, <filename>autoyast.xml.erb</"
"filename> ). Hence, it is not possible to combine rules/classes and ERB "
"templates."
msgstr ""
"ERB 機能を有効化するには、プロファイルのファイル名に <filename>.erb</"
"filename> という拡張子を追加します (例: <filename>autoyast.xml.erb</"
"filename>) 。このような仕組みが存在することから、ルールやクラスと ERB テンプ"
"レートを同時に使用することはできません。"

#. Tag: title
#: ay_erb_templates.xml:33
#, no-c-format
msgid "What is ERB?"
msgstr "ERB とは？"

#. Tag: para
#: ay_erb_templates.xml:35
#, no-c-format
msgid ""
"ERB stands for <emphasis>Embedded Ruby</emphasis> . ERB uses the power of "
"the Ruby programming language to generate different kind of content. With "
"ERB, you can include some Ruby code in your profiles to adapt them at "
"runtime, depending on the installation system."
msgstr ""
"ERB とは <emphasis>Embedded Ruby</emphasis> の略で、 Ruby プログラミング言語の"
"力を借りて様々なコンテンツ生成を行うための仕組みです。 ERB を利用してプロファイル内に"
" Ruby コードを含めることで、インストール先のシステムに依存した様々なプロファイル"
"調整を行うことができるようになります。"

#. Tag: para
#: ay_erb_templates.xml:43
#, no-c-format
msgid ""
"When using ERB, the Ruby code is enclosed between <literal>&lt;%</literal> "
"and <literal>%&gt;</literal> signs. Use an equals sign, <literal>=</"
"literal> , to include command output in the resulting profile."
msgstr ""
"ERB を使用する場合、 Ruby 言語のコードは <literal>&lt;%</literal> 記号から "
"<literal>%&gt;</literal> 記号までの間に記述します。また、コマンドの出力をその"
"ままプロファイルに入れ込みたい場合は、イコール記号 ( <literal>=</"
"literal> ) で設定します。"

#. Tag: title
#: ay_erb_templates.xml:50
#, no-c-format
msgid "Including a file using ERB"
msgstr "ERB を利用したファイルの取り込み"

#. Tag: screen
#: ay_erb_templates.xml:51
#, no-c-format
msgid ""
"&lt;bootloader&gt;\n"
"  &lt;% require \"open-uri\" %&gt;\n"
"  &lt;%= URI.open(\"http://192.168.1.1/profiles/bootloader-common.xml\")."
"read %&gt;\n"
"&lt;/bootloader&gt; &lt;!-- this line gets replaced with the content of "
"bootloader-common.xml --&gt;\n"
msgstr ""
"&lt;bootloader&gt;\n"
"  &lt;% require \"open-uri\" %&gt;\n"
"  &lt;%= URI.open(\"http://192.168.1.1/profiles/bootloader-common.xml\")."
"read %&gt;\n"
"&lt;/bootloader&gt; &lt;!-- this line gets replaced with the content of "
"bootloader-common.xml --&gt;\n"

#. Tag: para
#: ay_erb_templates.xml:58
#, no-c-format
msgid ""
"You can use Ruby facilities to run arbitrary commands. If you want to get "
"the output of a command, then enclose it between backticks. If you want to "
"know whether a command was successful or not, run the command with the "
"<literal>system</literal> function."
msgstr ""
"Ruby の仕組みを利用することで、任意のコマンドを実行することもできます。たとえば"
"コマンドの出力結果を取得したい場合は、コマンドの前後をバッククオートで括ります。"
"また、コマンドの実行が成功したかどうかを調べたい場合は、 <literal>system</literal> "
"関数を使用してください。"

#. Tag: title
#: ay_erb_templates.xml:65
#, no-c-format
msgid "Running commands with Ruby"
msgstr "Ruby におけるコマンドの実行"

#. Tag: screen
#: ay_erb_templates.xml:66
#, no-c-format
msgid ""
"\n"
"&lt;% files = `ls` %&gt; &lt;!-- files contains the output of the command "
"(for instance \"file1\\nfile2\\nfile3\") --&gt;\n"
"&lt;% success = system(\"dmidecode | grep some-model\") %&gt; &lt;!-- "
"success contains true or false --&gt;\n"
msgstr ""
"\n"
"&lt;% files = `ls` %&gt; &lt;!-- files にはコマンドの実行結果が入ります (例: "
"\"file1\\nfile2\\nfile3\") --&gt;\n"
"&lt;% success = system(\"dmidecode | grep some-model\") %&gt; &lt;!-- "
"success には true もしくは false のいずれかが入ります --&gt;\n"

#. Tag: para
#: ay_erb_templates.xml:72
#, no-c-format
msgid ""
"Also, you can use more advanced Ruby code structures such as conditions and "
"loops."
msgstr "このほか条件句やループなど、高度な Ruby 言語構造を含めることもできます。"

#. Tag: title
#: ay_erb_templates.xml:77
#, no-c-format
msgid "Using Ruby structures"
msgstr "Ruby 言語構造の使用"

#. Tag: screen
#: ay_erb_templates.xml:78
#, no-c-format
msgid ""
"\n"
"&lt;% ip_forward = File.read(\"/proc/sys/net/ipv4/ip_forward\").strip %&gt;\n"
"&lt;% if ip_forward == \"1\" %&gt;\n"
"  &lt;!-- something --&gt;\n"
"&lt;% end %&gt;\n"
"\n"
"&lt;% files = `ls /tmp/config/*.xml` %&gt;\n"
"&lt;% files.split.each do |file| %&gt;\n"
"  &lt;%= file.read %&gt;\n"
"&lt;% end %&gt;\n"
msgstr ""
"\n"
"&lt;% ip_forward = File.read(\"/proc/sys/net/ipv4/ip_forward\").strip %&gt;\n"
"&lt;% if ip_forward == \"1\" %&gt;\n"
"  &lt;!-- 何らかの処理 --&gt;\n"
"&lt;% end %&gt;\n"
"\n"
"&lt;% files = `ls /tmp/config/*.xml` %&gt;\n"
"&lt;% files.split.each do |file| %&gt;\n"
"  &lt;%= file.read %&gt;\n"
"&lt;% end %&gt;\n"

#. Tag: para
#: ay_erb_templates.xml:91
#, no-c-format
msgid ""
"&ay; offers a small set of <emphasis>helper functions</emphasis> to retrieve "
"information from the underlying system, like <literal>disks</literal> or "
"<literal>network_cards</literal> . You can check the list of helpers and "
"their values in the <xref linkend=\"erb-helpers\"/> section."
msgstr ""
"&ay; では <emphasis>ヘルパー関数</emphasis> と呼ばれる仕組みも提供していま"
"す。これは <literal>disks</literal> (ディスク) や <literal>network_cards</"
"literal> (ネットワークカード) など、インストール先のシステムに関する様々な情"
"報を取得することができる仕組みです。ヘルパーの一覧と値の意味について、詳しく"
"は <xref linkend=\"erb-helpers\"/> をお読みください。"

#. Tag: title
#: ay_erb_templates.xml:100
#, no-c-format
msgid "Template helpers"
msgstr "テンプレートヘルパー"

#. Tag: para
#: ay_erb_templates.xml:102
#, no-c-format
msgid ""
"Template helpers are sets of Ruby methods that can be used in the profiles "
"to retrieve information about the installation system."
msgstr ""
"テンプレートヘルパーは Ruby メソッド集であり、プロファイル内で使用することで"
"様々なインストール先システムの情報を収集することができます。"

#. Tag: title
#: ay_erb_templates.xml:108
#, no-c-format
msgid "<literal>boot_efi?</literal>"
msgstr "<literal>boot_efi?</literal>"

#. Tag: para
#: ay_erb_templates.xml:109
#, no-c-format
msgid ""
"<literal>boot_efi?</literal> is a boolean helper that returns whether the "
"system is booted using EFI. In the example below, the profile configures the "
"bootloader according to the current boot mode."
msgstr ""
"<literal>boot_efi?</literal> はブール値のヘルパーで、システムが EFI で起動されて"
"いるかどうかを表します。下記の例では、現在の起動モードに合わせてブートローダを設定"
"しています。"

#. Tag: title
#: ay_erb_templates.xml:116
#, no-c-format
msgid "Configuring the boot loader"
msgstr "ブートローダの設定"

#. Tag: screen
#: ay_erb_templates.xml:117
#, no-c-format
msgid ""
"\n"
"&lt;% if env.boot_efi? %&gt;\n"
"  &lt;loader_type&gt;grub2-efi&lt;/loader_type&gt;\n"
"&lt;% else %&gt;\n"
"  &lt;loader_type&gt;grub2&lt;/loader_type&gt;\n"
"&lt;% end %&gt;\n"
msgstr ""
"\n"
"&lt;% if env.boot_efi? %&gt;\n"
"  &lt;loader_type&gt;grub2-efi&lt;/loader_type&gt;\n"
"&lt;% else %&gt;\n"
"  &lt;loader_type&gt;grub2&lt;/loader_type&gt;\n"
"&lt;% end %&gt;\n"

#. Tag: title
#: ay_erb_templates.xml:128
#, no-c-format
msgid "<literal>disks</literal>"
msgstr "<literal>disks</literal>"

#. Tag: para
#: ay_erb_templates.xml:129
#, no-c-format
msgid ""
"The <literal>disks</literal> helper returns a list of the detected disks. "
"Each element of the list contains some basic information like the device "
"name or the size."
msgstr ""
"<literal>disks</literal> ヘルパーは、検出されたディスクの一覧を返却するヘル"
"パー関数です。一覧の各要素には、デバイス名やサイズなどの基本的な情報が含まれ"
"ます。"

#. Tag: para
#: ay_erb_templates.xml:168
#, no-c-format
msgid "Device kernel name (for example, <literal>sda</literal> )."
msgstr "デバイスのカーネル名 (例: <literal>sda</literal>)"

#. Tag: para
#: ay_erb_templates.xml:175
#, no-c-format
msgid "<literal>:model</literal>"
msgstr "<literal>:model</literal>"

#. Tag: para
#: ay_erb_templates.xml:185
#, no-c-format
msgid "Disk model"
msgstr "ディスクの型番"

#. Tag: para
#: ay_erb_templates.xml:192
#, no-c-format
msgid "<literal>:serial</literal>"
msgstr "<literal>:serial</literal>"

#. Tag: para
#: ay_erb_templates.xml:202
#, no-c-format
msgid "Serial number"
msgstr "シリアル番号"

#. Tag: para
#: ay_erb_templates.xml:209
#, no-c-format
msgid "<literal>:size</literal>"
msgstr "<literal>:size</literal>"

#. Tag: para
#: ay_erb_templates.xml:214
#, no-c-format
msgid "Integer"
msgstr "Integer"

#. Tag: para
#: ay_erb_templates.xml:219
#, no-c-format
msgid "Disk size (in bytes)"
msgstr "ディスクサイズ (バイト単位)"

#. Tag: para
#: ay_erb_templates.xml:226
#, no-c-format
msgid "<literal>:udev_names</literal>"
msgstr "<literal>:udev_names</literal>"

#. Tag: para
#: ay_erb_templates.xml:231
#, no-c-format
msgid "Array&lt;String&gt;"
msgstr "Array&lt;String&gt;"

#. Tag: para
#: ay_erb_templates.xml:236
#, no-c-format
msgid "List of disk udev names. You can use any of them to refer to the device."
msgstr ""
"ディスクの udev 名の一覧 (プロファイル内でデバイスを指定する際、これらのいず"
"れかを使用することができます)"

#. Tag: para
#: ay_erb_templates.xml:262
#, no-c-format
msgid ""
"The profile in the example below installs the system on the largest disk. It "
"sorts the list of existing disks by size and takes the last one. Then it "
"uses the <literal>:device</literal> key as value for the <literal>device</"
"literal> element."
msgstr ""
"下記のプロファイル例は、最も容量の大きいディスクに対してインストールを行う場"
"合の例を示しています。検出されたディスクの一覧をサイズで並び替え、末尾のデバ"
"イスを選択します。あとは <literal>device</literal> 要素に対して <literal>:"
"device</literal> キーで取得できた値を代入して使用します。"

#. Tag: title
#: ay_erb_templates.xml:269
#, no-c-format
msgid "Using the largest disk"
msgstr "最も容量の大きいディスクの使用"

#. Tag: screen
#: ay_erb_templates.xml:270
#, no-c-format
msgid ""
"&lt;partitioning t=\"list\"&gt;\n"
"  &lt;drive&gt;\n"
"    &lt;% disk = disks.sort_by { |d| d[:size] }.last %&gt; &lt;!-- find the "
"largest disk --&gt;\n"
"    &lt;device&gt;&lt;%= disk[:device] %&gt;&lt;/device&gt; &lt;!-- print "
"the disk device name --&gt;\n"
"    &lt;initialize t=\"boolean\"&gt;true&lt;/initialize&gt;\n"
"    &lt;use&gt;all&lt;/use&gt;\n"
"  &lt;/drive&gt;\n"
"&lt;/partitioning&gt;\n"
"     "
msgstr ""
"&lt;partitioning t=\"list\"&gt;\n"
"  &lt;drive&gt;\n"
"    &lt;% disk = disks.sort_by { |d| d[:size] }.last %&gt; &lt;!-- find the "
"largest disk --&gt;\n"
"    &lt;device&gt;&lt;%= disk[:device] %&gt;&lt;/device&gt; &lt;!-- print "
"the disk device name --&gt;\n"
"    &lt;initialize t=\"boolean\"&gt;true&lt;/initialize&gt;\n"
"    &lt;use&gt;all&lt;/use&gt;\n"
"  &lt;/drive&gt;\n"
"&lt;/partitioning&gt;\n"
"     "

#. Tag: title
#: ay_erb_templates.xml:283
#, no-c-format
msgid "<literal>network_cards</literal>"
msgstr "<literal>network_cards</literal>"

#. Tag: para
#: ay_erb_templates.xml:284
#, no-c-format
msgid ""
"The <literal>network_cards</literal> helper returns a list of network cards, "
"including their names, status information (for example, if they are "
"connected or not)."
msgstr ""
"<literal>network_cards</literal> ヘルパーはネットワークカードの一覧を返す関数"
"です。ここにはネットワークカードの名前のほか、状態に関する情報 (接続されてい"
"るかどうかなど) も含まれています。"

#. Tag: para
#: ay_erb_templates.xml:313
#, no-c-format
msgid "<literal>:device</literal>"
msgstr "<literal>:device</literal>"

#. Tag: para
#: ay_erb_templates.xml:323
#, no-c-format
msgid ""
"Device name (for example, <literal>eth0</literal> or <literal>enp3s0</"
"literal> )"
msgstr "デバイス名 (例: <literal>eth0</literal> , <literal>enp3s0</literal> など)"

#. Tag: para
#: ay_erb_templates.xml:331
#, no-c-format
msgid "<literal>:mac</literal>"
msgstr "<literal>:mac</literal>"

#. Tag: para
#: ay_erb_templates.xml:341
#, no-c-format
msgid "MAC address"
msgstr "MAC アドレス"

#. Tag: para
#: ay_erb_templates.xml:348
#, no-c-format
msgid "<literal>:active</literal>"
msgstr "<literal>:active</literal>"

#. Tag: para
#: ay_erb_templates.xml:358
#, no-c-format
msgid "Whether the device is active or not"
msgstr "デバイスが有効化されているかどうか"

#. Tag: para
#: ay_erb_templates.xml:365
#, no-c-format
msgid "<literal>:link</literal>"
msgstr "<literal>:link</literal>"

#. Tag: para
#: ay_erb_templates.xml:370
#, no-c-format
msgid "Boolean"
msgstr "Boolean"

#. Tag: para
#: ay_erb_templates.xml:375
#, no-c-format
msgid "Whether the device is connected or not"
msgstr "デバイスが接続されているかどうか"

#. Tag: para
#: ay_erb_templates.xml:382
#, no-c-format
msgid "<literal>:vendor</literal>"
msgstr "<literal>:vendor</literal>"

#. Tag: para
#: ay_erb_templates.xml:392
#, no-c-format
msgid "Disk vendor's name"
msgstr "製造元の名前"

#. Tag: para
#: ay_erb_templates.xml:400
#, no-c-format
msgid ""
"The following example finds the first network card that is connected to the "
"network and configures it to use DHCP."
msgstr ""
"下記の例では、ネットワークに接続されている最初のネットワークカードを検出し、"
"そのネットワークカードで DHCP を使用するように設定します。"

#. Tag: title
#: ay_erb_templates.xml:405
#, no-c-format
msgid "Configure the connected network cards"
msgstr "接続されているネットワークカードの設定"

#. Tag: screen
#: ay_erb_templates.xml:406
#, no-c-format
msgid ""
"&lt;interfaces t=\"list\"&gt;\n"
"  &lt;% with_link = netword_cards.sort_by { |n| n[:name] }.find { |n| n[:"
"link] } %&gt;\n"
"  &lt;% if with_link %&gt;\n"
"    &lt;interface&gt;\n"
"      &lt;device&gt;&lt;%= with_link[:device] %&gt;&lt;/device&gt;\n"
"      &lt;startmode&gt;auto&lt;/startmode&gt;\n"
"      &lt;bootproto&gt;dhcp&lt;/bootproto&gt;\n"
"      &lt;/interface&gt;\n"
"  &lt;% end &gt;\n"
"&lt;/interfaces&gt;\n"
"    "
msgstr ""
"&lt;interfaces t=\"list\"&gt;\n"
"  &lt;% with_link = netword_cards.sort_by { |n| n[:name] }.find { |n| n[:"
"link] } %&gt;\n"
"  &lt;% if with_link %&gt;\n"
"    &lt;interface&gt;\n"
"      &lt;device&gt;&lt;%= with_link[:device] %&gt;&lt;/device&gt;\n"
"      &lt;startmode&gt;auto&lt;/startmode&gt;\n"
"      &lt;bootproto&gt;dhcp&lt;/bootproto&gt;\n"
"      &lt;/interface&gt;\n"
"  &lt;% end &gt;\n"
"&lt;/interfaces&gt;\n"
"    "

#. Tag: title
#: ay_erb_templates.xml:421
#, no-c-format
msgid "<literal>os_release</literal>"
msgstr "<literal>os_release</literal>"

#. Tag: para
#: ay_erb_templates.xml:422
#, no-c-format
msgid ""
"The <literal>os_release</literal> helper returns the operating system "
"information, which is included in the <filename>/etc/os-release</filename> "
"file."
msgstr ""
"<literal>os_release</literal> ヘルパーは、オペレーティングシステムに関する情"
"報を返す関数です。これは <filename>/etc/os-release</filename> ファイルから情"
"報を読み込みます。"

#. Tag: para
#: ay_erb_templates.xml:432
#, no-c-format
msgid "Key"
msgstr "キー"

#. Tag: para
#: ay_erb_templates.xml:437
#, no-c-format
msgid "Type"
msgstr "型"

#. Tag: para
#: ay_erb_templates.xml:442
#, no-c-format
msgid "Value"
msgstr "値"

#. Tag: para
#: ay_erb_templates.xml:451
#, no-c-format
msgid "<literal>:id</literal>"
msgstr "<literal>:id</literal>"

#. Tag: para
#: ay_erb_templates.xml:461
#, no-c-format
msgid ""
"Distribution ID ( <phrase os=\"sles;osuse\">for example, <literal>sles</"
"literal>, <literal>opensuse-tumbleweed</literal></phrase> <phrase os="
"\"slemicro\"><literal>suse-microos</literal></phrase> )"
msgstr ""
"ディストリビューション ID ( <phrase os=\"sles;osuse\">例: <literal>sles</"
"literal>, <literal>opensuse-tumbleweed</literal></phrase> <phrase os="
"\"slemicro\"><literal>suse-microos</literal></phrase> )"

#. Tag: para
#: ay_erb_templates.xml:470
#, no-c-format
msgid "<literal>:name</literal>"
msgstr "<literal>:name</literal>"

#. Tag: para
#: ay_erb_templates.xml:480
#, no-c-format
msgid ""
"Distribution name ( <phrase os=\"sles;osuse\">for example, <literal>SLES</"
"literal> or <literal>openSUSE Tumbleweed</literal></phrase> <phrase os="
"\"slemicro\"><literal>SLE Micro</literal></phrase> )"
msgstr ""
"ディストリビューション名 ( <phrase os=\"sles;osuse\">例: <literal>SLES</"
"literal> や <literal>openSUSE Tumbleweed</literal></phrase> <phrase os="
"\"slemicro\"><literal>SLE Micro</literal></phrase> )"

#. Tag: para
#: ay_erb_templates.xml:490
#, no-c-format
msgid "<literal>:version</literal>"
msgstr "<literal>:version</literal>"

#. Tag: para
#: ay_erb_templates.xml:495
#, no-c-format
msgid "String"
msgstr "String"

#. Tag: para
#: ay_erb_templates.xml:500
#, no-c-format
msgid ""
"Distribution version ( <phrase os=\"sles;osuse\">for example, <literal>15.2</"
"literal></phrase> <phrase os=\"slemicro\"><literal>5.1</literal></phrase> )"
msgstr ""
"ディストリビューションのバージョン ( <phrase os=\"sles;osuse\">例: "
"<literal>15.2</literal></phrase> <phrase os=\"slemicro\"><literal>5.1</"
"literal></phrase> )"

#. Tag: para
#: ay_erb_templates.xml:509
#, no-c-format
msgid ""
"You might use this information to decide which product to install, using "
"pretty much the same profile for all of them (SLE or openSUSE distributions)."
msgstr ""
"この情報を使用することで、インストールすべき製品を判断することができます。た"
"とえば SLE と openSUSE で異なる設定を適用することができるようになります。"

#. Tag: title
#: ay_erb_templates.xml:515
#, no-c-format
msgid "Reusing the same profile for different distributions"
msgstr "異なるディストリビューションに対して同じプロファイルを適用する設定"

#. Tag: screen
#: ay_erb_templates.xml:516
#, no-c-format
msgid ""
"&lt;products t=\"list\"&gt;\n"
"  &lt;% if os_release[:id] == 'sle' %&gt;\n"
"  &lt;product&gt;SLES&lt;/product&gt;\n"
"  &lt;% else %&gt;\n"
"  &lt;product&gt;openSUSE&lt;/product&gt;\n"
"  &lt;% end %&gt;\n"
"&lt;/products&gt;"
msgstr ""
"&lt;products t=\"list\"&gt;\n"
"  &lt;% if os_release[:id] == 'sle' %&gt;\n"
"  &lt;product&gt;SLES&lt;/product&gt;\n"
"  &lt;% else %&gt;\n"
"  &lt;product&gt;openSUSE&lt;/product&gt;\n"
"  &lt;% end %&gt;\n"
"&lt;/products&gt;"

#. Tag: title
#: ay_erb_templates.xml:527
#, no-c-format
msgid "<literal>hardware</literal>"
msgstr "<literal>hardware</literal>"

#. Tag: para
#: ay_erb_templates.xml:528
#, no-c-format
msgid ""
"The <literal>hardware</literal> helper provides additional hardware "
"information. It returns all the information from <literal>hwinfo</literal> "
"command. You can use this helper as an escape hatch for those cases in which "
"the information available through the described helpers is not enough. In "
"the next example, <literal>hardware</literal> helper is used to filter USB "
"devices. Check <xref linkend=\"erb-running-helpers\"/> to learn how to "
"inspect all the information provided by the <literal>hardware</literal> "
"helper."
msgstr ""
"<literal>hardware</literal> ヘルパーは追加のハードウエア情報を提供する仕組みです。"
"ここには <literal>hwinfo</literal> コマンドからの全ての情報が含まれていて、"
"その他のヘルパーでは不十分な場合の緊急手段として使用することができます。たとえば"
"下記の例では、 <literal>hardware</literal> ヘルパーを利用して USB デバイスの"
"フィルタリングを行っています。 <literal>hardware</literal> ヘルパーで提供される"
"情報についての詳細は、 <xref linkend=\"erb-running-helpers\"/> をお読みください。"

#. Tag: title
#: ay_erb_templates.xml:539
#, no-c-format
msgid "Filtering USB devices"
msgstr "USB デバイスのフィルタ"

#. Tag: screen
#: ay_erb_templates.xml:540
#, no-c-format
msgid ""
"\n"
"&lt;% usb_disks = hardware[\"disk\"].select { |d| d[\"driver\"] != \"usb-"
"storage\" } %&gt;\n"
msgstr ""
"\n"
"&lt;% usb_disks = hardware[\"disk\"].select { |d| d[\"driver\"] != \"usb-"
"storage\" } %&gt;\n"

#. Tag: title
#: ay_erb_templates.xml:548
#, no-c-format
msgid "Running ERB helpers"
msgstr "ERB ヘルパーの実行"

#. Tag: para
#: ay_erb_templates.xml:550
#, no-c-format
msgid ""
"You can use the Ruby console to run &ay; ERB helpers and find out what they "
"offer. All ERB helpers are accessed through an instance of the "
"<literal>Y2Autoinstallation::Y2ERB::TemplateEnvironment</literal> class. "
"Start the Ruby interactive interpreter by running, as root: <literal>irb -"
"ryast -rautoinstall/y2erb</literal> ."
msgstr ""
"&ay; の ERB ヘルパーを実行するにあたって Ruby コンソールを使用して結果を確認する"
"ことができます。 ERB ヘルパーは <literal>Y2Autoinstallation::Y2ERB::TemplateEnvironment"
"</literal> クラスのインスタンスを介してアクセスできます。下記のようにして root で"
" Ruby インタプリタを起動して確認してください: <literal>irb -"
"ryast -rautoinstall/y2erb</literal>"

#. Tag: title
#: ay_erb_templates.xml:560
#, no-c-format
msgid "Running helpers"
msgstr "ヘルパーの実行"

#. Tag: screen
#: ay_erb_templates.xml:561
#, no-c-format
msgid ""
"\n"
"irb &gt; env = Y2Autoinstallation::Y2ERB::TemplateEnvironment.new  # the env "
"variable gives access to the helpers\n"
"\n"
"irb &gt; env.disks\n"
"=&gt;\n"
"[{:vendor=&gt;\"WDC\", :device=&gt;\"sda\", ...},\n"
" {:vendor=&gt;\"TOSHIBA\", :device=&gt;\"sdb\", ...},\n"
"...]\n"
"\n"
"irb &gt; env.hardware.keys\n"
"=&gt;\n"
"[\"architecture\",\n"
" \"bios\",\n"
" \"bios_video\",\n"
" ...]\n"
"\n"
"irb &gt; env.hardware[\"architecture\"]\n"
"=&gt;\n"
"\"x86_64\"\n"
msgstr ""
"\n"
"irb &gt; env = Y2Autoinstallation::Y2ERB::TemplateEnvironment.new  # env 変数にはヘルパーのインスタンスが代入されます\n"
"\n"
"irb &gt; env.disks\n"
"=&gt;\n"
"[{:vendor=&gt;\"WDC\", :device=&gt;\"sda\", ...},\n"
" {:vendor=&gt;\"TOSHIBA\", :device=&gt;\"sdb\", ...},\n"
"...]\n"
"\n"
"irb &gt; env.hardware.keys\n"
"=&gt;\n"
"[\"architecture\",\n"
" \"bios\",\n"
" \"bios_video\",\n"
" ...]\n"
"\n"
"irb &gt; env.hardware[\"architecture\"]\n"
"=&gt;\n"
"\"x86_64\"\n"

#. Tag: title
#: ay_erb_templates.xml:585
#, no-c-format
msgid "Rendering ERB profiles"
msgstr "ERB プロファイルの生成"

#. Tag: para
#: ay_erb_templates.xml:587
#, no-c-format
msgid ""
"The &ay; command line provides a <literal>check-profile</literal> command "
"that can be used to generate a profile from a ERB file. This command asks "
"&ay; to parse, run the ERB code, and generate the resulting profile. You can "
"inspect the rendered profile to check that everything worked as expected. "
"See the command help for all the options if supports: <literal>autoyast "
"check-profile --help</literal> . In the following example <literal>check-"
"profile</literal> asks &ay; to download and parse the profile, interpret the "
"ERB code and run the pre-scripts. The result will be dumped to the "
"<literal>result.xml</literal> file."
msgstr ""
"&ay; のコマンドラインでは <literal>check-profile</literal> コマンドが提供されています。"
"これは ERB ファイルからプロファイルを生成するための仕組みで、このコマンドは &ay; "
"に対して ERB コードの処理と実行を依頼して、プロファイルの生成を行います。これを利用"
"することで、期待通りにプロファイルが生成されるかどうかを確認することができます。"
"サポートされている全てのオプションを表示するには、 <literal>autoyast check-profile "
"--help</literal> のように入力して実行してください。たとえば下記の例では、 &ay; "
"に対してプロファイルのダウンロードと解釈を依頼して、 ERB コードの実行と事前スクリプト"
"の実行までを行っています。実行結果は <literal>result.xml</literal> ファイルに出力"
"されます。"

#. Tag: title
#: ay_erb_templates.xml:599
#, no-c-format
msgid "Rendering profile"
msgstr "プロファイルの生成"

#. Tag: screen
#: ay_erb_templates.xml:600
#, no-c-format
msgid ""
"\n"
" &prompt.sudo;yast2 autoyast check-profile "
"filename=<replaceable>http://192.168.1.100</replaceable>/autoinst.erb "
"output=result.xml run-scripts=true run-erb=true\n"
msgstr ""
"\n"
" &prompt.sudo;yast2 autoyast check-profile "
"filename=<replaceable>http://192.168.1.100</replaceable>/autoinst.erb "
"output=result.xml run-scripts=true run-erb=true\n"

#. Tag: title
#: ay_erb_templates.xml:605
#, no-c-format
msgid "<literal>check-profile</literal> permissions"
msgstr "<literal>check-profile</literal> の許可について"

#. Tag: para
#: ay_erb_templates.xml:606
#, no-c-format
msgid ""
"In most cases, <literal>check-profile</literal> requires root permissions, "
"so be careful when running pre-installation scripts and ERB profiles as "
"root. Use only profiles that you trust."
msgstr ""
"ほとんどの場合、 <literal>check-profile</literal> には root のアクセス権限が必要と"
"なります。そのため、インストール前スクリプトや ERB プロファイルを root で動作させる"
"ことになることに注意してください。信頼できるプロファイルのみを指定してください。"

#. Tag: title
#: ay_erb_templates.xml:615
#, no-c-format
msgid "Debugging ERB profiles"
msgstr "ERB プロファイルのデバッグ"

#. Tag: para
#: ay_erb_templates.xml:617
#, no-c-format
msgid ""
"For those cases in which you would like to stop the ERB evaluation and check "
"what is happening, &yast; offers integration with the <literal>byebug</"
"literal> debugger. Install the <literal>rubygem(byebug)</literal> package "
"and set the <literal>Y2DEBUGGER</literal> environment variable to 1."
msgstr ""
"ERB の処理や動作を 1 つずつ確認していきたい場合は、 &yast; の提供する <literal>byebug</"
"literal> デバッガをお使いください。具体的には <literal>rubygem(byebug)</literal> "
"パッケージをインストールしたあと、 <literal>Y2DEBUGGER</literal> 環境変数を 1 に"
"設定します。"

#. Tag: title
#: ay_erb_templates.xml:626
#, no-c-format
msgid "Preparing the debug environment"
msgstr "デバッグ環境の準備"

#. Tag: screen
#: ay_erb_templates.xml:627
#, no-c-format
msgid ""
"\n"
"&prompt.sudo;zypper --non-interactive in \"rubygem(byebug)\"\n"
"&prompt.sudo;Y2DEBUGGER=1 yast2 autoyast check-profile ...\n"
msgstr ""
"\n"
"&prompt.sudo;zypper --non-interactive in \"rubygem(byebug)\"\n"
"&prompt.sudo;Y2DEBUGGER=1 yast2 autoyast check-profile ...\n"

#. Tag: para
#: ay_erb_templates.xml:633
#, no-c-format
msgid ""
"Adding breakpoints is as easy as adding &lt;% byebug %&gt; where you want to "
"stop. For more information about <literal>byebug</literal> , see <link xlink:"
"href=\"https://github.com/deivid-rodriguez/byebug\"/> ."
msgstr ""
"ブレークポイントを追加したい場合は、その箇所に &lt;% byebug %&gt; を追加するだけです。"
" <literal>byebug</literal> に関する詳細は、 <link xlink:"
"href=\"https://github.com/deivid-rodriguez/byebug\"/> (英語) をお読みください。"

#. Tag: title
#: ay_erb_templates.xml:640
#, no-c-format
msgid "Adding a breakpoint"
msgstr "ブレークポイントの追加"

#. Tag: screen
#: ay_erb_templates.xml:641
#, no-c-format
msgid ""
"\n"
"&lt;% byebug %&gt;\n"
"&lt;% if system(\"dmidecode | grep some-model\") %&gt;\n"
"  &lt;!-- do something --&gt;\n"
"%&lt;% end %&gt;\n"
msgstr ""
"\n"
"&lt;% byebug %&gt;\n"
"&lt;% if system(\"dmidecode | grep some-model\") %&gt;\n"
"  &lt;!-- 何らかの処理 --&gt;\n"
"%&lt;% end %&gt;\n"

#. Tag: title
#: ay_erb_templates.xml:651
#, no-c-format
msgid "ERB vs. rules and classes"
msgstr "ERB とルール／クラス"

#. Tag: para
#: ay_erb_templates.xml:653
#, no-c-format
msgid ""
"Although both ERB and rules/classes enable generating profiles dynamically, "
"in general ERB profiles are easier to read and understand. One important "
"difference is that rules and classes can merge profiles, and ERB can not. "
"See more about merging profiles at <xref linkend=\"rulesandclass\"/> . On "
"the other hand, ERB brings all the power of a high level language, Ruby. "
"Let's see an example using both. In the following example, we want to place "
"<literal>/home</literal> directory in <literal>/dev/sdb</literal> if it "
"exists."
msgstr ""
"ERB とルール／クラスのどちらもプロファイルを動的に生成する仕組みですが、一般的には"
" ERB のほうが読みやすく理解しやすい仕組みです。また、大きく異なる点として、ルールとクラスが"
"プロファイルの合成に対応しているのに対して、 ERB は対応していないことがあげられます。"
"プロファイルの合成に関する詳細は、 <xref linkend=\"rulesandclass\"/> をお読みください。"
"もう一方の ERB では、 Ruby という高度な言語の威力を存分に発揮することができます。"
"たとえば下記の 2 つの例では、 <literal>/dev/sdb</literal> が存在した場合、 <literal>"
"/home</literal> をそのデバイス内に作成するよう指示しています。"

#. Tag: title
#: ay_erb_templates.xml:666
#, no-c-format
msgid "Rules and classes"
msgstr "ルールとクラス"

#. Tag: screen
#: ay_erb_templates.xml:667
#, no-c-format
msgid ""
"\n"
"&lt;rule&gt;\n"
"  &lt;custom1&gt;\n"
"    &lt;script&gt;\n"
"if blkid | grep /dev/sdb &gt; /dev/null; then\n"
"echo -n \"yes\"\n"
"else\n"
"echo -n \"no\"\n"
"fi;\n"
"    &lt;/script&gt;\n"
"    &lt;match&gt;yes&lt;/match&gt;\n"
"    &lt;match_type&gt;exact&lt;/match_type&gt;\n"
"  &lt;/custom1&gt;\n"
"  &lt;result&gt;\n"
"    &lt;profile&gt;classes/sdb_home.xml&lt;/profile&gt;\n"
"    &lt;dont_merge config:type=\"list\"&gt;\n"
"      &lt;element&gt;partition&lt;/element&gt;\n"
"    &lt;/dont_merge&gt;\n"
"  &lt;/result&gt;\n"
"&lt;/rule&gt;\n"
msgstr ""
"\n"
"&lt;rule&gt;\n"
"  &lt;custom1&gt;\n"
"    &lt;script&gt;\n"
"if blkid | grep /dev/sdb &gt; /dev/null; then\n"
"echo -n \"yes\"\n"
"else\n"
"echo -n \"no\"\n"
"fi;\n"
"    &lt;/script&gt;\n"
"    &lt;match&gt;yes&lt;/match&gt;\n"
"    &lt;match_type&gt;exact&lt;/match_type&gt;\n"
"  &lt;/custom1&gt;\n"
"  &lt;result&gt;\n"
"    &lt;profile&gt;classes/sdb_home.xml&lt;/profile&gt;\n"
"    &lt;dont_merge config:type=\"list\"&gt;\n"
"      &lt;element&gt;partition&lt;/element&gt;\n"
"    &lt;/dont_merge&gt;\n"
"  &lt;/result&gt;\n"
"&lt;/rule&gt;\n"

#. Tag: title
#: ay_erb_templates.xml:691
#, no-c-format
msgid "ERB"
msgstr "ERB"

#. Tag: screen
#: ay_erb_templates.xml:692
#, no-c-format
msgid ""
"\n"
"&lt;% home_in_sdb = disks.map { |d| d[:device] }.include?(\"sdb\") %&gt;\n"
"\n"
"&lt;partitioning config:type=\"list\"&gt;\n"
"  &lt;drive&gt;\n"
"    ...\n"
"  &lt;/drive&gt;\n"
"  &lt;% if home_in_sdb %&gt;\n"
"  &lt;drive&gt;\n"
"    &lt;device&gt;/dev/sdb&lt;/device&gt;\n"
"    &lt;disklabel&gt;none&lt;/disklabel&gt;\n"
"    &lt;partitions t=\"list\"&gt;\n"
"      &lt;partition&gt;\n"
"        &lt;format t=\"boolean\"&gt;true&lt;/format&gt;\n"
"        &lt;filesystem t=\"symbol\"&gt;xfs&lt;/filesystem&gt;\n"
"        &lt;mount&gt;/home&lt;/mount&gt;\n"
"      &lt;/partition&gt;\n"
"    &lt;/partitions&gt;\n"
"  &lt;/drive&gt;\n"
"  &lt;% end %&gt;\n"
"&lt;/partitioning&gt;\n"
msgstr ""
"\n"
"&lt;% home_in_sdb = disks.map { |d| d[:device] }.include?(\"sdb\") %&gt;\n"
"\n"
"&lt;partitioning config:type=\"list\"&gt;\n"
"  &lt;drive&gt;\n"
"    ...\n"
"  &lt;/drive&gt;\n"
"  &lt;% if home_in_sdb %&gt;\n"
"  &lt;drive&gt;\n"
"    &lt;device&gt;/dev/sdb&lt;/device&gt;\n"
"    &lt;disklabel&gt;none&lt;/disklabel&gt;\n"
"    &lt;partitions t=\"list\"&gt;\n"
"      &lt;partition&gt;\n"
"        &lt;format t=\"boolean\"&gt;true&lt;/format&gt;\n"
"        &lt;filesystem t=\"symbol\"&gt;xfs&lt;/filesystem&gt;\n"
"        &lt;mount&gt;/home&lt;/mount&gt;\n"
"      &lt;/partition&gt;\n"
"    &lt;/partitions&gt;\n"
"  &lt;/drive&gt;\n"
"  &lt;% end %&gt;\n"
"&lt;/partitioning&gt;\n"

