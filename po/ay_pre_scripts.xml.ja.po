# translation of ay_pre_scripts.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2021.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2021.
msgid ""
msgstr ""
"Project-Id-Version: ay_pre_scripts.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2021-03-17 23:03+0000\n"
"PO-Revision-Date: 2021-01-12 16:19+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: ay_pre_scripts.xml:13
#, no-c-format
msgid "Combining ERB templates and scripts"
msgstr "ERB テンプレートとスクリプトの組み合わせ"

#. Tag: para
#: ay_pre_scripts.xml:21
#, no-c-format
msgid ""
"Section <xref linkend=\"pre-install-scripts\"/> already describes how to use "
"a pre-script to modify the current profile. In a nutshell, if the script "
"creates a <filename>/tmp/profile/modified.xml</filename> file, &ay; imports "
"that profile and forgets about the initial one."
msgstr ""
"<xref linkend=\"pre-install-scripts\"/> で示しているとおり、プロファイルの内"
"容を変更するためのインストール前スクリプトを設定することができます。このスク"
"リプトは簡単に言うと、スクリプトが <filename>/tmp/profile/modified.xml</"
"filename> ファイルを生成すると、 &ay; はその生成されたプロファイルを読み込"
"み、元のプロファイルを廃棄する仕組みです。"

#. Tag: para
#: ay_pre_scripts.xml:28
#, no-c-format
msgid ""
"This is a pretty flexible approach and the only limitation is that you need "
"to rely on the languages and libraries that are available in the "
"installation media."
msgstr ""
"これは比較的柔軟な仕組みですが、インストールメディア内に存在する言語とライブ"
"ラリのみが使用できるという点にご注意ください。"

#. Tag: title
#: ay_pre_scripts.xml:35
#, no-c-format
msgid "Embedding ERB in Your Scripts"
msgstr "スクリプト内への ERB の組み込み"

#. Tag: para
#: ay_pre_scripts.xml:37
#, no-c-format
msgid ""
"Unlike with <emphasis>rules</emphasis> , it is possible to combine ERB "
"templates with scripts. &ay; will evaluate any ERB tag that you include in "
"your script before running it. This behavior only applies to the scripts "
"defined inside the profile and not to the external ones."
msgstr ""
"<emphasis>ルール</emphasis> とは異なり、 ERB テンプレートの仕組みとスクリプト"
"を組み合わせて使用することもできます。 &ay; では、対象のスクリプトを実行する"
"前に、 ERB タグの評価が行なわれます。この動作はプロファイル内に組み込まれたス"
"クリプトに対してのみ有効で、外部のスクリプトに対しては適用されません。"

#. Tag: para
#: ay_pre_scripts.xml:44
#, fuzzy, no-c-format
msgid ""
"The script in the example below downloads a profile which name is based on "
"the MAC address. Saving the file as <filename>/tmp/profile/modified.xml</"
"filename> will cause &ay; to load and use the downloaded profile."
msgstr ""
"下記の例では、 MAC アドレスをベースにしてプロファイルをダウンロードしていま"
"す。ファイルは <filename>/tmp/profile/modified.xml</filename> 内に保存されま"
"すので、 &ay; はそれを読み込んで使用するようになります。"

#. Tag: title
#: ay_pre_scripts.xml:52
#, no-c-format
msgid "Using the MAC Address to Get the Profile"
msgstr "プロファイルを取得するために MAC アドレスを使用する方法"

#. Tag: screen
#: ay_pre_scripts.xml:53
#, no-c-format
msgid ""
"&lt;scripts&gt;\n"
"  &lt;pre-scripts config:type=\"list\"&gt;\n"
"    &lt;script&gt;\n"
"      &lt;interpreter&gt;shell&lt;/interpreter&gt;\n"
"      &lt;filename&gt;load_profile.sh&lt;/filename&gt;\n"
"      &lt;% mac = network_cards.first &gt;\n"
"      &lt;source&gt;&lt;![CDATA[#!/bin/bash\n"
"wget -O /tmp/profile/modified.xml http://myserver/&lt;%= network_cards."
"first[:mac] %&gt;.xml\n"
"]]&gt;&lt;/source&gt;\n"
"    &lt;/script&gt;\n"
"  &lt;/pre-scripts&gt;\n"
"&lt;/scripts&gt;"
msgstr ""
"&lt;scripts&gt;\n"
"  &lt;pre-scripts config:type=\"list\"&gt;\n"
"    &lt;script&gt;\n"
"      &lt;interpreter&gt;shell&lt;/interpreter&gt;\n"
"      &lt;filename&gt;load_profile.sh&lt;/filename&gt;\n"
"      &lt;% mac = network_cards.first &gt;\n"
"      &lt;source&gt;&lt;![CDATA[#!/bin/bash\n"
"wget -O /tmp/profile/modified.xml http://myserver/&lt;%= network_cards."
"first[:mac] %&gt;.xml\n"
"]]&gt;&lt;/source&gt;\n"
"    &lt;/script&gt;\n"
"  &lt;/pre-scripts&gt;\n"
"&lt;/scripts&gt;"

#. Tag: title
#: ay_pre_scripts.xml:69
#, no-c-format
msgid "Accessing ERB Helpers from Ruby Scripts"
msgstr "Ruby スクリプト内からの ERB ヘルパーへのアクセス"

#. Tag: para
#: ay_pre_scripts.xml:71
#, no-c-format
msgid ""
"It is possible to use the ERB helpers in Ruby scripts. To use those helpers, "
"you need to <emphasis>require</emphasis> the <filename>yast</filename> and "
"<filename>autoinstall/y2erb</filename> libraries and use the "
"<literal>Y2Autoinstall::Y2ERB::TemplateEnvironment</literal> class to access "
"them."
msgstr ""
"Ruby スクリプト内から ERB ヘルパーを使用することもできます。ヘルパーを使用す"
"るには <emphasis>require</emphasis> で <filename>yast</filename> と "
"<filename>autoinstall/y2erb</filename> ライブラリを指定してください。また、 "
"ERB ヘルパーへのアクセスには <literal>Y2Autoinstall::Y2ERB::"
"TemplateEnvironment</literal> クラスを指定してください。"

#. Tag: title
#: ay_pre_scripts.xml:80
#, no-c-format
msgid "Accessing ERB helpers from a Ruby script"
msgstr "Ruby スクリプト内からの ERB ヘルパーへのアクセス"

#. Tag: screen
#: ay_pre_scripts.xml:82
#, no-c-format
msgid ""
"\n"
"&lt;scripts&gt;\n"
"  &lt;pre-scripts config:type=\"list\"&gt;\n"
"    &lt;script&gt;\n"
"      &lt;interpreter&gt;/usr/bin/ruby&lt;/interpreter&gt;\n"
"      &lt;filename&gt;load_profile.sh&lt;/filename&gt;\n"
"      &lt;source&gt;&lt;![CDATA[#!/bin/bash\n"
"require \"yast\"\n"
"require \"autoinstall/y2erb\"\n"
"helpers = Y2Autoinstallation::Y2ERB::TemplateEnvironment.new\n"
"# Now you can use the TemplateEnvironment instance to call the helpers\n"
"disk_devices = helpers.disks.map { |d| d[:device] }\n"
"File.write(\"/root/disks.txt\", disk_devices.join(\"\\n\"))\n"
"]]&gt;&lt;/source&gt;\n"
"    &lt;/script&gt;\n"
"  &lt;/pre-scripts&gt;\n"
"&lt;/scripts&gt;"
msgstr ""
"\n"
"&lt;scripts&gt;\n"
"  &lt;pre-scripts config:type=\"list\"&gt;\n"
"    &lt;script&gt;\n"
"      &lt;interpreter&gt;/usr/bin/ruby&lt;/interpreter&gt;\n"
"      &lt;filename&gt;load_profile.sh&lt;/filename&gt;\n"
"      &lt;source&gt;&lt;![CDATA[#!/bin/bash\n"
"require \"yast\"\n"
"require \"autoinstall/y2erb\"\n"
"helpers = Y2Autoinstallation::Y2ERB::TemplateEnvironment.new\n"
"# Now you can use the TemplateEnvironment instance to call the helpers\n"
"disk_devices = helpers.disks.map { |d| d[:device] }\n"
"File.write(\"/root/disks.txt\", disk_devices.join(\"\\n\"))\n"
"]]&gt;&lt;/source&gt;\n"
"    &lt;/script&gt;\n"
"  &lt;/pre-scripts&gt;\n"
"&lt;/scripts&gt;"
