# translation of kvm_appendix.xml.po to Japanese
# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
#
# Automatically generated, 2018.
# Yasuhiko Kamata <belphegor@belbel.or.jp>, 2019.
msgid ""
msgstr ""
"Project-Id-Version: kvm_appendix.xml\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2020-04-15 22:21+0000\n"
"PO-Revision-Date: 2019-08-03 12:51+0900\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <opensuse-ja@opensuse.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: kvm_appendix.xml:9
#, no-c-format
msgid "Appendix"
msgstr "付録"

#. Tag: title
#: kvm_appendix.xml:18
#, no-c-format
msgid "Installing Paravirtualized Drivers"
msgstr "準仮想化ドライバのインストール"

#. Tag: title
#: kvm_appendix.xml:23
#, no-c-format
msgid "Installing virtio Drivers for Microsoft Windows*"
msgstr "Microsoft Windows* での virtio ドライバのインストール"

#. Tag: para
#: kvm_appendix.xml:24
#, fuzzy, no-c-format
msgid ""
"&suse; has developed virtio-based drivers for Windows, which are available "
"in the Virtual Machine Driver Pack (VMDP). See <link xlink:href=\"https://"
"www.suse.com/products/vmdriverpack/\"/> for more information on the VMDP. "
"Installation instructions are now available in a dedicated official "
"documentation."
msgstr ""
"&suse; では Windows 向けに virtio ベースのドライバを開発しています。このドラ"
"イバは Virtual Machine Driver Pack (VMDP) 内に含まれています。 VMDP に関する"
"詳細は、 <link xlink:href=\"http://www.suse.com/products/vmdriverpack/\"/> を"
"お読みください。インストール手順については、専用の公式文書をお読みください。"

#~ msgid "Generating x509 Client/Server Certificates"
#~ msgstr "x509 クライアント／サーバ証明書の生成"

#~ msgid ""
#~ "To be able to create x509 client and server certificates you need to "
#~ "issue them by a Certificate Authority (CA). It is recommended to set up "
#~ "an independent CA that only issues certificates for <systemitem class="
#~ "\"library\">libvirt</systemitem> ."
#~ msgstr ""
#~ "x509 クライアント／サーバ証明書を作成するには、証明機関 (Certificate "
#~ "Authority (CA)) からそれらを発行する必要があります。 <systemitem class="
#~ "\"library\">libvirt</systemitem> で証明書を使用する場合は、それ専用の CA "
#~ "を構築して使用することをお勧めします。"

#~ msgid ""
#~ "Set up a CA as described in <xref linkend=\"sec-security-yast-ca-module-"
#~ "rootca\"/> ."
#~ msgstr ""
#~ "まずは <xref linkend=\"sec-security-yast-ca-module-rootca\"/> の手順に従っ"
#~ "て CA を構築します。"

#~ msgid ""
#~ "Create a server and a client certificate as described in <xref linkend="
#~ "\"sec-security-yast-ca-module-clientserver\"/> . The Common Name (CN) for "
#~ "the server certificate must be the fully qualified host name, while the "
#~ "Common Name for the client certificate can be freely chosen. For all "
#~ "other fields stick with the defaults suggested by &yast;."
#~ msgstr ""
#~ "<xref linkend=\"sec-security-yast-ca-module-clientserver\"/> の手順に従っ"
#~ "てサーバ証明書やクライアント証明書を作成します。サーバ証明書の場合、 "
#~ "Common Name (CN) の項目は完全修飾ホスト名でなければなりませんが、クライア"
#~ "ント証明書の場合は任意の名前でかまいません。それ以外の値については、 "
#~ "&yast; が提示する既定値のままにしておいてください。"

#~ msgid ""
#~ "Export the client and server certificates to a temporary location (for "
#~ "example, <filename>/tmp/x509/</filename> ) by performing the following "
#~ "steps:"
#~ msgstr ""
#~ "あとは下記の手順を実施して、一時的な場所 (例: <filename>/tmp/x509/</"
#~ "filename>) にクライアント証明書やサーバ証明書をエクスポートします:"

#~ msgid "Select the certificate on the <guimenu>certificates</guimenu> tab."
#~ msgstr "<guimenu>証明書</guimenu> タブで証明書を選択します。"

#~ msgid ""
#~ "Choose <menuchoice> <guimenu>Export</guimenu> <guimenu>Export to File</"
#~ "guimenu> <guimenu>Certificate and the Key Unencrypted in PEM Format</"
#~ "guimenu> </menuchoice> , provide the <guimenu>Certificate Password</"
#~ "guimenu> and the full path and the file name under <guimenu>File Name</"
#~ "guimenu> , for example, <filename>/tmp/x509/server.pem</filename> or "
#~ "<filename>/tmp/x509/client.pem</filename> ."
#~ msgstr ""
#~ "<menuchoice> <guimenu>エクスポート</guimenu> <guimenu>ファイルにエクスポー"
#~ "ト</guimenu> <guimenu>証明書と鍵を暗号化せずに PEM 形式で</guimenu> </"
#~ "menuchoice> を選択し、 <guimenu>証明書のパスワード</guimenu> を入力してか"
#~ "ら <guimenu>ファイル名</guimenu> に出力先を指定します。たとえば "
#~ "<filename>/tmp/x509/server.pem</filename> や <filename>/tmp/x509/client."
#~ "pem</filename> のように指定します。"

#~ msgid ""
#~ "Open a terminal and change to the directory where you have saved the "
#~ "certificate and issue the following commands to split it into certificate "
#~ "and key (this example splits the server key):"
#~ msgstr ""
#~ "端末を開いて証明書を保存したディレクトリに移動し、下記のようなコマンドを入"
#~ "力して実行することで、証明書と鍵を分割します (この例では <filename>server."
#~ "pem</filename> ファイルを分割しています):"

#~ msgid ""
#~ "&prompt.user;csplit -z -f s_ server.pem '/-----BEGIN/' '{1}'\n"
#~ "       mv s_00 servercert.pem\n"
#~ "       mv s_01 serverkey.pem"
#~ msgstr ""
#~ "&prompt.user;csplit -z -f s_ server.pem '/-----BEGIN/' '{1}'\n"
#~ "       mv s_00 servercert.pem\n"
#~ "       mv s_01 serverkey.pem"

#~ msgid ""
#~ "Repeat the procedure for each client and server certificate you want to "
#~ "export."
#~ msgstr ""
#~ "複数の証明書をエクスポートしている場合は、上記の手順を繰り返し、全ての証明"
#~ "書に対して実施します。"

#~ msgid "Finally export the CA certificate by performing the following steps:"
#~ msgstr "最後に CA 自身の証明書をエクスポートします:"

#~ msgid "Switch to the <guimenu>Description</guimenu> tab."
#~ msgstr "<guimenu>説明</guimenu> タブに切り替えます。"

#~ msgid ""
#~ "Choose <menuchoice> <guimenu>Advanced</guimenu> <guimenu>Export to File</"
#~ "guimenu> <guimenu>Only the Certificate in PEM Format</guimenu> </"
#~ "menuchoice> and enter the full path and the file name under <guimenu>File "
#~ "Name</guimenu> , for example, <filename>/tmp/x509/cacert.pem</filename> ."
#~ msgstr ""
#~ "<menuchoice> <guimenu>詳細設定</guimenu> <guimenu>ファイルにエクスポート</"
#~ "guimenu> <guimenu>証明書のみを PEM 形式で</guimenu> </menuchoice> を選択し"
#~ "て、 <guimenu>ファイル名</guimenu> に出力先を指定します。たとえば "
#~ "<filename>/tmp/x509/cacert.pem</filename> のように指定します。"
