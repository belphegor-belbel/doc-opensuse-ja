# Japanese translations for PACKAGE package
# PACKAGE パッケージに対する英訳.
# Automatically generated, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2018-11-20 05:03+0000\n"
"PO-Revision-Date: 2018-11-20 05:03+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: hardware_nvdimm.xml:10
#, no-c-format
msgid "Non-volatile Main Memory"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:13
#, no-c-format
msgid ""
"This chapter contains additional information about using &productname; with "
"non-volatile main memory comprising one or more NVDIMMs."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:24
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:26
#, no-c-format
msgid ""
"Non-volatile memory is a new type of computer storage, combining speeds "
"approaching those of dynamic RAM (DRAM) along with RAM's byte-by-byte "
"addressability, plus the permanence of solid-state disks (SSDs)."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:32
#, no-c-format
msgid ""
"Like conventional RAM, it is installed directly into motherboard memory "
"slots. As such, it is supplied in the same physical form factor as RAM - as "
"DIMMs. These are known as NVDIMMs: non-volatile dual inline memory modules."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:38
#, no-c-format
msgid ""
"Like SSDs, NVDIMMs provide non-volatile storage: their contents are retained "
"when the system is powered off or restarted. Also like SSDs, sector-level "
"access is also possible if that is more suitable for a particular "
"application."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:45
#, no-c-format
msgid ""
"This new storage subsystem is defined in version 6 of the ACPI standard. "
"However, some types of NVDIMMs already existed before the standard was "
"defined. These can be used in the same way."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:51
#, no-c-format
msgid ""
"Different models use different forms of electronic storage medium, such as "
"Intel 3D XPoint, or a combination of NAND flash and DRAM, and in future, "
"memristor storage or other forthcoming types of non-volatile memory."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:57
#, no-c-format
msgid ""
"This means that different vendors' NVDIMMs offer different performance and "
"durability characteristics. Typically, they are slower than DRAM, but "
"considerably faster than SSDs based on NAND-flash technology."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:63
#, no-c-format
msgid ""
"Because the storage technologies involved are in an early stage of "
"development, different vendors' hardware may impose different limitations. "
"However, generally, writing data to NVDIMMs is slower than reading from "
"them, and the number of write cycles is generally limited."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:70
#, no-c-format
msgid "This has two important consequences:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:76
#, no-c-format
msgid ""
"It is not possible with current technology to run a system with only NVDIMMs "
"and thus achieve completely non-volatile main memory. You must use a mixture "
"of both conventional RAM and NVDIMMs. The operating system and applications "
"will execute in conventional RAM, with the NVDIMMs providing very fast "
"supplementary storage."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:85
#, no-c-format
msgid ""
"The performance characteristics of different vendors' NVDIMMs mean that it "
"may be necessary for programmers to be aware of the hardware specifications "
"of NVDIMMS in a particular server, including how many and in which memory "
"slots they are fitted. This will obviously impact hypervisor use, migration "
"of software between different host machines, and so on."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:97
#, no-c-format
msgid "Terms"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:101
#, no-c-format
msgid "Region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:103
#, no-c-format
msgid ""
"A <emphasis>region</emphasis> is a block of persistent storage that can be "
"divided up into one or more <emphasis>namespace</emphasis> s. You cannot "
"access the persistent memory of a region without first allocating it to a "
"namespace."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:112
#, no-c-format
msgid "Namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:114
#, no-c-format
msgid ""
"A single contiguously-address range of non-volatile storage, comparable to "
"those on NVM Express PCIe SSDs or to a SCSI Logical Unit (LUN). Each NVDIMM "
"usually appears in the server's <filename>/dev</filename> directory as a "
"separate block device. This storage must be assigned to one or more "
"namespaces for it to be used. Depending on the method of access required, "
"namespaces can either amalgamate storage from separate NVDIMMs into larger "
"volumes, or allow it to be partitioned into smaller volumes, similarly to "
"disk drives."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:127
#, no-c-format
msgid "Mode"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:129
#, no-c-format
msgid ""
"Each namespace also has a <emphasis>mode</emphasis> that defines which "
"NVDIMM features are enabled for that namespace. Sibling namespaces of the "
"same parent region will always have the same type, but might be configured "
"to have different modes. Namespace modes include:"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:137
#, no-c-format
msgid "raw"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:139
#, no-c-format
msgid ""
"A memory disk. Does not support DAX. Compatible with other operating systems."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:146
#, no-c-format
msgid "sector"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:148
#, no-c-format
msgid ""
"For legacy filesystems which do not checksum metadata. Suitable for small "
"boot volumes. Compatible with other operating systems."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:155
#, no-c-format
msgid "fsdax"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:157
#, no-c-format
msgid ""
"Filesystem-DAX mode. Default if no other mode is specified. Creates a block "
"device ( <filename>/dev/pmem<replaceable>X</replaceable> [.<replaceable>Y</"
"replaceable>]</filename> ) which supports DAX for <literal>ext4</literal> or "
"<literal>XFS</literal> ."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:166
#, no-c-format
msgid "devdax"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:168
#, no-c-format
msgid ""
"Device-DAX mode. Creates a single-character device file ( <filename> /dev/"
"dax<replaceable>X</replaceable>.<replaceable>Y</replaceable> </filename> ). "
"Does <emphasis>not</emphasis> require filesystem creation. Suitable to "
"register PMEM for RDMA or for assigning it to virtual machines, or for "
"mapping blocks too large to fit into RAM."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:182
#, no-c-format
msgid "Type"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:184
#, no-c-format
msgid ""
"Each namespace and region has a <emphasis>type</emphasis> that defines the "
"way in which the persistent memory associated with that namespace or region "
"can be accessed. A namespace always has the same type as its parent region. "
"There are two different types: Persistent Memory and Block Mode."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:192
#, no-c-format
msgid "Persistent Memory (PMEM)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:194
#, no-c-format
msgid ""
"PMEM storage offers byte-level access, just like RAM. This enables Direct "
"Access (DAX), meaning that accessing the memory bypasses the kernel's page "
"cache and goes direct to the medium. Additionally, using PMEM, a single "
"namespace can include multiple interleaved NVDIMMs, allowing them all to be "
"accessed as a single device."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:204
#, no-c-format
msgid "Block Mode (BLK)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:206
#, no-c-format
msgid ""
"BLK access is in sectors, usually of 512 bytes, through a defined access "
"window, the <emphasis>aperture</emphasis> . This behaviour is more like a "
"traditional disk drive. This also means that both reads and writes are "
"cached by the kernel. With BLK access, each NVDIMM is accessed as a separate "
"namespace."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:216
#, no-c-format
msgid ""
"Some devices support both PMEM and BLK modes. Additionally, some allow the "
"storage to be split into separate namespaces, so that some can be accessed "
"using PMEM and some using BLK."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:221
#, no-c-format
msgid ""
"Apart from <literal>devdax</literal> namespaces, all other types must be "
"formatted with a filesystem, just as with a conventional drive. "
"&productname; supports the <literal>ext2</literal> , <literal>ext4</literal> "
"and <literal>XFS</literal> filesystems for this."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:228
#, no-c-format
msgid "The <literal>ext2</literal> filesystem does not support DAX."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:235
#, no-c-format
msgid "Direct Access (DAX)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:237
#, no-c-format
msgid ""
"Directly <literal>mmap()</literal> NV-RAM into a process' address space."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:243
#, no-c-format
msgid "DIMM Physical Address (DPA)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:245
#, no-c-format
msgid ""
"A memory address as an offset into a single DIMM's memory; that is, starting "
"from zero as the lowest addressable byte on that DIMM."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:252
#, no-c-format
msgid "Label"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:254
#, no-c-format
msgid ""
"Metadata stored on the NVDIMM, such as namespace definitions. This can be "
"accessed using DSMs."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:261
#, no-c-format
msgid "Device-specific method (DSM)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:263
#, no-c-format
msgid "ACPI method to access the firmware on an NVDIMM."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:272
#, no-c-format
msgid "Use Cases"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:274
#, no-c-format
msgid "PMEM with DAX"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:275
#, no-c-format
msgid ""
"It is important to note that this form of memory access is <emphasis>not</"
"emphasis> transactional. In the event of a power outage or other system "
"failure, data may not be completely written into storage. PMEM storage is "
"only suitable if the application can handle the situation of partially-"
"written data."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:283
#, no-c-format
msgid ""
"Applications which benefit from large amounts of byte-addressable storage."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:286
#, no-c-format
msgid ""
"In cases where the server will be hosting an application that can directly "
"access large amounts of storage on a byte-by-byte basis, by <literal>mmap</"
"literal> ing the storage directly into the application's address space."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:294
#, no-c-format
msgid "Avoiding use of the kernel page cache."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:295
#, no-c-format
msgid ""
"If you wish to conserve the use of RAM for the page cache, and instead give "
"it to your applications. For instance, non-volatile memory could be "
"dedicated to holding virtual machine (VM) images. As these would not be "
"cached, this would reduce the cache usage on the host, allowing more VMs per "
"host."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:305
#, no-c-format
msgid "PMEM with BTT"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:306
#, no-c-format
msgid ""
"This is most useful when you just want to use NVDIMMs as very fast storage."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:309
#, no-c-format
msgid ""
"To applications, such devices just appear as very fast SSDs and can be used "
"like any other storage device - for example, LVM can be layered on top of "
"the non-volatile storage and will work as normal."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:314
#, no-c-format
msgid ""
"The advantage of BTT is that sector write atomicity is guaranteed, so even "
"sophisticated applications which depend on data integrity will keep working. "
"Media error reporting works through standard error-reporting channels."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:321
#, no-c-format
msgid "BLK storage"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:322
#, no-c-format
msgid ""
"Although it is more robust against single-device failure, this requires "
"additional management, as each NVDIMM appears as a separate device. Thus, "
"PMEM is generally preferred."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:327
#, no-c-format
msgid ""
"BLK storage is deprecated and is not supported in later versions of "
"&productname;."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:335
#, no-c-format
msgid "Tools for Managing NVDIMM Storage"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:337
#, no-c-format
msgid ""
"To manage NVDIMM storage, it is necessary to install the <literal>ndctl</"
"literal> package. This also installs the <filename>libndctl</filename> "
"package which provides a set of user-space libraries to configure NVDIMMs."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:344
#, no-c-format
msgid ""
"These tools work via the <filename>libnvdimm</filename> library, which "
"supports three types of NVDIMMs:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:351
#, no-c-format
msgid "PMEM"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:356
#, no-c-format
msgid "BLK"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:361
#, no-c-format
msgid "Simultaneous PMEM and BLK"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:367
#, no-c-format
msgid ""
"The <command>ndctl</command> utility has a helpful set of <command>man</"
"command> pages, accessible with the command:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:372
#, no-c-format
msgid "<command>ndctl help <replaceable>subcommand</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:374
#, no-c-format
msgid "To see a list of available subcommands, use:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:378
#, no-c-format
msgid "<command>ndctl --list-cmds</command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:380
#, no-c-format
msgid "The available subcommands include:"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:386
#, no-c-format
msgid "version"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:388
#, no-c-format
msgid "Displays the current version of the NVDIMM support tools."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:394
#, no-c-format
msgid "enable-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:396
#, no-c-format
msgid "Makes the specified namespace available for use."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:402
#, no-c-format
msgid "disable-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:404
#, no-c-format
msgid "Prevents the specified namespace from being used."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:410
#, no-c-format
msgid "create-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:412
#, no-c-format
msgid "Creates a new namespace from the specified storage devices."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:418
#, no-c-format
msgid "destroy-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:420
#, no-c-format
msgid "Removes the specified namespace."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:426
#, no-c-format
msgid "enable-region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:428
#, no-c-format
msgid "Makes the specified region available for use."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:434
#, no-c-format
msgid "disable-region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:436
#, no-c-format
msgid "Prevents the specified region from being used."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:442
#, no-c-format
msgid "zero-labels"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:444
#, no-c-format
msgid "Erases the metadata from a device."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:450
#, no-c-format
msgid "read-labels"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:452
#, no-c-format
msgid "Retrieves the metadata of the specified device."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:458
#, no-c-format
msgid "list"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:460
#, no-c-format
msgid "Displays available devices."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:466
#, no-c-format
msgid "help"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:468
#, no-c-format
msgid "Displays information about using the tool."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:476
#, no-c-format
msgid "Setting Up NVDIMM Storage"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:479
#, no-c-format
msgid "Viewing Available NVDIMM Storage"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:480
#, no-c-format
msgid ""
"The <command>ndctl</command> <literal>list</literal> command can be used to "
"list all available NVDIMMs in a system."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:484
#, no-c-format
msgid ""
"In the following example, the system has three NVDIMMs which are in a "
"single, triple-channel interleaved set."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:488
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl list --dimms</command>\n"
"\n"
"[\n"
" {\n"
"  \"dev\":\"nmem2\",\n"
"  \"id\":\"8089-00-0000-12325476\"\n"
" },\n"
" {\n"
"  \"dev\":\"nmem1\",\n"
"  \"id\":\"8089-00-0000-11325476\"\n"
" },\n"
" {\n"
"  \"dev\":\"nmem0\",\n"
"  \"id\":\"8089-00-0000-10325476\"\n"
" }\n"
"]"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:504
#, no-c-format
msgid ""
"With a different parameter, <command>ndctl</command> <literal>list</literal> "
"will also list the available regions."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:509
#, no-c-format
msgid "Regions may not appear in numerical order."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:513
#, no-c-format
msgid ""
"Note that although there are only three NVDIMMs, they appear as four regions."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:517
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl list --regions</command>\n"
"\n"
"[\n"
" {\n"
"  \"dev\":\"region1\",\n"
"  \"size\":68182605824,\n"
"  \"available_size\":68182605824,\n"
"  \"type\":\"blk\"\n"
" },\n"
" {\n"
"  \"dev\":\"region3\",\n"
"  \"size\":202937204736,\n"
"  \"available_size\":202937204736,\n"
"  \"type\":\"pmem\",\n"
"  \"iset_id\":5903239628671731251\n"
"  },\n"
"  {\n"
"   \"dev\":\"region0\",\n"
"   \"size\":68182605824,\n"
"   \"available_size\":68182605824,\n"
"   \"type\":\"blk\"\n"
"  },\n"
"  {\n"
"   \"dev\":\"region2\",\n"
"   \"size\":68182605824,\n"
"   \"available_size\":68182605824,\n"
"   \"type\":\"blk\"\n"
"  }\n"
"]"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:546
#, no-c-format
msgid ""
"The space is available in two different forms: either as three separate 64 "
"GB regions of type BLK, or as one combined 189 GB region of type PMEM which "
"presents all the space on the three interleaved NVDIMMs as a single volume."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:551
#, no-c-format
msgid ""
"Note that the displayed value for <literal>available_size</literal> is the "
"same as that for <literal>size</literal> . This means that none of the space "
"has been allocated yet."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:559
#, no-c-format
msgid "Configuring the Storage as a Single PMEM Namespace with DAX"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:560
#, no-c-format
msgid ""
"For the first example, we will configure our three NVDIMMs into a single "
"PMEM namespace with Direct Access (DAX)."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:564
#, no-c-format
msgid "The first step is to create a new namespace."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:567
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl create-namespace --type=<replaceable>pmem</"
"replaceable> --mode=<replaceable>memory</replaceable></command>\n"
"{\n"
" \"dev\":\"namespace3.0\",\n"
" \"mode\":\"memory\",\n"
" \"size\":199764213760,\n"
" \"uuid\":\"dc8ebb84-c564-4248-9e8d-e18543c39b69\",\n"
" \"blockdev\":\"pmem3\"\n"
"}"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:575
#, no-c-format
msgid ""
"This creates a block device <filename>/dev/pmem3</filename> , which supports "
"DAX. The <literal>3</literal> in the device name is inherited from the "
"parent region number, in this case <filename>region3</filename> ."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:580
#, no-c-format
msgid ""
"The <option>--mode=memory</option> option sets aside part of the PMEM "
"storage space on the NVDIMMs so that it can be used to allocate internal "
"kernel data structures called <literal>struct pages</literal> . This allows "
"the new PMEM namespace to be used with features such as <literal>O_DIRECT I/"
"O</literal> and <literal>RDMA</literal> ."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:587
#, no-c-format
msgid ""
"The reservation of some persistent memory for kernel data structures is why "
"the resulting PMEM namespace has a smaller capacity than the parent PMEM "
"Region."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:592
#, no-c-format
msgid ""
"Next, we verify that the new block device is available to the operating "
"system:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:596
#, no-c-format
msgid ""
"&prompt.root;<command>fdisk -l /dev/<replaceable>pmem3</replaceable></"
"command>\n"
"Disk /dev/pmem3: 186 GiB, 199764213760 bytes, 390164480 sectors\n"
"Units: sectors of 1 * 512 = 512 bytes\n"
"Sector size (logical/physical): 512 bytes / 4096 bytes\n"
"I/O size (minimum/optimal): 4096 bytes / 4096 bytes"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:601
#, no-c-format
msgid ""
"Before it can be used, like any other drive, it must be formatted. In this "
"example, we format it with XFS:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:605
#, no-c-format
msgid ""
"&prompt.root;<command>mkfs.xfs /dev/<replaceable>pmem3</replaceable></"
"command>\n"
"meta-data=/dev/pmem3      isize=256    agcount=4, agsize=12192640 blks\n"
"         =                sectsz=4096  attr=2, projid32bit=1\n"
"         =                crc=0        finobt=0, sparse=0\n"
"data     =                bsize=4096   blocks=48770560, imaxpct=25\n"
"         =                sunit=0      swidth=0 blks\n"
"naming   =version 2       bsize=4096   ascii-ci=0 ftype=1\n"
"log      =internal log    bsize=4096   blocks=23813, version=2\n"
"         =                sectsz=4096  sunit=1 blks, lazy-count=1\n"
"realtime =none            extsz=4096   blocks=0, rtextents=0"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:615
#, no-c-format
msgid "Next, we can mount the new drive onto a directory:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:618
#, no-c-format
msgid ""
"&prompt.root;<command>mount -o dax /dev/<replaceable>pmem3</replaceable> /"
"mnt/<replaceable>pmem3</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:619
#, no-c-format
msgid "Then we can verify that we now have a DAX-capable device:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:622
#, no-c-format
msgid ""
"&prompt.root;<command>mount | grep dax</command>\n"
"/dev/pmem3 on /mnt/pmem3 type xfs (rw,relatime,attr2,dax,inode64,noquota)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:624
#, no-c-format
msgid ""
"The result is that we now have a PMEM namespace formatted with the XFS file "
"system and mounted with DAX."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:628
#, no-c-format
msgid ""
"Any <literal>mmap()</literal> calls to files in that file system will return "
"virtual addresses that directly map to the persistent memory on our NVDIMMs, "
"completely bypassing the page cache."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:633
#, no-c-format
msgid ""
"Any <literal>fsync</literal> or <literal>msync</literal> calls on files in "
"that file system will still ensure that modified data has been fully written "
"to the NVDIMMs. These calls flush the processor cache lines associated with "
"any pages that have been modified in userspace via <literal>mmap</literal> "
"mappings."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:641
#, no-c-format
msgid "Removing a Namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:642
#, no-c-format
msgid ""
"Before creating any other type of volume that uses the same storage, we must "
"unmount and then remove this PMEM volume."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:646
#, no-c-format
msgid "First, unmount it:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:649
#, no-c-format
msgid ""
"&prompt.root;<command>umount /mnt/<replaceable>pmem3</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:650
#, no-c-format
msgid "Then disable the namespace:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:653
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl disable-namespace <replaceable>namespace3.0</"
"replaceable></command>\n"
"disabled 1 namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:655
#, no-c-format
msgid "Then delete it:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:658
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl destroy-namespace <replaceable>namespace3.0</"
"replaceable></command>\n"
"destroyed 1 namespace"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:664
#, no-c-format
msgid "Creating a PMEM Namespace with BTT"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:665
#, no-c-format
msgid "In the next example, we create a PMEM namespace that uses BTT."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:668
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl create-namespace --type=<replaceable>pmem</"
"replaceable> --mode=<replaceable>sector</replaceable></command>\n"
"{\n"
" \"dev\":\"namespace3.0\",\n"
" \"mode\":\"sector\",\n"
" \"uuid\":\"51ab652d-7f20-44ea-b51d-5670454f8b9b\",\n"
" \"sector_size\":4096,\n"
" \"blockdev\":\"pmem3s\"\n"
"}"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:676
#, no-c-format
msgid "Next, verify that the new device is present:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:679
#, no-c-format
msgid ""
"&prompt.root;<command>fdisk -l /dev/<replaceable>pmem3s</replaceable></"
"command>\n"
"Disk /dev/pmem3s: 188.8 GiB, 202738135040 bytes, 49496615 sectors\n"
"Units: sectors of 1 * 4096 = 4096 bytes\n"
"Sector size (logical/physical): 4096 bytes / 4096 bytes\n"
"I/O size (minimum/optimal): 4096 bytes / 4096 bytes"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:684
#, no-c-format
msgid ""
"Like the DAX-capable PMEM namespace we previously configured, this BTT-"
"capable PMEM namespace consumes all the available storage on the NVDIMMs."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:690
#, no-c-format
msgid ""
"The trailing <literal>s</literal> in the device name ( <filename>/dev/"
"<replaceable>pmem3s</replaceable></filename> ) stands for <literal>sector</"
"literal> and can be used to easily distinguish PMEM and BLK namespaces that "
"are configured to use the BTT."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:697
#, no-c-format
msgid "The volume can be formatted and mounted as in the previous example."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:700
#, no-c-format
msgid ""
"The PMEM namespace shown here cannot use DAX. Instead it uses the BTT to "
"provide <emphasis>sector write atomicity</emphasis> . On each sector write "
"through the PMEM block driver, the BTT will allocate a new sector to receive "
"the new data. The BTT atomically updates its internal mapping structures "
"after the new data is fully written so the newly written data will be "
"available to applications. If the power fails at any point during this "
"process, the write will be completely lost and the application will have "
"access to its old data, still intact. This prevents the condition known as "
"\"torn sectors\"."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:711
#, no-c-format
msgid ""
"This BTT-enabled PMEM namespace can be formatted and used with a filesystem "
"just like any other standard block device. It cannot be used with DAX. "
"However, <literal>mmap</literal> mappings for files on this block device "
"will use the page cache."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:718
#, no-c-format
msgid ""
"In both these examples, space from all the NVDIMMs is combined into a single "
"volume. Just as with a non-redundant disk array, this means that if any "
"individual NVDIMM suffers an error, the contents of the entire volume could "
"be lost. The more NVDIMMs are included in the volume, the higher the chance "
"of such an error."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:727
#, no-c-format
msgid "Removing the PMEM Volume"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:728
#, no-c-format
msgid ""
"As in the previous example, before re-allocating the space, we must first "
"remove the volume and the namespace:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:732
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl disable-namespace <replaceable>namespace3.0</"
"replaceable></command>\n"
"disabled 1 namespace\n"
"\n"
"&prompt.root;<command>ndctl destroy-namespace <replaceable>namespace3.0</"
"replaceable></command>\n"
"destroyed 1 namespace"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:741
#, no-c-format
msgid "Creating BLK Namespaces"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:742
#, no-c-format
msgid "In this example, we will create 3 separate BLK devices, one per NVDIMM."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:745
#, no-c-format
msgid ""
"One advantage of this approach is that if any individual NVDIMM fails, the "
"other volumes will be unaffected."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:750
#, no-c-format
msgid "The commands must be repeated for each namespace."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:754
#, no-c-format
msgid ""
"&prompt.root;<command>ndctl create-namespace --type=<replaceable>blk</"
"replaceable> --mode=<replaceable>sector</replaceable></command>\n"
"{\n"
" \"dev\":\"namespace1.0\",\n"
" \"mode\":\"sector\",\n"
" \"uuid\":\"fed466bd-90f6-460b-ac81-ad1f08716602\",\n"
" \"sector_size\":4096,\n"
" \"blockdev\":\"ndblk1.0s\"\n"
"}\n"
"   \n"
"&prompt.root;ndctl create-namespace --type=blk --mode=sector\n"
"{\n"
" \"dev\":\"namespace0.0\",\n"
" \"mode\":\"sector\",\n"
" \"uuid\":\"12a29b6f-b951-4d08-8dbc-8dea1a2bb32d\",\n"
" \"sector_size\":4096,\n"
" \"blockdev\":\"ndblk0.0s\"\n"
"}\n"
"    \n"
"&prompt.root;<command>ndctl create-namespace --type=<replaceable>blk</"
"replaceable> --mode=<replaceable>sector</replaceable></command>\n"
"{\n"
" \"dev\":\"namespace2.0\",\n"
" \"mode\":\"sector\",\n"
" \"uuid\":\"7c84dab5-cc08-452a-b18d-53e430bf8833\",\n"
" \"sector_size\":4096,\n"
" \"blockdev\":\"ndblk2.0s\"\n"
"}\n"
"   "
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:781
#, no-c-format
msgid "Next, we can verify that the new devices exist:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:784
#, no-c-format
msgid ""
"&prompt.root;fdisk -l /dev/<replaceable>ndblk*</replaceable>\n"
"Disk /dev/ndblk0.0s: 63.4 GiB, 68115001344 bytes, 16629639 sectors\n"
"Units: sectors of 1 * 4096 = 4096 bytes\n"
"Sector size (logical/physical): 4096 bytes / 4096 bytes\n"
"I/O size (minimum/optimal): 4096 bytes / 4096 bytes\n"
"\n"
"Disk /dev/ndblk1.0s: 63.4 GiB, 68115001344 bytes, 16629639 sectors\n"
"Units: sectors of 1 * 4096 = 4096 bytes\n"
"Sector size (logical/physical): 4096 bytes / 4096 bytes\n"
"I/O size (minimum/optimal): 4096 bytes / 4096 bytes\n"
"\n"
"Disk /dev/ndblk2.0s: 63.4 GiB, 68115001344 bytes, 16629639 sectors\n"
"Units: sectors of 1 * 4096 = 4096 bytes\n"
"Sector size (logical/physical): 4096 bytes / 4096 bytes\n"
"I/O size (minimum/optimal): 4096 bytes / 4096 bytes"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:799
#, no-c-format
msgid ""
"The block devices generated for BLK namespaces are named <filename>/dev/"
"ndblk<replaceable>X</replaceable>.<replaceable>Y</replaceable></filename> "
"where <replaceable>X</replaceable> is the parent region number and "
"<replaceable>Y</replaceable> is a unique namespace number within that "
"region. So, <filename>/dev/ndblk2.0s</filename> is child namespace number 0 "
"of region 2."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:807
#, no-c-format
msgid ""
"As in the previous example, the trailing <literal>s</literal> means that "
"this namespace is configured to use the BTT - in other words, for sector-"
"based access. Because they are accessed via a <literal>block window</"
"literal> , programs cannot use DAX, but accesses will be cached."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:813
#, no-c-format
msgid ""
"As ever, these devices must all be formatted and mounted before they can be "
"used."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:820
#, no-c-format
msgid "For More Information"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:822
#, no-c-format
msgid "More about this topic can be found in the following list:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:828
#, no-c-format
msgid ""
"<link xlink:href=\"https://nvdimm.wiki.kernel.org/\">Persistent Memory Wiki</"
"link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:833
#, no-c-format
msgid ""
"Contains instructions for configuring NVDIMM systems, information about "
"testing, and links to specifications related to NVDIMM enabling. This site "
"is developing as NVDIMM support in Linux is developing."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:840
#, no-c-format
msgid ""
"<link xlink:href=\"http://pmem.io/\">Persistent Memory Programming</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:843
#, no-c-format
msgid ""
"Information about configuring, using and programming systems with non-"
"volatile memory, under Linux and other operating systems. Covers the NVM "
"Library (NVML), which aims to provide useful APIs for programming with "
"persistent memory in userspace."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:851
#, no-c-format
msgid ""
"<link xlink:href=\"https://www.kernel.org/doc/Documentation/nvdimm/nvdimm.txt"
"\"> LIBNVDIMM: Non-Volatile Devices</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:857
#, no-c-format
msgid ""
"Aimed at kernel developers, this is part of the Documentation folder in the "
"current Linux kernel tree. It talks about the different kernel modules "
"involved in NVDIMM enablement, lays out some technical details of the kernel "
"implementation, and talks about the <filename>sysfs</filename> interface to "
"the kernel that is used by the <command>ndctl</command> tool."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:867
#, no-c-format
msgid ""
"<link xlink:href=\"https://github.com/pmem/ndctl\">GitHub: pmem/ndctl</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:870
#, no-c-format
msgid ""
"Utility library for managing the <command>libnvdimm</command> sub-system in "
"the Linux kernel. Also contains userspace libraries, as well as unit tests "
"and documentation."
msgstr ""
