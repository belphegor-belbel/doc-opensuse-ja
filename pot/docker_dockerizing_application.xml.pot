# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2019-08-02 02:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: docker_dockerizing_application.xml:11
#, no-c-format
msgid "Creating &docker; Images of Applications"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:12
#, no-c-format
msgid "&deng; is a technology that can help minimize resources used to run or build applications. There are several types of applications that are suitable to run inside a &docker; container like daemons, Web pages or applications that expose ports for communication. You can use &deng; to automate building and deployment processes by adding the build process into a &docker; image, then building the image and then running containers based on that image."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:21
#, no-c-format
msgid "Running an application inside a &docker; container has the following advantages:"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:27
#, no-c-format
msgid "You can minimize the runtime environment of the application as you can add to the &docker; image of the application just the required processes and applications."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:34
#, no-c-format
msgid "The image with your application is portable across machines also with different Linux host systems."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:40
#, no-c-format
msgid "You can share the image of your application by using a repository."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:45
#, no-c-format
msgid "You can use different versions of required packages in the container than the host system uses without having problems with dependencies."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:51
#, no-c-format
msgid "You can run several instances of the same application that are completely independent from each other."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:57
#, no-c-format
msgid "Using &deng; to build applications has the following advantages:"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:62
#, no-c-format
msgid "You can prepare a complete building image."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:67
#, no-c-format
msgid "Your build always runs in the same environment."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:72
#, no-c-format
msgid "Developers can test their code in the same environment as used in production."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:78
#, no-c-format
msgid "You can set up an automated building process."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:83
#, no-c-format
msgid "The following section provides examples and tips on creating &docker; images for applications. Prior to reading further, make sure that you have activated your &slsa; base &docker; image as described in <xref linkend=\"Building_Pre-build_Images\"/> ."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:90
#, no-c-format
msgid "Running an Application with Specific Package Versions"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:92
#, no-c-format
msgid "You may face the problem that your application uses a specific version of a package that is different from the package installed on the system that should run your application. You can modify your application to work with another version or you can create a &docker; image with that particular package version. The following example of a <filename>Dockerfile</filename> shows an image based on a current version of &slsa; but with an older version of the <literal>example</literal> package"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:102
#, no-c-format
msgid "FROM registry.suse.com/suse/sles12sp4\n"
      "MAINTAINER Tux\n"
      "\n"
      "RUN zypper ref &amp;&amp; zypper in -f example-1.0.0-0\n"
      "COPY application.rpm /tmp/\n"
      "\n"
      "RUN zypper --non-interactive in /tmp/application.rpm\n"
      "\n"
      "ENTRYPOINT [\"/etc/bin/application\"]\n"
      "\n"
      "CMD [\"-i\"]"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:114
#, no-c-format
msgid "Build the image by running the following command in the directory that the <filename>Dockerfile</filename> resides in:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:119
#, no-c-format
msgid "&prompt.user;docker build --tag tux_application:latest ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:121
#, no-c-format
msgid "The <filename>Dockerfile</filename> example shown above performs the following operations during the <command>docker build</command> :"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:128
#, no-c-format
msgid "Updates the &slsa; repositories."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:133
#, no-c-format
msgid "Installs the desired version of the <literal>example</literal> package."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:138
#, no-c-format
msgid "Copies the application package to the image. The source RPM must be placed in the build context."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:144
#, no-c-format
msgid "Unpacks the application."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:149
#, no-c-format
msgid "The last two steps run the application after a container is started."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:155
#, no-c-format
msgid "After a successful build of the <literal>tux_application</literal> image, you can start a container based on the new image:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:160
#, no-c-format
msgid "&prompt.user;docker run -it --name application_instance tux_application:latest"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:162
#, no-c-format
msgid "You have created a container that runs a single instance of the application. Bear in mind that after closing the application, the &docker; container exits as well."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:170
#, no-c-format
msgid "Running Applications with Specific Configuration"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:172
#, no-c-format
msgid "You may need to run an application that is delivered in a standard package accessible through &slsa; repositories but you may need to use a different configuration or use specific environment variables. In case you would like to run several instances of the application with non-standard configuration, you can create an own image that will pass the custom configuration to the application."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:181
#, no-c-format
msgid "An example with the <emphasis>example</emphasis> application follows:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:185
#, no-c-format
msgid "FROM registry.suse.com/suse/sles12sp4\n"
      "RUN zypper ref &amp;&amp; zypper --non-interactive in example\n"
      "\n"
      "ENV BACKUP=/backup\n"
      "\n"
      "RUN mkdir -p $BACKUP\n"
      "COPY configuration_example /etc/example/\n"
      "\n"
      "ENTRYPOINT [\"/etc/bin/example\"]"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:195
#, no-c-format
msgid "The above example <filename>Dockerfile</filename> results in the following operations:"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:202
#, no-c-format
msgid "Refreshing of repositories and installation of the <emphasis>example</emphasis> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:208
#, no-c-format
msgid "Sets a <literal>BACKUP</literal> environment variable (the variable persists to containers started from the image). You can always overwrite the value of the variable with a new one while running the container by specifying a new value."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:216
#, no-c-format
msgid "Creates the directory <literal>/backup</literal> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:221
#, no-c-format
msgid "Copies the <filename>configuration_example</filename> to the image."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:226
#, no-c-format
msgid "Runs the <emphasis>example</emphasis> application."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:232
#, no-c-format
msgid "You can now build the image. After a successful build, you can run a container based on your image."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:238
#, no-c-format
msgid "Sharing Data Between an Application and the Host System"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:240
#, no-c-format
msgid "You may run an application that needs to share data between the application's container and the host file system. &deng; enables you to do data sharing by using volumes. You can declare a mount point directly in the <filename>Dockerfile</filename> . But you cannot specify a directory on the host system in the <filename>Dockerfile</filename> as the directory may not be accessible at the build time. You can find the mounted directory in the <literal>/var/lib/docker/volumes/</literal> directory on the host system."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:251
#, no-c-format
msgid "Discarding Changes to the Directory to Be Shared"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:252
#, no-c-format
msgid "After you declare a mount point by using the <literal>VOLUME</literal> instruction, all changes performed (by using the <literal>RUN</literal> instruction) to the directory will be discarded. After the declaration, the volume is part of a temporary container that is then removed after a successful build. For example, to change permissions, perform the change before you declare the directory as a mount point in the <filename>Dockerfile</filename> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:263
#, no-c-format
msgid "You can specify a particular mount point on the host system when running a container by using the <literal>-v</literal> option:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:268
#, no-c-format
msgid "&prompt.user;docker run -it --name testing -v /home/tux/data:/data sles12sp4:latest /bin/bash"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:271
#, no-c-format
msgid "Using the <literal>-v</literal> option overwrites the <literal>VOLUME</literal> instruction if you specify the same mount point in the container."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:278
#, no-c-format
msgid "Now create an example image with a Web server that will read Web content from the host's file system. The <filename>Dockerfile</filename> could look as follows:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:284
#, no-c-format
msgid "FROM registry.suse.com/suse/sles12sp4\n"
      "RUN zypper ref &amp;&amp; zypper --non-interactive in apache2\n"
      "COPY apache2 /etc/sysconfig/\n"
      "RUN chown -R admin /data\n"
      "EXPOSE 80\n"
      "VOLUME /data\n"
      "ENTRYPOINT [\"apache2ctl\"]"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:292
#, no-c-format
msgid "The example above installs the Apache Web server to the image and copies all configuration to the image. The <literal>data</literal> directory will be owned by the <emphasis>admin</emphasis> user and will be used as a mount point to store Web pages."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:300
#, no-c-format
msgid "Applications Running in the Background"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:302
#, no-c-format
msgid "Your application may need to run in the background as a daemon or as an application exposing ports for communication. In that case, the &docker; container can be run in the background."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:307
#, no-c-format
msgid "An example <filename>Dockerfile</filename> for an application exposing a port looks as follows:"
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:314
#, no-c-format
msgid "Building an Apache2 Web Server &docker; Container ( <filename>Dockerfile</filename> )"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:315
#, no-c-format
msgid "FROM registry.suse.com/suse/sle15 <co xml:id=\"co.dockerfile.apache2.from\"/>\n"
      "MAINTAINER &exampleuser_plain; <co xml:id=\"co.dockerfile.apache2.maintainer\"/>\n"
      "\n"
      "ADD etc/ /etc/zypp/ <co xml:id=\"co.dockerfile.apache2.repos_services\"/>\n"
      "RUN zypper refs &amp;&amp; zypper refresh <co xml:id=\"co.dockerfile.apache2.refresh\"/>\n"
      "RUN zypper --non-interactive in apache2 <co xml:id=\"co.dockerfile.apache2.install\"/>\n"
      "\n"
      "RUN echo \"The Web server is running\" &gt; /srv/www/htdocs/test.html <co xml:id=\"co.dockerfile.apache2.echo\"/>\n"
      "# COPY data/* /srv/www/htdocs/ <co xml:id=\"co.dockerfile.apache2.copy\"/>\n"
      "\n"
      "EXPOSE 80 <co xml:id=\"co.dockerfile.apache2.expose\"/>\n"
      "\n"
      "ENTRYPOINT [\"/usr/sbin/httpd\"]\n"
      "CMD [\"-D\", \"FOREGROUND\"]"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:331
#, no-c-format
msgid "Base image, taken from <xref linkend=\"Building_Pre-build_Images\"/> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:336
#, no-c-format
msgid "Maintainer of the image (optional)."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:341
#, no-c-format
msgid "The repositories and service files. These are copied to <filename>/etc/zypp/repos.d</filename> and <filename>/etc/zypp/services.d</filename> to make these files available on the host in the &docker; container too."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:349
#, no-c-format
msgid "Command to refresh repositories and services"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:354
#, no-c-format
msgid "Command to install Apache2."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:359
#, no-c-format
msgid "Test line for debugging purposes, can be removed if everything works as expected."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:365
#, no-c-format
msgid "The copy instruction to copy own data to the server's directory. The leading hash character ( <literal>#</literal> ) marks this line as a comment, so it is not executed."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:372
#, no-c-format
msgid "The exposed port for the Apache Web server."
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:380
#, no-c-format
msgid "Check for Running Apache2 Instances on the Host"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:381
#, no-c-format
msgid "Make sure there are no Apache2 server instances running on the host. Otherwise, the &docker; container will not serve any data. Remove or stop any Apache2 servers on your host."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:393
#, no-c-format
msgid "To use the container, proceed as follows:"
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:395
#, no-c-format
msgid "Testing the Apache2 Web Server"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:397
#, no-c-format
msgid "Prepare the host system for the build process:"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:400
#, no-c-format
msgid "Make sure the host system is subscribed to the <guimenu>Server Applications Module</guimenu> of &productname;. To see installed modules or install additional modules, open &yast; and select <guimenu>Add System Extensions or Modules</guimenu> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:408
#, no-c-format
msgid "Make sure the &sle; images from the &suse; Registry are installed, as described in <xref linkend=\"Building_Pre-build_Images\"/> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:414
#, no-c-format
msgid "Save the <filename>Dockerfile</filename> from <xref linkend=\"ex.docker.dockerfile.apache2\"/> into the <filename class=\"directory\">docker</filename> directory."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:421
#, no-c-format
msgid "Within the &docker; container, you need access to software repositories and services that are registered on the host. To make them available, copy repositories and service files from the host to the <filename class=\"directory\">docker/etc</filename> directory:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:427
#, no-c-format
msgid "&prompt.user;cd docker\n"
      "&prompt.user;mkdir etc\n"
      "&prompt.sudo;cp -a /etc/zypp/{repos.d,services.d} etc/"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:430
#, no-c-format
msgid "Instead of copying all repository and service files, you can also copy only the subset that is required by the &docker; container."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:439
#, no-c-format
msgid "Add Web site data (such as HTML files) into the <filename>docker/data</filename> directory. The contents of this directory are copied to the &docker; image and are thus published by the Web server."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:449
#, no-c-format
msgid "Build the container. Set a tag for your image with the <option>-t</option> option (here <literal>&exampleuser_plain;/apache2</literal> , but you can use any name you want):"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:454
#, no-c-format
msgid "&prompt.sudo;docker build -t &exampleuser_plain;/apache2 ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:455
#, no-c-format
msgid "&deng; will now execute the instructions provided in <filename>Dockerfile</filename> : It will take the base image, copy content, refresh repositories and install the Apache2, etc."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:462
#, no-c-format
msgid "Create a &docker; container instance from the &docker; image created in the previous step:"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:467
#, no-c-format
msgid "&deng; returns the container ID, for example:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:470
#, no-c-format
msgid "7bd674eb196d330d50f8a3cfc2bc61a243a4a535390767250b11a7886134ab93"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:473
#, no-c-format
msgid "Point a browser at <uri>http://localhost:80/test.html</uri> . You should see the message <literal>The Web server is running</literal> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:479
#, no-c-format
msgid "To see an overview of running containers, use:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:482
#, no-c-format
msgid "&prompt.user;docker ps --latest\n"
      "CONTAINER ID        IMAGE               COMMAND                  [...]\n"
      "<emphasis role=\"bold\">7bd674eb196d</emphasis>        tux/apache2         \"/usr/sbin/httpd -...\"   [...]"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:485
#, no-c-format
msgid "To stop and delete the &docker; container, use the following command:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:488
#, no-c-format
msgid "&prompt.user;docker rm --force 7bd674eb196d"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:491
#, no-c-format
msgid "The above procedure describes building an image containing the Apache2 Web server. You can use the resulting container to serve your data with the Apache2 Web server by following these steps:"
msgstr ""

#. Tag: title
#: docker_dockerizing_application.xml:497
#, no-c-format
msgid "Creating a &docker; Container with your Own Data"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:499
#, no-c-format
msgid "In <filename>Dockerfile</filename> :"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:504
#, no-c-format
msgid "Convert the line starting with <literal>RUN echo</literal> into a comment by adding a <literal>#</literal> character at its beginning ( <xref linkend=\"co.dockerfile.apache2.echo\"/> in <xref linkend=\"ex.docker.dockerfile.apache2\"/> )."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:513
#, no-c-format
msgid "Convert the line starting with <literal>COPY</literal> to a command by removing the leading <literal># </literal> in it ( <xref linkend=\"co.dockerfile.apache2.copy\"/> in <xref linkend=\"ex.docker.dockerfile.apache2\"/> )."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:523
#, no-c-format
msgid "Rebuild the image as described in <xref linkend=\"st.docker.apache2.build\"/> of <xref linkend=\"pro.docker.apache2\" xrefstyle=\"select:label\"/> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:529
#, no-c-format
msgid "Run the image in detached mode:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:530
#, no-c-format
msgid "&prompt.user;docker run --detach --interactive --tty &exampleuser_plain;/apache2"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:531
#, no-c-format
msgid "&deng; responds with the container ID, for example:"
msgstr ""

#. Tag: screen
#: docker_dockerizing_application.xml:532
#, no-c-format
msgid "e43fff4ae9832ecdb7677c058a73039d7610c32145a1d9b6ad0a4ed52b5c4dc7"
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:535
#, no-c-format
msgid "View the published data, point a browser at <uri>http://localhost:80/test.html</uri> ."
msgstr ""

#. Tag: para
#: docker_dockerizing_application.xml:539
#, no-c-format
msgid "To avoid copying Web site data into the &docker; container, share a directory of the host with the container. For information, see <link xlink:href=\"https://docs.docker.com/storage/volumes/\"/> ."
msgstr ""

