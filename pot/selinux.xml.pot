# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2021-11-09 11:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#: selinux.xml:18
#, no-c-format
msgid "In this chapter, you will learn how to set up and manage &selnx; on &productname;. The following topics are covered:"
msgstr ""

#. Tag: para
#: selinux.xml:24
#, no-c-format
msgid "Why Use &selnx;?"
msgstr ""

#. Tag: para
#: selinux.xml:29
#, no-c-format
msgid "Understanding &selnx;"
msgstr ""

#. Tag: para
#: selinux.xml:34
#, no-c-format
msgid "Setting Up &selnx;"
msgstr ""

#. Tag: title
#: selinux.xml:45
#, no-c-format
msgid "Why use &selnx;?"
msgstr ""

#. Tag: para
#: selinux.xml:47
#, no-c-format
msgid "&selnx; was developed as an additional Linux security solution that uses the security framework in the Linux kernel. The purpose was to allow for a more granular security policy that goes beyond the standard Discretionary Access Controls (DAC), the traditional file permissions of owner/group/world, and read/write/execute."
msgstr ""

#. Tag: para
#: selinux.xml:55
#, no-c-format
msgid "An example explains why a solution such as &selnx; (or its counterpart &aa;) is needed:"
msgstr ""

#. Tag: para
#: selinux.xml:60
#, no-c-format
msgid "<quote>One morning, I found out that my server was hacked. The server was running a fully patched &productname; installation. A firewall was configured on it and no unnecessary services were offered by this server. Further analysis revealed that the hacker had come in through a vulnerable PHP script that was a part of one of the Apache virtual hosts that were running on this server. The intruder had managed to get access to a shell, using the <systemitem class=\"username\">wwwrun</systemitem> account that was used by the Apache Web server. As this <systemitem class=\"username\">wwwrun</systemitem> user, the intruder had created several scripts in the <filename>/var/tmp</filename> and the <filename>/tmp</filename> directories, which were a part of a botnet that was launching a Distributed Denial of Service attack against several servers.</quote>"
msgstr ""

#. Tag: para
#: selinux.xml:76
#, no-c-format
msgid "The interesting thing about this hack is that it occurred on a server where nothing was really wrong. All file permissions were set correctly, but the intruder still managed to get into the system. This example demonstrates that in some cases additional security is needed."
msgstr ""

#. Tag: para
#: selinux.xml:90
#, no-c-format
msgid "&selnx; uses labels attached to objects (for example, files, binaries, and network sockets) and uses them to determine privilege boundaries, thereby building up a level of confinement that can span more than a process, or even the whole system."
msgstr ""

#. Tag: para
#: selinux.xml:108
#, no-c-format
msgid "&selnx; was developed in accordance with some certification standards like Common Criteria and FIPS 140."
msgstr ""

#. Tag: title
#: selinux.xml:131
#, no-c-format
msgid "Support status"
msgstr ""

#. Tag: para
#: selinux.xml:132
#, no-c-format
msgid "The &selnx; framework is supported on &productname; &productnumber;. &productnameshort; offers all binaries and libraries you need to use &selnx; on your server."
msgstr ""

#. Tag: para
#: selinux.xml:137
#, no-c-format
msgid "A policy is not included, and you must build your own. Third-party policies are not supported. See <xref linkend=\"sec-selinux-install\"/> and <xref linkend=\"sec-selinux-getpolicy\"/> for information on installing an &opensuse; policy for testing."
msgstr ""

#. Tag: title
#: selinux.xml:147
#, no-c-format
msgid "Understanding &selnx; components"
msgstr ""

#. Tag: para
#: selinux.xml:148
#, no-c-format
msgid "Before starting the configuration of &selnx;, you should know a bit about how &selnx; is organized. Three components play a role:"
msgstr ""

#. Tag: para
#: selinux.xml:154
#, no-c-format
msgid "The security framework in the Linux kernel"
msgstr ""

#. Tag: para
#: selinux.xml:159
#, no-c-format
msgid "The &selnx; libraries and binaries"
msgstr ""

#. Tag: para
#: selinux.xml:164
#, no-c-format
msgid "The &selnx; policy"
msgstr ""

#. Tag: para
#: selinux.xml:169
#, no-c-format
msgid "The default kernel of &productname; supports &selnx; and the tools that are needed to manage it. The most important part of the work of the administrator with regard to &selnx; is managing the policy."
msgstr ""

#. Tag: para
#: selinux.xml:174
#, no-c-format
msgid "In the &selnx; policy, security labels are applied to different objects on a Linux server. These objects typically are users, ports, processes, and files. Using these security labels, rules are created that define what is and what is not allowed on a server. By default, &selnx; denies everything, and by creating the appropriate rules you can allow the access that is strictly necessary. Rules should therefore exist for all programs that you want to use on a system."
msgstr ""

#. Tag: para
#: selinux.xml:183
#, no-c-format
msgid "Alternatively, you could configure parts of a system to run in unconfined mode, which means that specific ports, programs, users, files and directories are not protected by &selnx;. This mode is useful if you only want to use &selnx; to protect some essential services. However, this leaves your system incompletely protected, and it is better to apply &selnx; to the whole system."
msgstr ""

#. Tag: para
#: selinux.xml:191
#, no-c-format
msgid "To ensure the appropriate protection of your system, you need an &selnx; policy. This must be a tailor-made policy in which all files are provided with a label, and all services and users have a security label as well to express which files and directories can be accessed by which user and processes on the server. Developing such a policy is a tremendous amount of work."
msgstr ""

#. Tag: para
#: selinux.xml:208
#, no-c-format
msgid "Note that a freely available &selnx; policy might work on your server, but is unlikely to offer the same protection as a custom policy. &suse; does not support third-party policies."
msgstr ""

#. Tag: title
#: selinux.xml:217
#, no-c-format
msgid "&selnx; policy overview"
msgstr ""

#. Tag: para
#: selinux.xml:218
#, no-c-format
msgid "The policy is the key component in &selnx;. Your &selnx; policy defines rules that specify which objects can access which files, directories, ports, and processes on a system. To do this, a security context is defined for all of these. On an &selnx; system where the policy has been applied to label the file system, you can use the <command>ls -Z</command> command on any directory to find the security context for the files in that directory. <xref linkend=\"ex-selnx-con-set\" xrefstyle=\"select:label quotedtitle nopage\"/> shows the security context settings for the directories in the <filename>/</filename> directory of a &productname; system with an &selnx;-labeled file system."
msgstr ""

#. Tag: title
#: selinux.xml:233
#, no-c-format
msgid "Security context settings using <command>ls -Z</command>"
msgstr ""

#. Tag: screen
#: selinux.xml:234
#, no-c-format
msgid "&prompt.user;ls -Z /\n"
      "system_u:object_r:bin_t bin\n"
      "system_u:object_r:boot_t boot\n"
      "system_u:object_r:device_t dev\n"
      "system_u:object_r:etc_t etc\n"
      "system_u:object_r:home_root_t home\n"
      "system_u:object_r:lib_t lib\n"
      "system_u:object_r:lib_t lib64\n"
      "system_u:object_r:lost_found_t lost+found\n"
      "system_u:object_r:mnt_t media\n"
      "system_u:object_r:mnt_t mnt\n"
      "system_u:object_r:usr_t opt\n"
      "system_u:object_r:proc_t proc\n"
      "system_u:object_r:default_t root\n"
      "system_u:object_r:bin_t sbin\n"
      "system_u:object_r:security_t selinux\n"
      "system_u:object_r:var_t srv\n"
      "system_u:object_r:sysfs_t sys\n"
      "system_u:object_r:tmp_t tmp\n"
      "system_u:object_r:usr_t usr\n"
      "system_u:object_r:var_t var"
msgstr ""

#. Tag: para
#: selinux.xml:257
#, no-c-format
msgid "The most important line in the security context is the context type. This is the part of the security context that often ends in <literal>_t</literal> . It tells &selnx; which kind of access the object is allowed. In the policy, rules are specified to define which type of user or which type of role has access to which type of context. For example, this can happen by using a rule like the following:"
msgstr ""

#. Tag: screen
#: selinux.xml:267
#, no-c-format
msgid "allow user_t bin_t:file {read execute gettattr};"
msgstr ""

#. Tag: para
#: selinux.xml:269
#, no-c-format
msgid "This example rule states that the user who has the context type <systemitem class=\"username\">user_t</systemitem> (this user is called the source object) is allowed to access objects of class \"file\" with the context type <filename>bin_t</filename> (the target), using the permissions <literal>read</literal> , <literal>execute</literal> , and <literal>getattr</literal> ."
msgstr ""

#. Tag: para
#: selinux.xml:277
#, no-c-format
msgid "An &selnx; policy contains a huge number of rules. To make it more manageable, policies are often split into modules. This allows administrator to switch protection on or off for different parts of the system."
msgstr ""

#. Tag: para
#: selinux.xml:284
#, no-c-format
msgid "When compiling the policy for your system, you will have a choice to either work with a modular policy, or a monolithic policy, where one huge policy is used to protect everything on your system. It is strongly recommended to use a modular policy and not a monolithic policy. Modular policies are much easier to manage."
msgstr ""

#. Tag: title
#: selinux.xml:294
#, no-c-format
msgid "Installing &selnx; packages"
msgstr ""

#. Tag: para
#: selinux.xml:295
#, no-c-format
msgid "If you are installing &selnx; with Zypper, search for all of the relevant packages with the <command>--search-descriptions</command> option. You will see a list like the following example:"
msgstr ""

#. Tag: screen
#: selinux.xml:300
#, no-c-format
msgid "&prompt.user;<command>zypper se --search-descriptions selinux</command>\n"
      "libselinux-devel \n"
      "libselinux1 \n"
      "libselinux1-32bit\n"
      "libsemanage-devel\n"
      "libsemanage1 \n"
      "libsepol-devel \n"
      "libsepol1 \n"
      "mcstrans \n"
      "policycoreutils \n"
      "python3-policycoreutils\n"
      "python3-selinux \n"
      "python3-semanage\n"
      "python3-setools \n"
      "restorecond\n"
      "selinux-tools\n"
      "setools-console\n"
      "setools-devel \n"
      "setools-java\n"
      "setools-libs\n"
      "setools-tcl\n"
      "  "
msgstr ""

#. Tag: para
#: selinux.xml:322
#, no-c-format
msgid "It is not necessary to install of them. Install the following packages:"
msgstr ""

#. Tag: screen
#: selinux.xml:325
#, no-c-format
msgid "&prompt.sudo;<command>zypper in restorecond policycoreutils setools-console</command>"
msgstr ""

#. Tag: para
#: selinux.xml:326
#, no-c-format
msgid "If you prefer to use &yast;, search for \"selinux\" in the Software Management module, and install <package>restorecond</package> , <package>policycoreutils</package> , and <package>setools-console</package> ."
msgstr ""

#. Tag: para
#: selinux.xml:331
#, no-c-format
msgid "This does not install a policy. See <xref linkend=\"sec-selinux-getpolicy\"/> for information on installing an &opensuse; policy for testing."
msgstr ""

#. Tag: title
#: selinux.xml:339
#, no-c-format
msgid "Installing an &selnx; policy"
msgstr ""

#. Tag: para
#: selinux.xml:340
#, no-c-format
msgid "The policy is an essential component of &selnx;. &productname; &productnumber; does not include a default policy, and you must build a policy that is customized for your installation. &selnx; policies should be customized for your particular needs; consult your &suse; support engineer for assistance."
msgstr ""

#. Tag: para
#: selinux.xml:347
#, no-c-format
msgid "One way to get a policy to install and test is to download it from <link xlink:href=\"https://download.opensuse.org/repositories/security:/SELinux/\"/> . This provides repositories for &slea; and &opensuse;. Copy the repository link that matches your &slea; version, and add it with Zypper:"
msgstr ""

#. Tag: screen
#: selinux.xml:354
#, no-c-format
msgid "&prompt.sudo;<command>zypper ar -f https://download.opensuse.org/repositories/security:/SELinux/SLE_15_SP&product-sp;/ Security-SELinux</command>\n"
      "      "
msgstr ""

#. Tag: para
#: selinux.xml:356
#, no-c-format
msgid "If you prefer &yast;, use the Software Repositories module."
msgstr ""

#. Tag: para
#: selinux.xml:359
#, no-c-format
msgid "This repository provides a number of additional packages, including policies, such as:"
msgstr ""

#. Tag: screen
#: selinux.xml:363
#, no-c-format
msgid "\n"
      "selinux-autorelabel\n"
      "selinux-policy \n"
      "selinux-policy-devel\n"
      "selinux-policy-doc\n"
      "selinux-policy-minimum \n"
      "selinux-policy-mls\n"
      "selinux-policy-sandbox\n"
      "selinux-policy-targeted\n"
      "setools-gui\n"
      "setroubleshoot\n"
      "setroubleshoot-plugins\n"
      "setroubleshoot-server\n"
      ""
msgstr ""

#. Tag: para
#: selinux.xml:377
#, no-c-format
msgid "Install the following packages:"
msgstr ""

#. Tag: screen
#: selinux.xml:380
#, no-c-format
msgid "&prompt.sudo;<command>zypper in selinux-policy-targeted selinux-policy-devel selinux-autorelabel</command>"
msgstr ""

#. Tag: para
#: selinux.xml:381
#, no-c-format
msgid "The next step is to modify the &grub; bootloader, to permanently enable SELinux and set the SELinux mode. ( <xref linkend=\"sec-selinux-grub\"/> )."
msgstr ""

#. Tag: title
#: selinux.xml:389
#, no-c-format
msgid "Modifying the &grub; bootloader"
msgstr ""

#. Tag: para
#: selinux.xml:390
#, no-c-format
msgid "After installing the &selnx; packages, modify the &grub; boot loader, either by editing <filename>/etc/default/grub</filename> , or with &yast;."
msgstr ""

#. Tag: para
#: selinux.xml:395
#, no-c-format
msgid "In <filename>/etc/default/grub</filename> , add the following line to the <literal>GRUB_CMDLINE_LINUX_DEFAULT=</literal> line:"
msgstr ""

#. Tag: screen
#: selinux.xml:399
#, no-c-format
msgid "security=selinux selinux=1 enforcing=0"
msgstr ""

#. Tag: para
#: selinux.xml:400
#, no-c-format
msgid "Then run the <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> command to rebuild your &grub; configuration."
msgstr ""

#. Tag: para
#: selinux.xml:404
#, no-c-format
msgid "In &yast;, open <menuchoice> <guimenu>System</guimenu> <guimenu>Boot Loader</guimenu> <guimenu>Kernel Parameters</guimenu></menuchoice> . Add <literal>security=selinux selinux=1 enforcing=0</literal> to <guimenu>Optional Kernel Command Line Parameters</guimenu> ."
msgstr ""

#. Tag: para
#: selinux.xml:409
#, no-c-format
msgid "These options are used for the following purposes:"
msgstr ""

#. Tag: term
#: selinux.xml:415
#, no-c-format
msgid "<literal>security=selinux</literal>"
msgstr ""

#. Tag: para
#: selinux.xml:418
#, no-c-format
msgid "This option tells the kernel to use &selnx; and not &aa;"
msgstr ""

#. Tag: term
#: selinux.xml:424
#, no-c-format
msgid "<literal>selinux=1</literal>"
msgstr ""

#. Tag: para
#: selinux.xml:427
#, no-c-format
msgid "This option switches on &selnx;"
msgstr ""

#. Tag: term
#: selinux.xml:433
#, no-c-format
msgid "<literal>enforcing=0</literal>"
msgstr ""

#. Tag: para
#: selinux.xml:436
#, no-c-format
msgid "This option puts &selnx; in permissive mode. In this mode, &selnx; is fully functional, but does not enforce any of the security settings in the policy. Use this mode for testing and configuring your system. To switch on &selnx; protection, when the system is fully operational, change the option to <literal>enforcing=1</literal> and add <literal>SELINUX=enforcing</literal> in <filename>/etc/selinux/config</filename> ."
msgstr ""

#. Tag: para
#: selinux.xml:450
#, no-c-format
msgid "Now you can reboot. System startup will take some time, as &selnx; will re-label the entire file system. After it is finished, run the <command>sestatus -v</command> command to verify it is working. It should give you an output similar to <xref linkend=\"ex-selnx-sestatus\" xrefstyle=\"select:label quotedtitle nopage\"/> ."
msgstr ""

#. Tag: title
#: selinux.xml:459
#, no-c-format
msgid "Verifying that &selnx; is functional"
msgstr ""

#. Tag: screen
#: selinux.xml:460
#, no-c-format
msgid "&prompt.sudo;<command>sestatus -v</command>\n"
      "SELinux status:                 enabled\n"
      "SELinuxfs mount:                /selinux\n"
      "Current mode:                   permissive\n"
      "Mode from config file:          permissive\n"
      "Policy version:                 26\n"
      "Policy from config file:        minimum\n"
      "\n"
      "Process contexts:\n"
      "Current context:                root:staff_r:staff_t\n"
      "Init context:                   system_u:system_r:init_t\n"
      "/sbin/mingetty                  system_u:system_r:sysadm_t\n"
      "/usr/sbin/sshd                  system_u:system_r:sshd_t\n"
      "\n"
      "File contexts:\n"
      "Controlling term:               root:object_r:user_devpts_t\n"
      "/etc/passwd                     system_u:object_r:etc_t\n"
      "/etc/shadow                     system_u:object_r:shadow_t\n"
      "/bin/bash                       system_u:object_r:shell_exec_t\n"
      "/bin/login                      system_u:object_r:login_exec_t\n"
      "/bin/sh                         system_u:object_r:bin_t -&gt; system_u:object_r:shell_exec_t\n"
      "/sbin/agetty                    system_u:object_r:getty_exec_t\n"
      "/sbin/init                      system_u:object_r:init_exec_t\n"
      "/sbin/mingetty                  system_u:object_r:getty_exec_t\n"
      "/usr/sbin/sshd                  system_u:object_r:sshd_exec_t\n"
      "/lib/libc.so.6                  system_u:object_r:lib_t -&gt; system_u:object_r:lib_t\n"
      "/lib/ld-linux.so.2              system_u:object_r:lib_t -&gt; system_u:object_r:ld_so_t"
msgstr ""

#. Tag: title
#: selinux.xml:491
#, no-c-format
msgid "Configuring &selnx;"
msgstr ""

#. Tag: para
#: selinux.xml:492
#, no-c-format
msgid "At this point you have a completely functional &selnx; system and it is time to further configure it. In the current status, &selnx; is operational but not in enforcing mode. This means that it does not limit any activities, and it logs everything that it should be doing if it were in enforcing mode. Review the log files to learn what activities are not allowed. As a first test, put &selnx; in enforcing mode and find out if you can still use your server after doing so: check that the option <option>enforcing=1</option> is set in the &grub; configuration file, while <option>SELINUX=enforcing</option> is set in <filename>/etc/selinux/config</filename> . Reboot your server and see if it still comes up the way you expect it to. If it does, leave it like that and start modifying the server in a way that everything works as expected. However, you may not even be able to boot the server properly. In that case, switch back to the mode where &selnx; is not enforcing and start tuning your server."
msgstr ""

#. Tag: para
#: selinux.xml:510
#, no-c-format
msgid "Before you start tuning your server, verify the &selnx; installation. You have already used the command <command>sestatus -v</command> to view the current mode, process, and file contexts. Next, run"
msgstr ""

#. Tag: para
#: selinux.xml:516
#, no-c-format
msgid "which lists all Boolean switches that are available, and at the same time verifies that you can access the policy. <xref linkend=\"ex-selnx-ls-bool\"/> shows part of the output of this command."
msgstr ""

#. Tag: title
#: selinux.xml:523
#, no-c-format
msgid "Getting a list of booleans and verifying policy access"
msgstr ""

#. Tag: screen
#: selinux.xml:524
#, no-c-format
msgid "&prompt.sudo;<command>semanage boolean -l</command>\n"
      "SELinux boolean                          Description\n"
      "ftp_home_dir                   -&gt; off   ftp_home_dir\n"
      "mozilla_read_content           -&gt; off   mozilla_read_content\n"
      "spamassassin_can_network       -&gt; off   spamassassin_can_network\n"
      "httpd_can_network_relay        -&gt; off   httpd_can_network_relay\n"
      "openvpn_enable_homedirs        -&gt; off   openvpn_enable_homedirs\n"
      "gpg_agent_env_file             -&gt; off   gpg_agent_env_file\n"
      "allow_httpd_awstats_script_anon_write -&gt; off   allow_httpd_awstats_script_anon_write\n"
      "httpd_can_network_connect_db   -&gt; off   httpd_can_network_connect_db\n"
      "allow_ftpd_full_access         -&gt; off   allow_ftpd_full_access\n"
      "samba_domain_controller        -&gt; off   samba_domain_controller\n"
      "httpd_enable_cgi               -&gt; off   httpd_enable_cgi\n"
      "virt_use_nfs                   -&gt; off   virt_use_nfs"
msgstr ""

#. Tag: para
#: selinux.xml:538
#, no-c-format
msgid "Another command that outputs useful information at this stage is"
msgstr ""

#. Tag: para
#: selinux.xml:542
#, no-c-format
msgid "It shows the default file context settings as provided by the policy (see <xref linkend=\"ex-selnx-fcon\" xrefstyle=\"select:label quotedtitle nopage\"/> for partial output of this command)."
msgstr ""

#. Tag: title
#: selinux.xml:550
#, no-c-format
msgid "Getting file context information"
msgstr ""

#. Tag: screen
#: selinux.xml:551
#, no-c-format
msgid "&prompt.sudo;<command>semanage fcontext -l</command>\n"
      "/var/run/usb(/.*)?                                 all files          system_u:object_r:hotplug_var_run_t\n"
      "/var/run/utmp                                      regular file       system_u:object_r:initrc_var_run_t\n"
      "/var/run/vbe.*                                     regular file       system_u:object_r:hald_var_run_t\n"
      "/var/run/vmnat.*                                   socket             system_u:object_r:vmware_var_run_t\n"
      "/var/run/vmware.*                                  all files          system_u:object_r:vmware_var_run_t\n"
      "/var/run/watchdog\\.pid                             regular file       system_u:object_r:watchdog_var_run_t\n"
      "/var/run/winbindd(/.*)?                            all files          system_u:object_r:winbind_var_run_t\n"
      "/var/run/wnn-unix(/.*)                             all files          system_u:object_r:canna_var_run_t\n"
      "/var/run/wpa_supplicant(/.*)?                      all files          system_u:object_r:NetworkManager_var_run_t\n"
      "/var/run/wpa_supplicant-global                     socket             system_u:object_r:NetworkManager_var_run_t\n"
      "/var/run/xdmctl(/.*)?                              all files          system_u:object_r:xdm_var_run_t\n"
      "/var/run/yiff-[0-9]+\\.pid                          regular file       system_u:object_r:soundd_var_run_t"
msgstr ""

#. Tag: title
#: selinux.xml:567
#, no-c-format
msgid "Managing &selnx;"
msgstr ""

#. Tag: para
#: selinux.xml:569
#, no-c-format
msgid "The base &selnx; configuration is now operational and it can now be configured to secure your server. In &selnx;, an additional set of rules is used to define exactly which process or user can access which files, directories, or ports. To do this, &selnx; applies a context to every file, directory, process, and port. This context is a security label that defines how this file, directory, process, or port should be treated. These context labels are used by the &selnx; policy, which defines exactly what should be done with the context labels. By default, the policy blocks all non-default access, which means that, as an administrator, you need to enable all features that are non-default on your server."
msgstr ""

#. Tag: title
#: selinux.xml:584
#, no-c-format
msgid "Viewing the security context"
msgstr ""

#. Tag: para
#: selinux.xml:585
#, no-c-format
msgid "As already mentioned, files, directories, and ports can be labeled. Within each label, different contexts are used. To be able to perform your daily administration work, the type context is what you are most interested in. As an administrator, you will mostly work with the type context. Many commands allow you to use the <option>-Z</option> option to list current context settings. In <xref linkend=\"ex-selnx-def-con\" xrefstyle=\"select:label quotedtitle nopage\"/> you can see what the context settings are for the directories in the root directory."
msgstr ""

#. Tag: title
#: selinux.xml:597
#, no-c-format
msgid "The default context for directories in the root directory"
msgstr ""

#. Tag: screen
#: selinux.xml:598
#, no-c-format
msgid "&prompt.sudo;<command>ls -Z</command>\n"
      "dr-xr-xr-x. root root system_u:object_r:bin_t:s0       bin\n"
      "dr-xr-xr-x. root root system_u:object_r:boot_t:s0      boot\n"
      "drwxr-xr-x. root root system_u:object_r:cgroup_t:s0    cgroup\n"
      "drwxr-xr-x+ root root unconfined_u:object_r:default_t:s0 data\n"
      "drwxr-xr-x. root root system_u:object_r:device_t:s0    dev\n"
      "drwxr-xr-x. root root system_u:object_r:etc_t:s0       etc\n"
      "drwxr-xr-x. root root system_u:object_r:home_root_t:s0 home\n"
      "dr-xr-xr-x. root root system_u:object_r:lib_t:s0       lib\n"
      "dr-xr-xr-x. root root system_u:object_r:lib_t:s0       lib64\n"
      "drwx------. root root system_u:object_r:lost_found_t:s0 lost+found\n"
      "drwxr-xr-x. root root system_u:object_r:mnt_t:s0       media\n"
      "drwxr-xr-x. root root system_u:object_r:autofs_t:s0    misc\n"
      "drwxr-xr-x. root root system_u:object_r:mnt_t:s0       mnt\n"
      "drwxr-xr-x. root root unconfined_u:object_r:default_t:s0 mnt2\n"
      "drwxr-xr-x. root root unconfined_u:object_r:default_t:s0 mounts\n"
      "drwxr-xr-x. root root system_u:object_r:autofs_t:s0    net\n"
      "drwxr-xr-x. root root system_u:object_r:usr_t:s0       opt\n"
      "dr-xr-xr-x. root root system_u:object_r:proc_t:s0      proc\n"
      "drwxr-xr-x. root root unconfined_u:object_r:default_t:s0 repo\n"
      "dr-xr-x---. root root system_u:object_r:admin_home_t:s0 root\n"
      "dr-xr-xr-x. root root system_u:object_r:bin_t:s0       sbin\n"
      "drwxr-xr-x. root root system_u:object_r:security_t:s0  selinux\n"
      "drwxr-xr-x. root root system_u:object_r:var_t:s0       srv\n"
      "-rw-r--r--. root root unconfined_u:object_r:swapfile_t:s0 swapfile\n"
      "drwxr-xr-x. root root system_u:object_r:sysfs_t:s0     sys\n"
      "drwxrwxrwt. root root system_u:object_r:tmp_t:s0       tmp\n"
      "-rw-r--r--. root root unconfined_u:object_r:etc_runtime_t:s0 tmp2.tar\n"
      "-rw-r--r--. root root unconfined_u:object_r:etc_runtime_t:s0 tmp.tar\n"
      "drwxr-xr-x. root root system_u:object_r:usr_t:s0       usr\n"
      "drwxr-xr-x. root root system_u:object_r:var_t:s0       var"
msgstr ""

#. Tag: para
#: selinux.xml:630
#, no-c-format
msgid "In the listing above, you can see the complete context for all directories. It consists of a user, a role, and a type. The s0 setting indicates the security level in Multi Level Security environments. These environments are not discussed here. In such an environment, make sure that s0 is set. The Context Type defines what kind of activity is permitted in the directory. Compare, for example, the <filename>/root</filename> directory, which has the <filename>admin_home_t</filename> context type, and the <filename>/home</filename> directory, which has the <filename>home_root_t</filename> context type. In the &selnx; policy, different kinds of access are defined for these context types."
msgstr ""

#. Tag: para
#: selinux.xml:643
#, no-c-format
msgid "Security labels are not only associated with files, but also with other items, such as ports and processes. In <xref linkend=\"ex-selnx-set-proc\" xrefstyle=\"select:label quotedtitle nopage\"/> for example you can see the context settings for processes on your server."
msgstr ""

#. Tag: title
#: selinux.xml:651
#, no-c-format
msgid "Showing &selnx; settings for processes with <command>ps Zaux</command>"
msgstr ""

#. Tag: screen
#: selinux.xml:652
#, no-c-format
msgid "&prompt.sudo;<command>ps Zaux</command>\n"
      "LABEL                           USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n"
      "system_u:system_r:init_t        root         1  0.0  0.0  10640   808 ?        Ss   05:31   0:00 init [5]\n"
      "system_u:system_r:kernel_t      root         2  0.0  0.0      0     0 ?        S    05:31   0:00 [kthreadd]\n"
      "system_u:system_r:kernel_t      root         3  0.0  0.0      0     0 ?        S    05:31   0:00 [ksoftirqd/0]\n"
      "system_u:system_r:kernel_t      root         6  0.0  0.0      0     0 ?        S    05:31   0:00 [migration/0]\n"
      "system_u:system_r:kernel_t      root         7  0.0  0.0      0     0 ?        S    05:31   0:00 [watchdog/0]\n"
      "system_u:system_r:sysadm_t      root      2344  0.0  0.0  27640   852 ?        Ss   05:32   0:00 /usr/sbin/mcelog --daemon --config-file /etc/mcelog/mcelog.conf\n"
      "system_u:system_r:sshd_t        root      3245  0.0  0.0  69300  1492 ?        Ss   05:32   0:00 /usr/sbin/sshd -o PidFile=/var/run/sshd.init.pid\n"
      "system_u:system_r:cupsd_t       root      3265  0.0  0.0  68176  2852 ?        Ss   05:32   0:00 /usr/sbin/cupsd\n"
      "system_u:system_r:nscd_t        root      3267  0.0  0.0 772876  1380 ?        Ssl  05:32   0:00 /usr/sbin/nscd\n"
      "system_u:system_r:postfix_master_t root   3334  0.0  0.0  38320  2424 ?        Ss   05:32   0:00 /usr/lib/postfix/master\n"
      "system_u:system_r:postfix_qmgr_t postfix  3358  0.0  0.0  40216  2252 ?        S    05:32   0:00 qmgr -l -t fifo -u\n"
      "system_u:system_r:crond_t       root      3415  0.0  0.0  14900   800 ?        Ss   05:32   0:00 /usr/sbin/cron\n"
      "system_u:system_r:fsdaemon_t    root      3437  0.0  0.0  16468  1040 ?        S    05:32   0:00 /usr/sbin/smartd\n"
      "system_u:system_r:sysadm_t      root      3441  0.0  0.0  66916  2152 ?        Ss   05:32   0:00 login -- root\n"
      "system_u:system_r:sysadm_t      root      3442  0.0  0.0   4596   800 tty2     Ss+  05:32   0:00 /sbin/mingetty tty2"
msgstr ""

#. Tag: title
#: selinux.xml:673
#, no-c-format
msgid "Selecting the &selnx; mode"
msgstr ""

#. Tag: para
#: selinux.xml:674
#, no-c-format
msgid "In &selnx;, three different modes can be used:"
msgstr ""

#. Tag: term
#: selinux.xml:679
#, no-c-format
msgid "Enforcing:"
msgstr ""

#. Tag: para
#: selinux.xml:681
#, no-c-format
msgid "This is the default mode. &selnx; protects your server according to the rules in the policy, and &selnx; logs all of its activity to the audit log."
msgstr ""

#. Tag: term
#: selinux.xml:689
#, no-c-format
msgid "Permissive:"
msgstr ""

#. Tag: para
#: selinux.xml:691
#, no-c-format
msgid "This mode is useful for troubleshooting. If set to Permissive, &selnx; does not protect your server, but it still logs everything that happens to the log files."
msgstr ""

#. Tag: term
#: selinux.xml:699
#, no-c-format
msgid "Disabled:"
msgstr ""

#. Tag: para
#: selinux.xml:701
#, no-c-format
msgid "In this mode, &selnx; is switched off completely and no logging occurs. The file system labels however are not removed from the file system."
msgstr ""

#. Tag: para
#: selinux.xml:709
#, no-c-format
msgid "You have already read how you can set the current &selnx; mode from &grub; while booting using the enforcing boot parameter."
msgstr ""

#. Tag: title
#: selinux.xml:716
#, no-c-format
msgid "Modifying &selnx; context types"
msgstr ""

#. Tag: para
#: selinux.xml:717
#, no-c-format
msgid "An important part of the work of an administrator is setting context types on files to ensure appropriate working of &selnx;."
msgstr ""

#. Tag: para
#: selinux.xml:721
#, no-c-format
msgid "If a file is created within a specific directory, it inherits the context type of the parent directory by default. If, however, a file is moved from one location to another location, it retains the context type that it had in the old location."
msgstr ""

#. Tag: para
#: selinux.xml:727
#, no-c-format
msgid "To set the context type for files, you can use the <command>semanage fcontext</command> command. With this command, you write the new context type to the policy, but it does not change the actual context type immediately! To apply the context types that are in the policy, you need to run the <command>restorecon</command> command afterward."
msgstr ""

#. Tag: para
#: selinux.xml:734
#, no-c-format
msgid "The challenge when working with <command>semanage fcontext</command> is to find out which context you actually need. You can use"
msgstr ""

#. Tag: screen
#: selinux.xml:738
#, no-c-format
msgid "&prompt.sudo;<command>semanage fcontext -l</command>"
msgstr ""

#. Tag: para
#: selinux.xml:739
#, no-c-format
msgid "to list all contexts in the policy, but it may be a bit hard to find out the actual context you need from that list as it is rather long (see <xref linkend=\"ex-selnx-semanage\" xrefstyle=\"select:label quotedtitle nopage\"/> )."
msgstr ""

#. Tag: title
#: selinux.xml:746
#, no-c-format
msgid "Viewing default file contexts"
msgstr ""

#. Tag: screen
#: selinux.xml:747
#, no-c-format
msgid "&prompt.sudo;<command>semanage fcontext -l | less</command>\n"
      "&selnx; fcontext                                   type               Context\n"
      "\n"
      "/                                                  directory          system_u:object_r:root_t:s0\n"
      "/.*                                                all files          system_u:object_r:default_t:s0\n"
      "/[^/]+                                             regular file       system_u:object_r:etc_runtime_t:s0\n"
      "/\\.autofsck                                        regular file       system_u:object_r:etc_runtime_t:s0\n"
      "/\\.autorelabel                                     regular file       system_u:object_r:etc_runtime_t:s0\n"
      "/\\.journal                                         all files          X:&gt;&gt;None&gt;&gt;\n"
      "/\\.suspended                                       regular file       system_u:object_r:etc_runtime_t:s0\n"
      "/a?quota\\.(user|group)                             regular file       system_u:object_r:quota_db_t:s0\n"
      "/afs                                               directory          system_u:object_r:mnt_t:s0\n"
      "/bin                                               directory          system_u:object_r:bin_t:s0\n"
      "/bin/.*                                            all files          system_u:object_r:bin_t:s0"
msgstr ""

#. Tag: para
#: selinux.xml:762
#, no-c-format
msgid "There are three ways to find out which context settings are available for your services:"
msgstr ""

#. Tag: para
#: selinux.xml:768
#, no-c-format
msgid "Install the service and look at the default context settings that are used. This is the easiest and recommended option."
msgstr ""

#. Tag: para
#: selinux.xml:774
#, no-c-format
msgid "Consult the man page for the specific service. Some services have a man page that ends in <literal>_selinux</literal> , which contains all the information you need to find the correct context settings."
msgstr ""

#. Tag: para
#: selinux.xml:779
#, no-c-format
msgid "When you have found the right context setting, apply it using <command>semanage fcontext</command> . This command takes <option>-t</option> context type as its first argument, followed by the name of the directory or file to which you want to apply the context settings. To apply the context to everything that already exists in the directory where you want to apply the context, you add the regular expression <literal>(/.*)?</literal> to the name of the directory. This means: optionally, match a slash followed by any character. The examples section of the <command>semanage</command> man page has some useful usage examples for <command>semanage</command> . For more information on regular expressions, see for example the tutorial at <link xlink:href=\"http://www.regular-expressions.info/\"/> ."
msgstr ""

#. Tag: para
#: selinux.xml:795
#, no-c-format
msgid "Display a list of all context types that are available on your system:"
msgstr ""

#. Tag: screen
#: selinux.xml:798
#, no-c-format
msgid "&prompt.sudo;<command>seinfo -t</command>"
msgstr ""

#. Tag: para
#: selinux.xml:799
#, no-c-format
msgid "Since the command by itself outputs an overwhelming amount of information, it should be used in combination with <command>grep</command> or a similar command for filtering."
msgstr ""

#. Tag: title
#: selinux.xml:809
#, no-c-format
msgid "Applying file contexts"
msgstr ""

#. Tag: para
#: selinux.xml:810
#, no-c-format
msgid "To help you apply the &selnx; context properly, the following procedure shows how to set a context using <command>semanage fcontext</command> and <command>restorecon</command> . You will notice that at first attempt, the Web server with a non-default document root does not work. After changing the &selnx; context, it will:"
msgstr ""

#. Tag: para
#: selinux.xml:818
#, no-c-format
msgid "Create the <filename>/web</filename> directory and then change to it:"
msgstr ""

#. Tag: screen
#: selinux.xml:821
#, no-c-format
msgid "&prompt.sudo;<command>mkdir /web  &amp;&amp; cd /web</command>"
msgstr ""

#. Tag: para
#: selinux.xml:824
#, no-c-format
msgid "Use a text editor to create the file <filename>/web/index.html</filename> that contains the text welcome to my Web site."
msgstr ""

#. Tag: para
#: selinux.xml:831
#, no-c-format
msgid "Open the file <filename>/etc/apache2/default-server.conf</filename> with an editor, and change the DocumentRoot line to <literal>DocumentRoot /web</literal>"
msgstr ""

#. Tag: para
#: selinux.xml:838
#, no-c-format
msgid "Start the Apache Web server:"
msgstr ""

#. Tag: screen
#: selinux.xml:841
#, no-c-format
msgid "&prompt.sudo;<command>systemctl start apache2</command>"
msgstr ""

#. Tag: para
#: selinux.xml:844
#, no-c-format
msgid "Open a session to your local Web server:"
msgstr ""

#. Tag: screen
#: selinux.xml:847
#, no-c-format
msgid "&prompt.user;<command>w3m localhost</command>"
msgstr ""

#. Tag: para
#: selinux.xml:848
#, no-c-format
msgid "You will receive a <emphasis>Connection refused</emphasis> message. Press <keycap function=\"enter\"/> , and then <command>q</command> to quit w3m."
msgstr ""

#. Tag: para
#: selinux.xml:855
#, no-c-format
msgid "Find the current context type for the default Apache <literal>DocumentRoot</literal> , which is <filename>/srv/www/htdocs</filename> . It should be set to <filename>httpd_sys_content_t</filename> :"
msgstr ""

#. Tag: screen
#: selinux.xml:861
#, no-c-format
msgid "&prompt.sudo;<command>ls -Z /srv/www</command>"
msgstr ""

#. Tag: para
#: selinux.xml:864
#, no-c-format
msgid "Set the new context in the policy and press <keycap function=\"enter\"/> :"
msgstr ""

#. Tag: screen
#: selinux.xml:868
#, no-c-format
msgid "&prompt.sudo;<command>semanage fcontext -a -f \"\" -t httpd_sys_content_t '/web(/.*) ?'</command>"
msgstr ""

#. Tag: para
#: selinux.xml:871
#, no-c-format
msgid "Apply the new context type:"
msgstr ""

#. Tag: screen
#: selinux.xml:874
#, no-c-format
msgid "&prompt.sudo;<command>restorecon /web</command>"
msgstr ""

#. Tag: para
#: selinux.xml:877
#, no-c-format
msgid "Show the context of the files in the directory <filename>/web</filename> . You will see that the new context type has been set properly to the <filename>/web</filename> directory, but not to its contents."
msgstr ""

#. Tag: screen
#: selinux.xml:883
#, no-c-format
msgid "&prompt.sudo;<command>ls -Z /web</command>"
msgstr ""

#. Tag: para
#: selinux.xml:886
#, no-c-format
msgid "Apply the new context recursively to the <filename>/web</filename> directory. The type context has now been set correctly."
msgstr ""

#. Tag: screen
#: selinux.xml:890
#, no-c-format
msgid "&prompt.sudo;<command>restorecon -R /web</command>"
msgstr ""

#. Tag: para
#: selinux.xml:893
#, no-c-format
msgid "Restart the Web server:"
msgstr ""

#. Tag: screen
#: selinux.xml:896
#, no-c-format
msgid "&prompt.sudo;<command>systemctl restart apache2</command>"
msgstr ""

#. Tag: para
#: selinux.xml:897
#, no-c-format
msgid "You should now be able to access the contents of the <filename>/web</filename> directory."
msgstr ""

#. Tag: title
#: selinux.xml:906
#, no-c-format
msgid "Configuring &selnx; policies"
msgstr ""

#. Tag: para
#: selinux.xml:907
#, no-c-format
msgid "The easiest way to change the behavior of the policy is by working with Booleans. These are on-off switches that you can use to change the settings in the policy. To find out which Booleans are available, run"
msgstr ""

#. Tag: screen
#: selinux.xml:912
#, no-c-format
msgid "&prompt.sudo;<command>semanage boolean -l</command>"
msgstr ""

#. Tag: para
#: selinux.xml:913
#, no-c-format
msgid "It will show a long list of Booleans, with a short description of what each of these Booleans will do for you. When you have found the Boolean you want to set, you can use <command>setsebool -P</command> , followed by the name of the Boolean that you want to change. It is important to use the <option>-P</option> option at all times when using <command>setsebool</command> . This option writes the setting to the policy file on disk, and this is the only way to make sure that the Boolean is applied automatically after a reboot."
msgstr ""

#. Tag: para
#: selinux.xml:923
#, no-c-format
msgid "The procedure below gives an example of changing Boolean settings"
msgstr ""

#. Tag: para
#: selinux.xml:928
#, no-c-format
msgid "List Booleans that are related to FTP servers."
msgstr ""

#. Tag: screen
#: selinux.xml:930
#, no-c-format
msgid "&prompt.sudo;<command>semanage boolean -l | grep ftp</command>"
msgstr ""

#. Tag: para
#: selinux.xml:933
#, no-c-format
msgid "Turn the Boolean off:"
msgstr ""

#. Tag: screen
#: selinux.xml:936
#, no-c-format
msgid "&prompt.sudo;<command>setsebool allow_ftpd_anon_write off</command>"
msgstr ""

#. Tag: para
#: selinux.xml:937
#, no-c-format
msgid "Note that it does not take much time to write the change. Then verify that the Boolean is indeed turned off:"
msgstr ""

#. Tag: screen
#: selinux.xml:940
#, no-c-format
msgid "&prompt.sudo;<command>semanage boolean -l|grep ftpd_anon</command>"
msgstr ""

#. Tag: para
#: selinux.xml:943
#, no-c-format
msgid "Reboot your server."
msgstr ""

#. Tag: para
#: selinux.xml:948
#, no-c-format
msgid "Check again to see if the <literal>allow_ftpd_anon_write</literal> Boolean is still turned on. As it has not yet been written to the policy, you will notice that it is off."
msgstr ""

#. Tag: para
#: selinux.xml:955
#, no-c-format
msgid "Switch the Boolean and write the setting to the policy:"
msgstr ""

#. Tag: screen
#: selinux.xml:958
#, no-c-format
msgid "&prompt.sudo;<command>setsebool -P allow_ftpd_anon_write</command>"
msgstr ""

#. Tag: title
#: selinux.xml:964
#, no-c-format
msgid "Working with &selnx; modules"
msgstr ""

#. Tag: para
#: selinux.xml:965
#, no-c-format
msgid "By default, &selnx; uses a modular policy. This means that the policy that implements &selnx; features is not just one huge policy, but it consists of many smaller modules. Each module covers a specific part of the &selnx; configuration. The concept of the &selnx; module was introduced to make it easier for third party vendors to make their services compatible with &selnx;. To get an overview of the &selnx; modules, you can use the <command>semodule -l</command> command. This command lists all current modules in use by &selnx; and their version numbers."
msgstr ""

#. Tag: para
#: selinux.xml:976
#, no-c-format
msgid "As an administrator, you can switch modules on or off. This can be useful if you want to disable only a part of &selnx; and not everything to run a specific service without &selnx; protection. Especially in the case of &productname;, where there is not a completely supported &selnx; policy yet, it can make sense to switch off all modules that you do not need so that you can focus on the services that really do need &selnx; protection. To switch off an &selnx; module, use"
msgstr ""

#. Tag: screen
#: selinux.xml:985
#, no-c-format
msgid "&prompt.sudo;<command>semodule -d <replaceable>MODULENAME</replaceable></command>"
msgstr ""

#. Tag: para
#: selinux.xml:986
#, no-c-format
msgid "To switch it on again, you can use"
msgstr ""

#. Tag: screen
#: selinux.xml:989
#, no-c-format
msgid "&prompt.sudo;<command>semodule -e modulename</command>"
msgstr ""

#. Tag: title
#: selinux.xml:1087
#, no-c-format
msgid "Troubleshooting"
msgstr ""

#. Tag: para
#: selinux.xml:1089
#, no-c-format
msgid "By default, if &selnx; is the reason something is not working, a log message to this effect is sent to the <filename>/var/log/audit/audit.log</filename> file. That is, if the auditd service is running. If you see an empty <filename>/var/log/audit</filename> , start the auditd service using"
msgstr ""

#. Tag: screen
#: selinux.xml:1097
#, no-c-format
msgid "&prompt.sudo;<command>systemctl start auditd</command>"
msgstr ""

#. Tag: para
#: selinux.xml:1099
#, no-c-format
msgid "and enable it in the targets of your system, using"
msgstr ""

#. Tag: screen
#: selinux.xml:1103
#, no-c-format
msgid "&prompt.sudo;<command>systemctl enable auditd</command>"
msgstr ""

#. Tag: para
#: selinux.xml:1105
#, no-c-format
msgid "In <xref linkend=\"ex-selnx-li-auditlog\" xrefstyle=\"select:label quotedtitle nopage\"/> you can see a partial example of the contents of <filename>/var/log/audit/audit.log</filename>"
msgstr ""

#. Tag: title
#: selinux.xml:1113
#, no-c-format
msgid "Example lines from <filename>/etc/audit/audit.log</filename>"
msgstr ""

#. Tag: screen
#: selinux.xml:1114
#, no-c-format
msgid "type=DAEMON_START msg=audit(1348173810.874:6248): auditd start, ver=1.7.7 format=raw kernel=3.0.13-0.27-default auid=0 pid=4235 subj=system_u:system_r:auditd_t res=success\n"
      "type=AVC msg=audit(1348173901.081:292): avc:  denied  { write } for  pid=3426 comm=\"smartd\" name=\"smartmontools\" dev=sda6 ino=581743 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=dir\n"
      "type=AVC msg=audit(1348173901.081:293): avc:  denied  { remove_name } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state~\" dev=sda6 ino=582390 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=dir\n"
      "type=AVC msg=audit(1348173901.081:294): avc:  denied  { unlink } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state~\" dev=sda6 ino=582390 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=file\n"
      "type=AVC msg=audit(1348173901.081:295): avc:  denied  { rename } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state\" dev=sda6 ino=582373 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=file\n"
      "type=AVC msg=audit(1348173901.081:296): avc:  denied  { add_name } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state~\" scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=dir\n"
      "type=AVC msg=audit(1348173901.081:297): avc:  denied  { create } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state\" scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=file\n"
      "type=AVC msg=audit(1348173901.081:298): avc:  denied  { write open } for  pid=3426 comm=\"smartd\" name=\"smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state\" dev=sda6 ino=582390 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=file\n"
      "type=AVC msg=audit(1348173901.081:299): avc:  denied  { getattr } for  pid=3426 comm=\"smartd\" path=\"/var/lib/smartmontools/smartd.WDC_WD2500BEKT_75PVMT0-WD_WXC1A21E0454.ata.state\" dev=sda6 ino=582390 scontext=system_u:system_r:fsdaemon_t tcontext=system_u:object_r:var_lib_t tclass=file\n"
      "type=AVC msg=audit(1348173901.309:300): avc:  denied  { append } for  pid=1316"
msgstr ""

#. Tag: para
#: selinux.xml:1126
#, no-c-format
msgid "At first look, the lines in <filename>audit.log</filename> are a bit hard to read. However, on closer examination they are not that hard to understand. Every line can be broken down into sections. For example, the sections in the last line are:"
msgstr ""

#. Tag: term
#: selinux.xml:1135
#, no-c-format
msgid "<literal>type=AVC</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1137
#, no-c-format
msgid "every &selnx;-related audit log line starts with the type identification <literal>type=AVC</literal>"
msgstr ""

#. Tag: term
#: selinux.xml:1144
#, no-c-format
msgid "<literal>msg=audit(1348173901.309:300)</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1146
#, no-c-format
msgid "This is the time stamp, which unfortunately is written in epoch time, the number of seconds that have passed since Jan 1, 1970. You can use <command>date -d</command> on the part up to the dot in the epoch time notation to find out when the event has happened:"
msgstr ""

#. Tag: screen
#: selinux.xml:1152
#, no-c-format
msgid "&prompt.user;<command>date -d @1348173901</command>\n"
      "Thu Sep 20 16:45:01 EDT 2012"
msgstr ""

#. Tag: term
#: selinux.xml:1157
#, no-c-format
msgid "<literal>avc: denied { append }</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1159
#, no-c-format
msgid "the specific action that was denied. In this case the system has denied the appending of data to a file. While browsing through the audit log file, you can see other system actions, such as write open, getattr and more."
msgstr ""

#. Tag: term
#: selinux.xml:1168
#, no-c-format
msgid "<literal>for pid=1316</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1170
#, no-c-format
msgid "the process ID of the command or process that initiated the action"
msgstr ""

#. Tag: term
#: selinux.xml:1176
#, no-c-format
msgid "<literal>comm=\"rsyslogd\"</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1178
#, no-c-format
msgid "the specific command that was associated with that PID"
msgstr ""

#. Tag: term
#: selinux.xml:1184
#, no-c-format
msgid "<literal>name=\"smartmontools\"</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1186
#, no-c-format
msgid "the name of the subject of the action"
msgstr ""

#. Tag: term
#: selinux.xml:1192
#, no-c-format
msgid "<literal>dev=sda6 ino=582296</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1194
#, no-c-format
msgid "the block device and inode number of the file that was involved"
msgstr ""

#. Tag: term
#: selinux.xml:1200
#, no-c-format
msgid "<literal>scontext=system_u:system_r:syslogd_t</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1202
#, no-c-format
msgid "the source context, which is the context of the initiator of the action"
msgstr ""

#. Tag: term
#: selinux.xml:1209
#, no-c-format
msgid "<literal>tclass=file</literal> :"
msgstr ""

#. Tag: para
#: selinux.xml:1211
#, no-c-format
msgid "a class identification of the subject"
msgstr ""

#. Tag: para
#: selinux.xml:1218
#, no-c-format
msgid "Instead of interpreting the events in audit.log yourself, there is another approach. You can use the <command>audit2allow</command> command, which helps analyze the cryptic log messages in <filename>/var/log/audit/audit.log</filename> . An audit2allow troubleshooting session always consists of three different commands. First, you would use <command>audit2allow -w -a</command> to present the audit information in a more readable way. The <command>audit2allow -w -a</command> by default works on the audit.log file. If you want to analyze a specific message in the audit.log file, copy it to a temporary file and analyze the file with:"
msgstr ""

#. Tag: screen
#: selinux.xml:1231
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow -w -i <replaceable>FILENAME</replaceable></command>"
msgstr ""

#. Tag: title
#: selinux.xml:1234
#, no-c-format
msgid "Analyzing audit messages"
msgstr ""

#. Tag: screen
#: selinux.xml:1235
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow -w -i testfile</command>\n"
      "type=AVC msg=audit(1348173901.309:300): avc:  denied  { append } for  pid=1316\n"
      "comm=\"rsyslogd\" name=\"acpid\" dev=sda6 ino=582296\n"
      "scontext=system_u:system_r:syslogd_t tcontext=system_u:object_r:apmd_log_t tclass=file"
msgstr ""

#. Tag: term
#: selinux.xml:1243
#, no-c-format
msgid "This was caused by:"
msgstr ""

#. Tag: para
#: selinux.xml:1245
#, no-c-format
msgid "Missing type enforcement (TE) allow rule."
msgstr ""

#. Tag: para
#: selinux.xml:1248
#, no-c-format
msgid "To generate a loadable module to allow this access, run"
msgstr ""

#. Tag: screen
#: selinux.xml:1251
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow</command>"
msgstr ""

#. Tag: para
#: selinux.xml:1256
#, no-c-format
msgid "To find out which specific rule has denied access, you can use <command>audit2allow -a</command> to show the enforcing rules from all events that were logged to the <filename>audit.log </filename> file, or <command>audit2allow -i <replaceable>FILENAME</replaceable></command> to show it for messages that you have stored in a specific file:"
msgstr ""

#. Tag: title
#: selinux.xml:1265
#, no-c-format
msgid "Viewing which lines deny access"
msgstr ""

#. Tag: screen
#: selinux.xml:1266
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow -i testfile</command>\n"
      "#============= syslogd_t ==============\n"
      "allow syslogd_t apmd_log_t:file append;"
msgstr ""

#. Tag: para
#: selinux.xml:1271
#, no-c-format
msgid "To create an &selnx; module with the name <literal>mymodule</literal> that you can load to allow the access that was previously denied, run"
msgstr ""

#. Tag: screen
#: selinux.xml:1276
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow -a -R -M mymodule</command>"
msgstr ""

#. Tag: para
#: selinux.xml:1278
#, no-c-format
msgid "If you want to do this for all events that have been logged to the audit.log, use the <option>-a -M</option> command arguments. To do it only for specific messages that are in a specific file, use <option>-i -M</option> as in the example below:"
msgstr ""

#. Tag: title
#: selinux.xml:1286
#, no-c-format
msgid "Creating a policy module allowing an action previously denied"
msgstr ""

#. Tag: screen
#: selinux.xml:1287
#, no-c-format
msgid "&prompt.sudo;<command>audit2allow -i testfile -M example</command>\n"
      "******************** IMPORTANT ***********************\n"
      "To make this policy package active, execute:\n"
      "\n"
      "semodule -i example.pp"
msgstr ""

#. Tag: para
#: selinux.xml:1294
#, no-c-format
msgid "As indicated by the <command>audit2allow</command> command, you can now run this module by using the <command>semodule -i</command> command, followed by the name of the module that <command>audit2allow</command> has created for you ( <filename>example.pp</filename> in the above example)."
msgstr ""

