# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-08-29 10:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: uefi.xml:22
#, no-c-format
msgid "UEFI (Unified Extensible Firmware Interface)"
msgstr ""

#. Tag: para
#: uefi.xml:29
#, no-c-format
msgid "UEFI (Unified Extensible Firmware Interface) is the interface between the firmware that comes with the system hardware, all the hardware components of the system, and the operating system."
msgstr ""

#. Tag: para
#: uefi.xml:34
#, no-c-format
msgid "UEFI is becoming more and more available on PC systems and thus is replacing the traditional PC-BIOS. UEFI, for example, properly supports 64-bit systems and offers secure booting ( <quote>Secure Boot</quote> , firmware version 2.3.1c or better required), which is one of its most important features. Lastly, with UEFI a standard firmware will become available on all x86 platforms."
msgstr ""

#. Tag: para
#: uefi.xml:42
#, no-c-format
msgid "UEFI additionally offers the following advantages:"
msgstr ""

#. Tag: para
#: uefi.xml:47
#, no-c-format
msgid "Booting from large disks (over 2 TiB) with a GUID Partition Table (GPT)."
msgstr ""

#. Tag: para
#: uefi.xml:52
#, no-c-format
msgid "CPU-independent architecture and drivers."
msgstr ""

#. Tag: para
#: uefi.xml:57
#, no-c-format
msgid "Flexible pre-OS environment with network capabilities."
msgstr ""

#. Tag: para
#: uefi.xml:62
#, no-c-format
msgid "CSM (Compatibility Support Module) to support booting legacy operating systems via a PC-BIOS-like emulation."
msgstr ""

#. Tag: para
#: uefi.xml:68
#, no-c-format
msgid "For more information, see <link xlink:href=\"http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface\"/> . The following sections are not meant as a general UEFI overview; these are only hints about how some features are implemented in &productname;."
msgstr ""

#. Tag: title
#: uefi.xml:75
#, no-c-format
msgid "Secure boot"
msgstr ""

#. Tag: para
#: uefi.xml:79
#, no-c-format
msgid "In the world of UEFI, securing the bootstrapping process means establishing a chain of trust. The <quote>platform</quote> is the root of this chain of trust; in the context of &productname;, the mainboard and the on-board firmware could be considered the <quote>platform</quote> . In other words, it is the hardware vendor, and the chain of trust flows from that hardware vendor to the component manufacturers, the OS vendors, etc."
msgstr ""

#. Tag: para
#: uefi.xml:87
#, no-c-format
msgid "The trust is expressed via public key cryptography. The hardware vendor puts a so-called Platform Key (PK) into the firmware, representing the root of trust. The trust relationship with operating system vendors and others is documented by signing their keys with the Platform Key."
msgstr ""

#. Tag: para
#: uefi.xml:94
#, no-c-format
msgid "Finally, security is established by requiring that no code will be executed by the firmware unless it has been signed by one of these <quote>trusted</quote> keys&mdash;be it an OS boot loader, some driver located in the flash memory of some PCI Express card or on disk, or be it an update of the firmware itself."
msgstr ""

#. Tag: para
#: uefi.xml:102
#, no-c-format
msgid "To use Secure Boot, you need to have your OS loader signed with a key trusted by the firmware, and you need the OS loader to verify that the kernel it loads can be trusted."
msgstr ""

#. Tag: para
#: uefi.xml:108
#, no-c-format
msgid "<!-- WP, re-phrased --> Key Exchange Keys (KEK) can be added to the UEFI key database. This way, you can use other certificates, as long as they are signed with the private part of the PK. <!-- but they must stillhave a connection to the private portion of the Platform key.-->"
msgstr ""

#. Tag: title
#: uefi.xml:118
#, no-c-format
msgid "Implementation on &productname;"
msgstr ""

#. Tag: para
#: uefi.xml:119
#, no-c-format
msgid "Microsoft’s Key Exchange Key (KEK) is installed by default."
msgstr ""

#. Tag: title
#: uefi.xml:123
#, no-c-format
msgid "GUID partitioning table (GPT) required"
msgstr ""

#. Tag: para
#: uefi.xml:124
#, no-c-format
msgid "The Secure Boot feature is enabled by default on UEFI/x86_64 installations. You can find the <guimenu>Enable Secure Boot Support</guimenu> option in the <guimenu>Boot Code Options</guimenu> tab of the <guimenu>Boot Loader Settings</guimenu> dialog. It supports booting when the secure boot is activated in the firmware, while making it possible to boot when it is deactivated."
msgstr ""

#. Tag: title
#: uefi.xml:133
#, no-c-format
msgid "Secure boot support"
msgstr ""

#. Tag: para
#: uefi.xml:143
#, no-c-format
msgid "The Secure Boot feature requires that a GUID Partitioning Table (GPT) replaces the old partitioning with a Master Boot Record (MBR). If &yast; detects EFI mode during the installation, it will try to create a GPT partition. UEFI expects to find the EFI programs on a FAT-formatted EFI System Partition (ESP)."
msgstr ""

#. Tag: para
#: uefi.xml:152
#, no-c-format
msgid "Supporting UEFI Secure Boot requires having a boot loader with a digital signature that the firmware recognizes as a trusted key. That key is trusted by the firmware a priori, without requiring any manual intervention."
msgstr ""

#. Tag: para
#: uefi.xml:158
#, no-c-format
msgid "There are two ways of getting there. One is to work with hardware vendors to have them endorse a SUSE key, which SUSE then signs the boot loader with. The other way is to go through Microsoft’s Windows Logo Certification program to have the boot loader certified and have Microsoft recognize the SUSE signing key (that is, have it signed with their KEK). By now, SUSE got the loader signed by UEFI Signing Service (that is Microsoft in this case)."
msgstr ""

#. Tag: title
#: uefi.xml:170
#, no-c-format
msgid "UEFI: secure boot process"
msgstr ""

#. Tag: para
#: uefi.xml:180
#, no-c-format
msgid "At the implementation layer, SUSE uses the <systemitem>shim</systemitem> loader which is installed by default. It is a smart solution that avoids legal issues, and simplifies the certification and signing step considerably. The <systemitem>shim</systemitem> loader’s job is to load a boot loader such as &grub; and verify it; this boot loader in turn will load kernels signed by a SUSE key only. <phrase os=\"sles;sled\">SUSE provides this functionality since SLE11 SP3 on fresh installations with UEFI Secure Boot enabled.</phrase>"
msgstr ""

#. Tag: para
#: uefi.xml:190
#, no-c-format
msgid "There are two types of trusted users:"
msgstr ""

#. Tag: para
#: uefi.xml:195
#, no-c-format
msgid "First, those who hold the keys. The Platform Key (PK) allows almost everything. The Key Exchange Key (KEK) allows all a PK can except changing the PK."
msgstr ""

#. Tag: para
#: uefi.xml:202
#, no-c-format
msgid "Second, anyone with physical access to the machine. A user with physical access can reboot the machine, and configure UEFI."
msgstr ""

#. Tag: para
#: uefi.xml:208
#, no-c-format
msgid "UEFI offers two types of variables to fulfill the needs of those users:"
msgstr ""

#. Tag: para
#: uefi.xml:213
#, no-c-format
msgid "The first is the so-called <quote>Authenticated Variables</quote> , which can be updated from both within the boot process (the so-called Boot Services Environment) and the running OS. This can be done only when the new value of the variable is signed with the same key that the old value of the variable was signed with. And they can only be appended to or changed to a value with a higher serial number."
msgstr ""

#. Tag: para
#: uefi.xml:223
#, no-c-format
msgid "The second is the so-called <quote>Boot Services Only Variables</quote> . These variables are accessible to any code that runs during the boot process. After the boot process ends and before the OS starts, the boot loader must call the <literal>ExitBootServices</literal> call. After that, these variables are no longer accessible, and the OS cannot touch them."
msgstr ""

#. Tag: para
#: uefi.xml:233
#, no-c-format
msgid "The various UEFI key lists are of the first type, as this allows online updating, adding, and blacklisting of keys, drivers, and firmware fingerprints. It is the second type of variable, the <quote>Boot Services Only Variable</quote> , that helps to implement Secure Boot in a secure and open source-friendly manner, and thus compatible with GPLv3."
msgstr ""

#. Tag: para
#: uefi.xml:241
#, no-c-format
msgid "SUSE starts with <systemitem>shim</systemitem> &mdash;a small and simple EFI boot loader signed by SUSE and Microsoft."
msgstr ""

#. Tag: para
#: uefi.xml:245
#, no-c-format
msgid "This allows <systemitem>shim</systemitem> to load and execute."
msgstr ""

#. Tag: para
#: uefi.xml:248
#, no-c-format
msgid "<systemitem>shim</systemitem> then goes on to verify that the boot loader it wants to load is trusted. <!-- ??? It will not use the SUSE KEK nor theMicrosoft certificate for this. --> In a default situation <systemitem>shim</systemitem> will use an independent SUSE certificate embedded in its body. In addition, <systemitem>shim</systemitem> will allow to <quote>enroll</quote> additional keys, overriding the default SUSE key. In the following, we call them <quote>Machine Owner Keys</quote> or MOKs for short."
msgstr ""

#. Tag: para
#: uefi.xml:259
#, no-c-format
msgid "Next the boot loader will verify and then boot the kernel, and the kernel will do the same on the modules."
msgstr ""

#. Tag: title
#: uefi.xml:266
#, no-c-format
msgid "MOK (Machine Owner Key)"
msgstr ""

#. Tag: para
#: uefi.xml:268
#, no-c-format
msgid "To replace specific kernels, drivers, or other components that are part of the boot process, you need to use Machine Owner Keys (MOKs). The <systemitem>mokutil</systemitem> tool can help you to manage MOKs."
msgstr ""

#. Tag: para
#: uefi.xml:273
#, no-c-format
msgid "You can create a MOK enrollment request with <systemitem>mokutil</systemitem> . The request is stored in a UEFI runtime (RT) variable called <systemitem>MokNew</systemitem> . During the next boot, the <systemitem>shim</systemitem> boot loader detects <systemitem>MokNew</systemitem> and loads <systemitem>MokManager</systemitem> , which presents you with several options. You can use the <guimenu>Enroll key from disk</guimenu> and <guimenu>Enroll hash from disk</guimenu> options to add the key to the MokList. Use the <guimenu>Enroll MOK</guimenu> option to copy the key from the <systemitem>MokNew</systemitem> variable."
msgstr ""

#. Tag: para
#: uefi.xml:285
#, no-c-format
msgid "Enrolling a key from disk is usually done when the shim fails to load <systemitem>grub2</systemitem> and falls back to loading MokManager. As <systemitem>MokNew</systemitem> does not exist yet, you have the option of locating the key on the UEFI partition."
msgstr ""

#. Tag: title
#: uefi.xml:294
#, no-c-format
msgid "Booting a custom kernel"
msgstr ""

#. Tag: para
#: uefi.xml:295
#, no-c-format
msgid "The following is based on <link xlink:href=\"https://en.opensuse.org/openSUSE:UEFI#Booting_a_custom_kernel\"/> ."
msgstr ""

#. Tag: para
#: uefi.xml:299
#, no-c-format
msgid "Secure Boot does not prevent you from using a self-compiled kernel. You must sign it with your own certificate and make that certificate known to the firmware or MOK."
msgstr ""

#. Tag: para
#: uefi.xml:306
#, no-c-format
msgid "Create a custom X.509 key and certificate used for signing:"
msgstr ""

#. Tag: screen
#: uefi.xml:309
#, no-c-format
msgid "openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \\\n"
      "  -out cert.pem -nodes -days 666 -subj \"/CN=$USER/\""
msgstr ""

#. Tag: para
#: uefi.xml:311
#, no-c-format
msgid "<!-- bnc#811869 --> For more information about creating certificates, see <link xlink:href=\"https://en.opensuse.org/openSUSE:UEFI_Image_File_Sign_Tools#Create_Your_Own_Certificate\"/> ."
msgstr ""

#. Tag: para
#: uefi.xml:318
#, no-c-format
msgid "Package the key and the certificate as a PKCS#12 structure:"
msgstr ""

#. Tag: screen
#: uefi.xml:321
#, no-c-format
msgid "&prompt.user;openssl pkcs12 -export -inkey key.asc -in cert.pem \\\n"
      "  -name kernel_cert -out cert.p12"
msgstr ""

#. Tag: para
#: uefi.xml:325
#, no-c-format
msgid "Generate an NSS database for use with <command>pesign</command> :"
msgstr ""

#. Tag: screen
#: uefi.xml:328
#, no-c-format
msgid "&prompt.user;certutil -d . -N"
msgstr ""

#. Tag: para
#: uefi.xml:331
#, no-c-format
msgid "Import the key and the certificate contained in PKCS#12 into the NSS database:"
msgstr ""

#. Tag: screen
#: uefi.xml:335
#, no-c-format
msgid "&prompt.user;pk12util -d . -i cert.p12"
msgstr ""

#. Tag: para
#: uefi.xml:338
#, no-c-format
msgid "<quote>Bless</quote> the kernel with the new signature using <command>pesign</command> :"
msgstr ""

#. Tag: screen
#: uefi.xml:342
#, no-c-format
msgid "&prompt.user;pesign -n . -c kernel_cert -i arch/x86/boot/bzImage \\\n"
      "  -o vmlinuz.signed -s"
msgstr ""

#. Tag: para
#: uefi.xml:346
#, no-c-format
msgid "List the signatures on the kernel image:"
msgstr ""

#. Tag: screen
#: uefi.xml:349
#, no-c-format
msgid "&prompt.user;pesign -n . -S -i vmlinuz.signed"
msgstr ""

#. Tag: para
#: uefi.xml:350
#, no-c-format
msgid "At that point, you can install the kernel in <filename>/boot</filename> as usual. Because the kernel now has a custom signature the certificate used for signing needs to be imported into the UEFI firmware or MOK."
msgstr ""

#. Tag: para
#: uefi.xml:357
#, no-c-format
msgid "Convert the certificate to the DER format for import into the firmware or MOK:"
msgstr ""

#. Tag: screen
#: uefi.xml:361
#, no-c-format
msgid "&prompt.user;openssl x509 -in cert.pem -outform der -out cert.der"
msgstr ""

#. Tag: para
#: uefi.xml:364
#, no-c-format
msgid "Copy the certificate to the ESP for easier access:"
msgstr ""

#. Tag: screen
#: uefi.xml:367
#, no-c-format
msgid "&prompt.sudo;cp cert.der /boot/efi/"
msgstr ""

#. Tag: para
#: uefi.xml:370
#, no-c-format
msgid "Use <command>mokutil</command> to launch the MOK list automatically."
msgstr ""

#. Tag: para
#: uefi.xml:377
#, no-c-format
msgid "Import the certificate to MOK:"
msgstr ""

#. Tag: screen
#: uefi.xml:380
#, no-c-format
msgid "&prompt.user;mokutil --root-pw --import cert.der"
msgstr ""

#. Tag: para
#: uefi.xml:381
#, no-c-format
msgid "The <option>--root-pw</option> option enables usage of the &rootuser; user directly."
msgstr ""

#. Tag: para
#: uefi.xml:387
#, no-c-format
msgid "Check the list of certificates that are prepared to be enrolled:"
msgstr ""

#. Tag: screen
#: uefi.xml:390
#, no-c-format
msgid "&prompt.user;mokutil --list-new"
msgstr ""

#. Tag: para
#: uefi.xml:393
#, no-c-format
msgid "Reboot the system; <systemitem>shim</systemitem> should launch MokManager. You need to enter the &rootuser; password to confirm the import of the certificate to the MOK list."
msgstr ""

#. Tag: para
#: uefi.xml:400
#, no-c-format
msgid "Check if the newly imported key was enrolled:"
msgstr ""

#. Tag: screen
#: uefi.xml:403
#, no-c-format
msgid "&prompt.user;mokutil --list-enrolled"
msgstr ""

#. Tag: para
#: uefi.xml:410
#, no-c-format
msgid "Alternatively, this is the procedure if you want to launch MOK manually:"
msgstr ""

#. Tag: para
#: uefi.xml:414
#, no-c-format
msgid "Reboot"
msgstr ""

#. Tag: para
#: uefi.xml:419
#, no-c-format
msgid "In the &grub; menu press the ' <literal>c</literal> ' key."
msgstr ""

#. Tag: para
#: uefi.xml:424
#, no-c-format
msgid "Type:"
msgstr ""

#. Tag: screen
#: uefi.xml:427
#, no-c-format
msgid "chainloader $efibootdir/MokManager.efi\n"
      "boot"
msgstr ""

#. Tag: para
#: uefi.xml:431
#, no-c-format
msgid "Select <guimenu>Enroll key from disk</guimenu> ."
msgstr ""

#. Tag: para
#: uefi.xml:436
#, no-c-format
msgid "Navigate to the <filename>cert.der</filename> file and press <keycap function=\"enter\"/> ."
msgstr ""

#. Tag: para
#: uefi.xml:442
#, no-c-format
msgid "Follow the instructions to enroll the key. Normally this should be pressing ' <literal>0</literal> ' and then ' <literal>y</literal> ' to confirm."
msgstr ""

#. Tag: para
#: uefi.xml:447
#, no-c-format
msgid "Alternatively, the firmware menu may provide ways to add a new key to the Signature Database."
msgstr ""

#. Tag: title
#: uefi.xml:483
#, no-c-format
msgid "Using non-inbox drivers"
msgstr ""

#. Tag: para
#: uefi.xml:484
#, no-c-format
msgid "There is no support for adding non-inbox drivers (that is, drivers that do not come with &productname;) during installation with Secure Boot enabled. The signing key used for SolidDriver/PLDP is not trusted by default."
msgstr ""

#. Tag: para
#: uefi.xml:489
#, no-c-format
msgid "It is possible to install third party drivers during installation with Secure Boot enabled in two different ways. In both cases:"
msgstr ""

#. Tag: para
#: uefi.xml:495
#, no-c-format
msgid "Add the needed keys to the firmware database via firmware/system management tools before the installation. This option depends on the specific hardware you are using. Consult your hardware vendor for more information."
msgstr ""

#. Tag: para
#: uefi.xml:503
#, no-c-format
msgid "Use a bootable driver ISO from <link xlink:href=\"https://drivers.suse.com/\"/> or your hardware vendor to enroll the needed keys in the MOK list at first boot."
msgstr ""

#. Tag: para
#: uefi.xml:510
#, no-c-format
msgid "To use the bootable driver ISO to enroll the driver keys to the MOK list, follow these steps:"
msgstr ""

#. Tag: para
#: uefi.xml:516
#, no-c-format
msgid "Burn the ISO image above to an empty CD/DVD medium."
msgstr ""

#. Tag: para
#: uefi.xml:521
#, no-c-format
msgid "Start the installation using the new CD/DVD medium, having the standard installation media at hand or a URL to a network installation server."
msgstr ""

#. Tag: para
#: uefi.xml:526
#, no-c-format
msgid "If doing a network installation, enter the URL of the network installation source on the boot command line using the <option>install=</option> option."
msgstr ""

#. Tag: para
#: uefi.xml:531
#, no-c-format
msgid "If doing installation from optical media, the installer will first boot from the driver kit and then ask to insert the first installation disk of the product."
msgstr ""

#. Tag: para
#: uefi.xml:538
#, no-c-format
msgid "An initrd containing updated drivers will be used for installation."
msgstr ""

#. Tag: para
#: uefi.xml:543
#, no-c-format
msgid "For more information, see <link xlink:href=\"https://drivers.suse.com/doc/Usage/Secure_Boot_Certificate.html\"/> ."
msgstr ""

#. Tag: title
#: uefi.xml:551
#, no-c-format
msgid "Features and limitations"
msgstr ""

#. Tag: para
#: uefi.xml:552
#, no-c-format
msgid "When booting in Secure Boot mode, the following features apply:"
msgstr ""

#. Tag: para
#: uefi.xml:557
#, no-c-format
msgid "Installation to UEFI default boot loader location, a mechanism to keep or restore the EFI boot entry."
msgstr ""

#. Tag: para
#: uefi.xml:563
#, no-c-format
msgid "Reboot via UEFI."
msgstr ""

#. Tag: para
#: uefi.xml:568
#, no-c-format
msgid "Xen hypervisor will boot with UEFI when there is no legacy BIOS to fall back to."
msgstr ""

#. Tag: para
#: uefi.xml:574
#, no-c-format
msgid "UEFI IPv6 PXE boot support."
msgstr ""

#. Tag: para
#: uefi.xml:579
#, no-c-format
msgid "UEFI videomode support, the kernel can retrieve video mode from UEFI to configure KMS mode with the same parameters."
msgstr ""

#. Tag: para
#: uefi.xml:585
#, no-c-format
msgid "UEFI booting from USB devices is supported."
msgstr ""

#. Tag: para
#: uefi.xml:590
#, no-c-format
msgid "Since &sles;&nbsp;15&nbsp;SP3, Kexec and Kdump are supported in Secure Boot mode."
msgstr ""

#. Tag: para
#: uefi.xml:596
#, no-c-format
msgid "When booting in Secure Boot mode, the following limitations apply:"
msgstr ""

#. Tag: para
#: uefi.xml:601
#, no-c-format
msgid "To ensure that Secure Boot cannot be easily circumvented, some kernel features are disabled when running under Secure Boot."
msgstr ""

#. Tag: para
#: uefi.xml:608
#, no-c-format
msgid "Boot loader, kernel, and kernel modules must be signed."
msgstr ""

#. Tag: para
#: uefi.xml:613
#, no-c-format
msgid "Hibernation (suspend on disk) is disabled."
msgstr ""

#. Tag: para
#: uefi.xml:618
#, no-c-format
msgid "Access to <filename>/dev/kmem</filename> and <filename>/dev/mem</filename> is not possible, not even as root user."
msgstr ""

#. Tag: para
#: uefi.xml:624
#, no-c-format
msgid "Access to the I/O port is not possible, not even as root user. All X11 graphical drivers must use a kernel driver."
msgstr ""

#. Tag: para
#: uefi.xml:630
#, no-c-format
msgid "PCI BAR access through sysfs is not possible."
msgstr ""

#. Tag: para
#: uefi.xml:635
#, no-c-format
msgid "<literal>custom_method</literal> in ACPI is not available."
msgstr ""

#. Tag: para
#: uefi.xml:640
#, no-c-format
msgid "debugfs for asus-wmi module is not available."
msgstr ""

#. Tag: para
#: uefi.xml:645
#, no-c-format
msgid "the <literal>acpi_rsdp</literal> parameter does not have any effect on the kernel."
msgstr ""

#. Tag: title
#: uefi.xml:667
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: uefi.xml:671
#, no-c-format
msgid "<link xlink:href=\"https://www.uefi.org\"/> &mdash;UEFI home page where you can find the current UEFI specifications."
msgstr ""

#. Tag: para
#: uefi.xml:677
#, no-c-format
msgid "Blog posts by Olaf Kirch and Vojtěch Pavlík (the chapter above is heavily based on these posts):"
msgstr ""

#. Tag: para
#: uefi.xml:683
#, no-c-format
msgid "<link xlink:href=\"https://www.suse.com/c/uefi-secure-boot-plan/\"/>"
msgstr ""

#. Tag: para
#: uefi.xml:688
#, no-c-format
msgid "<link xlink:href=\"https://www.suse.com/c/uefi-secure-boot-overview/\"/>"
msgstr ""

#. Tag: para
#: uefi.xml:693
#, no-c-format
msgid "<link xlink:href=\"https://www.suse.com/c/uefi-secure-boot-details/\"/>"
msgstr ""

#. Tag: para
#: uefi.xml:700
#, no-c-format
msgid "<link xlink:href=\"https://en.opensuse.org/openSUSE:UEFI\"/> &mdash;UEFI with openSUSE."
msgstr ""

