# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-05-25 22:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: containers-bci.xml:12
#, no-c-format
msgid "&bci;s"
msgstr ""

#. Tag: title
#: containers-bci.xml:15
#, no-c-format
msgid "BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox"
msgstr ""

#. Tag: para
#: containers-bci.xml:17
#, no-c-format
msgid "&suse; offers several general-purpose &bci;s that are intended as deployment targets or as foundations for creating customized images: BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox. These images share the common &slsa; base, and none of them ship with a specific language or an application stack. All images feature the RPM database (even if the specific image does not include the RPM package manager) that can be used to verify the provenance of every file in the image. Each image includes the &slsa; certificate bundle, which allows the deployed applications to use the system's certificates to verify TLS connections."
msgstr ""

#. Tag: title
#: containers-bci.xml:30
#, no-c-format
msgid "Quick overview"
msgstr ""

#. Tag: para
#: containers-bci.xml:31
#, no-c-format
msgid "The table below provides a quick overview of the differences between BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox."
msgstr ""

#. Tag: title
#: containers-bci.xml:48
#, no-c-format
msgid "BCI-Base and BCI-Init: When you need flexibility"
msgstr ""

#. Tag: para
#: containers-bci.xml:49
#, no-c-format
msgid "This &bci; comes with the Zypper package manager and a free SLE-BCI repository. This allows you to install software available in the repository and customize the image during the build. The downside is the size of the image. It is the largest of the general-purpose &bci;s, so it is not always the best choice for a deployment image."
msgstr ""

#. Tag: para
#: containers-bci.xml:56
#, no-c-format
msgid "A variant of BCI-Base called BCI-Init comes with systemd preinstalled. The BCI-Init container image can be useful in scenarios requiringÂ systemd for managing services in a single container."
msgstr ""

#. Tag: title
#: containers-bci.xml:64
#, no-c-format
msgid "BCI-Minimal: When you do not need Zypper"
msgstr ""

#. Tag: para
#: containers-bci.xml:65
#, no-c-format
msgid "This is a stripped-down version of the BCI-Base image. BCI-Minimal comes without Zypper, but it does have the RPM package manager installed. This significantly reduces the size of the image. However, while RPM can install and remove packages, it lacks support for repositories and automated dependency resolution. The BCI-Minimal image is therefore intended for creating deployment containers, and then installing the desired RPM packages inside the containers. Although you can install the required dependencies, you need to download and resolve them manually. However, this approach is not recommended as it is prone to errors."
msgstr ""

#. Tag: title
#: containers-bci.xml:79
#, no-c-format
msgid "BCI-Micro: When you need to deploy static binaries"
msgstr ""

#. Tag: para
#: containers-bci.xml:80
#, no-c-format
msgid "This image is similar to BCI-Minimal but without the RPM package manager. The primary use case for the image is deploying static binaries produced externally or during multi-stage builds. As there is no straightforward way to install additional dependencies inside the container image, we recommend deploying a project using the BCI-Minimal image only when the final build artifact bundles all dependencies and has no external runtime requirements (like Python or Ruby)."
msgstr ""

#. Tag: title
#: containers-bci.xml:92
#, no-c-format
msgid "BCI-BusyBox: When you need the smallest and GPLv3-free image"
msgstr ""

#. Tag: para
#: containers-bci.xml:93
#, no-c-format
msgid "Similar to BCI-Micro, the BCI-BusyBox image comes with the most basic tools only. However, these tools are provided by the BusyBox project. This has the benefit of further size reduction. Furthermore, the image contains no GPLv3 licensed software. When using the image, keep in mind that there are certain differences between the BusyBox tools and the GNU Coreutils. So scripts written for a system that uses GNU Coreutils may require modification to work with BusyBox."
msgstr ""

#. Tag: title
#: containers-bci.xml:105
#, no-c-format
msgid "Approximate sizes"
msgstr ""

#. Tag: para
#: containers-bci.xml:106
#, no-c-format
msgid "For your reference, the list below provides an approximate size of each &bci;. Keep in mind that the provided numbers are rough estimations."
msgstr ""

#. Tag: para
#: containers-bci.xml:112
#, no-c-format
msgid "<literal>BCI-Base</literal> ~94&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:117
#, no-c-format
msgid "<literal>BCI-Minimal</literal> ~42&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:122
#, no-c-format
msgid "<literal>BCI-Micro</literal> ~26&nbsp;MB"
msgstr ""

#. Tag: para
#: containers-bci.xml:127
#, no-c-format
msgid "<literal>BCI-BusyBox</literal> ~14&nbsp;MB"
msgstr ""

#. Tag: title
#: containers-bci.xml:135
#, no-c-format
msgid "Getting started with &bci;s"
msgstr ""

#. Tag: para
#: containers-bci.xml:137
#, no-c-format
msgid "If you have a working knowledge of containers, you will not have any difficulties using &bci;s. However, there are certain features that set &bci;s apart from similar offerings, like images based on Debian or Alpine Linux. And understanding the specifics can help you to get the most out of &bci;s in the shortest time possible."
msgstr ""

#. Tag: title
#: containers-bci.xml:146
#, no-c-format
msgid "Language stack &bcia;s"
msgstr ""

#. Tag: para
#: containers-bci.xml:147
#, no-c-format
msgid "Language stack &bcia; are built on top of BCI-Base. Below is an overview of the available language stack &bcia;s."
msgstr ""

#. Tag: term
#: containers-bci.xml:153
#, no-c-format
msgid "python"
msgstr ""

#. Tag: para
#: containers-bci.xml:157
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/python\">registry.suse.com/bci/python</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:163
#, no-c-format
msgid "Tags: 3.6, 3.9, 3.10"
msgstr ""

#. Tag: para
#: containers-bci.xml:168
#, no-c-format
msgid "Ships with the <package>python3</package> version from the tag and <package>pip3</package> , <package>curl</package> , <package>git</package> tools."
msgstr ""

#. Tag: term
#: containers-bci.xml:178
#, no-c-format
msgid "node"
msgstr ""

#. Tag: para
#: containers-bci.xml:182
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/node\">registry.suse.com/bci/node</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:188
#, no-c-format
msgid "Tags: 12, 14, 16"
msgstr ""

#. Tag: para
#: containers-bci.xml:193
#, no-c-format
msgid "Comes with <package>nodejs</package> version from the tag, <package>npm</package> and <package>git</package> . The <package>yarn</package> package manager can be installed with the <command>npm install -g yarn</command> command."
msgstr ""

#. Tag: term
#: containers-bci.xml:204
#, no-c-format
msgid "openjdk"
msgstr ""

#. Tag: para
#: containers-bci.xml:208
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/openjdk\">registry.suse.com/bci/openjdk</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:219
#, no-c-format
msgid "Ships with the OpenJDK runtime. Designed for deploying Java applications."
msgstr ""

#. Tag: term
#: containers-bci.xml:228
#, no-c-format
msgid "openjdk-devel"
msgstr ""

#. Tag: para
#: containers-bci.xml:232
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/openjdk-devel\">registry.suse.com/bci/openjdk-devel</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:238
#, no-c-format
msgid "Tags: 11, 17"
msgstr ""

#. Tag: para
#: containers-bci.xml:243
#, no-c-format
msgid "Includes the development part of OpenJDK in addition to the OpenJDK runtime. Instead of Bash, the default entry point is the <systemitem>jshell</systemitem> shell."
msgstr ""

#. Tag: term
#: containers-bci.xml:253
#, no-c-format
msgid "ruby"
msgstr ""

#. Tag: para
#: containers-bci.xml:257
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/ruby\">registry.suse.com/bci/ruby</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:263
#, no-c-format
msgid "Tags: 2.5"
msgstr ""

#. Tag: para
#: containers-bci.xml:268
#, no-c-format
msgid "A standard development environment based on Ruby 2.5, featuring <package>ruby</package> , <package>gem</package> and <package>bundler</package> as well as <package>git</package> and <package>curl</package> ."
msgstr ""

#. Tag: term
#: containers-bci.xml:279
#, no-c-format
msgid "golang"
msgstr ""

#. Tag: para
#: containers-bci.xml:283
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/golang\">registry.suse.com/bci/golang</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:289
#, no-c-format
msgid "Tags: 1.16, 1.17, 1.18"
msgstr ""

#. Tag: para
#: containers-bci.xml:294
#, no-c-format
msgid "Ships with the <package>go</package> compiler version specified in the tag."
msgstr ""

#. Tag: term
#: containers-bci.xml:303
#, no-c-format
msgid "dotnet-runtime"
msgstr ""

#. Tag: para
#: containers-bci.xml:307
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/dotnet-runtime\">registry.suse.com/bci/dotnet-runtime</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:318
#, no-c-format
msgid "Includes the .NET runtime from Microsoft and the Microsoft .NET repository."
msgstr ""

#. Tag: term
#: containers-bci.xml:327
#, no-c-format
msgid "dotnet-aspnet"
msgstr ""

#. Tag: para
#: containers-bci.xml:331
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/dotnet-aspnet\">registry.suse.com/bci/dotnet-aspnet</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:342
#, no-c-format
msgid "Ships with the ASP.NET runtime from Microsoft and the Microsoft .NET repository."
msgstr ""

#. Tag: term
#: containers-bci.xml:351
#, no-c-format
msgid "dotnet-sdk"
msgstr ""

#. Tag: para
#: containers-bci.xml:355
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/suse/dotnet-sdk\">registry.suse.com/suse/dotnet-sdk</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:361
#, no-c-format
msgid "Tags: 3.1, 5.0, 6.0"
msgstr ""

#. Tag: para
#: containers-bci.xml:366
#, no-c-format
msgid "Comes with the .NET and ASP.NET SDK from Microsoft as well as the Microsoft .NET repository."
msgstr ""

#. Tag: term
#: containers-bci.xml:375
#, no-c-format
msgid "rust"
msgstr ""

#. Tag: para
#: containers-bci.xml:379
#, no-c-format
msgid "URL: <link xlink:href=\"registry.suse.com/bci/rust\">registry.suse.com/bci/rust</link>"
msgstr ""

#. Tag: para
#: containers-bci.xml:385
#, no-c-format
msgid "Tags: 1.56, 1.57, 1.58, 1.59"
msgstr ""

#. Tag: para
#: containers-bci.xml:390
#, no-c-format
msgid "Ships with the Rust compiler and the <package>cargo</package> package manager."
msgstr ""

#. Tag: title
#: containers-bci.xml:402
#, no-c-format
msgid "Package manager"
msgstr ""

#. Tag: para
#: containers-bci.xml:403
#, no-c-format
msgid "The default package manager in &sle; is Zypper. Similar to APT in Debian and APK in Alpine Linux, Zypper offers a command-line interface for all package management tasks. Below is brief overview of commonly used container-related Zypper commands."
msgstr ""

#. Tag: term
#: containers-bci.xml:411
#, no-c-format
msgid "Install packages"
msgstr ""

#. Tag: para
#: containers-bci.xml:413
#, no-c-format
msgid "<command>zypper --non-interactive install <replaceable>PACKAGE_NAME</replaceable></command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:420
#, no-c-format
msgid "Add a repository"
msgstr ""

#. Tag: para
#: containers-bci.xml:422
#, no-c-format
msgid "<command>zypper --non-interactive addrepo <replaceable>REPOSITORY_URL</replaceable>;</command> <command>zypper --non-interactive refresh</command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:430
#, no-c-format
msgid "Update all packages"
msgstr ""

#. Tag: para
#: containers-bci.xml:432
#, no-c-format
msgid "<command>zypper --non-interactive update</command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:438
#, no-c-format
msgid "Remove a package"
msgstr ""

#. Tag: para
#: containers-bci.xml:440
#, no-c-format
msgid "<command>zypper --non-interactive remove --clean-deps <replaceable>PACKAGE_NAME</replaceable></command> (the <option>--clean-deps</option> flag ensures that no longer required dependencies are removed as well)"
msgstr ""

#. Tag: term
#: containers-bci.xml:449
#, no-c-format
msgid "Clean up temporary files"
msgstr ""

#. Tag: para
#: containers-bci.xml:451
#, no-c-format
msgid "<command>zypper clean</command>"
msgstr ""

#. Tag: para
#: containers-bci.xml:457
#, no-c-format
msgid "For more information on using Zypper, refer to <link xlink:href=\"https://documentation.suse.com/sles-15/html/SLES-all/cha-sw-cl.html#sec-zypper\"/> ."
msgstr ""

#. Tag: para
#: containers-bci.xml:461
#, no-c-format
msgid "All the described commands use the <option>--non-interactive</option> flag to skip confirmations, since you cannot approve these manually during container builds. Keep in mind that you must use the flag with any command that modifies the system. Also note that <option>--non-interactive</option> is not a \"yes to all\" flag. Instead, <option>--non-interactive</option> confirms what is considered to be the intention of the user. For example, an installation command with the <option>--non-interactive</option> option fails if it needs to import new repository signing keys, as that is something that the user should verify themselves."
msgstr ""

#. Tag: title
#: containers-bci.xml:475
#, no-c-format
msgid "Common patterns"
msgstr ""

#. Tag: para
#: containers-bci.xml:476
#, no-c-format
msgid "Here are a few examples that can give you an idea how to accomplish certain tasks in &bcia; compared to Debian."
msgstr ""

#. Tag: term
#: containers-bci.xml:482
#, no-c-format
msgid "Remove orphaned packages"
msgstr ""

#. Tag: para
#: containers-bci.xml:486
#, no-c-format
msgid "Debian: <command>apt-get autoremove -y</command>"
msgstr ""

#. Tag: para
#: containers-bci.xml:491
#, no-c-format
msgid "&bcia;: Not required as long as you remove installed packages using the <command>zypper --non-interactive remove --clean-deps <replaceable>PACKAGE_NAME</replaceable></command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:501
#, no-c-format
msgid "Obtain container's architecture"
msgstr ""

#. Tag: para
#: containers-bci.xml:505
#, no-c-format
msgid "Debian: <command>dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"</command>"
msgstr ""

#. Tag: para
#: containers-bci.xml:511
#, no-c-format
msgid "&bcia;: <command>arch=\"$(uname -p|sed 's/x86_64/amd64/')\"</command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:519
#, no-c-format
msgid "Install packages required for compilation"
msgstr ""

#. Tag: para
#: containers-bci.xml:523
#, no-c-format
msgid "Debian: <command>apt-get install -y build-essential</command>"
msgstr ""

#. Tag: para
#: containers-bci.xml:528
#, no-c-format
msgid "&bcia;: <command>zypper -n in gcc gcc-c++ make</command>"
msgstr ""

#. Tag: term
#: containers-bci.xml:536
#, no-c-format
msgid "Verify GnuPG signatures"
msgstr ""

#. Tag: para
#: containers-bci.xml:540
#, no-c-format
msgid "Debian: <command>gpg --batch --verify <replaceable>SIGNATURE_URL</replaceable> <replaceable>FILE_TO_VERIFY</replaceable></command>"
msgstr ""

#. Tag: para
#: containers-bci.xml:547
#, no-c-format
msgid "&bcia;: <command>zypper -n in dirmngr; gpg --batch --verify <replaceable>SIGNATURE_URL</replaceable> <replaceable>FILE_TO_VERIFY</replaceable>; zypper -n remove --clean-deps dirmngr; zypper -n clean</command>"
msgstr ""

#. Tag: title
#: containers-bci.xml:561
#, no-c-format
msgid "Package naming conventions"
msgstr ""

#. Tag: para
#: containers-bci.xml:562
#, no-c-format
msgid "&sle; package naming conventions differ from Debian, Ubuntu, and Alpine, and they are closer to those of &rhel;. The main difference is that development packages of libraries (that is, packages containing headers and build description files) are named <package><replaceable>PACKAGE</replaceable>-devel</package> in &sle;, as opposed to <package><replaceable>PACKAGE</replaceable>-dev</package> as they are in Debian and Ubuntu. When in doubt, search for the package directly using the following command: <command>docker run --rm registry.suse.com/bci/bci-base:<replaceable>OS_VERSION</replaceable> zypper search <replaceable>PACKAGE_NAME</replaceable></command> (replace <replaceable>OS_VERSION</replaceable> with the appropriate service version number, for example: <literal>15.3</literal> or <literal>15.4</literal> )."
msgstr ""

#. Tag: title
#: containers-bci.xml:580
#, no-c-format
msgid "Adding GPG signing keys"
msgstr ""

#. Tag: para
#: containers-bci.xml:581
#, no-c-format
msgid "Adding external repositories to a container or container image normally requires importing the GPG key used for signing the packages. This can be done with the <command>rpm --import <replaceable>KEY_URL</replaceable></command> command. This adds the key to the RPM database, and all packages from the repository can be installed afterwards."
msgstr ""

