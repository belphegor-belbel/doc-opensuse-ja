# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2020-07-30 22:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: containers-terminology.xml:12
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: title
#: containers-terminology.xml:15
#, no-c-format
msgid "Terminology"
msgstr ""

#. Tag: term
#: containers-terminology.xml:19
#, no-c-format
msgid "Container"
msgstr ""

#. Tag: para
#: containers-terminology.xml:21
#, no-c-format
msgid "A container is a standard unit of software that packages up code and all its dependencies. This allows the container and its application to run quickly and reliably in various computing environments. Containers can include all the components required for an application to run. Multiple containers can run on a single host operating system instance, but each container is isolated from other containers. From the perspective of a program in a container, it is the only thing running on the host OS. Unlike a virtual machine, a container does not have its own kernel. All containers on an OS instance share the kernel of the host OS."
msgstr ""

#. Tag: term
#: containers-terminology.xml:36
#, no-c-format
msgid "Container Image"
msgstr ""

#. Tag: para
#: containers-terminology.xml:38
#, no-c-format
msgid "A container image is an unchangeable, static file that includes executable code so it can run an isolated process on IT infrastructure. The image is comprised of system libraries, system tools, and other platform settings a program needs to run on a containerization platform. A container image is compiled from file system layers built on top of a parent or base image."
msgstr ""

#. Tag: term
#: containers-terminology.xml:49
#, no-c-format
msgid "Base Image"
msgstr ""

#. Tag: para
#: containers-terminology.xml:51
#, no-c-format
msgid "A base image is an minimal initial image. In a Dockerfile, a base image is identified by the <literal>FROM scratch</literal> directive."
msgstr ""

#. Tag: term
#: containers-terminology.xml:59
#, no-c-format
msgid "Parent Image"
msgstr ""

#. Tag: para
#: containers-terminology.xml:61
#, no-c-format
msgid "The image that served the basis for another container image. In other words, if an image is not a base image, it is derived from a parent image. In a Dockerfile, the <literal>FROM</literal> directive is pointing to the parent image. Most Docker containers are created using parent images."
msgstr ""

#. Tag: term
#: containers-terminology.xml:71
#, no-c-format
msgid "Container Orchestration"
msgstr ""

#. Tag: para
#: containers-terminology.xml:73
#, no-c-format
msgid "Orchestration is the automatic process of deploying, managing, scaling and scheduling the work of individual containers within multiple clusters. Orchestration is done using a dedicated tool like <link xlink:href=\"https://kubernetes.io/\">Kubernetes</link> ."
msgstr ""

#. Tag: term
#: containers-terminology.xml:82
#, no-c-format
msgid "Container Platform"
msgstr ""

#. Tag: para
#: containers-terminology.xml:84
#, no-c-format
msgid "&caasp; is a container platform."
msgstr ""

