# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2024-06-26 22:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: security_firewall.xml:9
#, no-c-format
msgid "Masquerading and firewalls"
msgstr ""

#. Tag: para
#: security_firewall.xml:17
#, no-c-format
msgid "Whenever Linux is used in a network environment, you can use the kernel functions that allow the manipulation of network packets to maintain a separation between internal and external network areas. The Linux <systemitem>netfilter</systemitem> framework provides the means to establish an effective firewall that keeps different networks apart. Using iptables&mdash;a generic table structure for the definition of rule sets&mdash;precisely controls the packets allowed to pass a network interface. Such a packet filter can be set up using &firewalld; and its graphical interface <command>firewall-config</command> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:28
#, no-c-format
msgid "&productname; <phrase os=\"sles;sled\">15 GA</phrase> <phrase os=\"osuse\">15.0</phrase> introduces &firewalld; as the new default software firewall, replacing &susefirewall;. This chapter provides guidance for configuring &firewalld;, and migrating from &susefirewall; for users who have upgraded from older &productname; releases."
msgstr ""

#. Tag: title
#: security_firewall.xml:38
#, no-c-format
msgid "Packet filtering with iptables"
msgstr ""

#. Tag: para
#: security_firewall.xml:40
#, no-c-format
msgid "This section discusses the low-level details of packet filtering. The components <systemitem>netfilter</systemitem> and <systemitem>iptables</systemitem> are responsible for the filtering and manipulation of network packets and for network address translation (NAT). The filtering criteria and any actions associated with them are stored in chains, which must be matched one after another by individual network packets as they arrive. The chains to match are stored in tables. The <command>iptables</command> command allows you to alter these tables and rule sets."
msgstr ""

#. Tag: para
#: security_firewall.xml:52
#, no-c-format
msgid "The Linux kernel maintains three tables, each for a particular category of functions of the packet filter:"
msgstr ""

#. Tag: term
#: security_firewall.xml:59
#, no-c-format
msgid "filter"
msgstr ""

#. Tag: para
#: security_firewall.xml:61
#, no-c-format
msgid "This table holds the bulk of the filter rules, because it implements the <emphasis>packet filtering</emphasis> mechanism in the stricter sense, which determines whether packets are let through ( <literal>ACCEPT</literal> ) or discarded ( <literal>DROP</literal> ), for example."
msgstr ""

#. Tag: term
#: security_firewall.xml:71
#, no-c-format
msgid "nat"
msgstr ""

#. Tag: para
#: security_firewall.xml:73
#, no-c-format
msgid "This table defines any changes to the source and target addresses of packets. Using these functions also allows you to implement <emphasis>masquerading</emphasis> , which is a special case of NAT used to link a private network with the Internet."
msgstr ""

#. Tag: term
#: security_firewall.xml:82
#, no-c-format
msgid "mangle"
msgstr ""

#. Tag: para
#: security_firewall.xml:84
#, no-c-format
msgid "The rules held in this table make it possible to manipulate values stored in IP headers (such as the type of service)."
msgstr ""

#. Tag: para
#: security_firewall.xml:92
#, no-c-format
msgid "These tables contain several predefined chains to match packets:"
msgstr ""

#. Tag: term
#: security_firewall.xml:98
#, no-c-format
msgid "PREROUTING"
msgstr ""

#. Tag: para
#: security_firewall.xml:100
#, no-c-format
msgid "This chain is applied to all incoming packets."
msgstr ""

#. Tag: term
#: security_firewall.xml:106
#, no-c-format
msgid "INPUT"
msgstr ""

#. Tag: para
#: security_firewall.xml:108
#, no-c-format
msgid "This chain is applied to packets destined for the system's internal processes."
msgstr ""

#. Tag: term
#: security_firewall.xml:115
#, no-c-format
msgid "FORWARD"
msgstr ""

#. Tag: para
#: security_firewall.xml:117
#, no-c-format
msgid "This chain is applied to packets that are routed through the system."
msgstr ""

#. Tag: term
#: security_firewall.xml:124
#, no-c-format
msgid "OUTPUT"
msgstr ""

#. Tag: para
#: security_firewall.xml:126
#, no-c-format
msgid "This chain is applied to packets originating from the system itself."
msgstr ""

#. Tag: term
#: security_firewall.xml:132
#, no-c-format
msgid "POSTROUTING"
msgstr ""

#. Tag: para
#: security_firewall.xml:134
#, no-c-format
msgid "This chain is applied to all outgoing packets."
msgstr ""

#. Tag: para
#: security_firewall.xml:141
#, no-c-format
msgid "<xref linkend=\"fig-fire-table\"/> illustrates the paths along which a network packet may travel on a given system. For the sake of simplicity, the figure lists tables as parts of chains, but in reality these chains are held within the tables themselves."
msgstr ""

#. Tag: para
#: security_firewall.xml:148
#, no-c-format
msgid "In the simplest case, an incoming packet destined for the system itself arrives at the <literal>eth0</literal> interface. The packet is first referred to the <literal>PREROUTING</literal> chain of the <literal>mangle</literal> table then to the <literal>PREROUTING</literal> chain of the <literal>nat</literal> table. The following step, concerning the routing of the packet, determines that the actual target of the packet is a process of the system itself. After passing the <literal>INPUT</literal> chains of the <literal>mangle</literal> and the <literal>filter</literal> table, the packet finally reaches its target, provided that the rules of the <literal>filter</literal> table allow this."
msgstr ""

#. Tag: title
#: security_firewall.xml:162
#, no-c-format
msgid "iptables: a packet's possible paths"
msgstr ""

#. Tag: title
#: security_firewall.xml:174
#, no-c-format
msgid "Masquerading basics"
msgstr ""

#. Tag: para
#: security_firewall.xml:176
#, no-c-format
msgid "Masquerading is the Linux-specific form of NAT (network address translation) and can be used to connect a small LAN with the Internet. LAN hosts use IP addresses from the private range (see <xref linkend=\"sec-network-addresses-route\"/> ) and on the Internet official IP addresses are used. To be able to connect to the Internet, a LAN host's private address is translated to an official one. This is done on the router, which acts as the gateway between the LAN and the Internet. The underlying principle is a simple one: The router has more than one network interface, typically a network card and a separate interface connecting with the Internet. While the latter links the router with the outside world, one or several others link it with the LAN hosts. With these hosts in the local network connected to the network card (such as <literal>eth0</literal> ) of the router, they can send any packets not destined for the local network to their default gateway or router."
msgstr ""

#. Tag: title
#: security_firewall.xml:196
#, no-c-format
msgid "Using the correct network mask"
msgstr ""

#. Tag: para
#: security_firewall.xml:197
#, no-c-format
msgid "When configuring your network, make sure both the broadcast address and the netmask are the same for all local hosts. Failing to do so prevents packets from being routed properly."
msgstr ""

#. Tag: para
#: security_firewall.xml:204
#, no-c-format
msgid "As mentioned, whenever one of the LAN hosts sends a packet destined for an Internet address, it goes to the default router. However, the router must be configured before it can forward such packets. For security reasons, this is not enabled in a default installation. To enable it, add the line <literal>net.ipv4.ip_forward = 1</literal> in the file <filename>/etc/sysctl.conf</filename> . Alternatively do this via &yast;, for example by calling <command>yast routing ip-forwarding on</command> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:214
#, no-c-format
msgid "The target host of the connection can see your router, but knows nothing about the host in your internal network where the packets originated. This is why the technique is called masquerading. Because of the address translation, the router is the first destination of any reply packets. The router must identify these incoming packets and translate their target addresses, so packets can be forwarded to the correct host in the local network."
msgstr ""

#. Tag: para
#: security_firewall.xml:224
#, no-c-format
msgid "With the routing of inbound traffic depending on the masquerading table, there is no way to open a connection to an internal host from the outside. For such a connection, there would be no entry in the table. In addition, any connection already established has a status entry assigned to it in the table, so the entry cannot be used by another connection."
msgstr ""

#. Tag: para
#: security_firewall.xml:232
#, no-c-format
msgid "As a consequence of all this, you might experience some problems with several application protocols, such as ICQ, cucme, IRC (DCC, CTCP), and FTP (in PORT mode). Web browsers, the standard FTP program, and many other programs use the PASV mode. This passive mode is much less problematic as far as packet filtering and masquerading are concerned."
msgstr ""

#. Tag: title
#: security_firewall.xml:241
#, no-c-format
msgid "Firewalling basics"
msgstr ""

#. Tag: para
#: security_firewall.xml:243
#, no-c-format
msgid "<emphasis>Firewall</emphasis> is probably the term most widely used to describe a mechanism that controls the data flow between networks. Strictly speaking, the mechanism described in this section is called a <emphasis>packet filter</emphasis> . A packet filter regulates the data flow according to certain criteria, such as protocols, ports, and IP addresses. This allows you to block packets that, according to their addresses, are not supposed to reach your network. To allow public access to your Web server, for example, explicitly open the corresponding port. However, a packet filter does not scan the contents of packets with legitimate addresses, such as those directed to your Web server. For example, if incoming packets were intended to compromise a CGI program on your Web server, the packet filter would still let them through."
msgstr ""

#. Tag: para
#: security_firewall.xml:258
#, no-c-format
msgid "A more effective but more complex mechanism is the combination of several types of systems, such as a packet filter interacting with an application gateway or proxy. In this case, the packet filter rejects any packets destined for disabled ports. Packets that are directed to the application gateway are accepted. This gateway or proxy pretends to be the actual client of the server. In a sense, such a proxy could be considered a masquerading host on the protocol level used by the application. One example for such a proxy is Squid, an HTTP and FTP proxy server. To use Squid, the browser must be configured to communicate via the proxy. Any HTTP pages or FTP files requested are served from the proxy cache and objects not found in the cache are fetched from the Internet by the proxy."
msgstr ""

#. Tag: para
#: security_firewall.xml:273
#, no-c-format
msgid "The following section focuses on the packet filter that comes with &productname;. For further information about packet filtering and firewalling, read the <link xlink:href=\"https://tldp.org/HOWTO/Firewall-HOWTO.html\">Firewall HOWTO</link> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:282
#, no-c-format
msgid "&firewalld;"
msgstr ""

#. Tag: title
#: security_firewall.xml:284
#, no-c-format
msgid "&firewalld; replaces &susefirewall;"
msgstr ""

#. Tag: para
#: security_firewall.xml:285
#, no-c-format
msgid "&productname; <phrase os=\"sles;sled\">15 GA</phrase> <phrase os=\"osuse\">15.0</phrase> introduces &firewalld; as the new default software firewall, replacing &susefirewall;. If you are upgrading from a release older than &productname; <phrase os=\"sles;sled\">15 GA</phrase> <phrase os=\"osuse\">15.0</phrase> , &susefirewall; will be unchanged and you must manually upgrade to &firewalld; (see <xref linkend=\"sec-security-firewall-upgrade\"/> )."
msgstr ""

#. Tag: para
#: security_firewall.xml:295
#, no-c-format
msgid "&firewalld; is a daemon that maintains the system's <command>iptables</command> rules and offers a D-Bus interface for operating on them. It comes with a command line utility <command>firewall-cmd</command> and a graphical user interface <command>firewall-config</command> for interacting with it. Since &firewalld; is running in the background and provides a well defined interface it allows other applications to request changes to the iptables rules, for example to set up virtual machine networking."
msgstr ""

#. Tag: para
#: security_firewall.xml:305
#, no-c-format
msgid "&firewalld; implements different security zones. Several predefined zones like <literal>internal</literal> and <literal>public</literal> exist. The administrator can define additional custom zones if desired. Each zone contains its own set of iptables rules. Each network interface is a member of exactly one zone. Individual connections can also be assigned to a zone based on the source addresses."
msgstr ""

#. Tag: para
#: security_firewall.xml:314
#, no-c-format
msgid "Each zone represents a certain level of trust. For example the <literal>public</literal> zone is not trusted, because other computers in this network are not under your control (suitable for Internet or wireless hotspot connections). On the other hand the <literal>internal</literal> zone is used for networks that <emphasis>are</emphasis> under your control, like a home or company network. By utilizing zones this way, a host can offer different kinds of services to trusted networks and untrusted networks in a defined way."
msgstr ""

#. Tag: para
#: security_firewall.xml:325
#, no-c-format
msgid "For more information about the predefined zones and their meaning in &firewalld;, refer to its manual at <link xlink:href=\"https://www.firewalld.org/documentation/zone/predefined-zones.html\"/> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:332
#, no-c-format
msgid "No zone assigned behavior"
msgstr ""

#. Tag: para
#: security_firewall.xml:333
#, no-c-format
msgid "The initial state for network interfaces is to be assigned to no zone at all. In this case the network interface will be implicitly handled in the default zone, which can be determined by calling <command>firewall-cmd --get-default-zone</command> . If not configured otherwise, the default zone is the <literal>public</literal> zone."
msgstr ""

#. Tag: para
#: security_firewall.xml:342
#, no-c-format
msgid "The &firewalld; packet filtering model allows any outgoing connections to pass. Outgoing connections are connections that are actively established by the local host. Incoming connections that are established by remote hosts are blocked if the respective service is not allowed in the zone in question. Therefore, each of the interfaces with incoming traffic must be placed in a suitable zone to allow for the desired services to be accessible. For each of the zones, define the services or protocols you need."
msgstr ""

#. Tag: para
#: security_firewall.xml:353
#, no-c-format
msgid "An important concept of &firewalld; is the distinction between two separate configurations: the <emphasis>runtime</emphasis> and the <emphasis>permanent</emphasis> configuration. The runtime configuration represents the currently active rules, while the permanent configuration represents the saved rules that will be applied when restarting &firewalld;. This allows to add temporary rules that will be discarded after restarting &firewalld;, or to experiment with new rules while being able to revert back to the original state. When you are changing the configuration, you need to be aware of which configuration you are editing. How this is done is discussed in <xref linkend=\"sec-security-firewall-firewalld-configurations\"/> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:367
#, no-c-format
msgid "To perform the &firewalld; configuration using the graphical user interface <command>firewall-config</command> refer to its <link xlink:href=\"https://www.firewalld.org/documentation/utilities/firewall-config.html\">documentation</link> . In the following section we will be looking at how to perform typical &firewalld; configuration tasks using <command>firewall-cmd</command> on the command line."
msgstr ""

#. Tag: title
#: security_firewall.xml:377
#, no-c-format
msgid "Configuring the firewall with &nm;"
msgstr ""

#. Tag: para
#: security_firewall.xml:378
#, no-c-format
msgid "The &nm; supports a basic configuration of &firewalld; by selecting zones."
msgstr ""

#. Tag: para
#: security_firewall.xml:382
#, no-c-format
msgid "When editing a wired or wireless connection, go to the <emphasis>Identity</emphasis> tab in the configuration window and use the <literal>Firewall Zone</literal> drop-down box."
msgstr ""

#. Tag: title
#: security_firewall.xml:390
#, no-c-format
msgid "Configuring the firewall with &yast;"
msgstr ""

#. Tag: para
#: security_firewall.xml:391
#, no-c-format
msgid "The <command>yast firewall</command> module supports a basic configuration of &firewalld;. It provides a zone selector, services selector, and ports selector. It does not support creating custom iptables rules, and limits zone creation and customization to selecting services and ports."
msgstr ""

#. Tag: title
#: security_firewall.xml:399
#, no-c-format
msgid "Changing settings in running mode"
msgstr ""

#. Tag: para
#: security_firewall.xml:400
#, no-c-format
msgid "&yast; respects the settings in <filename>/etc/firewalld/firewalld.conf</filename> , where the default value for <option>FlushAllOnReload</option> is set to <literal>no</literal> . Therefore, &yast; does not change settings in running mode. For example, if you have assigned an interface to a different zone with &yast;, restart the firewalld daemon for the change to take effect."
msgstr ""

#. Tag: title
#: security_firewall.xml:411
#, no-c-format
msgid "Configuring the firewall on the command line"
msgstr ""

#. Tag: title
#: security_firewall.xml:413
#, no-c-format
msgid "Firewall start-up"
msgstr ""

#. Tag: para
#: security_firewall.xml:415
#, no-c-format
msgid "&firewalld; will be installed and enabled by default. It is a regular &systemd; service that can be configured via <command>systemctl</command> or the &yast; Services Manager."
msgstr ""

#. Tag: title
#: security_firewall.xml:422
#, no-c-format
msgid "Automatic firewall configuration"
msgstr ""

#. Tag: para
#: security_firewall.xml:423
#, no-c-format
msgid "After the installation, &yast; automatically starts &firewalld; and leaves all interfaces in the default <literal>public</literal> zone. If a server application is configured and activated on the system, &yast; can adjust the firewall rules via the options <guimenu>Open Ports on Selected Interface in Firewall</guimenu> or <guimenu>Open Ports on Firewall</guimenu> in the server configuration modules. Some server module dialogs include a <guimenu>Firewall Details</guimenu> button for activating additional services and ports."
msgstr ""

#. Tag: title
#: security_firewall.xml:436
#, no-c-format
msgid "Runtime versus permanent configuration"
msgstr ""

#. Tag: para
#: security_firewall.xml:438
#, no-c-format
msgid "By default, all <command>firewall-cmd</command> commands operate on the runtime configuration. You can apply most operations to the permanent configuration <emphasis>only</emphasis> by adding the <literal>--permanent</literal> parameter. When doing so, the change affects the permanent configuration and will not be effective immediately in the runtime configuration. There is currently no way to add a rule to both runtime and permanent configurations in a single invocation. To achieve this you can apply all necessary changes to the runtime configuration and when all is working as expected issue the following command:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:451
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --runtime-to-permanent</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:453
#, no-c-format
msgid "This writes all current runtime rules into the permanent configuration. Any temporary modifications you or other programs may have made to the firewall in other contexts are made permanent this way. If you are unsure about this, you can also take the opposite approach to be on the safe side: Add new rules to the permanent configuration and reload &firewalld; to make them active."
msgstr ""

#. Tag: para
#: security_firewall.xml:463
#, no-c-format
msgid "Some configuration items, like the default zone, are shared by both the runtime and permanent configurations. Changing them reflects in both configurations at once."
msgstr ""

#. Tag: para
#: security_firewall.xml:470
#, no-c-format
msgid "To revert the runtime configuration to the permanent configuration and thereby discard any temporary changes, two possibilities exist, either via the &firewalld; command line interface or via &systemd;:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:476
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --reload</command>"
msgstr ""

#. Tag: screen
#: security_firewall.xml:478
#, no-c-format
msgid "&prompt.root;<command>systemctl reload firewalld</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:480
#, no-c-format
msgid "For brevity the examples in the following sections will always operate on the runtime configuration, if applicable. Adjust them accordingly to make them permanent."
msgstr ""

#. Tag: title
#: security_firewall.xml:488
#, no-c-format
msgid "Assignment of interfaces to zones"
msgstr ""

#. Tag: para
#: security_firewall.xml:490
#, no-c-format
msgid "You can list all network interfaces currently assigned to a zone like this:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:493
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --zone=public --list-interfaces</command>\n"
      "eth0"
msgstr ""

#. Tag: para
#: security_firewall.xml:496
#, no-c-format
msgid "Similarly you can query which zone a specific interface is assigned to:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:500
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --get-zone-of-interface=eth0</command>\n"
      "public"
msgstr ""

#. Tag: para
#: security_firewall.xml:503
#, no-c-format
msgid "The following command lines assign an interface to a zone. The variant using <literal>--add-interface</literal> works if <literal>eth0</literal> is not already assigned to another zone. The variant using <literal>--change-interface</literal> always works, removing <literal>eth0</literal> from its current zone if necessary:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:511
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --zone=internal --add-interface=eth0</command>\n"
      "&prompt.root;<command>firewall-cmd --zone=internal --change-interface=eth0</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:514
#, no-c-format
msgid "Any operations without an explicit <literal>--zone</literal> argument will implicitly operate on the default zone. This pair of commands can be used for getting and setting the default zone assignment:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:520
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --get-default-zone</command>\n"
      "dmz\n"
      "&prompt.root;<command>firewall-cmd --set-default-zone=public</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:525
#, no-c-format
msgid "Any network interfaces not explicitly assigned to a zone are automatically part of the default zone. Changing the default zone reassigns all those network interfaces immediately for the permanent and runtime configurations. You should never use a trusted zone like <literal>internal</literal> as the default zone, to avoid unexpected exposure to threats. For example, hotplugged network interfaces like USB Ethernet interfaces would automatically become part of the trusted zone in such cases."
msgstr ""

#. Tag: para
#: security_firewall.xml:536
#, no-c-format
msgid "Interfaces that are not explicitly part of any zone do not appear in the zone interface list. There is currently no command to list unassigned interfaces. Due to this it is best to avoid unassigned network interfaces during regular operation."
msgstr ""

#. Tag: title
#: security_firewall.xml:546
#, no-c-format
msgid "Making network services accessible"
msgstr ""

#. Tag: para
#: security_firewall.xml:548
#, no-c-format
msgid "&firewalld; has a concept of <emphasis>services</emphasis> . A service consists of definitions of ports and protocols. These definitions logically belong together in the context of a given network service like a Web or mail server protocol. The following commands can be used to get information about predefined services and their details:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:556
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --get-services</command>\n"
      "[...] dhcp dhcpv6 dhcpv6-client dns docker-registry [...]\n"
      "&prompt.root;<command>firewall-cmd --info-service dhcp</command>\n"
      "dhcp\n"
      "  ports: 67/udp\n"
      "  protocols:\n"
      "  source-ports:\n"
      "  modules:\n"
      "  destination:"
msgstr ""

#. Tag: para
#: security_firewall.xml:566
#, no-c-format
msgid "These service definitions can be used for easily making the associated network functionality accessible in a zone. This command line opens the HTTP Web server port in the internal zone, for example:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:572
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --add-service=http --zone=internal</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:574
#, no-c-format
msgid "The removal of a service from a zone is performed using the counterpart command <literal>--remove-service</literal> . You can also define custom services using the <literal>--new-service</literal> subcommand. Refer to <link xlink:href=\"https://www.firewalld.org/documentation/howto/add-a-service.html\"/> for more details on how to do this."
msgstr ""

#. Tag: para
#: security_firewall.xml:582
#, no-c-format
msgid "If you just want to open a single port by number, you can use the following approach. This will open TCP port 8000 in the internal zone:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:587
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --add-port=8000/tcp --zone=internal</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:589
#, no-c-format
msgid "For removal use the counterpart command <literal>--remove-port</literal> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:594
#, no-c-format
msgid "Temporarily opening a service or port"
msgstr ""

#. Tag: para
#: security_firewall.xml:595
#, no-c-format
msgid "&firewalld; supports a <literal>--timeout</literal> parameter that allows to open a service or port for a limited time duration. This can be helpful for quick testing and making sure that closing the service or port is not forgotten. To allow the <literal>imap</literal> service in the <literal>internal</literal> zone for 5 minutes, you would call"
msgstr ""

#. Tag: screen
#: security_firewall.xml:602
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --add-service=imap --zone=internal --timeout=5m</command>"
msgstr ""

#. Tag: title
#: security_firewall.xml:608
#, no-c-format
msgid "Lockdown mode"
msgstr ""

#. Tag: para
#: security_firewall.xml:610
#, no-c-format
msgid "&firewalld; offers a <emphasis>lockdown mode</emphasis> that prevents changes to the firewall rules while it is active. Since applications can automatically change the firewall rules via the D-Bus interface, and depending on the PolicyKit rules regular users may be able to do the same, it can be helpful to prevent changes in some situations. You can find more information about this at <link xlink:href=\"https://fedoraproject.org/wiki/Features/FirewalldLockdown\"/> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:620
#, no-c-format
msgid "It is important to understand that the lockdown mode feature provides no real security, but merely protection against accidental or benign attempts to change the firewall. The way the lockdown mode is currently implemented in &firewalld; provides no security against malicious intent, as is pointed out at <link xlink:href=\"https://seclists.org/oss-sec/2017/q3/139\"/> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:632
#, no-c-format
msgid "Adding custom <command>iptables</command> rules"
msgstr ""

#. Tag: para
#: security_firewall.xml:634
#, no-c-format
msgid "&firewalld; claims exclusive control over the host's <systemitem>netfilter</systemitem> rules. You should never modify firewall rules using other tools like <command>iptables</command> . Doing so could confuse &firewalld; and break security or functionality."
msgstr ""

#. Tag: para
#: security_firewall.xml:641
#, no-c-format
msgid "If you need to add custom firewall rules that aren't covered by &firewalld; features then there are two ways to do so. To directly pass raw <command>iptables</command> syntax you can use the <literal>--direct</literal> option. It expects the table, chain, and priority as initial arguments and the rest of the command line is passed as is to <command>iptables</command> . The following example adds a connection tracking rule for the forwarding filter table:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:651
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd  --direct --add-rule ipv4 filter FORWARD 0 -i eth0 -o eth1 \\\n"
      "    -p tcp --dport 80 -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:654
#, no-c-format
msgid "Additionally, &firewalld; implements so called <emphasis>rich rules</emphasis> , an extended syntax for specifying <command>iptables</command> rules in an easier way. You can find the syntax specification at <link xlink:href=\"https://www.firewalld.org/documentation/man-pages/firewalld.richlanguage.html\"/> . The following example drops all IPv4 packets originating from a certain source address:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:664
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --zone=public --add-rich-rule='rule family=\"ipv4\" \\\n"
      "    source address=\"192.168.2.4\" drop'</command>"
msgstr ""

#. Tag: title
#: security_firewall.xml:669
#, no-c-format
msgid "Routing, forwarding, and masquerading"
msgstr ""

#. Tag: para
#: security_firewall.xml:671
#, no-c-format
msgid "&firewalld; is not designed to run as a fully fledged router. The basic functionality for typical home router setups is available. For a corporate production router you should not use &firewalld;, however, but use dedicated router and firewall devices instead. The following provides just a few pointers on what to look for to utilize routing in &firewalld;:"
msgstr ""

#. Tag: para
#: security_firewall.xml:681
#, no-c-format
msgid "First of all IP forwarding needs to be enabled as outlined in <xref linkend=\"sec-security-firewall-masq\"/> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:687
#, no-c-format
msgid "To enable IPv4 masquerading, for example in the <literal>internal</literal> zone, issue the following command."
msgstr ""

#. Tag: screen
#: security_firewall.xml:691
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --zone=internal --add-masquerade</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:694
#, no-c-format
msgid "&firewalld; can also enable port forwarding. The following command forwards local TCP connections on port 80 to another host:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:698
#, no-c-format
msgid "<?dbfo keep-together=\"always\"?>&prompt.root;<command>firewall-cmd --zone=public \\\n"
      "    --add-forward-port=port=80:proto=tcp:toport=80:toaddr=192.168.1.10</command>"
msgstr ""

#. Tag: title
#: security_firewall.xml:706
#, no-c-format
msgid "Accessing services listening on dynamic ports"
msgstr ""

#. Tag: para
#: security_firewall.xml:708
#, no-c-format
msgid "Some network services do not listen on predefined port numbers. Instead they operate based on the <literal>portmapper</literal> or <literal>rpcbind</literal> protocol. We will use the term <literal>rpcbind</literal> from here on. When one of these services starts, it chooses a random local port and talks to <literal>rpcbind</literal> to make the port number known. <literal>rpcbind</literal> itself is listening on a well known port. Remote systems can then query <literal>rpcbind</literal> about the network services it knows about and on which ports they are listening. Not many programs use this approach anymore today. Popular examples are Network Information Services (NIS; <command>ypserv</command> and <command>ypbind</command> ) and the Network File System (NFS) version 3."
msgstr ""

#. Tag: title
#: security_firewall.xml:724
#, no-c-format
msgid "About NFSv4"
msgstr ""

#. Tag: para
#: security_firewall.xml:725
#, no-c-format
msgid "The newer NFSv4 requires the single well-known TCP port 2049. For protocol version 4.0, the kernel parameter <literal>fs.nfs.nfs_callback_tcpport</literal> may need to be set to a static port (see <xref linkend=\"ex-security-firewall-nfscallback\"/> ). Starting with protocol version 4.1 this setting has also become unnecessary."
msgstr ""

#. Tag: para
#: security_firewall.xml:735
#, no-c-format
msgid "The dynamic nature of the <literal>rpcbind</literal> protocol makes it difficult to make the affected services behind the firewall accessible. &firewalld; does not support these services by itself. For manual configuration, see <xref linkend=\"sec-security-firewall-firewalld-rpcports-static\"/> . Alternatively, &productname; provides a helper script. For details, see <xref linkend=\"sec-security-firewall-firewalld-rpcports-helper\"/> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:745
#, no-c-format
msgid "Configuring static ports"
msgstr ""

#. Tag: para
#: security_firewall.xml:746
#, no-c-format
msgid "One possibility is to configure all involved network services to use fixed port numbers. Once this is done, the fixed ports can be opened in &firewalld; and everything should work. The actual port numbers used are at your discretion but should not clash with any well-known port numbers assigned to other services. See <xref linkend=\"tab-security-firewall-sysconfigports\"/> for a list of the available configuration items for NIS and NFSv3 services. Depending on your actual NIS or NFS configuration, not all of these ports may be required for your setup."
msgstr ""

#. Tag: title
#: security_firewall.xml:758
#, no-c-format
msgid "Important sysconfig variables for static port configuration"
msgstr ""

#. Tag: para
#: security_firewall.xml:766
#, no-c-format
msgid "File Path"
msgstr ""

#. Tag: para
#: security_firewall.xml:771
#, no-c-format
msgid "Variable Name"
msgstr ""

#. Tag: para
#: security_firewall.xml:776
#, no-c-format
msgid "Example Value"
msgstr ""

#. Tag: entry
#: security_firewall.xml:784
#, no-c-format
msgid "<filename> /etc/sysconfig/nfs </filename>"
msgstr ""

#. Tag: entry
#: security_firewall.xml:789
#, no-c-format
msgid "MOUNTD_PORT"
msgstr ""

#. Tag: entry
#: security_firewall.xml:792
#, no-c-format
msgid "21001"
msgstr ""

#. Tag: entry
#: security_firewall.xml:797
#, no-c-format
msgid "STATD_PORT"
msgstr ""

#. Tag: entry
#: security_firewall.xml:800
#, no-c-format
msgid "21002"
msgstr ""

#. Tag: entry
#: security_firewall.xml:805
#, no-c-format
msgid "LOCKD_TCPPORT"
msgstr ""

#. Tag: entry
#: security_firewall.xml:813
#, no-c-format
msgid "LOCKD_UDPPORT"
msgstr ""

#. Tag: entry
#: security_firewall.xml:816
#, no-c-format
msgid "21003"
msgstr ""

#. Tag: entry
#: security_firewall.xml:821
#, no-c-format
msgid "RQUOTAD_PORT"
msgstr ""

#. Tag: entry
#: security_firewall.xml:824
#, no-c-format
msgid "21004"
msgstr ""

#. Tag: entry
#: security_firewall.xml:829
#, no-c-format
msgid "<filename> /etc/sysconfig/ypbind </filename>"
msgstr ""

#. Tag: entry
#: security_firewall.xml:834
#, no-c-format
msgid "YPBIND_OPTIONS"
msgstr ""

#. Tag: entry
#: security_firewall.xml:837
#, no-c-format
msgid "-p 24500"
msgstr ""

#. Tag: entry
#: security_firewall.xml:842
#, no-c-format
msgid "<filename> /etc/sysconfig/ypserv </filename>"
msgstr ""

#. Tag: entry
#: security_firewall.xml:847
#, no-c-format
msgid "YPXFRD_ARGS"
msgstr ""

#. Tag: entry
#: security_firewall.xml:850
#, no-c-format
msgid "-p 24501"
msgstr ""

#. Tag: entry
#: security_firewall.xml:855
#, no-c-format
msgid "YPSERV_ARGS"
msgstr ""

#. Tag: entry
#: security_firewall.xml:858
#, no-c-format
msgid "-p 24502"
msgstr ""

#. Tag: entry
#: security_firewall.xml:863
#, no-c-format
msgid "YPPASSWDD_ARGS"
msgstr ""

#. Tag: entry
#: security_firewall.xml:866
#, no-c-format
msgid "--port 24503"
msgstr ""

#. Tag: para
#: security_firewall.xml:874
#, no-c-format
msgid "You need to restart any related services that are affected by these static port configurations for the changes to take effect. You can see the currently assigned rpcbind ports by using the command <command>rpcinfo -p</command> . On success, the statically configured ports should show up there."
msgstr ""

#. Tag: para
#: security_firewall.xml:882
#, no-c-format
msgid "Apart from the port configuration for network services running in userspace there are also ports that are used by the Linux kernel directly when it comes to NFS. One of these ports is <literal>nfs_callback_tcpport</literal> . It is only required for NFS protocol versions older than 4.1. There is a sysctl named <literal>fs.nfs.nfs_callback_tcpport</literal> to configure this port. This sysctl node only appears dynamically when NFS mounts are active. Therefore it is best to configure the port via kernel module parameters. This can be achieved by creating a file as shown in <xref linkend=\"ex-security-firewall-nfscallback\"/> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:896
#, no-c-format
msgid "Callback port configuration for the <literal>nfs</literal> kernel module in <filename>/etc/modprobe.d/60-nfs.conf</filename>"
msgstr ""

#. Tag: screen
#: security_firewall.xml:897
#, no-c-format
msgid "options nfs callback_tcpport=21005\n"
      ""
msgstr ""

#. Tag: para
#: security_firewall.xml:901
#, no-c-format
msgid "To make this change effective it is easiest to reboot the machine. Otherwise all NFS services need to be stopped and the <literal>nfs</literal> kernel module needs to be reloaded. To verify the active NFS callback port, check the output of <command>cat /sys/module/nfs/parameters/callback_tcpport</command> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:909
#, no-c-format
msgid "For easy handling of the now statically configured RPC ports, it is useful to create a new &firewalld; service definition. This service definition groups all related ports and, for example, makes it easy to make them accessible in a specific zone. In <xref linkend=\"ex-security-firewall-newrpcservice\"/> this is done for the NFS ports as they have been configured in the accompanying examples."
msgstr ""

#. Tag: title
#: security_firewall.xml:919
#, no-c-format
msgid "Commands to define a new &firewalld; RPC service for NFS"
msgstr ""

#. Tag: screen
#: security_firewall.xml:920
#, no-c-format
msgid "&prompt.root;<command>firewall-cmd --permanent --new-service=nfs-rpc</command>\n"
      "&prompt.root;<command>firewall-cmd --permanent --service=nfs-rpc --set-description=\"NFS related, statically configured RPC ports\"</command>\n"
      "# add UDP and TCP ports for the given sequence\n"
      "&prompt.root;<command>for port in 21001 21002 21003 21004; do\n"
      "    firewall-cmd --permanent --service=nfs-rpc --add-port ${port}/udp --add-port ${port}/tcp\n"
      "done</command>\n"
      "# the callback port is TCP only\n"
      "&prompt.root;<command>firewall-cmd --permanent --service=nfs-rpc --add-port 21005/tcp</command>\n"
      "\n"
      "# show the complete definition of the new custom service\n"
      "&prompt.root;<command>firewall-cmd --info-service=nfs-rpc --permanent -v</command>\n"
      "nfs-rpc\n"
      "  summary:\n"
      "  description: NFS and related, statically configured RPC ports\n"
      "  ports: 4711/tcp 21001/udp 21001/tcp 21002/udp 21002/tcp 21003/udp 21003/tcp 21004/udp 21004/tcp\n"
      "  protocols:\n"
      "  source-ports:\n"
      "  modules:\n"
      "  destination:\n"
      "\n"
      "# reload firewalld to make the new service definition available\n"
      "&prompt.root;<command>firewall-cmd --reload</command>\n"
      "\n"
      "# the new service definition can now be used to open the ports for example in the internal zone\n"
      "&prompt.root;<command>firewall-cmd --add-service=nfs-rpc --zone=internal</command>\n"
      ""
msgstr ""

#. Tag: title
#: security_firewall.xml:950
#, no-c-format
msgid "Using <package>firewall-rpcbind-helper</package> for configuring static ports"
msgstr ""

#. Tag: para
#: security_firewall.xml:951
#, no-c-format
msgid "The steps to configure static ports as shown in the previous section can be simplified by using the &suse; helper tool <command>firewall-rpc-helper.py</command> . Install it with <command>zypper in firewalld-rpcbind-helper</command> ."
msgstr ""

#. Tag: para
#: security_firewall.xml:957
#, no-c-format
msgid "The tool allows interactive configuration of the service patterns discussed in the previous section. It can also display current port assignments and can be used for scripting. For details, see <command>firewall-rpc-helper.py --help</command> ."
msgstr ""

#. Tag: title
#: security_firewall.xml:968
#, no-c-format
msgid "Migrating from &susefirewall;"
msgstr ""

#. Tag: title
#: security_firewall.xml:970
#, no-c-format
msgid "Creating a &firewalld; configuration for &ay;"
msgstr ""

#. Tag: para
#: security_firewall.xml:971
#, no-c-format
msgid "See the <citetitle>Firewall Configuration</citetitle> section of the &ayguide; to learn how to create a &firewalld; configuration for &ay;."
msgstr ""

#. Tag: para
#: security_firewall.xml:982
#, no-c-format
msgid "When upgrading from <phrase os=\"sles;sled\">any service pack of &productname; 12</phrase> <phrase os=\"osuse\">any version of &productname; before 15.0</phrase> to &productname; &productnumber;, &susefirewall; is not changed and remains active. There is no automatic migration, so you must migrate to &firewalld; manually. &firewalld; includes a helper migration script, <command>susefirewall2-to-firewalld</command> . Depending on the complexity of your &susefirewall; configuration, the script may perform a perfect migration, or it may fail. Most likely it will partially succeed and you have to review your new &firewalld; configuration and make adjustments."
msgstr ""

#. Tag: para
#: security_firewall.xml:994
#, no-c-format
msgid "The resulting configuration makes &firewalld; behave somewhat like &susefirewall;. To take full advantage of &firewalld;'s features, you may elect to create a new configuration, rather than trying to migrate your old configuration. It is safe to run the <command>susefirewall2-to-firewalld</command> script with no options, as it makes no permanent changes to your system. However, if you are administering the system remotely you could get locked out."
msgstr ""

#. Tag: para
#: security_firewall.xml:1002
#, no-c-format
msgid "Install and run <command>susefirewall2-to-firewalld</command> :"
msgstr ""

#. Tag: screen
#: security_firewall.xml:1005
#, no-c-format
msgid "&prompt.root;zypper in susefirewall2-to-firewalld\n"
      "&prompt.root;susefirewall2-to-firewalld\n"
      "INFO: Reading the /etc/sysconfig/SuSEfirewall2 file\n"
      "INFO: Ensuring all firewall services are in a well-known state.\n"
      "INFO: This will start/stop/restart firewall services and it's likely\n"
      "INFO: to cause network disruption.\n"
      "INFO: If you do not wish for this to happen, please stop the script now!\n"
      "5...4...3...2...1...Lets do it!\n"
      "INFO: Stopping firewalld\n"
      "INFO: Restarting SuSEfirewall2_init\n"
      "INFO: Restarting SuSEfirewall2\n"
      "INFO: DIRECT: Adding direct rule=\"ipv4 -t filter -A INPUT -p udp -m udp --dport 5353 -m pkttype\n"
      "  --pkt-type multicast -j ACCEPT\"\n"
      "[...]\n"
      "INFO: Enabling direct rule=ipv6 -t filter -A INPUT -p udp -m udp --dport 546 -j ACCEPT\n"
      "INFO: Enabling direct rule=ipv6 -t filter -A INPUT -p udp -m udp --dport 5353 -m pkttype\n"
      "  --pkt-type multicast -j ACCEPT\n"
      "INFO: Enable logging for denied packets\n"
      "INFO: ##########################################################\n"
      "INFO:\n"
      "INFO: The dry-run has been completed. Please check the above output to ensure\n"
      "INFO: that everything looks good.\n"
      "INFO:\n"
      "INFO: ###########################################################\n"
      "INFO: Stopping firewalld\n"
      "INFO: Restarting SuSEfirewall2_init\n"
      "INFO: Restarting SuSEfirewall2\n"
      ""
msgstr ""

#. Tag: para
#: security_firewall.xml:1033
#, no-c-format
msgid "This results in a lot of output, which you may wish to direct to a file for easier review:"
msgstr ""

#. Tag: screen
#: security_firewall.xml:1036
#, no-c-format
msgid "&prompt.root;susefirewall2-to-firewalld | tee newfirewallrules.txt"
msgstr ""

#. Tag: para
#: security_firewall.xml:1037
#, no-c-format
msgid "The script supports these options:"
msgstr ""

#. Tag: term
#: security_firewall.xml:1042
#, no-c-format
msgid "<command>-c</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:1044
#, no-c-format
msgid "Commit changes. The script makes changes to the system, so make sure you only use this option if you are really happy with the proposed changes. This <emphasis>will</emphasis> reset your current &firewalld; configuration, so make sure you make backups!"
msgstr ""

#. Tag: term
#: security_firewall.xml:1052
#, no-c-format
msgid "<command>-d</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:1054
#, no-c-format
msgid "Super noisy. Use it to file bug reports but be careful to mask sensitive information."
msgstr ""

#. Tag: term
#: security_firewall.xml:1060
#, no-c-format
msgid "<command>-h</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:1062
#, no-c-format
msgid "This message."
msgstr ""

#. Tag: term
#: security_firewall.xml:1068
#, no-c-format
msgid "<command>-q</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:1070
#, no-c-format
msgid "No output. Errors will not be printed either!"
msgstr ""

#. Tag: term
#: security_firewall.xml:1076
#, no-c-format
msgid "<command>-v</command>"
msgstr ""

#. Tag: para
#: security_firewall.xml:1078
#, no-c-format
msgid "Verbose mode. It will print warnings and other informative messages."
msgstr ""

#. Tag: title
#: security_firewall.xml:1087
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: security_firewall.xml:1088
#, no-c-format
msgid "The most up-to-date information and other documentation about the &firewalld; package is found in <filename>/usr/share/doc/packages/firewalld</filename> . The home page of the netfilter and iptables project, <link xlink:href=\"https://www.netfilter.org\"/> , provides a large collection of documents about iptables in general in many languages."
msgstr ""

