# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2023-03-27 22:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: ay_create_control_file.xml:12
#, no-c-format
msgid "Creating an &ay; control file"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:20
#, no-c-format
msgid "Collecting information"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:22
#, no-c-format
msgid "To create the control file, you need to collect information about the systems you are going to install. This includes hardware data and network information among other things. Make sure you have the following information about the machines you want to install:"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:31
#, no-c-format
msgid "Hard disk types and sizes"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:36
#, no-c-format
msgid "Graphical interface and attached monitor, if any"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:41
#, no-c-format
msgid "Network interface and MAC address if known (for example, when using DHCP)"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:47
#, no-c-format
msgid "Also verify that both <package>autoyast2-installation</package> and <package>autoyast2</package> are installed."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:53
#, no-c-format
msgid "Using the configuration management system (CMS)"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:55
#, no-c-format
msgid "To create the control file for one or more computers, a configuration interface based on &yast; is provided. This system depends on existing modules which are usually used to configure a computer in regular operation mode, for example, after &productname; is installed."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:62
#, no-c-format
msgid "The configuration management system lets you easily create control files and manage a repository of configurations for use in a networked environment with multiple clients."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:81
#, no-c-format
msgid "Configuration system"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:93
#, no-c-format
msgid "Creating a new control file"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:94
#, no-c-format
msgid "The easiest way to create an &ay; profile is to use an existing &productname; system as a template. On an already installed system, launch <menuchoice><guimenu>&yast;</guimenu> <guimenu>Miscellaneous</guimenu> <guimenu>Autoinstallation Configuration</guimenu></menuchoice> . Then select <menuchoice><guimenu>Tools</guimenu> <guimenu>Create Reference Profile</guimenu></menuchoice> from the menu. Choose the system components you want to include in the profile. Alternatively, create a profile containing the complete system configuration by launching <menuchoice><guimenu>&yast;</guimenu> <guimenu>Miscellaneous</guimenu> <guimenu>Autoinstallation Cloning System</guimenu></menuchoice> or running <command>sudo yast clone_system</command> from the command line."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:107
#, no-c-format
msgid "Both methods will create the file <filename>/root/autoinst.xml</filename> . The cloned profile can be used to set up an identical clone of the system it was created from. However, you will usually want to adjust the file to allow for installing multiple machines that are very similar, but not identical. This can be done by adjusting the profile with your favorite text/XML editor."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:116
#, no-c-format
msgid "Sensitive data in profiles"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:117
#, no-c-format
msgid "Be aware that the profile might contain sensitive information such as password hashes and registration keys."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:121
#, no-c-format
msgid "Carefully review the exported profiles and make sure to keep file permissions restrictive."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:126
#, no-c-format
msgid "With some exceptions, almost all resources of the control file can be configured using the configuration management system. The system offers flexibility and the configuration of some resources is identical to the one available in the &yast; control center. In addition to the existing and familiar modules new interfaces were created for special and complex configurations, for example for partitioning, general options and software."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:134
#, no-c-format
msgid "Furthermore, using a CMS guarantees the validity of the resulting control file and its direct use for starting automated installation."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:138
#, no-c-format
msgid "Make sure the configuration system is installed (package <systemitem class=\"resource\">autoyast2</systemitem> ). Call &ay; using the &yast; control center or as root with the following command (make sure the <envar>DISPLAY</envar> variable is set correctly to start the graphical user interface instead of the text-based one):"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:145
#, no-c-format
msgid "/sbin/yast2 autoyast"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:149
#, no-c-format
msgid "Creating/editing a control file manually"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:151
#, no-c-format
msgid "You need to create the control file manually and ensure that it has a valid syntax. To verify if the file has a valid XML structure, you can use the utility <command>xmllint</command> available with the <systemitem>libxml2</systemitem> package:"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:158
#, no-c-format
msgid "If editing the control file manually, make sure it has a valid syntax. To check the syntax, use the tools already available on the distribution. For example, to verify that the file is well-formed (has a valid XML structure), use the utility <command>xmllint</command> available with the <systemitem>libxml2</systemitem> package:"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:166
#, no-c-format
msgid "xmllint &lt;control file&gt;"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:168
#, no-c-format
msgid "If the control file is not well formed, for example, if a tag is not closed, <command>xmllint</command> will report the errors."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:173
#, no-c-format
msgid "To validate the control file, use the tool <command>jing</command> from the package with the same name. During validation, misplaced or missing tags and attributes and wrong attribute values are detected. <phrase os=\"sles\">The <package>jing</package> package is provided with the &sdk;.</phrase>"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:180
#, no-c-format
msgid "jing /usr/share/YaST2/schema/autoyast/rng/profile.rng &lt;control file&gt;"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:182
#, no-c-format
msgid "<literal>/usr/share/YaST2/schema/autoyast/rng/profile.rng</literal> is provided by the package <literal>yast2-schema-default</literal> . This file describes the syntax and classes of an &ay; profile."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:188
#, no-c-format
msgid "<literal>/usr/share/YaST2/schema/autoyast/rng/profile.rng</literal> is provided by the package <literal>yast2-schema-micro</literal> . This file describes the syntax and classes of an &ay; profile."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:195
#, no-c-format
msgid "Schema extensions"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:196
#, no-c-format
msgid "&ay; can be extended by other products and modules, but the schema does not contain the specification for those extensions. As a consequence, when &ay; is given a profile that uses one of those extensions, it might report the profile as invalid."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:202
#, no-c-format
msgid "Thus, starting in &productname; <phrase os=\"osuse\">15.3</phrase> <phrase os=\"sles;sled\">SP3</phrase> , &ay; does not validate top-level unknown sections, and ignores them. For example, in the example below, <literal>&lt;sap-inst&gt;</literal> is not validated. The rest is validated as usual."
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:210
#, no-c-format
msgid "&lt;general&gt;\n"
      "  &lt;mode&gt;\n"
      "    &lt;confirm config:type=\"boolean\"&gt;true&lt;/confirm&gt;\n"
      "  &lt;/mode&gt;\n"
      "&lt;/general&gt;\n"
      "\n"
      "&lt;sap-inst&gt;\n"
      "  &lt;!-- this section is not validated --&gt;&gt;\n"
      "&lt;/sap-inst&gt;\n"
      ""
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:222
#, no-c-format
msgid "Before going on with the autoinstallation, fix any errors resulting from such checks. The autoinstallation process cannot be started with an invalid and not well-formed control file."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:228
#, no-c-format
msgid "You can use any XML editor available on your system or any text editor with XML support (for example, Emacs, Vim). <phrase os=\"osuse;sles;sled\">However, it is not optimal to create the control file manually for multiple machines, and it should only be seen as an interface between the autoinstallation engine and the Configuration Management System (CMS)</phrase> ."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:238
#, no-c-format
msgid "Using Emacs as an XML editor"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:239
#, no-c-format
msgid "The built-in nxml-mode turns Emacs into a fully-fledged XML editor with automatic tag completion and validation. Refer to the Emacs help for instructions on how to set up nxml-mode."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:247
#, no-c-format
msgid "Creating a control file via script with XSLT"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:249
#, no-c-format
msgid "If you have a template and want to change a few things via script or command line, use an XSLT processor like <literal>xsltproc</literal> . For example, if you have an &ay; control file and want to fill out the host name via script for any reason. (If doing this often, you should consider scripting it.)"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:257
#, no-c-format
msgid "First, create an XSL file:"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:262
#, no-c-format
msgid "Example file for replacing the host name/domain by script"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:263
#, no-c-format
msgid "&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"
      "&lt;xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n"
      "  xmlns:y2=\"http://www.suse.com/1.0/yast2ns\"\n"
      "  xmlns:config=\"http://www.suse.com/1.0/configns\"\n"
      "  xmlns=\"http://www.suse.com/1.0/yast2ns\"\n"
      "  version=\"1.0\"&gt;\n"
      "  &lt;xsl:output method=\"xml\" encoding=\"UTF-8\" indent=\"yes\" omit-xml-declaration=\"no\" cdata-section-elements=\"source\"/&gt;\n"
      "\n"
      "  &lt;!-- the parameter names --&gt;\n"
      "  &lt;xsl:param name=\"hostname\"/&gt;\n"
      "  &lt;xsl:param name=\"domain\"/&gt;\n"
      "\n"
      "  &lt;xsl:template match=\"/\"&gt;\n"
      "    &lt;xsl:apply-templates select=\"@*|node()\"/&gt;\n"
      "  &lt;/xsl:template&gt;\n"
      "\n"
      "  &lt;xsl:template match=\"y2:dns\"&gt;\n"
      "    &lt;xsl:copy&gt;\n"
      "      &lt;!-- where to copy the parameters --&gt;\n"
      "      &lt;domain&gt;&lt;xsl:value-of select=\"string($domain)\"/&gt;&lt;/domain&gt;\n"
      "      &lt;hostname&gt;&lt;xsl:value-of select=\"string($hostname)\"/&gt;&lt;/hostname&gt;\n"
      "      &lt;xsl:apply-templates select=\"@*|node()\"/&gt;\n"
      "    &lt;/xsl:copy&gt;\n"
      "  &lt;/xsl:template&gt;\n"
      "\n"
      "\n"
      "  &lt;xsl:template match=\"@*|node()\" &gt;\n"
      "    &lt;xsl:copy&gt;\n"
      "      &lt;xsl:apply-templates select=\"@*|node()\"/&gt;\n"
      "    &lt;/xsl:copy&gt;\n"
      "  &lt;/xsl:template&gt;\n"
      "\n"
      "&lt;/xsl:stylesheet&gt;\n"
      ""
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:299
#, no-c-format
msgid "This file expects the host name and the domain name as parameters from the user."
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:304
#, no-c-format
msgid "&lt;xsl:param name=\"hostname\"/&gt;\n"
      "&lt;xsl:param name=\"domain\"/&gt;"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:307
#, no-c-format
msgid "There will be a copy of those parameters in the DNS section of the control file. This means that if there already is a domain element in the DNS section, you will get a second one, which will cause conflicts."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:335
#, no-c-format
msgid "For more information about XSLT, go to the official Web page <link xlink:href=\"http://www.w3.org/TR/xslt\">www.w3.org/TR/xslt</link>"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:341
#, no-c-format
msgid "Checking a control file"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:343
#, no-c-format
msgid "Depending on the use case, creating an &ay; profile can be difficult, especially if you build a dynamic profile using rules/classes, ERB templates or pre-scripts. For more information, see <xref linkend=\"part-dynamic-profiles\"/> ."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:350
#, no-c-format
msgid "Starting with &productname; <phrase os=\"osuse\">15.3</phrase> <phrase os=\"sles;sled\">15 SP3</phrase> <phrase os=\"slemicro\">5.1</phrase> , &ay; validates the profile during the installation, reporting any problem found to the user. Although it is recommended to check whether the profile is correct or not, you can disable this behavior by setting the <literal>YAST_SKIP_XML_VALIDATION</literal> boot parameter to <literal>1</literal> ."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:362
#, no-c-format
msgid "Moreover, to simplify the testing and debugging process, &ay; offers the <literal>check-profile</literal> command, which takes care of fetching, building and, optionally, importing the profile to detect any potential problem."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:370
#, no-c-format
msgid "Results may vary"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:371
#, no-c-format
msgid "Although this command uses the same approach as the installation, the results may vary depending on the differences between the current system and installation media: &yast; package versions, architecture, etc."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:379
#, no-c-format
msgid "Use only trusted profiles"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:380
#, no-c-format
msgid "You must be careful when running this command because pre-installation scripts and ERB code would run as the <literal>root</literal> user. Use only profiles that you trust."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:388
#, no-c-format
msgid "Basic checks"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:389
#, no-c-format
msgid "The simplest way to use this command is just to read and validate the profile:"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:393
#, no-c-format
msgid "&prompt.sudo; yast2 autoyast check-profile filename=autoinst.xml output=result.xml"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:394
#, no-c-format
msgid "The <filename>result.xml</filename> file contains the result of evaluating the profile. Bear in mind that, even if you do not use any advanced feature, the content of <filename>autoinst.xml</filename> and <filename>result.xml</filename> may differ. The reason is that &ay; does some cleaning up when it processes the profile."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:401
#, no-c-format
msgid "<literal>check-profile</literal> can deal with remote files too:"
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:404
#, no-c-format
msgid "&prompt.sudo; yast2 autoyast check-profile filename=http://192.168.1.100/autoinst.xml output=result.xml"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:408
#, no-c-format
msgid "Running pre-scripts"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:409
#, no-c-format
msgid "Optionally, &ay; can run the scripts that are included in the profile, reporting any error found during the execution. This is especially relevant if you are using a pre-installation script to modify the profile. To enable this feature, you need to set the <literal>run-scripts</literal> option to <literal>true</literal> ."
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:416
#, no-c-format
msgid "&prompt.sudo; yast2 autoyast check-profile filename=http://192.168.1.100/autoinst.xml output=result.xml run-scripts=true"
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:418
#, no-c-format
msgid "Scripts run as root"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:419
#, no-c-format
msgid "You must be careful when enabling the <literal>run-scripts</literal> option, because the scripts will run as root and they may affect the current system."
msgstr ""

#. Tag: title
#: ay_create_control_file.xml:428
#, no-c-format
msgid "Importing the profile"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:429
#, no-c-format
msgid "It is possible to face some problems when importing a valid profile, even if it is correct. The reason is that &ay; does not perform any logic check when fetching, building and validating the profile."
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:434
#, no-c-format
msgid "To anticipate such problems, the <literal>check-profile</literal> command imports the profile and reports problems that it has detected. As it may take a while, you can disable this behavior by setting the <literal>import-all</literal> option to <literal>false</literal> ."
msgstr ""

#. Tag: screen
#: ay_create_control_file.xml:440
#, no-c-format
msgid "&prompt.sudo; yast2 autoyast check-profile filename=http://192.168.1.100/autoinst.xml output=result.xml import-all=false"
msgstr ""

#. Tag: para
#: ay_create_control_file.xml:441
#, no-c-format
msgid "Importing the profile is a safe operation and does not alter the underlying system in any way."
msgstr ""

