# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-06-13 22:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: libvirt_configuration_virsh.xml:8
#, no-c-format
msgid "Configuring virtual machines with &virsh;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:11
#, no-c-format
msgid "You can use &virsh; to configure virtual machines (VM) on the command line as an alternative to using the &vmm;. With &virsh;, you can control the state of a VM, edit the configuration of a VM or even migrate a VM to another host. The following sections describe how to manage VMs by using &virsh;."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:24
#, no-c-format
msgid "Editing the VM configuration"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:26
#, no-c-format
msgid "The configuration of a VM is stored in an XML file in <filename>/etc/libvirt/qemu/</filename> and looks like this:"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:32
#, no-c-format
msgid "Example XML configuration file"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:33
#, no-c-format
msgid "\n"
      "&lt;domain type='kvm'&gt;\n"
      "  &lt;name&gt;sles15&lt;/name&gt;\n"
      "  &lt;uuid&gt;ab953e2f-9d16-4955-bb43-1178230ee625&lt;/uuid&gt;\n"
      "  &lt;memory unit='KiB'&gt;2097152&lt;/memory&gt;\n"
      "  &lt;currentMemory unit='KiB'&gt;2097152&lt;/currentMemory&gt;\n"
      "  &lt;vcpu placement='static'&gt;2&lt;/vcpu&gt;\n"
      "  &lt;os&gt;\n"
      "    &lt;type arch='x86_64' machine='pc-q35-2.0'&gt;hvm&lt;/type&gt;\n"
      "  &lt;/os&gt;\n"
      "  &lt;features&gt;...&lt;/features&gt;\n"
      "  &lt;cpu mode='custom' match='exact' check='partial'&gt;\n"
      "    &lt;model fallback='allow'&gt;Skylake-Client-IBRS&lt;/model&gt;\n"
      "  &lt;/cpu&gt;\n"
      "  &lt;clock&gt;...&lt;/clock&gt;\n"
      "  &lt;on_poweroff&gt;destroy&lt;/on_poweroff&gt;\n"
      "  &lt;on_reboot&gt;restart&lt;/on_reboot&gt;\n"
      "  &lt;on_crash&gt;destroy&lt;/on_crash&gt;\n"
      "  &lt;pm&gt;\n"
      "    &lt;suspend-to-mem enabled='no'/&gt;\n"
      "    &lt;suspend-to-disk enabled='no'/&gt;\n"
      "  &lt;/pm&gt;\n"
      "  &lt;devices&gt;\n"
      "    &lt;emulator&gt;/usr/bin/qemu-system-x86_64&lt;/emulator&gt;\n"
      "    &lt;disk type='file' device='disk'&gt;...&lt;/disk&gt;\n"
      "  &lt;/devices&gt;\n"
      "  ...\n"
      "&lt;/domain&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:64
#, no-c-format
msgid "If you want to edit the configuration of a &vmguest;, check if it is offline:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:69
#, no-c-format
msgid "&prompt.sudo;<command>virsh list --inactive</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:71
#, no-c-format
msgid "If your &vmguest; is in this list, you can safely edit its configuration:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:75
#, no-c-format
msgid "&prompt.sudo;<command>virsh edit <replaceable>NAME_OF_VM_GUEST</replaceable></command>\n"
      "    "
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:78
#, no-c-format
msgid "Before saving the changes, &virsh; validates your input against a RelaxNG schema."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:84
#, no-c-format
msgid "Changing the machine type"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:86
#, no-c-format
msgid "When installing with the <command>virt-install</command> tool, the machine type for a &vmguest; is <emphasis>pc-q35</emphasis> by default. The machine type is stored in the &vmguest;'s configuration file in the <tag>type</tag> element:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:93
#, no-c-format
msgid "&lt;type arch='x86_64' machine='pc-q35-2.3'&gt;hvm&lt;/type&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:95
#, no-c-format
msgid "As an example, the following procedure shows how to change this value to the machine type <literal>q35</literal> . The value <literal>q35</literal> is an Intel* chipset and includes <xref linkend=\"gloss-vt-acronym-pcie\"/> , supports up to 12 USB ports, and has support for <xref linkend=\"gloss-vt-acronym-sata\"/> and <xref linkend=\"gloss-vt-acronym-iommu\"/> . <!-- IRQ routing has also been improved. -->"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:107
#, no-c-format
msgid "Changing machine type"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:118
#, no-c-format
msgid "Edit the configuration for this &vmguest;:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:124
#, no-c-format
msgid "Replace the value of the <tag class=\"attribute\">machine</tag> attribute with <tag class=\"attvalue\">pc-q35-2.0</tag> :"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:128
#, no-c-format
msgid "&lt;type arch='x86_64' machine='pc-q35-2.0'&gt;hvm&lt;/type&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:137
#, no-c-format
msgid "Check if the machine type has changed. Log in to the &vmguest; and run the following command:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:141
#, no-c-format
msgid "&prompt.sudo;<command>dmidecode | grep Product</command>\n"
      "Product Name: Standard PC (Q35 + ICH9, 2009)"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:147
#, no-c-format
msgid "Machine type update recommendations"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:148
#, no-c-format
msgid "Whenever the QEMU version on the host system is upgraded (for example, when upgrading the &vmhost; to a new service pack), upgrade the machine type of the &vmguest;s to the latest available version. To check, use the command <command>qemu-system-x86_64 -M help</command> on the &vmhost;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:154
#, no-c-format
msgid "The default machine type <literal>pc-i440fx</literal> , for example, is regularly updated. If your &vmguest; still runs with a machine type of <literal>pc-i440fx-1.<replaceable>X</replaceable></literal> , we strongly recommend an update to <literal>pc-i440fx-2.<replaceable>X</replaceable></literal> . This allows taking advantage of the most recent updates and corrections in machine definitions, and ensures better future compatibility."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:166
#, no-c-format
msgid "Configuring hypervisor features"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:168
#, no-c-format
msgid "<command>libvirt</command> automatically enables a default set of hypervisor features that are sufficient in most circumstances, but also allows enabling and disabling features as needed. As an example, Xen does not support enabling PCI pass-through by default. It must be enabled with the <literal>passthrough</literal> setting. Hypervisor features can be configured with &virsh;. Look for the <tag>&lt;features&gt;</tag> element in the &vmguest;'s configuration file and adjust the various features as required. Continuing with the &xen; pass-through example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:179
#, no-c-format
msgid "&prompt.sudo;virsh edit sle15sp1\n"
      " &lt;features&gt;\n"
      "    &lt;xen&gt;\n"
      "      &lt;passthrough/&gt;\n"
      "    &lt;/xen&gt;\n"
      " &lt;/features&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:187
#, no-c-format
msgid "Save your changes and restart the &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:191
#, no-c-format
msgid "See the <citetitle>Hypervisor features</citetitle> section of the libvirt <citetitle>Domain XML format</citetitle> manual at <link xlink:href=\"https://libvirt.org/formatdomain.html#elementsFeatures\"/> for more information."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:199
#, no-c-format
msgid "Configuring CPU"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:201
#, no-c-format
msgid "Many aspects of the virtual CPUs presented to &vmguest;s are configurable with &virsh;. The number of current and maximum CPUs allocated to a &vmguest; can be changed, as well as the model of the CPU and its feature set. The following subsections describe how to change the common CPU settings of a &vmguest;."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:210
#, no-c-format
msgid "Configuring the number of CPUs"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:211
#, no-c-format
msgid "The number of allocated CPUs is stored in the &vmguest;'s XML configuration file in <filename>/etc/libvirt/qemu/</filename> in the <tag class=\"attribute\">vcpu</tag> element:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:216
#, no-c-format
msgid "&lt;vcpu placement='static'&gt;1&lt;/vcpu&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:218
#, no-c-format
msgid "In this example, the &vmguest; has only one allocated CPU. The following procedure shows how to change the number of allocated CPUs for the &vmguest;:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:226
#, no-c-format
msgid "Check whether your &vmguest; is inactive:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:229
#, no-c-format
msgid "&prompt.sudo;<command>virsh list --inactive</command>\n"
      "Id    Name                           State\n"
      "----------------------------------------------------\n"
      "-     sles15                         shut off"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:241
#, no-c-format
msgid "Change the number of allocated CPUs:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:244
#, no-c-format
msgid "&lt;vcpu placement='static'&gt;2&lt;/vcpu&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:247
#, no-c-format
msgid "Restart the &vmguest;:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:253
#, no-c-format
msgid "Check if the number of CPUs in the VM has changed."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:256
#, no-c-format
msgid "\n"
      "&prompt.sudo;<command>virsh vcpuinfo sled15</command>\n"
      "VCPU:           0\n"
      "CPU:            N/A\n"
      "State:          N/A\n"
      "CPU time        N/A\n"
      "CPU Affinity:   yy\n"
      "\n"
      "VCPU:           1\n"
      "CPU:            N/A\n"
      "State:          N/A\n"
      "CPU time        N/A\n"
      "CPU Affinity:   yy\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:272
#, no-c-format
msgid "You can also change the number of CPUs while the &vmguest; is running. CPUs can be hotplugged until the maximum number configured at &vmguest; start is reached. Likewise they can be hot-unplugged until the lower limit of 1 is reached. The following example demonstrates changing the active CPU count from 2 to pre-defined maximum of 4."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:281
#, no-c-format
msgid "Check the current live vcpu count:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:284
#, no-c-format
msgid "&prompt.sudo;<command>virsh vcpucount sles15 | grep live</command>\n"
      "maximum      live           4\n"
      "current      live           2\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:290
#, no-c-format
msgid "Change the current, or active, number of CPUs to 4:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:293
#, no-c-format
msgid "&prompt.sudo;<command>virsh setvcpus sles15 --count 4 --live</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:296
#, no-c-format
msgid "Check that the current live vcpu count is now 4:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:299
#, no-c-format
msgid "&prompt.sudo;<command>virsh vcpucount sles15 | grep live</command>\n"
      "maximum      live           4\n"
      "current      live           4\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:306
#, no-c-format
msgid "Exceeding 255 CPUs"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:307
#, no-c-format
msgid "With &kvm; it is possible to define a &vmguest; with more than 255 CPUs, however additional configuration is necessary to start and run the &vmguest;. The <literal>ioapic</literal> feature needs to be tuned and an IOMMU device needs to be added to the &vmguest;. Below is an example configuration for 288 CPUs."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:314
#, no-c-format
msgid "\n"
      "&lt;domain&gt;\n"
      " &lt;vcpu placement='static'&gt;288&lt;/vcpu&gt;\n"
      " &lt;features&gt;\n"
      "  &lt;ioapic driver='qemu'/&gt;\n"
      " &lt;/features&gt;\n"
      " &lt;devices&gt;\n"
      "  &lt;iommu model='intel'&gt;\n"
      "   &lt;driver intremap='on' eim='on'/&gt;\n"
      "  &lt;/iommu&gt;\n"
      " &lt;/devices&gt;\n"
      "&lt;/domain&gt;\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:330
#, no-c-format
msgid "Configuring the CPU model"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:331
#, no-c-format
msgid "The CPU model exposed to a &vmguest; can often influence the workload running within it. The default CPU model is derived from a CPU mode known as <literal>host-model</literal> ."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:336
#, no-c-format
msgid "&lt;cpu mode='host-model'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:337
#, no-c-format
msgid "When starting a &vmguest; with CPU mode <literal>host-model</literal> , &libvirt; will copy its model of the host CPU into the &vmguest; definition. The host CPU model and features copied to the &vmguest; definition can be observed in the output of the <command>virsh capabilities</command> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:343
#, no-c-format
msgid "Another interesting CPU mode is <literal>host-passthrough</literal> ."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:346
#, no-c-format
msgid "&lt;cpu mode='host-passthrough'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:347
#, no-c-format
msgid "When starting a &vmguest; with CPU mode <literal>host-passthrough</literal> , it is presented with a CPU that is exactly the same as the &vmhost; CPU. This can be useful when the &vmguest; workload requires CPU features not available in &libvirt;'s simplified <literal>host-model</literal> CPU. The <literal>host-passthrough</literal> CPU mode is also required in some cases, for example, when running &vmguest;s with more than 4TB of memory. The <literal>host-passthrough</literal> CPU mode comes with the disadvantage of reduced migration flexibility. A &vmguest; with <literal>host-passthrough</literal> CPU mode can only be migrated to a &vmhost; with identical hardware."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:357
#, no-c-format
msgid "When using the <literal>host-passthrough</literal> CPU mode, it is still possible to disable undesirable features. The following configuration will present the &vmguest; with a CPU that is exactly the same as the host CPU but with the <literal>vmx</literal> feature disabled."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:363
#, no-c-format
msgid "\n"
      "&lt;cpu mode='host-passthrough'&gt;\n"
      "  &lt;feature policy='disable' name='vmx'/&gt;\n"
      "  &lt;/cpu&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:368
#, no-c-format
msgid "The <literal>custom</literal> CPU mode is another common mode used to define a normalized CPU that can be migrated throughout dissimilar hosts in a cluster. For example, in a cluster with hosts containing Nehalem, IvyBridge, and SandyBridge CPUs, the &vmguest; can be configured with a <literal>custom</literal> CPU mode that contains a Nehalem CPU model."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:375
#, no-c-format
msgid "\n"
      "&lt;cpu mode='custom' match='exact'&gt;\n"
      "  &lt;model fallback='allow'&gt;Nehalem&lt;/model&gt;\n"
      "  &lt;feature policy='require' name='vme'/&gt;\n"
      "  &lt;feature policy='require' name='ds'/&gt;\n"
      "  &lt;feature policy='require' name='acpi'/&gt;\n"
      "  &lt;feature policy='require' name='ss'/&gt;\n"
      "  &lt;feature policy='require' name='ht'/&gt;\n"
      "  &lt;feature policy='require' name='tm'/&gt;\n"
      "  &lt;feature policy='require' name='pbe'/&gt;\n"
      "  &lt;feature policy='require' name='dtes64'/&gt;\n"
      "  &lt;feature policy='require' name='monitor'/&gt;\n"
      "  &lt;feature policy='require' name='ds_cpl'/&gt;\n"
      "  &lt;feature policy='require' name='vmx'/&gt;\n"
      "  &lt;feature policy='require' name='est'/&gt;\n"
      "  &lt;feature policy='require' name='tm2'/&gt;\n"
      "  &lt;feature policy='require' name='xtpr'/&gt;\n"
      "  &lt;feature policy='require' name='pdcm'/&gt;\n"
      "  &lt;feature policy='require' name='dca'/&gt;\n"
      "  &lt;feature policy='require' name='rdtscp'/&gt;\n"
      "  &lt;feature policy='require' name='invtsc'/&gt;\n"
      "  &lt;/cpu&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:398
#, no-c-format
msgid "For more information on &libvirt;'s CPU model and topology options, see the <citetitle>CPU model and topology</citetitle> documentation at <link xlink:href=\"https://libvirt.org/formatdomain.html#cpu-model-and-topology\"/> ."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:406
#, no-c-format
msgid "Changing boot options"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:408
#, no-c-format
msgid "The boot menu of the &vmguest; can be found in the <tag>os</tag> element and usually looks like this:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:413
#, no-c-format
msgid "&lt;os&gt;\n"
      "  &lt;type&gt;hvm&lt;/type&gt;\n"
      "  &lt;loader&gt;readonly='yes' secure='no' type='rom'/&gt;/usr/lib/xen/boot/hvmloader&lt;/loader&gt;\n"
      "  &lt;nvram template='/usr/share/OVMF/OVMF_VARS.fd'/&gt;/var/lib/libvirt/nvram/guest_VARS.fd&lt;/nvram&gt;\n"
      "  &lt;boot dev='hd'/&gt;\n"
      "  &lt;boot dev='cdrom'/&gt;\n"
      "  &lt;bootmenu enable='yes' timeout='3000'/&gt;\n"
      "  &lt;smbios mode='sysinfo'/&gt;\n"
      "  &lt;bios useserial='yes' rebootTimeout='0'/&gt;\n"
      "  &lt;/os&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:424
#, no-c-format
msgid "In this example, two devices are available, <tag class=\"attvalue\">hd</tag> and <tag class=\"attvalue\">cdrom</tag> . The configuration also reflects the actual boot order, so the <tag class=\"attvalue\">hd</tag> comes before the <tag class=\"attvalue\">cdrom</tag> ."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:432
#, no-c-format
msgid "Changing boot order"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:433
#, no-c-format
msgid "The &vmguest;'s boot order is represented through the order of devices in the XML configuration file. As the devices are interchangeable, it is possible to change the boot order of the &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:440
#, no-c-format
msgid "Open the &vmguest;'s XML configuration."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:446
#, no-c-format
msgid "Change the sequence of the bootable devices."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:449
#, no-c-format
msgid "\n"
      "...\n"
      "&lt;boot dev='cdrom'/&gt;\n"
      "&lt;boot dev='hd'/&gt;\n"
      "...\n"
      "      "
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:457
#, no-c-format
msgid "Check if the boot order was changed successfully by looking at the boot menu in the BIOS of the &vmguest;."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:466
#, no-c-format
msgid "Using direct kernel boot"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:467
#, no-c-format
msgid "Direct Kernel Boot allows you to boot from a kernel and initrd stored on the host. Set the path to both files in the <tag>kernel</tag> and <tag>initrd</tag> elements:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:472
#, no-c-format
msgid "&lt;os&gt;\n"
      "    ...\n"
      "  &lt;kernel&gt;/root/f8-i386-vmlinuz&lt;/kernel&gt;\n"
      "  &lt;initrd&gt;/root/f8-i386-initrd&lt;/initrd&gt;\n"
      "    ...\n"
      "&lt;os&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:478
#, no-c-format
msgid "To enable Direct Kernel Boot:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:489
#, no-c-format
msgid "Inside the <tag>os</tag> element, add a <tag>kernel</tag> element and the path to the kernel file on the host:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:493
#, no-c-format
msgid "...\n"
      "&lt;kernel&gt;/root/f8-i386-vmlinuz&lt;/kernel&gt;\n"
      "..."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:498
#, no-c-format
msgid "Add an <tag>initrd</tag> element and the path to the initrd file on the host:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:502
#, no-c-format
msgid "...\n"
      "&lt;initrd&gt;/root/f8-i386-initrd&lt;/initrd&gt;\n"
      "..."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:507
#, no-c-format
msgid "Start your VM to boot from the new kernel:"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:516
#, no-c-format
msgid "Configuring memory allocation"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:518
#, no-c-format
msgid "The amount of memory allocated for the &vmguest; can also be configured with &virsh;. It is stored in the <tag>memory</tag> element and defines the maximum allocation of memory for the &vmguest; at boot time. The optional <tag>currentMemory</tag> element defines the actual memory allocated to the &vmguest;. <tag>currentMemory</tag> can be less than <tag>memory</tag> , allowing for increasing (or <emphasis>ballooning</emphasis> ) the memory while the &vmguest; is running. If <tag>currentMemory</tag> is omitted, it defaults to the same value as the <tag>memory</tag> element."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:528
#, no-c-format
msgid "You can adjust memory settings by editing the &vmguest; configuration, but be aware that changes do not take place until the next boot. The following steps demonstrate changing a &vmguest; to boot with 4G of memory, but allow later expansion to 8G:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:537
#, no-c-format
msgid "Open the &vmguest;'s XML configuration:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:543
#, no-c-format
msgid "Search for the <tag>memory</tag> element and set to 8G:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:546
#, no-c-format
msgid "...\n"
      "&lt;memory unit='KiB'&gt;8388608&lt;/memory&gt;\n"
      "..."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:551
#, no-c-format
msgid "If the <tag>currentMemory</tag> element does not exist, add it below the <tag>memory</tag> element, or change its value to 4G:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:555
#, no-c-format
msgid "\n"
      "[...]\n"
      "&lt;memory unit='KiB'&gt;8388608&lt;/memory&gt;\n"
      "&lt;currentMemory unit='KiB'&gt;4194304&lt;/currentMemory&gt;\n"
      "[...]"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:562
#, no-c-format
msgid "Changing the memory allocation while the &vmguest; is running can be done with the <command>setmem</command> subcommand. The following example shows increasing the memory allocation to 8G:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:570
#, no-c-format
msgid "Check &vmguest; existing memory settings:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:573
#, no-c-format
msgid "&prompt.sudo;<command>virsh dominfo sles15 | grep memory</command>\n"
      "Max memory:     8388608 KiB\n"
      "Used memory:    4194608 KiB\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:579
#, no-c-format
msgid "Change the used memory to 8G:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:582
#, no-c-format
msgid "&prompt.sudo;<command>virsh setmem sles15 8388608</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:585
#, no-c-format
msgid "Check the updated memory settings:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:588
#, no-c-format
msgid "&prompt.sudo;<command>virsh dominfo sles15 | grep memory</command>\n"
      "Max memory:     8388608 KiB\n"
      "Used memory:    8388608 KiB\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:595
#, no-c-format
msgid "Large memory &vmguest;s"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:596
#, no-c-format
msgid "&vmguest;s with memory requirements of 4TB or more must currently use the <literal>host-passthrough</literal> CPU model."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:603
#, no-c-format
msgid "Adding a PCI device"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:605
#, no-c-format
msgid "To assign a PCI device to &vmguest; with &virsh;, follow these steps:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:611
#, no-c-format
msgid "Identify the host PCI device to assign to the &vmguest;. In the following example, we are assigning a DEC network card to the guest:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:615
#, no-c-format
msgid "&prompt.sudo;<command>lspci -nn</command>\n"
      "[...]\n"
      "<emphasis role=\"bold\">03:07.0</emphasis> Ethernet controller [0200]: Digital Equipment Corporation DECchip \\\n"
      "21140 [FasterNet] [1011:0009] (rev 22)\n"
      "[...]"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:620
#, no-c-format
msgid "Write down the device ID ( <literal>03:07.0</literal> in this case)."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:625
#, no-c-format
msgid "Gather detailed information about the device using <command>virsh nodedev-dumpxml <replaceable>ID</replaceable></command> . To get the <replaceable>ID</replaceable> , replace the colon and the period in the device ID ( <literal>03:07.0</literal> ) with underscores. Prefix the result with <quote>pci_0000_</quote> : <literal>pci_0000_03_07_0</literal> ."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:632
#, no-c-format
msgid "&prompt.sudo;<command>virsh nodedev-dumpxml pci_0000_03_07_0</command>\n"
      "&lt;device&gt;\n"
      "  &lt;name&gt;pci_0000_03_07_0&lt;/name&gt;\n"
      "  &lt;path&gt;/sys/devices/pci0000:00/0000:00:14.4/0000:03:07.0&lt;/path&gt;\n"
      "  &lt;parent&gt;pci_0000_00_14_4&lt;/parent&gt;\n"
      "  &lt;driver&gt;\n"
      "    &lt;name&gt;tulip&lt;/name&gt;\n"
      "  &lt;/driver&gt;\n"
      "  &lt;capability type='pci'&gt;\n"
      "    <emphasis role=\"bold\">&lt;domain&gt;0&lt;/domain&gt;\n"
      "    &lt;bus&gt;3&lt;/bus&gt;\n"
      "    &lt;slot&gt;7&lt;/slot&gt;\n"
      "    &lt;function&gt;0&lt;/function&gt;</emphasis>\n"
      "    &lt;product id='0x0009'&gt;DECchip 21140 [FasterNet]&lt;/product&gt;\n"
      "    &lt;vendor id='0x1011'&gt;Digital Equipment Corporation&lt;/vendor&gt;\n"
      "    &lt;numa node='0'/&gt;\n"
      "  &lt;/capability&gt;\n"
      "&lt;/device&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:650
#, no-c-format
msgid "Write down the values for domain, bus, and function (see the previous XML code printed in bold)."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:656
#, no-c-format
msgid "Detach the device from the host system prior to attaching it to the &vmguest;:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:660
#, no-c-format
msgid "&prompt.sudo;<command>virsh nodedev-detach pci_0000_03_07_0</command>\n"
      "  Device pci_0000_03_07_0 detached"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:663
#, no-c-format
msgid "Multi-function PCI devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:664
#, no-c-format
msgid "When using a multi-function PCI device that does not support FLR (function level reset) or PM (power management) reset, you need to detach all its functions from the &vmhost;. The whole device must be reset for security reasons. <systemitem>libvirt</systemitem> will refuse to assign the device if one of its functions is still in use by the &vmhost; or another &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:675
#, no-c-format
msgid "Convert the domain, bus, slot, and function value from decimal to hexadecimal. In our example, domain = 0, bus = 3, slot = 7, and function = 0. Ensure that the values are inserted in the right order:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:680
#, no-c-format
msgid "&prompt.user;<command>printf \"&lt;address domain='0x%x' bus='0x%x' slot='0x%x' function='0x%x'/&gt;\\n\" 0 3 7 0</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:681
#, no-c-format
msgid "This results in:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:684
#, no-c-format
msgid "&lt;address domain='0x0' bus='0x3' slot='0x7' function='0x0'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:687
#, no-c-format
msgid "Run <command>virsh edit</command> on your domain, and add the following device entry in the <literal>&lt;devices&gt;</literal> section using the result from the previous step:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:692
#, no-c-format
msgid "&lt;hostdev mode='subsystem' type='pci' managed='yes'&gt;\n"
      "  &lt;source&gt;\n"
      "    &lt;address domain='0x0' bus='0x03' slot='0x07' function='0x0'/&gt;\n"
      "  &lt;/source&gt;\n"
      "&lt;/hostdev&gt;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:698
#, no-c-format
msgid "<literal>managed</literal> compared to <literal>unmanaged</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:699
#, no-c-format
msgid "<systemitem>libvirt</systemitem> recognizes two modes for handling PCI devices: they can be either <literal>managed</literal> or <literal>unmanaged</literal> . In the managed case, <systemitem>libvirt</systemitem> handles all details of unbinding the device from the existing driver if needed, resetting the device, binding it to <systemitem>vfio-pci</systemitem> before starting the domain, etc. When the domain is terminated or the device is removed from the domain, <systemitem>libvirt</systemitem> unbinds from <systemitem>vfio-pci</systemitem> and rebinds to the original driver in the case of a managed device. If the device is unmanaged, the user must ensure all of these management aspects of the device are done before assigning it to a domain, and after the device is no longer used by the domain."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:715
#, no-c-format
msgid "In the example above, the <literal>managed='yes'</literal> option means that the device is managed. To switch the device mode to unmanaged, set <literal>managed='no'</literal> in the listing above. If you do so, you need to take care of the related driver with the <command>virsh nodedev-detach</command> and <command>virsh nodedev-reattach</command> commands. Prior to starting the &vmguest; you need to detach the device from the host by running <command>virsh nodedev-detach pci_0000_03_07_0</command> . In case the &vmguest; is not running, you can make the device available for the host by running <command>virsh nodedev-reattach pci_0000_03_07_0</command> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:729
#, no-c-format
msgid "Shut down the &vmguest; and disable &selnx; if it is running on the host."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:743
#, no-c-format
msgid "&slsa;11 SP4 &kvm; guests"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:744
#, no-c-format
msgid "On a newer &qemu; machine type (pc-i440fx-2.0 or higher) with &slsa;11 SP4 &kvm; guests, the <systemitem class=\"resource\">acpiphp</systemitem> module is not loaded by default in the guest. This module must be loaded to enable hotplugging of disk and network devices. To load the module manually, use the command <command>modprobe acpiphp</command> . It is also possible to autoload the module by adding <literal>install acpiphp /bin/true</literal> to the <filename>/etc/modprobe.conf.local</filename> file."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:756
#, no-c-format
msgid "&kvm; guests using &qemu; Q35 machine type"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:757
#, no-c-format
msgid "&kvm; guests using the &qemu; Q35 machine type have a PCI topology that includes a <literal>pcie-root</literal> controller and seven <literal>pcie-root-port</literal> controllers. The <literal>pcie-root</literal> controller does not support hotplugging. Each <literal>pcie-root-port</literal> controller supports hotplugging a single PCIe device. PCI controllers cannot be hotplugged, so plan accordingly and add more <literal>pcie-root-port</literal> s if more than seven PCIe devices will be hotplugged. A <literal>pcie-to-pci-bridge</literal> controller can be added to support hotplugging legacy PCI devices. See <link xlink:href=\"https://libvirt.org/pci-hotplug.html\"/> for more information about PCI topology between &qemu; machine types."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:773
#, no-c-format
msgid "&pciback; for &zseries;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:774
#, no-c-format
msgid "In order to support &zseries;, &qemu; extended PCI representation by allowing to configure extra attributes. Two more attributes&mdash; <option>uid</option> and <option>fid</option> &mdash;were added to the <literal>&lt;zpci/&gt;</literal> &libvirt; specification. <option>uid</option> represents user-defined identifier, while <option>fid</option> represents PCI function identifier. These attributes are optional and if you do not specify them, they are automatically generated with non-conflicting values."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:784
#, no-c-format
msgid "To include zPCI attribute in your domain specification, use the following example definition:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:788
#, no-c-format
msgid "\n"
      "&lt;controller type='pci' index='0' model='pci-root'/&gt;\n"
      "&lt;controller type='pci' index='1' model='pci-bridge'&gt;\n"
      "  &lt;model name='pci-bridge'/&gt;\n"
      "  &lt;target chassisNr='1'/&gt;\n"
      "  &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0'&gt;\n"
      "    &lt;zpci uid='0x0001' fid='0x00000000'/&gt;\n"
      "  &lt;/address&gt;\n"
      "&lt;/controller&gt;\n"
      "&lt;interface type='bridge'&gt;\n"
      "  &lt;source bridge='virbr0'/&gt;\n"
      "  &lt;model type='virtio'/&gt;\n"
      "  &lt;address type='pci' domain='0x0000' bus='0x01' slot='0x01' function='0x0'&gt;\n"
      "    &lt;zpci uid='0x0007' fid='0x00000003'/&gt;\n"
      "  &lt;/address&gt;\n"
      "&lt;/interface&gt;\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:808
#, no-c-format
msgid "Adding a USB device"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:810
#, no-c-format
msgid "To assign a USB device to &vmguest; using &virsh;, follow these steps:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:816
#, no-c-format
msgid "Identify the host USB device to assign to the &vmguest;:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:819
#, no-c-format
msgid "&prompt.sudo;<command>lsusb</command>\n"
      "[...]\n"
      "Bus 001 Device 003: ID <emphasis role=\"bold\">0557:2221</emphasis> ATEN International Co., Ltd Winbond Hermon\n"
      "[...]"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:823
#, no-c-format
msgid "Write down the vendor and product IDs. In our example, the vendor ID is <literal>0557</literal> and the product ID is <literal>2221</literal> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:829
#, no-c-format
msgid "Run <command>virsh edit</command> on your domain, and add the following device entry in the <literal>&lt;devices&gt;</literal> section using the values from the previous step:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:834
#, no-c-format
msgid "&lt;hostdev mode='subsystem' type='usb'&gt;\n"
      "  &lt;source startupPolicy='optional'&gt;\n"
      "   <emphasis role=\"bold\">&lt;vendor id='0557'/&gt;\n"
      "   &lt;product id='2221'/&gt;</emphasis>\n"
      "  &lt;/source&gt;\n"
      "&lt;/hostdev&gt;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:841
#, no-c-format
msgid "Vendor/product or device's address"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:842
#, no-c-format
msgid "Instead of defining the host device with <tag class=\"emptytag\">vendor</tag> and <tag class=\"emptytag\">product</tag> IDs, you can use the <tag class=\"emptytag\">address</tag> element as described for host PCI devices in <xref linkend=\"sec-libvirt-config-pci-virsh\"/> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:852
#, no-c-format
msgid "Shut down the &vmguest; and disable &selnx; if it is running on the host:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:855
#, no-c-format
msgid "&prompt.sudo;<command>setsebool -P virt_use_sysfs 1</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:858
#, no-c-format
msgid "Start your &vmguest; to make the assigned PCI device available:"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:866
#, no-c-format
msgid "Adding SR-IOV devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:868
#, no-c-format
msgid "Single Root I/O Virtualization ( <xref linkend=\"vt-io-sriov\"/> ) capable <xref linkend=\"gloss-vt-acronym-pcie\"/> devices can replicate their resources, so they appear to be multiple devices. Each of these <quote>pseudo-devices</quote> can be assigned to a &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:875
#, no-c-format
msgid "<xref linkend=\"vt-io-sriov\"/> is an industry specification that was created by the Peripheral Component Interconnect Special Interest Group (PCI-SIG) consortium. It introduces physical functions (PF) and virtual functions (VF). PFs are full <xref linkend=\"gloss-vt-acronym-pcie\"/> functions used to manage and configure the device. PFs also can move data. VFs lack the configuration and management part—they only can move data and a reduced set of configuration functions. As VFs do not have all <xref linkend=\"gloss-vt-acronym-pcie\"/> functions, the host operating system or the <xref linkend=\"gloss-vt-hypervisor\"/> must support <xref linkend=\"vt-io-sriov\"/> to be able to access and initialize VFs. The theoretical maximum for VFs is 256 per device (consequently the maximum for a dual-port Ethernet card would be 512). In practice this maximum is much lower, since each VF consumes resources."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:893
#, no-c-format
msgid "The following requirements must be met to use <xref linkend=\"vt-io-sriov\"/> :"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:899
#, no-c-format
msgid "An <xref linkend=\"vt-io-sriov\"/> -capable network card (as of <phrase role=\"productname\"><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"sles;sled\">15</phrase></phrase> , only network cards support <xref linkend=\"vt-io-sriov\"/> )"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:908
#, no-c-format
msgid "An AMD64/Intel 64 host supporting hardware virtualization (AMD-V or Intel VT-x) <phrase os=\"sles;sled\">, see <xref linkend=\"sec-kvm-requires-hardware\"/> for more information</phrase>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:915
#, no-c-format
msgid "A chipset that supports device assignment (AMD-Vi or Intel <xref linkend=\"gloss-vt-acronym-vtd\"/> )"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:921
#, no-c-format
msgid "&libvirt; 0.9.10 or better"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:926
#, no-c-format
msgid "<xref linkend=\"vt-io-sriov\"/> drivers must be loaded and configured on the host system"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:932
#, no-c-format
msgid "A host configuration that meets the requirements listed at <xref linkend=\"ann-vt-io-require\"/>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:938
#, no-c-format
msgid "A list of the PCI addresses of the VF(s) that will be assigned to &vmguest;s"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:945
#, no-c-format
msgid "Checking if a device is SR-IOV-capable"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:946
#, no-c-format
msgid "The information whether a device is SR-IOV-capable can be obtained from its PCI descriptor by running <command>lspci</command> . A device that supports <xref linkend=\"vt-io-sriov\"/> reports a capability similar to the following:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:952
#, no-c-format
msgid "Capabilities: [160 v1] Single Root I/O Virtualization (<xref linkend=\"vt-io-sriov\"/>)"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:955
#, no-c-format
msgid "Adding an SR-IOV device at &vmguest; creation"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:956
#, no-c-format
msgid "Before adding an SR-IOV device to a &vmguest; when initially setting it up, the &vmhost; already needs to be configured as described in <xref linkend=\"sec-libvirt-config-io-config\"/> ."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:965
#, no-c-format
msgid "Loading and configuring the SR-IOV host drivers"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:966
#, no-c-format
msgid "To access and initialize VFs, an SR-IOV-capable driver needs to be loaded on the host system."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:972
#, no-c-format
msgid "Before loading the driver, make sure the card is properly detected by running <command>lspci</command> . The following example shows the <command>lspci</command> output for the dual-port Intel 82576NS network card:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:978
#, no-c-format
msgid "&prompt.sudo;<command>/sbin/lspci | grep 82576</command>\n"
      "01:00.0 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "01:00.1 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "04:00.0 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "04:00.1 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:983
#, no-c-format
msgid "In case the card is not detected, it is likely that the hardware virtualization support in the BIOS/EFI has not been enabled. To check if hardware virtualization support is enabled, look at the settings in the host's BIOS."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:991
#, no-c-format
msgid "Check whether the <xref linkend=\"vt-io-sriov\"/> driver is already loaded by running <command>lsmod</command> . In the following example a check for the igb driver (for the Intel 82576NS network card) returns a result. That means the driver is already loaded. If the command returns nothing, the driver is not loaded."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:998
#, no-c-format
msgid "&prompt.sudo;<command>/sbin/lsmod | egrep \"^igb \"</command>\n"
      "igb                   185649  0"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1002
#, no-c-format
msgid "Skip the following step if the driver is already loaded. If the <xref linkend=\"vt-io-sriov\"/> driver is not yet loaded, the non- <xref linkend=\"vt-io-sriov\"/> driver needs to be removed first, before loading the new driver. Use <command>rmmod</command> to unload a driver. The following example unloads the non- <xref linkend=\"vt-io-sriov\"/> driver for the Intel 82576NS network card:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1011
#, no-c-format
msgid "&prompt.sudo;<command>/sbin/rmmod igbvf</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1014
#, no-c-format
msgid "Load the <xref linkend=\"vt-io-sriov\"/> driver subsequently using the <command>modprobe</command> command—the VF parameter ( <literal>max_vfs</literal> ) is mandatory:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1019
#, no-c-format
msgid "&prompt.sudo;<command>/sbin/modprobe igb max_vfs=8</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1023
#, no-c-format
msgid "As an alternative, you can also load the driver via SYSFS:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1028
#, no-c-format
msgid "Find the PCI ID of the physical NIC by listing Ethernet devices:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1031
#, no-c-format
msgid "&prompt.sudo;<command>lspci | grep Eth</command>\n"
      "06:00.0 Ethernet controller: Emulex Corporation OneConnect NIC (Skyhawk) (rev 10)\n"
      "06:00.1 Ethernet controller: Emulex Corporation OneConnect NIC (Skyhawk) (rev 10)"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1036
#, no-c-format
msgid "To enable VFs, echo the number of desired VFs to load to the <literal>sriov_numvfs</literal> parameter:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1040
#, no-c-format
msgid "&prompt.sudo;<command>echo 1 &gt; /sys/bus/pci/devices/0000:06:00.1/sriov_numvfs</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1043
#, no-c-format
msgid "Verify that the VF NIC was loaded:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1046
#, no-c-format
msgid "&prompt.sudo;<command>lspci | grep Eth</command>\n"
      "06:00.0 Ethernet controller: Emulex Corporation OneConnect NIC (Skyhawk) (rev 10)\n"
      "06:00.1 Ethernet controller: Emulex Corporation OneConnect NIC (Skyhawk) (rev 10)\n"
      "06:08.0 Ethernet controller: Emulex Corporation OneConnect NIC (Skyhawk) (rev 10)"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1052
#, no-c-format
msgid "Obtain the maximum number of VFs available:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1055
#, no-c-format
msgid "&prompt.sudo;<command>lspci -vvv -s 06:00.1 | grep 'Initial VFs'</command>\n"
      "                       Initial VFs: 32, Total VFs: 32, Number of VFs: 0,\n"
      "Function Dependency Link: 01"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1060
#, no-c-format
msgid "Create a <filename>/etc/systemd/system/before.service</filename> file which loads VF via SYSFS on boot:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1064
#, no-c-format
msgid "[Unit]\n"
      "Before=\n"
      "[Service]\n"
      "Type=oneshot\n"
      "RemainAfterExit=true\n"
      "ExecStart=/bin/bash -c \"echo 1 &gt; /sys/bus/pci/devices/0000:06:00.1/sriov_numvfs\"\n"
      "# beware, executable is run directly, not through a shell, check the man pages\n"
      "# systemd.service and systemd.unit for full syntax\n"
      "[Install]\n"
      "# target in which to start the service\n"
      "WantedBy=multi-user.target\n"
      "#WantedBy=graphical.target"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1078
#, no-c-format
msgid "Prior to starting the VM, it is required to create another service file ( <filename>after-local.service</filename> ) pointing to the <filename>/etc/init.d/after.local</filename> script that detaches the NIC. Otherwise the VM would fail to start:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1084
#, no-c-format
msgid "[Unit]\n"
      "Description=/etc/init.d/after.local Compatibility\n"
      "After=libvirtd.service\n"
      "Requires=libvirtd.service\n"
      "[Service]\n"
      "Type=oneshot\n"
      "ExecStart=/etc/init.d/after.local\n"
      "RemainAfterExit=true\n"
      "\n"
      "[Install]\n"
      "WantedBy=multi-user.target"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1097
#, no-c-format
msgid "Copy it to <filename>/etc/systemd/system</filename> ."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1100
#, no-c-format
msgid "#! /bin/sh\n"
      "# ...\n"
      "virsh nodedev-detach pci_0000_06_08_0"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1103
#, no-c-format
msgid "Save it as <filename>/etc/init.d/after.local</filename> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1108
#, no-c-format
msgid "Reboot the machine and check if the SR-IOV driver is loaded by re-running the <command>lspci</command> command from the first step of this procedure. If the SR-IOV driver was loaded successfully you should see additional lines for the VFs:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1114
#, no-c-format
msgid "01:00.0 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "01:00.1 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "01:10.0 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "01:10.1 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "01:10.2 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "[...]\n"
      "04:00.0 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "04:00.1 Ethernet controller: Intel Corporation 82576NS Gigabit Network Connection (rev 01)\n"
      "04:10.0 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "04:10.1 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "04:10.2 Ethernet controller: Intel Corporation 82576 Virtual Function (rev 01)\n"
      "[...]"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1131
#, no-c-format
msgid "Adding a VF network device to a &vmguest;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1132
#, no-c-format
msgid "When the <xref linkend=\"vt-io-sriov\"/> hardware is properly set up on the &vmhost;, you can add VFs to &vmguest;s. To do so, you need to collect some data first."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1138
#, no-c-format
msgid "Adding a VF network device to an existing &vmguest;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1139
#, no-c-format
msgid "The following procedure uses example data. Make sure to replace it by appropriate data from your setup."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1144
#, no-c-format
msgid "Use the <command>virsh nodedev-list</command> command to get the PCI address of the VF you want to assign and its corresponding PF. Numerical values from the <command>lspci</command> output shown in <xref linkend=\"sec-libvirt-config-io-config\"/> (for example <literal>01:00.0</literal> or <literal>04:00.1</literal> ) are transformed by adding the prefix \"pci_0000_\" and by replacing colons and dots with underscores. So a PCI ID listed as \"04:00.0\" by <command>lspci</command> is listed as \"pci_0000_04_00_0\" by virsh. The following example lists the PCI IDs for the second port of the Intel 82576NS network card:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1155
#, no-c-format
msgid "&prompt.sudo;<command>virsh nodedev-list | grep 0000_04_</command>\n"
      "<emphasis role=\"bold\">pci_0000_04_00_0</emphasis>\n"
      "<emphasis role=\"bold\">pci_0000_04_00_1</emphasis>\n"
      "pci_0000_04_10_0\n"
      "pci_0000_04_10_1\n"
      "pci_0000_04_10_2\n"
      "pci_0000_04_10_3\n"
      "pci_0000_04_10_4\n"
      "pci_0000_04_10_5\n"
      "pci_0000_04_10_6\n"
      "pci_0000_04_10_7\n"
      "pci_0000_04_11_0\n"
      "pci_0000_04_11_1\n"
      "pci_0000_04_11_2\n"
      "pci_0000_04_11_3\n"
      "pci_0000_04_11_4\n"
      "pci_0000_04_11_5"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1172
#, no-c-format
msgid "The first two entries represent the <emphasis role=\"bold\">PFs</emphasis> , whereas the other entries represent the VFs."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1178
#, no-c-format
msgid "Run the following <command>virsh nodedev-dumpxml</command> command on the PCI ID of the VF you want to add:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1182
#, no-c-format
msgid "&prompt.sudo;<command>virsh nodedev-dumpxml pci_0000_04_10_0</command>\n"
      "&lt;device&gt;\n"
      "  &lt;name&gt;pci_0000_04_10_0&lt;/name&gt;\n"
      "  &lt;parent&gt;pci_0000_00_02_0&lt;/parent&gt;\n"
      "  &lt;capability type='pci'&gt;\n"
      "    <emphasis role=\"bold\">&lt;domain&gt;0&lt;/domain&gt;\n"
      "    &lt;bus&gt;4&lt;/bus&gt;\n"
      "    &lt;slot&gt;16&lt;/slot&gt;\n"
      "    &lt;function&gt;0&lt;/function&gt;</emphasis>\n"
      "    &lt;product id='0x10ca'&gt;82576 Virtual Function&lt;/product&gt;\n"
      "    &lt;vendor id='0x8086'&gt;Intel Corporation&lt;/vendor&gt;\n"
      "    &lt;capability type='phys_function'&gt;\n"
      "      &lt;address domain='0x0000' bus='0x04' slot='0x00' function='0x0'/&gt;\n"
      "    &lt;/capability&gt;\n"
      "  &lt;/capability&gt;\n"
      "&lt;/device&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1198
#, no-c-format
msgid "The following data is needed for the next step:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1203
#, no-c-format
msgid "<literal>&lt;domain&gt;0&lt;/domain&gt;</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1208
#, no-c-format
msgid "<literal>&lt;bus&gt;4&lt;/bus&gt;</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1213
#, no-c-format
msgid "<literal>&lt;slot&gt;16&lt;/slot&gt;</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1218
#, no-c-format
msgid "<literal>&lt;function&gt;0&lt;/function&gt;</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1225
#, no-c-format
msgid "Create a temporary XML file (for example <filename>/tmp/vf-interface.xml</filename> containing the data necessary to add a VF network device to an existing &vmguest;. The minimal content of the file needs to look like the following:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1231
#, no-c-format
msgid "&lt;interface type='hostdev'&gt;<co xml:id=\"sriov-iface\"/>\n"
      " &lt;source&gt;\n"
      "  &lt;address type='pci' domain='0' bus='11' slot='16' function='0'2/&gt;<co xml:id=\"sriov-data\"/>\n"
      " &lt;/source&gt;\n"
      "&lt;/interface&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1238
#, no-c-format
msgid "VFs do not get a fixed MAC address; it changes every time the host reboots. When adding network devices the <quote>traditional</quote> way with <tag class=\"attribute\">hostdev</tag> , it would require to reconfigure the &vmguest;'s network device after each reboot of the host, because of the MAC address change. To avoid this kind of problem, &libvirt; introduced the <tag class=\"attvalue\">hostdev</tag> value, which sets up network-specific data <emphasis>before</emphasis> assigning the device."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1250
#, no-c-format
msgid "Specify the data you acquired in the previous step here."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1257
#, no-c-format
msgid "In case a device is already attached to the host, it cannot be attached to a &vmguest;. To make it available for guests, detach it from the host first:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1262
#, no-c-format
msgid "&prompt.sudo;<command>virsh nodedev-detach pci_0000_04_10_0</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1265
#, no-c-format
msgid "Add the VF interface to an existing &vmguest;:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1268
#, no-c-format
msgid "&prompt.sudo;<command>virsh attach-device <replaceable>GUEST</replaceable> /tmp/vf-interface.xml --<replaceable>OPTION</replaceable></command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1269
#, no-c-format
msgid "<replaceable>GUEST</replaceable> needs to be replaced by the domain name, ID or UUID of the &vmguest;. -- <replaceable>OPTION</replaceable> can be one of the following:"
msgstr ""

#. Tag: term
#: libvirt_configuration_virsh.xml:1276
#, no-c-format
msgid "<option>--persistent</option>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1278
#, no-c-format
msgid "This option will always add the device to the domain's persistent XML. In addition, if the domain is running, it will be hotplugged."
msgstr ""

#. Tag: term
#: libvirt_configuration_virsh.xml:1285
#, no-c-format
msgid "<option>--config</option>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1287
#, no-c-format
msgid "This option will only affect the persistent XML, even if the domain is running. The device will only show up in the &vmguest; on next boot."
msgstr ""

#. Tag: term
#: libvirt_configuration_virsh.xml:1294
#, no-c-format
msgid "<option>--live</option>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1296
#, no-c-format
msgid "This option will only affect a running domain. If the domain is inactive, the operation will fail. The device is not persisted in the XML and will not be available in the &vmguest; on next boot."
msgstr ""

#. Tag: term
#: libvirt_configuration_virsh.xml:1304
#, no-c-format
msgid "<option>--current</option>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1306
#, no-c-format
msgid "This option affects the current state of the domain. If the domain is inactive, the device is added to the persistent XML and will be available on next boot. If the domain is active, the device is hotplugged but not added to the persistent XML."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1317
#, no-c-format
msgid "To detach a VF interface, use the <command>virsh detach-device</command> command, which also takes the options listed above."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1326
#, no-c-format
msgid "Dynamic allocation of VFs from a pool"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1327
#, no-c-format
msgid "If you define the PCI address of a VF into a &vmguest;'s configuration statically as described in <xref linkend=\"sec-libvirt-config-io-attach\"/> , it is hard to migrate such guest to another host. The host must have identical hardware in the same location on the PCI bus, or the &vmguest; configuration must be modified prior to each start."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1334
#, no-c-format
msgid "Another approach is to create a &libvirt; network with a device pool that contains all the VFs of an <xref linkend=\"vt-io-sriov\"/> device. The &vmguest; then references this network, and each time it is started, a single VF is dynamically allocated to it. When the &vmguest; is stopped, the VF is returned to the pool, available for another guest."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1342
#, no-c-format
msgid "Defining network with pool of VFs on &vmhost;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1343
#, no-c-format
msgid "The following example of network definition creates a pool of all VFs for the <xref linkend=\"vt-io-sriov\"/> device with its physical function (PF) at the network interface <literal>eth0</literal> on the host:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1348
#, no-c-format
msgid "&lt;network&gt;\n"
      "  &lt;name&gt;passthrough&lt;/name&gt;\n"
      "    &lt;forward mode='hostdev' managed='yes'&gt;\n"
      "      &lt;pf dev='eth0'/&gt;\n"
      "    &lt;/forward&gt;\n"
      "  &lt;/network&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1354
#, no-c-format
msgid "To use this network on the host, save the above code to a file, for example <filename>/tmp/passthrough.xml</filename> , and execute the following commands. Remember to replace <literal>eth0</literal> with the real network interface name of your <xref linkend=\"vt-io-sriov\"/> device's PF:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1361
#, no-c-format
msgid "&prompt.sudo;<command>virsh net-define /tmp/passthrough.xml</command>\n"
      "&prompt.sudo;<command>virsh net-autostart passthrough</command>\n"
      "&prompt.sudo;<command>virsh net-start passthrough</command>"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1366
#, no-c-format
msgid "Configuring &vmguest;s to use VF from the pool"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1367
#, no-c-format
msgid "The following example of &vmguest; device interface definition uses a VF of the <xref linkend=\"vt-io-sriov\"/> device from the pool created in <xref linkend=\"libvirt-config-io-pool-host\"/> . &libvirt; automatically derives the list of all VFs associated with that PF the first time the guest is started."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1374
#, no-c-format
msgid "&lt;interface type='network'&gt;\n"
      "  &lt;source network='passthrough'&gt;\n"
      "&lt;/interface&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1377
#, no-c-format
msgid "After the first &vmguest; starts that uses the network with the pool of VFs, verify the list of associated VFs. Do so by running <command>virsh net-dumpxml passthrough</command> on the host."
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1382
#, no-c-format
msgid "&lt;network connections='1'&gt;\n"
      "  &lt;name&gt;passthrough&lt;/name&gt;\n"
      "  &lt;uuid&gt;a6a26429-d483-d4ed-3465-4436ac786437&lt;/uuid&gt;\n"
      "  &lt;forward mode='hostdev' managed='yes'&gt;\n"
      "    &lt;pf dev='eth0'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x10' function='0x1'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x10' function='0x3'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x10' function='0x5'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x10' function='0x7'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x11' function='0x1'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x11' function='0x3'/&gt;\n"
      "    &lt;address type='pci' domain='0x0000' bus='0x02' slot='0x11' function='0x5'/&gt;\n"
      "  &lt;/forward&gt;\n"
      "  &lt;/network&gt;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1400
#, no-c-format
msgid "Listing attached devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1402
#, no-c-format
msgid "Although there is no mechanism in &virsh; to list all &vmhost;'s devices that have already been attached to its &vmguest;s, you can list all devices attached to a specific &vmguest; by running the following command:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1408
#, no-c-format
msgid "virsh dumpxml <replaceable>VMGUEST_NAME</replaceable> | xpath -e /domain/devices/hostdev"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1410
#, no-c-format
msgid "For example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1414
#, no-c-format
msgid "\n"
      "&prompt.sudo;virsh dumpxml sles12 | -e xpath /domain/devices/hostdev\n"
      "Found 2 nodes:\n"
      "-- NODE --\n"
      "&lt;hostdev mode=\"subsystem\" type=\"pci\" managed=\"yes\"&gt;\n"
      "  &lt;driver name=\"xen\" /&gt;\n"
      "  &lt;source&gt;\n"
      "    &lt;address domain=\"0x0000\" bus=\"0x0a\" slot=\"0x10\" function=\"0x1\" /&gt;\n"
      "  &lt;/source&gt;\n"
      "  &lt;address type=\"pci\" domain=\"0x0000\" bus=\"0x00\" slot=\"0x0a\" function=\"0x0\" /&gt;\n"
      "  &lt;/hostdev&gt;\n"
      "-- NODE --\n"
      "&lt;hostdev mode=\"subsystem\" type=\"pci\" managed=\"yes\"&gt;\n"
      "  &lt;driver name=\"xen\" /&gt;\n"
      "  &lt;source&gt;\n"
      "    &lt;address domain=\"0x0000\" bus=\"0x0a\" slot=\"0x10\" function=\"0x2\" /&gt;\n"
      "  &lt;/source&gt;\n"
      "  &lt;address type=\"pci\" domain=\"0x0000\" bus=\"0x00\" slot=\"0x0b\" function=\"0x0\" /&gt;\n"
      "&lt;/hostdev&gt;\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1436
#, no-c-format
msgid "Listing SR-IOV devices attached via <literal>&lt;interface type='hostdev'&gt;</literal>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1437
#, no-c-format
msgid "For SR-IOV devices that are attached to the &vmhost; by means of <literal>&lt;interface type='hostdev'&gt;</literal> , you need to use a different XPath query:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1442
#, no-c-format
msgid "virsh dumpxml <replaceable>VMGUEST_NAME</replaceable> | xpath -e /domain/devices/interface/@type"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1446
#, no-c-format
msgid "Configuring storage devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1448
#, no-c-format
msgid "Storage devices are defined within the <tag>disk</tag> element. The usual <tag>disk</tag> element supports several attributes. The following two attributes are the most important:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1456
#, no-c-format
msgid "The <tag class=\"attribute\">type</tag> attribute describes the source of the virtual disk device. Valid values are <tag class=\"attvalue\">file</tag> , <tag class=\"attvalue\">block</tag> , <tag class=\"attvalue\">dir</tag> , <tag class=\"attvalue\">network</tag> , or <tag class=\"attvalue\">volume</tag> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1465
#, no-c-format
msgid "The <tag class=\"attribute\">device</tag> attribute indicates how the disk is exposed to the &vmguest; OS. As an example, possible values can include <tag class=\"attvalue\">floppy</tag> , <tag class=\"attvalue\">disk</tag> , <tag class=\"attvalue\">cdrom</tag> , and others."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1476
#, no-c-format
msgid "The following child elements are the most important:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1482
#, no-c-format
msgid "<tag>driver</tag> contains the driver and the bus. These are used by the &vmguest; to work with the new disk device."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1488
#, no-c-format
msgid "The <tag>target</tag> element contains the device name under which the new disk is shown in the &vmguest;. It also contains the optional bus attribute, which defines the type of bus on which the new disk should operate."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1497
#, no-c-format
msgid "The following procedure shows how to add storage devices to the &vmguest;:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1509
#, no-c-format
msgid "Add a <tag>disk</tag> element inside the <tag>disk</tag> element together with the attributes <tag class=\"attvalue\">type</tag> and <tag class=\"attvalue\">device</tag> :"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1514
#, no-c-format
msgid "&lt;disk type='file' device='disk'&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1517
#, no-c-format
msgid "Specify a <tag>driver</tag> element and use the default values:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1520
#, no-c-format
msgid "&lt;driver name='qemu' type='qcow2'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1523
#, no-c-format
msgid "Create a disk image, which will be used as a source for the new virtual disk device:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1527
#, no-c-format
msgid "&prompt.sudo;<command>qemu-img create -f qcow2 /var/lib/libvirt/images/sles15.qcow2 32G</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1530
#, no-c-format
msgid "Add the path for the disk source:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1533
#, no-c-format
msgid "&lt;source file='/var/lib/libvirt/images/sles15.qcow2'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1536
#, no-c-format
msgid "Define the target device name in the &vmguest; and the bus on which the disk should work:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1540
#, no-c-format
msgid "&lt;target dev='vda' bus='virtio'/&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1543
#, no-c-format
msgid "Restart your VM:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1546
#, no-c-format
msgid "&prompt.sudo;<command>virsh start sles15</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1550
#, no-c-format
msgid "Your new storage device should be available in the &vmguest; OS."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1555
#, no-c-format
msgid "Configuring controller devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1557
#, no-c-format
msgid "<command>libvirt</command> generally manages controllers automatically based on the type of virtual devices used by the &vmguest;. If the &vmguest; contains PCI and SCSI devices, PCI and SCSI controllers will be created and managed automatically. <command>libvirt</command> will also model controllers that are hypervisor-specific, for example, a <literal>virtio-serial</literal> controller for KVM &vmguest;s or a <literal>xenbus</literal> controller for Xen &vmguest;s. Although the default controllers and their configuration are generally fine, there may be use cases where controllers or their attributes need to be adjusted manually. For example, a virtio-serial controller may need more ports, or a xenbus controller may need more memory or more virtual interrupts."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1571
#, no-c-format
msgid "The xenbus controller is unique in that it serves as the controller for all Xen paravirtual devices. If a &vmguest; has many disk and/or network devices, the controller may need more memory. Xen's <literal>max_grant_frames</literal> attribute sets how many grant frames, or blocks of shared memory, are allocated to the <literal>xenbus</literal> controller for each &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1580
#, no-c-format
msgid "The default of 32 is enough in most circumstances, but a &vmguest; with a large number of I/O devices and an I/O-intensive workload may experience performance issues because of grant frame exhaustion. The <command>xen-diag</command> can be used to check the current and maximum <literal>max_grant_frames</literal> values for dom0 and your &vmguest;s. The &vmguest;s must be running:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1589
#, no-c-format
msgid "&prompt.sudo;virsh list\n"
      " Id   Name             State\n"
      "--------------------------------\n"
      " 0    Domain-0         running\n"
      " 3    sle15sp1         running\n"
      "\n"
      " &prompt.sudo;xen-diag gnttab_query_size 0\n"
      "domid=0: nr_frames=1, max_nr_frames=256\n"
      "\n"
      "&prompt.sudo;xen-diag gnttab_query_size 3\n"
      "domid=3: nr_frames=3, max_nr_frames=32\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1602
#, no-c-format
msgid "The <literal>sle15sp1</literal> guest is using only three frames out of 32. If you are seeing performance issues, and log entries that point to insufficient frames, increase the value with &virsh;. Look for the <literal>&lt;controller type='xenbus'&gt;</literal> line in the guest's configuration file, and add the <literal>maxGrantFrames</literal> control element:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1611
#, no-c-format
msgid "&prompt.sudo;virsh edit sle15sp1\n"
      " &lt;controller type='xenbus' index='0' maxGrantFrames='40'/&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1615
#, no-c-format
msgid "Save your changes and restart the guest. Now it should show your change:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1619
#, no-c-format
msgid "&prompt.sudo;xen-diag gnttab_query_size 3\n"
      "domid=3: nr_frames=3, max_nr_frames=40\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1623
#, no-c-format
msgid "Similar to maxGrantFrames, the xenbus controller also supports <option>maxEventChannels</option> . Event channels are like paravirtual interrupts, and in conjunction with grant frames, form a data transfer mechanism for paravirtual drivers. They are also used for inter-processor interrupts. &vmguest;s with a large number of vCPUs and/or many paravirtual devices may need to increase the maximum default value of 1023. maxEventChannels can be changed similarly to maxGrantFrames:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1633
#, no-c-format
msgid "&prompt.sudo;virsh edit sle15sp1\n"
      " &lt;controller type='xenbus' index='0' maxGrantFrames='128' maxEventChannels='2047'/&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1637
#, no-c-format
msgid "See the <citetitle>Controllers</citetitle> section of the libvirt <citetitle>Domain XML format</citetitle> manual at <link xlink:href=\"https://libvirt.org/formatdomain.html#elementsControllers\"/> for more information."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1645
#, no-c-format
msgid "Configuring video devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1647
#, no-c-format
msgid "When using the Virtual Machine Manager, only the Video device model can be defined. The amount of allocated VRAM or 2D/3D acceleration can only be changed in the XML configuration."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1654
#, no-c-format
msgid "Changing the amount of allocated VRAM"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1663
#, no-c-format
msgid "Change the size of the allocated VRAM:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1666
#, no-c-format
msgid "&lt;video&gt;\n"
      "&lt;model type='vga' vram='65535' heads='1'&gt;\n"
      "...\n"
      "&lt;/model&gt;\n"
      "&lt;/video&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1673
#, no-c-format
msgid "Check if the amount of VRAM in the VM has changed by looking at the amount in the Virtual Machine Manager."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1682
#, no-c-format
msgid "Changing the state of 2D/3D acceleration"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1685
#, no-c-format
msgid "Edit the configuration for an existing &vmguest;:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1688
#, no-c-format
msgid "&prompt.sudo;<command>virsh edit sles15</command>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1691
#, no-c-format
msgid "To enable/disable 2D/3D acceleration, change the value of <literal>accel3d</literal> and <literal>accel2d</literal> accordingly:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1695
#, no-c-format
msgid "\n"
      "&lt;video&gt;\n"
      " &lt;model&gt;\n"
      "  &lt;acceleration accel3d='yes' accel2d='no'&gt;\n"
      " &lt;/model&gt;\n"
      "&lt;/video&gt;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1704
#, no-c-format
msgid "Enabling 2D/3D acceleration"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1705
#, no-c-format
msgid "Only <literal>virtio</literal> and <literal>vbox</literal> video devices are capable of 2D/3D acceleration. You cannot enable it on other video devices."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1714
#, no-c-format
msgid "Configuring network devices"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1716
#, no-c-format
msgid "This section describes how to configure specific aspects of virtual network devices by using &virsh;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1721
#, no-c-format
msgid "Find more details about &libvirt; network interface specification in <link xlink:href=\"https://libvirt.org/formatdomain.html#elementsDriverBackendOptions\"/> ."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1727
#, no-c-format
msgid "Scaling network performance with multiqueue virtio-net"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1728
#, no-c-format
msgid "The multiqueue virtio-net feature scales the network performance by allowing the &vmguest;'s virtual CPUs to transfer packets in parallel. Refer to <xref linkend=\"kvm-qemu-multiqueue\"/> for more general information."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1734
#, no-c-format
msgid "To enable multiqueue virtio-net for a specific &vmguest;, edit its XML configuration as described in <xref linkend=\"sec-libvirt-config-editing-virsh\"/> and modify its network interface as follows:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1740
#, no-c-format
msgid "\n"
      "&lt;interface type='network'&gt;\n"
      " [...]\n"
      " &lt;model type='virtio'/&gt;\n"
      " &lt;driver name='vhost' queues='<replaceable>NUMBER_OF_QUEUES</replaceable>'/&gt;\n"
      "&lt;/interface&gt;\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1750
#, no-c-format
msgid "Using macvtap to share &vmhost; network interfaces"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1752
#, no-c-format
msgid "Macvtap provides direct attachment of a &vmguest; virtual interface to a host network interface. The macvtap-based interface extends the &vmhost; network interface and has its own MAC address on the same Ethernet segment. Typically, this is used to make both the &vmguest; and the &vmhost; show up directly on the switch that the &vmhost; is connected to."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1761
#, no-c-format
msgid "Macvtap cannot be used with a Linux bridge"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1762
#, no-c-format
msgid "Macvtap cannot be used with network interfaces already connected to a Linux bridge. Before attempting to create the macvtap interface, remove the interface from the bridge."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1770
#, no-c-format
msgid "&vmguest; to &vmhost; communication with macvtap"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1771
#, no-c-format
msgid "When using macvtap, a &vmguest; can communicate with other &vmguest;s, and with other external hosts on the network. But it cannot communicate with the &vmhost; on which the &vmguest; runs. This is the defined behavior of macvtap, because of the way the &vmhost;'s physical Ethernet is attached to the macvtap bridge. Traffic from the &vmguest; into that bridge that is forwarded to the physical interface cannot be bounced back up to the &vmhost;'s IP stack. Similarly, traffic from the &vmhost;'s IP stack that is sent to the physical interface cannot be bounced back up to the macvtap bridge for forwarding to the &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1784
#, no-c-format
msgid "Virtual network interfaces based on macvtap are supported by libvirt by specifying an interface type of <literal>direct</literal> . For example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1789
#, no-c-format
msgid "&lt;interface type='direct'&gt;\n"
      "   &lt;mac address='aa:bb:cc:dd:ee:ff'/&gt;\n"
      "   &lt;source dev='eth0' mode='bridge'/&gt;\n"
      "   &lt;model type='virtio'/&gt;\n"
      "   &lt;/interface&gt;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1795
#, no-c-format
msgid "The operation mode of the macvtap device can be controlled with the <literal>mode</literal> attribute. The following list show its possible values and a description for each:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1803
#, no-c-format
msgid "<literal>vepa</literal> : All &vmguest; packets are sent to an external bridge. Packets whose destination is a &vmguest; on the same &vmhost; as where the packet originates from are sent back to the &vmhost; by the VEPA capable bridge (today's bridges are typically not VEPA capable)."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1811
#, no-c-format
msgid "<literal>bridge</literal> : Packets whose destination is on the same &vmhost; as where they originate from are directly delivered to the target macvtap device. Both origin and destination devices need to be in <literal>bridge</literal> mode for direct delivery. If either one of them is in <literal>vepa</literal> mode, a VEPA capable bridge is required."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1820
#, no-c-format
msgid "<literal>private</literal> : All packets are sent to the external bridge and will only be delivered to a target &vmguest; on the same &vmhost; if they are sent through an external router or gateway and that device sends them back to the &vmhost;. This procedure is followed if either the source or destination device is in private mode."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1829
#, no-c-format
msgid "<literal>passthrough</literal> : A special mode that gives more power to the network interface. All packets will be forwarded to the interface, allowing virtio &vmguest;s to change the MAC address or set promiscuous mode to bridge the interface or create VLAN interfaces on top of it. Note that a network interface is not shareable in <literal>passthrough</literal> mode. Assigning an interface to a &vmguest; will disconnect it from the &vmhost;. For this reason SR-IOV virtual functions are often assigned to the &vmguest; in <literal>passthrough</literal> mode."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1844
#, no-c-format
msgid "Disabling a memory balloon device"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1846
#, no-c-format
msgid "Memory Balloon has become a default option for KVM. The device will be added to the &vmguest; explicitly, so you do not need to add this element in the &vmguest;'s XML configuration. However, if you want to disable Memory Balloon in the &vmguest; for any reason, you need to set <literal>model='none'</literal> as shown below:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1854
#, no-c-format
msgid "&lt;devices&gt;\n"
      "   &lt;memballoon model='none'/&gt;\n"
      "&lt;/device&gt;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1859
#, no-c-format
msgid "Configuring multiple monitors (dual head)"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1861
#, no-c-format
msgid "&libvirt; supports a dual head configuration to display the video output of the &vmguest; on multiple monitors."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1867
#, no-c-format
msgid "No support for &xen;"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1868
#, no-c-format
msgid "The &xen; hypervisor does not support dual head configuration."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1874
#, no-c-format
msgid "Configuring dual head"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1876
#, no-c-format
msgid "While the virtual machine is running, verify that the <package>xf86-video-qxl</package> package is installed in the &vmguest;:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1880
#, no-c-format
msgid "&prompt.user;rpm -q xf86-video-qxl"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1883
#, no-c-format
msgid "Shut down the &vmguest; and start editing its configuration XML as described in <xref linkend=\"sec-libvirt-config-editing-virsh\"/> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1889
#, no-c-format
msgid "Verify that the model of the virtual graphics card is 'qxl':"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1892
#, no-c-format
msgid "\n"
      "&lt;video&gt;\n"
      " &lt;model type='qxl' ... /&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1898
#, no-c-format
msgid "Increase the <option>heads</option> parameter in the graphics card model specification from the default <literal>1</literal> to <literal>2</literal> , for example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1903
#, no-c-format
msgid "\n"
      "&lt;video&gt;\n"
      " &lt;model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='2' primary='yes'/&gt;\n"
      " &lt;alias name='video0'/&gt;\n"
      " &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0'/&gt;\n"
      "&lt;/video&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1912
#, no-c-format
msgid "Configure the virtual machine to use the Spice display instead of VNC:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1915
#, no-c-format
msgid "\n"
      "&lt;graphics type='spice' port='5916' autoport='yes' listen='0.0.0.0'&gt;\n"
      " &lt;listen type='address' address='0.0.0.0'/&gt;\n"
      "&lt;/graphics&gt;\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1922
#, no-c-format
msgid "Start the virtual machine and connect to its display with <command>virt-viewer</command> , for example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:1926
#, no-c-format
msgid "&prompt.user;virt-viewer --connect qemu+ssh://<replaceable>USER@VM_HOST</replaceable>/system"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1929
#, no-c-format
msgid "From the list of VMs, select the one whose configuration you have modified and confirm with <guimenu>Connect</guimenu> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1935
#, no-c-format
msgid "After the graphical subsystem (Xorg) loads in the &vmguest;, select <menuchoice><guimenu>View</guimenu><guimenu>Displays</guimenu><guimenu>Display 2</guimenu></menuchoice> to open a new window with the second monitor's output."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1945
#, no-c-format
msgid "Crypto adapter pass-through to &kvm; guests on &zseries;"
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1948
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1949
#, no-c-format
msgid "&zseries; machines include cryptographic hardware with useful functions such as random number generation, digital signature generation, or encryption. &kvm; allows dedicating these crypto adapters to guests as pass-through devices. The means that the hypervisor cannot observe communications between the guest and the device."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1959
#, no-c-format
msgid "What is covered"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1960
#, no-c-format
msgid "You will learn how to dedicate a crypto adapter and domains on an &zseries; host to a &kvm; guest. The procedure includes the following basic steps:"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1966
#, no-c-format
msgid "Mask the crypto adapter and domains from the default driver on the host."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1971
#, no-c-format
msgid "Load the <literal>vfio-ap</literal> driver."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1976
#, no-c-format
msgid "Assign the crypto adapter and domains to the <literal>vfio-ap</literal> driver."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1982
#, no-c-format
msgid "Configure the guest to use the crypto adapter."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:1990
#, no-c-format
msgid "Requirements"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1993
#, no-c-format
msgid "You need to have the &qemu; / &libvirt; virtualization environment correctly installed and functional."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:1999
#, no-c-format
msgid "The <literal>vfio_ap</literal> and <literal>vfio_mdev</literal> modules for the running kernel need to be available on the host operating system."
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:2008
#, no-c-format
msgid "Dedicate a crypto adapter to a &kvm; host"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2011
#, no-c-format
msgid "Verify that the <literal>vfio_ap</literal> and <literal>vfio_mdev</literal> kernel modules are loaded on the host:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2015
#, no-c-format
msgid "&prompt.user;lsmod | grep vfio_"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2016
#, no-c-format
msgid "If any of them is not listed, load it manually, for example:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2019
#, no-c-format
msgid "&prompt.sudo;modprobe vfio_mdev"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2022
#, no-c-format
msgid "Create a new MDEV device on the host and verify that it was added:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2025
#, no-c-format
msgid "\n"
      "uuid=$(uuidgen)\n"
      "$ echo ${uuid} | sudo tee /sys/devices/vfio_ap/matrix/mdev_supported_types/vfio_ap-passthrough/create\n"
      "dmesg | tail\n"
      "[...]\n"
      "[272197.818811] iommu: Adding device 24f952b3-03d1-4df2-9967-0d5f7d63d5f2 to group 0\n"
      "[272197.818815] vfio_mdev 24f952b3-03d1-4df2-9967-0d5f7d63d5f2: MDEV: group_id = 0\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2035
#, no-c-format
msgid "Identify the device on the host's logical partition that you intend to dedicate to a &kvm; guest:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2039
#, no-c-format
msgid "&prompt.user;ls -l /sys/bus/ap/devices/\n"
      "[...]\n"
      "lrwxrwxrwx 1 root root 0 Nov 23 03:29 00.0016 -&gt; ../../../devices/ap/card00/00.0016/\n"
      "lrwxrwxrwx 1 root root 0 Nov 23 03:29 card00 -&gt; ../../../devices/ap/card00/\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2044
#, no-c-format
msgid "In this example, it is card <literal>0</literal> queue <literal>16</literal> . To match the Hardware Management Console (HMC) configuration, you need to convert from <literal>16</literal> hexadecimal to <literal>22</literal> decimal."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2052
#, no-c-format
msgid "Mask the adapter from the <literal>zcrypt</literal> use:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2055
#, no-c-format
msgid "\n"
      "&prompt.user;lszcrypt\n"
      "CARD.DOMAIN TYPE MODE STATUS REQUEST_CNT\n"
      "-------------------------------------------------\n"
      "00 CEX5C CCA-Coproc online 5\n"
      "00.0016 CEX5C CCA-Coproc online 5\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2062
#, no-c-format
msgid "Mask the adapter:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2065
#, no-c-format
msgid "\n"
      "&prompt.user;cat /sys/bus/ap/apmask\n"
      "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n"
      "echo -0x0 | sudo tee /sys/bus/ap/apmask\n"
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2071
#, no-c-format
msgid "Mask the domain:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2074
#, no-c-format
msgid "\n"
      "&prompt.user;cat /sys/bus/ap/aqmask\n"
      "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n"
      "echo -0x0 | sudo tee /sys/bus/ap/aqmask\n"
      "0xfffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2082
#, no-c-format
msgid "Assign adapter 0 and domain 16 (22 decimal) to <literal>vfio-ap</literal> :"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2086
#, no-c-format
msgid "\n"
      "&prompt.sudo;echo +0x0 &gt; /sys/devices/vfio_ap/matrix/${uuid}/assign_adapter\n"
      "&prompt.user;echo +0x16 | sudo tee /sys/devices/vfio_ap/matrix/${uuid}/assign_domain\n"
      "&prompt.user;echo +0x16 | sudo tee /sys/devices/vfio_ap/matrix/${uuid}/assign_control_domain\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2093
#, no-c-format
msgid "Verify the matrix that you have configured:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2096
#, no-c-format
msgid "\n"
      "&prompt.user;cat /sys/devices/vfio_ap/matrix/${uuid}/matrix\n"
      "00.0016\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2102
#, no-c-format
msgid "Either create a new VM (refer to <xref linkend=\"cha-kvm-inst\"/> ) and wait until it is initialized, or use an existing VM. In both cases, make sure the VM is shut down."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2109
#, no-c-format
msgid "Change its configuration to use the MDEV device:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2112
#, no-c-format
msgid "\n"
      "&prompt.sudo;virsh edit <replaceable>VM_NAME</replaceable>\n"
      "[...]\n"
      "&lt;hostdev mode='subsystem' type='mdev' model='vfio-ap'&gt;\n"
      " &lt;source&gt;\n"
      "  &lt;address uuid='24f952b3-03d1-4df2-9967-0d5f7d63d5f2'/&gt;\n"
      " &lt;/source&gt;\n"
      "&lt;/hostdev&gt;\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2124
#, no-c-format
msgid "Restart the VM:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2127
#, no-c-format
msgid "&prompt.sudo;virsh reboot <replaceable>VM_NAME</replaceable>"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2130
#, no-c-format
msgid "Log in to the guest and verify that the adapter is present:"
msgstr ""

#. Tag: screen
#: libvirt_configuration_virsh.xml:2133
#, no-c-format
msgid "\n"
      "&prompt.user;lszcrypt\n"
      "CARD.DOMAIN TYPE MODE STATUS REQUEST_CNT\n"
      "-------------------------------------------------\n"
      "00 CEX5C CCA-Coproc online 1\n"
      "00.0016 CEX5C CCA-Coproc online 1\n"
      ""
msgstr ""

#. Tag: title
#: libvirt_configuration_virsh.xml:2145
#, no-c-format
msgid "Further reading"
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2148
#, no-c-format
msgid "The installation of virtualization components is detailed in <xref linkend=\"cha-vt-installation\"/> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2154
#, no-c-format
msgid "The <literal>vfio_ap</literal> architecture is detailed in <link xlink:href=\"https://www.kernel.org/doc/Documentation/s390/vfio-ap.txt\"/> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2160
#, no-c-format
msgid "A general outline together with a detailed procedure is described in <link xlink:href=\"https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1787405\"/> ."
msgstr ""

#. Tag: para
#: libvirt_configuration_virsh.xml:2166
#, no-c-format
msgid "The architecture of VFIO Mediated devices (MDEVs) is detailed in <link xlink:href=\"https://www.kernel.org/doc/html/latest/driver-api/vfio-mediated-device.html\"/> ."
msgstr ""

