# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2019-05-20 11:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: klp.xml:12
#, no-c-format
msgid "Live Kernel Patching with &klpa;"
msgstr ""

#. Tag: para
#: klp.xml:19
#, no-c-format
msgid "This document describes the basic principles of the &klp; (&klpa;) technology, and provides usage guidelines for the &slea; Live Patching service."
msgstr ""

#. Tag: para
#: klp.xml:26
#, no-c-format
msgid "&klpa; is a live patching technology for runtime patching of the Linux kernel, without stopping the kernel. This maximizes system uptime, and thus system availability, which is important for mission-critical systems. By enabling dynamic patching of the kernel, the technology also encourages users to install critical security updates without deferring them to a scheduled downtime."
msgstr ""

#. Tag: para
#: klp.xml:34
#, no-c-format
msgid "Enabling &klpa; requires no special steps other than enabling the Live Patching service, and then applying the patches as they become available. The service is part of the normal software management system, and patches are installed (or removed) with the usual package management tools. There is no need to install or manually select special kernels."
msgstr ""

#. Tag: para
#: klp.xml:41
#, no-c-format
msgid "A &klpa; patch is a kernel module, intended for replacing whole functions in the kernel. &klp; primarily offers in-kernel infrastructure for integration of the patched code with the base kernel code at runtime."
msgstr ""

#. Tag: para
#: klp.xml:46
#, no-c-format
msgid "The information provided in this document relates to the &amd64;/&intel64; and &power; architectures. &klpa; is supported on the Xen hypervisor."
msgstr ""

#. Tag: title
#: klp.xml:51
#, no-c-format
msgid "Advantages of &klp;"
msgstr ""

#. Tag: para
#: klp.xml:53
#, no-c-format
msgid "&klp; using &klpa; is for quick emergency response, when serious vulnerabilities or system stability issues are known and should be fixed as quickly as possible. It is not used for scheduled updates where time is not critical."
msgstr ""

#. Tag: para
#: klp.xml:60
#, no-c-format
msgid "Typical use cases for &klp; include systems like memory databases with huge amounts of RAM, where boot-up times of 15 minutes or more are not uncommon, large simulations that need weeks or months without a restart, or infrastructure building blocks providing continuous service to many customers."
msgstr ""

#. Tag: para
#: klp.xml:68
#, no-c-format
msgid "The main advantage of &klp; is that it never requires stopping the kernel, not even for a short time period."
msgstr ""

#. Tag: para
#: klp.xml:73
#, no-c-format
msgid "A &klpa; patch is a <filename>.ko</filename> kernel module in an RPM package. It is inserted into the kernel using the <command>insmod</command> command when the package is installed or updated. &klp; replaces whole functions in the kernel, even if they are being executed. An updated &klpa; module can replace an existing patch if necessary."
msgstr ""

#. Tag: para
#: klp.xml:81
#, no-c-format
msgid "&klp; is also lean&mdash;it contains only a small amount of code, because it leverages other standard Linux technologies."
msgstr ""

#. Tag: title
#: klp.xml:87
#, no-c-format
msgid "Low-level Function of &klp;"
msgstr ""

#. Tag: para
#: klp.xml:89
#, no-c-format
msgid "&klp; uses the ftrace infrastructure to perform patching. The following describes the implementation on the &amd64;/&intel64; architecture."
msgstr ""

#. Tag: para
#: klp.xml:94
#, no-c-format
msgid "To patch a kernel function, &klp; needs some space at the start of the function to insert a jump to a new function. This space is allocated during kernel compilation by GCC with function profiling turned on. In particular, a 5-byte call instruction is injected to the start of kernel functions. When such instrumented kernel is booting, profiling calls are replaced by 5-byte NOP (no operation) instructions."
msgstr ""

#. Tag: para
#: klp.xml:103
#, no-c-format
msgid "After patching starts, the first byte is replaced by the INT3 (breakpoint) instruction. This ensures atomicity of the 5-byte instruction replacement. The other four bytes are replaced by the address to the new function. Finally, the first byte is replaced by the JMP (long jump) opcode."
msgstr ""

#. Tag: para
#: klp.xml:110
#, no-c-format
msgid "Inter-processor non-maskable interrupts (IPI NMI) are used throughout the process to flush speculative decoding queues of other CPUs in the system. This allows switching to the new function without ever stopping the kernel, not even for a very short moment. The interruptions by IPI NMIs can be measured in microseconds and are not considered service interruptions as they happen while the kernel is running in any case."
msgstr ""

#. Tag: para
#: klp.xml:119
#, no-c-format
msgid "Callers are never patched. Instead, the callee's NOPs are replaced by a JMP to the new function. JMP instructions remain forever. This takes care of function pointers, including in structures, and does not require saving any old data for the possibility of un-patching."
msgstr ""

#. Tag: para
#: klp.xml:126
#, no-c-format
msgid "However, these steps alone would not be good enough: since the functions would be replaced non-atomically, a new fixed function in one part of the kernel could still be calling an old function elsewhere or vice versa. If the semantics of the function interfaces changed in the patch, chaos would ensue."
msgstr ""

#. Tag: para
#: klp.xml:134
#, no-c-format
msgid "Thus, until all functions are replaced, &klp; uses an approach based on trampolines and similar to RCU (read-copy-update), to ensure a consistent view of the world to each user space thread, kernel thread and kernel interrupt. A per-thread flag is set on each kernel entry and exit. This way, an old function would always call another old function and a new function always a new one. Once all processes have the \"new universe\" flag set, patching is complete, trampolines can be removed and the code can operate at full speed without performance impact other than an extra-long jump for each patched function."
msgstr ""

#. Tag: title
#: klp.xml:148
#, no-c-format
msgid "Activation of SLE Live Patching"
msgstr ""

#. Tag: para
#: klp.xml:149
#, no-c-format
msgid "To activate &slea; Live Patching on your system, follow these steps:"
msgstr ""

#. Tag: para
#: klp.xml:154
#, no-c-format
msgid "Your &slsa; system must be registered. Register your system either during system installation, or after installation with the &yast; <guimenu>Product Registration</guimenu> module ( <command>yast2 registration</command> ). If your &slsa; system is already registered, but &slea; Live Patching is not yet activated, run the <command>yast2 registration</command> command and click <guimenu>Select Extensions</guimenu> ."
msgstr ""

#. Tag: para
#: klp.xml:165
#, no-c-format
msgid "Select <guimenu>SUSE Linux Enterprise Live Patching 15</guimenu> in the list of available extensions and click <guimenu>Next</guimenu> ."
msgstr ""

#. Tag: para
#: klp.xml:171
#, no-c-format
msgid "Confirm the license terms and click <guimenu>Next</guimenu> ."
msgstr ""

#. Tag: para
#: klp.xml:176
#, no-c-format
msgid "Enter your &slea; Live Patching registration code and click <guimenu>Next</guimenu> ."
msgstr ""

#. Tag: para
#: klp.xml:182
#, no-c-format
msgid "Check the <guimenu>Installation Summary</guimenu> and selected <guimenu>Patterns</guimenu> . The patterns <systemitem>Live Patching</systemitem> and <systemitem>SLE Live Patching Lifecycle Data</systemitem> should be automatically selected for installation, and there may be additional packages to satisfy dependencies."
msgstr ""

#. Tag: para
#: klp.xml:192
#, no-c-format
msgid "Click <guimenu>Accept</guimenu> to complete the installation. This will install the base &klp; components on your system, the initial live patch, and any dependencies."
msgstr ""

#. Tag: title
#: klp.xml:202
#, no-c-format
msgid "Installing and Removing Patches"
msgstr ""

#. Tag: para
#: klp.xml:203
#, no-c-format
msgid "This section describes how to find, install, and remove &klpa; patches."
msgstr ""

#. Tag: title
#: klp.xml:207
#, no-c-format
msgid "Installing a &klpa; Patch"
msgstr ""

#. Tag: para
#: klp.xml:211
#, no-c-format
msgid "Before installing new patches, run the <command>klp status</command> command to query current status, which must be <literal>ready</literal> and not <literal>in_progress</literal> . You cannot apply new patches until previous patch installations are completed. Invocations of the old kernel functions are not completely eliminated until all sleeping processes wake up and get out of the way. This can take a considerable amount of time. Sleeping processes that use the old kernel functions are not considered a security issue. (See <xref linkend=\"sec.klp.exec_threads\"/> for information on managing prolonged <literal>in_progress</literal> states.)"
msgstr ""

#. Tag: para
#: klp.xml:219
#, no-c-format
msgid "Use the normal package management system, <command>zypper</command> or &yast;, to view and install available patches. The following example searches for available patches, and then installs the most recent patch. It is not necessary to install all patches in order; when there are multiple patches available install the most recent."
msgstr ""

#. Tag: screen
#: klp.xml:226
#, no-c-format
msgid "&prompt.sudo;zypper se kernel-livepatch \n"
      "| kernel-livepatch-4_12_14-25_16-default  | Kernel live patch module  | package   \n"
      "| kernel-livepatch-4_12_14-25_19-default  | Kernel live patch module  | package   \n"
      "| kernel-livepatch-4_12_14-25_22-default  | Kernel live patch module  | package\n"
      "\n"
      "&prompt.sudo;zypper in kernel-livepatch-4_12_14-25_22-default"
msgstr ""

#. Tag: title
#: klp.xml:237
#, no-c-format
msgid "Removing a &klpa; Patch"
msgstr ""

#. Tag: para
#: klp.xml:238
#, no-c-format
msgid "If you need to remove a &klpa; patch, use <command>zypper</command> just as you would for any other package. List your installed live patch packages by using <command>zypper</command> to search for <literal>kernel-livepatch</literal> :"
msgstr ""

#. Tag: screen
#: klp.xml:244
#, no-c-format
msgid "&prompt.sudo;zypper se -kernel-livepatch \n"
      "  | kernel-livepatch-4_12_14-25_16-default  | Kernel live patch module  | package   \n"
      "  | kernel-livepatch-4_12_14-25_19-default  | Kernel live patch module  | package   \n"
      "i | kernel-livepatch-4_12_14-25_22-default  | Kernel live patch module  | package\n"
      ""
msgstr ""

#. Tag: para
#: klp.xml:251
#, no-c-format
msgid "Remove the patch using <command>zypper</command> :"
msgstr ""

#. Tag: screen
#: klp.xml:254
#, no-c-format
msgid "&prompt.sudo;zypper rm kernel-livepatch-4_12_14-25_22-default"
msgstr ""

#. Tag: para
#: klp.xml:257
#, no-c-format
msgid "Wait for <systemitem>initrd</systemitem> to automatically rebuild, then reboot the machine."
msgstr ""

#. Tag: title
#: klp.xml:267
#, no-c-format
msgid "The <command>klp</command> Tool"
msgstr ""

#. Tag: para
#: klp.xml:269
#, no-c-format
msgid "Several &klp; management tasks can be simplified with the <command>klp</command> tool. The available commands are:"
msgstr ""

#. Tag: term
#: klp.xml:276
#, no-c-format
msgid "<command>klp status</command>"
msgstr ""

#. Tag: para
#: klp.xml:278
#, no-c-format
msgid "Displays the overall status of &klp; ( <literal>ready</literal> or <literal>in_progress</literal> )."
msgstr ""

#. Tag: term
#: klp.xml:285
#, no-c-format
msgid "<command>klp patches</command>"
msgstr ""

#. Tag: para
#: klp.xml:287
#, no-c-format
msgid "Displays the list of loaded &klpa; patches."
msgstr ""

#. Tag: term
#: klp.xml:293
#, no-c-format
msgid "<command>klp blocking</command>"
msgstr ""

#. Tag: para
#: klp.xml:295
#, no-c-format
msgid "Lists processes that are preventing &klp; from finishing. By default only the PIDs are listed. Specifying <option>-v</option> prints command lines if available. <option>-vv</option> displays stack traces."
msgstr ""

#. Tag: para
#: klp.xml:303
#, no-c-format
msgid "For detailed information, see <command>man klp</command> ."
msgstr ""

#. Tag: title
#: klp.xml:309
#, no-c-format
msgid "Stuck Kernel Execution Threads"
msgstr ""

#. Tag: para
#: klp.xml:311
#, no-c-format
msgid "Kernel threads must be prepared to handle &klp;. Third-party software may not support &klp;, and may spawn kernel execution threads. These threads will block the patching process indefinitely. As an emergency measure, you may force the completion of the patching process without waiting for all execution threads to cross the safety checkpoint by writing <literal>0</literal> into <filename>/sys/kernel/livepatch/*/transition/</filename> (replacing the asterisk wildcard with your file name). Consult &suse; support before performing this procedure."
msgstr ""

#. Tag: title
#: klp.xml:322
#, no-c-format
msgid "Patch Lifecycle"
msgstr ""

#. Tag: para
#: klp.xml:324
#, no-c-format
msgid "Expiration dates of live patches can be accessed with <command>zypper lifecycle</command> . (Make sure that the package <package>lifecycle-data-sle-module-live-patching</package> is installed.)"
msgstr ""

#. Tag: para
#: klp.xml:330
#, no-c-format
msgid "When the expiration date of a patch is reached, no further live patches for this kernel version will be supplied. Plan an update of your kernel before the end of the live patch lifecycle period."
msgstr ""

#. Tag: para
#: klp.xml:336
#, no-c-format
msgid "For details about <command>zypper lifecycle</command> , see the <emphasis>Showing Life Cycle Information</emphasis> in the <emphasis>Admin Guide</emphasis> ."
msgstr ""

#. Tag: title
#: klp.xml:344
#, no-c-format
msgid "Scope of &klp; Technology"
msgstr ""

#. Tag: para
#: klp.xml:346
#, no-c-format
msgid "&klp; is based on replacing functions. Data structure alteration can be accomplished only indirectly with &klp;. As a result, changes to kernel data structure require special care and, if the change is too large, rebooting might be required. &klp; also might not be able to handle situations where one compiler is used to compile the old kernel and another compiler is used for compiling the patch."
msgstr ""

#. Tag: para
#: klp.xml:355
#, no-c-format
msgid "Because of the way &klp; works, support for third-party modules that are spawning kernel threads is limited. <!--Sending SIGSTOP and SIGCONT signals to processes in D process state (uninterruptible sleep) does not make them to cross the kernel/user space boundary and does not have the intended effect.-->"
msgstr ""

#. Tag: title
#: klp.xml:364
#, no-c-format
msgid "Scope of &slea; Live Patching"
msgstr ""

#. Tag: para
#: klp.xml:366
#, no-c-format
msgid "Fixes for SUSE Common Vulnerability Scoring System (CVSS; SUSE CVSS is based on the CVSS v3.0 system) level 7+ vulnerabilities and bug fixes related to system stability or data corruption will be shipped in the scope of SLE Live Patching. It might not be possible to produce a live patch for all kinds of fixes fulfilling the above criteria. SUSE reserves the right to skip fixes where production of a kernel live patch is unviable because of technical reasons. For more information on CVSS, which is the base for the SUSE CVSS rating, see <link xlink:href=\"https://www.first.org/cvss/\"/> ."
msgstr ""

#. Tag: title
#: klp.xml:378
#, no-c-format
msgid "Interaction with the Support Processes"
msgstr ""

#. Tag: para
#: klp.xml:380
#, no-c-format
msgid "While resolving a technical difficulty with &suse; support, you may receive a Program Temporary Fix (PTF). PTFs may be issued for various packages including those forming the base of &slea; Live Patching."
msgstr ""

#. Tag: para
#: klp.xml:386
#, no-c-format
msgid "&klp; PTFs complying with the conditions described in the previous section can be installed as usual and &suse; will ensure that the system in question does not need to be rebooted and that future live updates are applied cleanly."
msgstr ""

#. Tag: para
#: klp.xml:393
#, no-c-format
msgid "PTFs issued for the base kernel disrupt the live patching process. First, installing the PTF kernel means a reboot as the kernel cannot be replaced as a whole at runtime. Second, another reboot is needed to replace the PTF with any regular maintenance updates for which the live patches are issued."
msgstr ""

#. Tag: para
#: klp.xml:400
#, no-c-format
msgid "PTFs for other packages in &slea; Live Patching can be treated like regular PTFs with the usual guarantees."
msgstr ""

