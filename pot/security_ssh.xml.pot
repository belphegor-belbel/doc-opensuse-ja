# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2023-07-18 09:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: security_ssh.xml:15
#, no-c-format
msgid "Securing network operations with OpenSSH"
msgstr ""

#. Tag: para
#: security_ssh.xml:18
#, no-c-format
msgid "OpenSSH is the SSH (secure shell) implementation that ships with &productname;, for securing network operations such as remote administration, file transfers, and tunneling insecure protocols. SSH encrypts all traffic between two hosts, including authentication, to protect against eavesdropping and connection hijacking. This chapter covers basic operations, plus host key rotation and certificate authentication, which are useful for managing larger SSH deployments."
msgstr ""

#. Tag: title
#: security_ssh.xml:36
#, no-c-format
msgid "OpenSSH overview"
msgstr ""

#. Tag: para
#: security_ssh.xml:37
#, no-c-format
msgid "SSH is a network protocol that provides end-to-end protection for communications between the computers on your network, or between computers on your network and systems outside your network. You may open an SSH session to any other computer, if you have a login and the correct authentication methods for the remote computer."
msgstr ""

#. Tag: para
#: security_ssh.xml:44
#, no-c-format
msgid "SSH is a client-server protocol. Any host running the <systemitem class=\"daemon\">sshd</systemitem> daemon can accept SSH connections from any other host. Every host running <systemitem class=\"daemon\">sshd</systemitem> can have their own custom configurations, such as limiting who can have access, and which authentication methods are allowed."
msgstr ""

#. Tag: para
#: security_ssh.xml:52
#, no-c-format
msgid "Authentication and encryption are provided by encryption key pairs. Each key pair has a public key and a private key. Public keys encrypt, and private keys decrypt. Public keys are meant to be freely shared, while private keys must be protected and not shared. When a private key is compromised, anyone who has possession of it can masquerade as the original key owner."
msgstr ""

#. Tag: para
#: security_ssh.xml:60
#, no-c-format
msgid "SSH provides strong protection, because the server and client must both authenticate to each other. When a client first attempts to open an SSH session, the server presents its public host key. If the client already possesses a copy of this key (stored in <filename>~/.ssh/known_hosts</filename> on the client machine), the client knows to trust the server. If the client does not have the appropriate host key, it is asked whether it should trust the server:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:69
#, no-c-format
msgid "The authenticity of host '192.168.22.219 (192.168.22.219)'\n"
      "   can't be established. ECDSA key fingerprint is\n"
      "   SHA256:yXf6pjV26N0fegvEYIt3HgG95s3Q1X6WYRhtHLF99pUo.\n"
      "   Are you sure you want to continue connecting (yes/no/[fingerprint])?\n"
      "  "
msgstr ""

#. Tag: para
#: security_ssh.xml:74
#, no-c-format
msgid "The user can type <literal>yes</literal> or <literal>no</literal> , or paste their copy of the host key fingerprint for comparison."
msgstr ""

#. Tag: title
#: security_ssh.xml:79
#, no-c-format
msgid "Matching host key fingerprints"
msgstr ""

#. Tag: para
#: security_ssh.xml:80
#, no-c-format
msgid "Distributing copies of your host key fingerprints to your users enables them to verify that they are receiving the correct host keys. When they paste their copy of a host key fingerprint, <command>ssh</command> compares the fingerprints, and accepts the offered host key when the fingerprints match. This ensures a more accurate match than a visual comparison."
msgstr ""

#. Tag: para
#: security_ssh.xml:88
#, no-c-format
msgid "You cannot rely on users to use correct verification methods. If the fingerprints do not match, the user can still type <literal>yes</literal> , or copy the fingerprint in the message, and complete the connection. A stronger alternative is to use certificate authentication, which provides a global authentication mechanism, and does not require perfect behavior from users (see <xref linkend=\"sec-ssh-certificate-auth\"/> )."
msgstr ""

#. Tag: para
#: security_ssh.xml:98
#, no-c-format
msgid "If the public keys of a host have changed, the connection is denied with an alarming warning:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:102
#, no-c-format
msgid "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
      "@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
      "IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
      "Someone could be eavesdropping on you right now (man-in-the-middle attack)!\n"
      "It is also possible that a host key has just been changed.\n"
      "The fingerprint for the ECDSA key sent by the remote host is\n"
      "SHA256:keNu/rJFWmpQu9B0SjIuo8NLjbeDY/x3Tktpl7oDJqo.\n"
      "Please contact your system administrator.\n"
      "Add correct host key in /home/geeko/.ssh/known_hosts to get rid of this message.\n"
      "Offending ECDSA key in /home/geeko/.ssh/known_hosts:210\n"
      "You can use following command to remove the offending key:\n"
      "ssh-keygen -R 192.168.121.219 -f /home/geeko/.ssh/known_hosts\n"
      "ECDSA host key for 192.168.121.219 has changed and you have requested strict\n"
      "checking.\n"
      "Host key verification failed."
msgstr ""

#. Tag: para
#: security_ssh.xml:118
#, no-c-format
msgid "The remedy is to delete the offending key from <filename>~/.ssh/known_hosts</filename> with the command given in the warning, then reconnect and accept the new host key. <!-- see TODO and TODO for key management methods that do not require users to verify or accept new host keys -->"
msgstr ""

#. Tag: para
#: security_ssh.xml:125
#, no-c-format
msgid "The <package>openssh</package> package installs the server, client, file transfer commands, and certain utilities."
msgstr ""

#. Tag: para
#: security_ssh.xml:129
#, no-c-format
msgid "OpenSSH supports several different types of authentication:"
msgstr ""

#. Tag: para
#: security_ssh.xml:136
#, no-c-format
msgid "Uses any system login and password on the remote machine. This is the simplest and most flexible authentication because you can open an SSH session from anywhere, on any machine. It is also the least secure, because it is vulnerable to password-cracking and keystroke logging."
msgstr ""

#. Tag: para
#: security_ssh.xml:147
#, no-c-format
msgid "Authenticates with your personal SSH keys, rather than a login and password. This is less flexible than password authentication, because you can open SSH sessions only from a machine that holds your private identity key. It is much stronger because it is not vulnerable to password cracking or keystroke logging; an attacker must possess your private key and know its passphrase."
msgstr ""

#. Tag: para
#: security_ssh.xml:155
#, no-c-format
msgid "See <xref linkend=\"sec-ssh-gnome-keyring\"/> to learn how to use <command>gnome-keyring</command> for automated public key authentication in GNOME sessions."
msgstr ""

#. Tag: para
#: security_ssh.xml:160
#, no-c-format
msgid "See <xref linkend=\"sec-ssh-authentic-agent\"/> to learn how to use <literal>ssh-agent</literal> for automated public key authentication in console sessions."
msgstr ""

#. Tag: para
#: security_ssh.xml:170
#, no-c-format
msgid "Public key authentication, paired with private identity keys that do not have passphrases. This is useful for automated services, like scripts and cron jobs. You must protect private keys, because anyone who gains access to them can easily masquerade as the key owner."
msgstr ""

#. Tag: term
#: security_ssh.xml:179
#, no-c-format
msgid "Certificate authentication"
msgstr ""

#. Tag: para
#: security_ssh.xml:181
#, no-c-format
msgid "OpenSSH supports certification authentication, for easier key management, stronger authentication, and large-scale SSH deployments."
msgstr ""

#. Tag: para
#: security_ssh.xml:189
#, no-c-format
msgid "&productname; installs the OpenSSH package by default, providing the following commands:"
msgstr ""

#. Tag: term
#: security_ssh.xml:196
#, no-c-format
msgid "<command>ssh</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:198
#, no-c-format
msgid "The client command for initiating an SSH connection to a remote host."
msgstr ""

#. Tag: term
#: security_ssh.xml:204
#, no-c-format
msgid "<command>scp</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:206
#, no-c-format
msgid "Secure file copy from or to a remote host."
msgstr ""

#. Tag: term
#: security_ssh.xml:212
#, no-c-format
msgid "<command>sftp</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:214
#, no-c-format
msgid "Secure file transfer between a client and an SFTP server. (The SFTP protocol (SSH FTP) is not related to FTPS or FTPES (FTP over SSL/TLS), but was written independently.)"
msgstr ""

#. Tag: term
#: security_ssh.xml:222
#, no-c-format
msgid "<command>ssh-add</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:224
#, no-c-format
msgid "Add private key identities to the authentication agent, <literal>ssh-agent</literal> ."
msgstr ""

#. Tag: term
#: security_ssh.xml:231
#, no-c-format
msgid "<command>ssh-agent</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:233
#, no-c-format
msgid "Manages a user's private identity keys and their passphrases, for public key authentication. <literal>ssh-agent</literal> holds the passphrases in memory and applies them as needed, so that users do not have to re-type their passphrases to authenticate."
msgstr ""

#. Tag: term
#: security_ssh.xml:242
#, no-c-format
msgid "<command>ssh-copy-id</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:244
#, no-c-format
msgid "Securely transfer a public key to a remote host, to set up public key authentication."
msgstr ""

#. Tag: title
#: security_ssh.xml:254
#, no-c-format
msgid "Server hardening"
msgstr ""

#. Tag: para
#: security_ssh.xml:255
#, no-c-format
msgid "OpenSSH ships with a usable default server configuration, but there are additional steps you can take to secure your server."
msgstr ""

#. Tag: title
#: security_ssh.xml:260
#, no-c-format
msgid "Maintaining access to a remote SSH server"
msgstr ""

#. Tag: para
#: security_ssh.xml:261
#, no-c-format
msgid "When you make changes to any SSH server, either have physical access to the machine, or keep an active root SSH session open until you have tested your changes, and everything works correctly. Then you can revert or correct your changes if something goes wrong."
msgstr ""

#. Tag: para
#: security_ssh.xml:267
#, no-c-format
msgid "The default server configuration file, <filename>/etc/ssh/sshd_config</filename> , contains the default configuration, and all the defaults are commented out. Override any default item by entering your own configuration item, uncommented, like the following example that sets a different listening port, and specifies the listening IPv4 address on a multi-homed host:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:274
#, no-c-format
msgid "\n"
      "#Port 22\n"
      "Port <replaceable>2022</replaceable>\n"
      "\n"
      "#ListenAddress 0.0.0.0\n"
      "ListenAddress <replaceable>192.168.10.100</replaceable>"
msgstr ""

#. Tag: title
#: security_ssh.xml:282
#, no-c-format
msgid "Update /etc/services"
msgstr ""

#. Tag: para
#: security_ssh.xml:283
#, no-c-format
msgid "When you use non-standard listening ports, first check the <filename>/etc/services</filename> file for unused ports. Select any unused port above 1024. Then document the ports you are using in <filename>/etc/services</filename> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:291
#, no-c-format
msgid "It is a best practice to disallow root logins. Instead, log into the remote machine as an unprivileged user, then use <command>sudo</command> to run commands as root. If you really want to allow root logins, the following server configuration example shows how to configure the server to accept only public-key authentication ( <xref linkend=\"sec-ssh-public-key-auth\"/> ) for the root user with the <literal>PermitRootLogin prohibit-password</literal> and <literal>PasswordAuthentication</literal> options."
msgstr ""

#. Tag: para
#: security_ssh.xml:301
#, no-c-format
msgid "The following settings for <filename>/etc/ssh/sshd_config</filename> strengthen access controls:"
msgstr ""

#. Tag: title
#: security_ssh.xml:306
#, no-c-format
msgid "Example sshd.conf"
msgstr ""

#. Tag: programlisting
#: security_ssh.xml:307
#, no-c-format
msgid "# Check if the file modes and ownership of the user’s files and# home directory are correct before allowing them to loginStrictModes yes# If your machine has more than one IP address, define which address or# addresses it listens onListenAddress <replaceable>192.168.10.100</replaceable> # Allow only members of the listed groups to log inAllowGroups <replaceable>ldapadmins backupadmins</replaceable> # Or, deny certain groups. If you use both, DenyGroups is read firstDenyGroups <replaceable>users</replaceable> # Allow or deny certain users. If you use both, DenyUsers is read firstAllowUsers <replaceable>user1 user2@example.com user3</replaceable> DenyUsers <replaceable>user4 user5@192.168.10.10</replaceable> # Allow root logins only with public key authenticationPermitRootLogin prohibit-password# Disable password authentication and allow only public key authentication# for all usersPasswordAuthentication no# Length of time the server waits for a user to log in and complete the# connection. The default is 120 seconds:LoginGraceTime <replaceable>60</replaceable> # Limit the number of failed connection attempts. The default is 6MaxAuthTries <replaceable>4</replaceable>"
msgstr ""

#. Tag: para
#: security_ssh.xml:342
#, no-c-format
msgid "After changing <filename>/etc/ssh/sshd_config</filename> , run the syntax checker:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:346
#, no-c-format
msgid "&prompt.sudo;<command>sshd -t</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:347
#, no-c-format
msgid "The syntax checker only checks for correct syntax, and does not find configuration errors. When you are finished, reload the configuration:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:351
#, no-c-format
msgid "&prompt.sudo;<command>systemctl reload sshd.server</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:352
#, no-c-format
msgid "Check the server's key directories for correct permissions."
msgstr ""

#. Tag: para
#: security_ssh.xml:355
#, no-c-format
msgid "<filename>/etc/ssh</filename> should be mode 0755/drwxr-xr-x, owned by root:root."
msgstr ""

#. Tag: para
#: security_ssh.xml:359
#, no-c-format
msgid "Private keys should be 0600/-rw-------, owned by root:root."
msgstr ""

#. Tag: para
#: security_ssh.xml:362
#, no-c-format
msgid "Public keys should be 0644/-rw-r--r--, owned by root:root."
msgstr ""

#. Tag: title
#: security_ssh.xml:426
#, no-c-format
msgid "Password authentication"
msgstr ""

#. Tag: para
#: security_ssh.xml:427
#, no-c-format
msgid "With password authentication, all you need is the login and password of a user on the remote machine, and <systemitem class=\"daemon\">sshd</systemitem> set up and running on the remote machine. You do not need any personal SSH keys. In the following example, user &exampleuserIII_plain; opens an SSH session to the host &exampleserver;:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:435
#, no-c-format
msgid "&prompt.user;<command>ssh &exampleuserIII_plain;@&exampleserver;</command>\n"
      ""
msgstr ""

#. Tag: para
#: security_ssh.xml:437
#, no-c-format
msgid "&exampleuserIII_plain; is prompted to enter the remote password. Type <literal>exit</literal> and press <keycap>Enter</keycap> to close an SSH session."
msgstr ""

#. Tag: para
#: security_ssh.xml:442
#, no-c-format
msgid "If the user name is the same on both machines, you can omit it, and then using <command>ssh <replaceable>HOST_NAME</replaceable></command> is sufficient. After a successful authentication, you can work on the command line or use interactive applications, such as &yast; in text mode."
msgstr ""

#. Tag: para
#: security_ssh.xml:449
#, no-c-format
msgid "You may also run non-interactive commands (log in, run the command, then the session closes all in one command) on remote systems using the <command>ssh <replaceable>USER_NAME HOST COMMAND</replaceable></command> syntax. <replaceable>COMMAND</replaceable> must be properly quoted. Multiple commands can be concatenated as on a local shell:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:458
#, no-c-format
msgid "&prompt.user;<command>ssh &exampleuserIII_plain;@&exampleserver; \"df -h &amp;&amp; du -sh  /home\"</command>\n"
      "&prompt.user;<command>ssh &exampleuserIII_plain;@&exampleserver; \"sudo nano /etc/ssh/sshd_config\"</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:461
#, no-c-format
msgid "When you run <command>sudo</command> on the remote machine, you are prompted for the <command>sudo</command> password."
msgstr ""

#. Tag: title
#: security_ssh.xml:468
#, no-c-format
msgid "Managing user and host encryption keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:469
#, no-c-format
msgid "There are several key types to choose from: DSA, RSA, ECDSA, ECDSA-SK, Ed25519, and Ed25519-SK. DSA was deprecated several years ago, and was disabled in OpenSSH 7.0 and should not be used. RSA is the most universal as it is older, and more widely used. (As of OpenSSH 8.2, RSA is deprecated for host keys. Use ECDSA or Ed25519 for host keys.)"
msgstr ""

#. Tag: para
#: security_ssh.xml:477
#, no-c-format
msgid "Ed25519 and ECDSA are stronger and faster. Ed25519 is considered to be the strongest. If you must support older clients that do not support Ed25519 or ECDSA, create host keys in all three formats."
msgstr ""

#. Tag: title
#: security_ssh.xml:484
#, no-c-format
msgid "Older clients are unsafe"
msgstr ""

#. Tag: para
#: security_ssh.xml:485
#, no-c-format
msgid "Some older SSH clients do not support ECDSA and ED25519. ECDSA and ED25519 were released with OpenSSH 6.5 in 2014. It is important to keep security services updated, and, if possible, to not allow unsafe old clients."
msgstr ""

#. Tag: para
#: security_ssh.xml:492
#, no-c-format
msgid "SSH keys serve two purposes: authenticating servers to clients, and authenticating clients to servers (see <xref linkend=\"sec-ssh-public-key-auth\"/> ). Server host keys are stored in <filename>/etc/ssh</filename> . Users' personal keys are stored in <filename>/home/<replaceable>user</replaceable>/.ssh</filename> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:499
#, no-c-format
msgid "<filename>/home/<replaceable>user</replaceable>/.ssh</filename> is created when the user creates a new SSH key."
msgstr ""

#. Tag: para
#: security_ssh.xml:503
#, no-c-format
msgid "Host keys must not have passphrases."
msgstr ""

#. Tag: para
#: security_ssh.xml:506
#, no-c-format
msgid "In most cases, private user keys should have strong passphrases."
msgstr ""

#. Tag: title
#: security_ssh.xml:511
#, no-c-format
msgid "Creating user SSH key pairs"
msgstr ""

#. Tag: para
#: security_ssh.xml:512
#, no-c-format
msgid "The following procedure shows how to create user OpenSSH encryption keys."
msgstr ""

#. Tag: title
#: security_ssh.xml:517
#, no-c-format
msgid "Creating default and customized keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:519
#, no-c-format
msgid "To generate a user key pair with the default parameters (RSA, 3072 bits), use the <command>ssh-keygen</command> command with no options. Protect your private key with a strong passphrase:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:524
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen</command>\n"
      "Generating public/private rsa key pair.\n"
      "Enter file in which to save the key (/home/tux/.ssh/id_rsa):\n"
      "Enter passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved in id_rsa\n"
      "Your public key has been saved in id_rsa.pub\n"
      "The key fingerprint is:\n"
      "SHA256:z0uJIuc7Doy07bFTe1ppZHLVrkD/bWWlBAF/PcHjblU user@host2\n"
      "The key's randomart image is:\n"
      "+---[RSA 3072]----+\n"
      "|          ..o... |\n"
      "|           o . +E|\n"
      "|        . . o +.=|\n"
      "|       . o . o o+|\n"
      "|  .   . S . . o +|\n"
      "| . =  .= * + . = |\n"
      "|  o *.o.= * . +  |\n"
      "|   ..Bo+.. . .   |\n"
      "|    oo==  .      |\n"
      "+----[SHA256]-----+"
msgstr ""

#. Tag: para
#: security_ssh.xml:547
#, no-c-format
msgid "Create an RSA key pair with a longer bit length:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:550
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -b 4096</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:551
#, no-c-format
msgid "OpenSSH RSA keys can be a maximum of 16,384 bits. However, longer bit lengths are not necessarily more desirable. See the GnuPG FAQ for more information, <link xlink:href=\"https://www.gnupg.org/faq/gnupg-faq.html#no_default_of_rsa4096\"/> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:558
#, no-c-format
msgid "You may create as many user keys as you want, for accessing different servers. Each key pair must have a unique name, and optionally, a comment. These help you remember what each key pair is for. Create an RSA key pair with a custom name and a comment:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:564
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -f <replaceable>backup-server-key -C \"infrastructure backup server\"</replaceable></command>\n"
      "      "
msgstr ""

#. Tag: para
#: security_ssh.xml:568
#, no-c-format
msgid "Create an Ed25519 key pair with a custom name and a comment:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:571
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -t ed25519 -f <replaceable>ldap-server-key -C \"Internal LDAP server\"</replaceable></command>\n"
      "     "
msgstr ""

#. Tag: para
#: security_ssh.xml:573
#, no-c-format
msgid "Ed25519 keys are fixed at 256 bits, which is equivalent in cryptographic strength to RSA 4096."
msgstr ""

#. Tag: title
#: security_ssh.xml:582
#, no-c-format
msgid "Creating SSH server host keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:583
#, no-c-format
msgid "Host keys are managed a little differently. A host key must not have a passphrase, and the key pairs are stored in <filename>/etc/ssh</filename> . OpenSSH automatically generates a set of host keys when it is installed, like the following example:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:590
#, no-c-format
msgid "&prompt.user;<command>ls -l /etc/ssh</command>\n"
      "total 608\n"
      "-rw------- 1 root root 577834 2021-05-06 04:48 moduli\n"
      "-rw-r--r-- 1 root root   2403 2021-05-06 04:48 ssh_config\n"
      "-rw-r----- 1 root root   3420 2021-05-06 04:48 sshd_config\n"
      "-rw------- 1 root root   1381 2022-02-10 06:55 ssh_host_dsa_key\n"
      "-rw-r--r-- 1 root root    604 2022-02-10 06:55 ssh_host_dsa_key.pub\n"
      "-rw------- 1 root root    505 2022-02-10 06:55 ssh_host_ecdsa_key\n"
      "-rw-r--r-- 1 root root    176 2022-02-10 06:55 ssh_host_ecdsa_key.pub\n"
      "-rw------- 1 root root    411 2022-02-10 06:55 ssh_host_ed25519_key\n"
      "-rw-r--r-- 1 root root     96 2022-02-10 06:55 ssh_host_ed25519_key.pub\n"
      "-rw------- 1 root root   2602 2022-02-10 06:55 ssh_host_rsa_key\n"
      "-rw-r--r-- 1 root root    568 2022-02-10 06:55 ssh_host_rsa_key.pub"
msgstr ""

#. Tag: para
#: security_ssh.xml:604
#, no-c-format
msgid "<command>ssh-keygen</command> has a special option, <option>-A</option> , for creating new host keys. This creates new keys for each of the key types for which host keys do not exist, with the default key file path, an empty passphrase, default bit size for the key type, and an empty comment. The following example creates a complete new set of host keys by first deleting the existing keys, then creating a new set:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:613
#, no-c-format
msgid "&prompt.sudo;<command>rm /etc/ssh/ssh_host*</command>\n"
      "&prompt.sudo;<command>ssh-keygen -A</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:615
#, no-c-format
msgid "You can replace selected key pairs by first deleting only the keys you want to replace, because <command>ssh-keygen -A</command> does not replace existing keys."
msgstr ""

#. Tag: title
#: security_ssh.xml:621
#, no-c-format
msgid "Do not use DSA keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:622
#, no-c-format
msgid "<command>ssh-keygen -A</command> creates DSA keys, even though they have been deprecated as unsafe for several years. In OpenSSH 7.0 they are still created, but disabled by not being listed in <filename>sshd_config</filename> . You may safely delete DSA keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:629
#, no-c-format
msgid "When you want to rotate host keys (see <xref linkend=\"sec-ssh-sshdserver-rotation\"/> ), you must create the new keys individually, because they must exist at the same time as your old host keys. Your users authenticate with the old keys, and then receive the list of new keys. They need unique names, to not conflict with the old keys. The following example creates new RSA and Ed25519 host keys, labeled with the year and month they were created. Remember, the new host keys must not have passphrases:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:639
#, no-c-format
msgid "&prompt.user;<command>cd /etc/ssh</command>\n"
      "&prompt.sudo;<command>ssh-keygen -b 4096 -f \"<replaceable>SSH_HOST_RSA_2022_02</replaceable>\"</command>\n"
      "&prompt.sudo;<command>ssh-keygen -t ed25519 -f \"<replaceable>SSH_HOST_ED25519_2022_02</replaceable>\"</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:642
#, no-c-format
msgid "You may name your new keys whatever you want."
msgstr ""

#. Tag: title
#: security_ssh.xml:649
#, no-c-format
msgid "Rotating host keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:650
#, no-c-format
msgid "As of version 6.8, OpenSSH includes a protocol extension that supports host key rotation. SSH server admins must periodically retire old host keys and create new keys, for example if a key has been compromised, or it is time to upgrade to stronger keys. Before OpenSSH 6.8, if <literal>StrictHostKeyChecking</literal> was set to <literal>yes</literal> in <filename>ssh_config</filename> on user machines, users would see a warning that the host key had changed, and were not allowed to connect. Then the users would have to manually delete the server's public key from their <filename>known_hosts</filename> file, reconnect and manually accept the new key. Any automated SSH connections, such as scheduled backups, would fail."
msgstr ""

#. Tag: para
#: security_ssh.xml:664
#, no-c-format
msgid "The new host key rotation scheme provides a method to distribute new keys without service interruptions. When clients connect, the server sends them a list of new keys. Then the next time they log in they are asked if they wish to accept the changes. Give users a few days to connect and receive the new keys, and then you can remove the old keys. The users' <filename>known_hosts</filename> files are automatically updated, with new keys added and the old keys removed."
msgstr ""

#. Tag: para
#: security_ssh.xml:673
#, no-c-format
msgid "Setting up host key rotations requires creating new keys on the server, certain changes to <filename>/etc/ssh/sshd_config</filename> on the server, and to <filename>/etc/ssh/ssh_config</filename> on the clients."
msgstr ""

#. Tag: para
#: security_ssh.xml:678
#, no-c-format
msgid "First, create your new key or keys. The following example creates a new RSA key and a new Ed25519 key, with unique names and comments. A useful convention is to name them with the creation date. Remember, a host key must not have a passphrase:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:684
#, no-c-format
msgid "&prompt.root;<command>ssh-keygen -t rsa -f ssh_host_rsa_2022-01 -C \"main server\"</command>\n"
      "Generating public/private rsa key pair.\n"
      "Enter passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved in ssh_host_rsa_2022-01\n"
      "Your public key has been saved in ssh_host_rsa_2022-01.pub\n"
      "The key fingerprint is:\n"
      "SHA256:F1FIF2aqOz7D3mGdsjzHpH/kjUWZehBN3uG7FM4taAQ main server\n"
      "The key's randomart image is:\n"
      "+---[RSA 3072]----+\n"
      "|         .Eo*.oo |\n"
      "|          .B .o.o|\n"
      "|          o . .++|\n"
      "|         . o ooo=|\n"
      "|        S . o +*.|\n"
      "|         o o.oooo|\n"
      "|       .o ++oo.= |\n"
      "|       .+=o+o + .|\n"
      "|       .oo++..   |\n"
      "+----[SHA256]-----+\n"
      "\n"
      "&prompt.root;<command>ssh-keygen -t ed25519 -f ssh_host_ed25519_2022-01 -C \"main server\"</command>\n"
      "Generating public/private ed25519 key pair.\n"
      "Enter passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved in ssh_host_ed25519_2022-01\n"
      "Your public key has been saved in ssh_host_ed25519_2022-01.pub\n"
      "The key fingerprint is:\n"
      "SHA256:2p9K0giXv7WsRnLjwjs4hJ8EFcoX1FWR4nQz6fxnjxg main server\n"
      "The key's randomart image is:\n"
      "+--[ED25519 256]--+\n"
      "|   .+o ...o+     |\n"
      "| . .... o *      |\n"
      "|  o..  o = o     |\n"
      "|  ..   .. o      |\n"
      "|   o. o S  .     |\n"
      "|  . oo.*+   E o  |\n"
      "|   + ++==..  = o |\n"
      "|    = +oo= o. . .|\n"
      "|     ..=+o=      |\n"
      "+----[SHA256]-----+"
msgstr ""

#. Tag: para
#: security_ssh.xml:726
#, no-c-format
msgid "Record the fingerprints, for users to verify the new keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:729
#, no-c-format
msgid "Add the new key names to <filename>/etc/ssh/sshd_config</filename> , and uncomment any existing keys that are in use:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:733
#, no-c-format
msgid "## Old keys\n"
      "HostKey /etc/ssh/ssh_host_rsa_key\n"
      "HostKey /etc/ssh/ssh_host_ed25519_key\n"
      "HostKey /etc/ssh/ssh_host_ecdsa_key\n"
      "\n"
      "## New replacement keys\n"
      "HostKey /etc/ssh/ssh_host_rsa_2022-01\n"
      "HostKey /etc/ssh/ssh_host_ed25519_2022-01"
msgstr ""

#. Tag: para
#: security_ssh.xml:742
#, no-c-format
msgid "Save your changes, then restart <systemitem class=\"daemon\">sshd</systemitem> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:745
#, no-c-format
msgid "&prompt.root;<command>systemctl restart sshd.service</command>\n"
      "    "
msgstr ""

#. Tag: para
#: security_ssh.xml:747
#, no-c-format
msgid "The <filename>/etc/ssh/ssh_config</filename> file on user machines must include the following settings:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:751
#, no-c-format
msgid "UpdateHostKeys ask\n"
      "StrictHostKeyChecking yes"
msgstr ""

#. Tag: para
#: security_ssh.xml:753
#, no-c-format
msgid "Test connecting from a client by opening an SSH session to the server to receive the new keys list. Log out, then log back in. When you log back in you should see something like the following message:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:758
#, no-c-format
msgid "The server has updated its host keys.\n"
      "These changes were verified by the server's existing trusted key.\n"
      "Deprecating obsolete hostkey: ED25519\n"
      "SHA256:V28d3VpHgjsCoV04RBCZpLo5c0kEslCZDVdIUnCvqPI\n"
      "Deprecating obsolete hostkey:\n"
      "RSA SHA256:+NR4DVdbsUNsqJPIhISzx+eqD4x/awCCwijZ4a9eP8I\n"
      "Accept updated hostkeys? (yes/no):yes"
msgstr ""

#. Tag: para
#: security_ssh.xml:765
#, no-c-format
msgid "You may set <literal>UpdateHostKeys ask</literal> to <literal>UpdateHostKeys yes</literal> to apply the changes automatically, and avoid asking users to approve the changes."
msgstr ""

#. Tag: para
#: security_ssh.xml:770
#, no-c-format
msgid "For more information:"
msgstr ""

#. Tag: para
#: security_ssh.xml:776
#, no-c-format
msgid "<xref linkend=\"sec-ssh-authentic-gen-key\"/>"
msgstr ""

#. Tag: para
#: security_ssh.xml:781
#, no-c-format
msgid "<link xlink:href=\"http://blog.djm.net.au/2015/02/key-rotation-in-openssh-68.html\"/>"
msgstr ""

#. Tag: para
#: security_ssh.xml:786
#, no-c-format
msgid "man 5 ssh_config, man 5 sshd_config"
msgstr ""

#. Tag: title
#: security_ssh.xml:794
#, no-c-format
msgid "Public key authentication"
msgstr ""

#. Tag: para
#: security_ssh.xml:795
#, no-c-format
msgid "Public key authentication uses your own personal identity key to authenticate, rather than a user account password."
msgstr ""

#. Tag: para
#: security_ssh.xml:799
#, no-c-format
msgid "The following example shows how to create a new personal RSA key pair with a comment, so you know what it is for. First change to your <filename>~/.ssh</filename> directory (or create it if it does not exist), then create the new key pair. Give it a strong passphrase, and write the passphrase in a safe place:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:806
#, no-c-format
msgid "&prompt.user;<command>cd ~/.ssh</command>\n"
      "&prompt.user;<command>ssh-keygen -C <replaceable>\"web server1\"</replaceable> -f <replaceable>id-web1</replaceable> -t rsa -b <replaceable>4096</replaceable></command>\n"
      ""
msgstr ""

#. Tag: para
#: security_ssh.xml:809
#, no-c-format
msgid "Next, copy your new public key to the machine you want access to. You must already have a user account on this machine, and SSH access to copy it over the network:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:814
#, no-c-format
msgid "&prompt.user;<command>ssh-copy-id -i <replaceable>id-web1 user@web1</replaceable></command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:815
#, no-c-format
msgid "Then try logging in with your new key:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:818
#, no-c-format
msgid "&prompt.user;<command>ssh -i <replaceable>id-web1 user@web1</replaceable></command>\n"
      "Enter passphrase for key 'id-web1':\n"
      "Last login: Sat Jul 11 11:09:53 2022 from 192.168.10.122\n"
      "Have a lot of fun..."
msgstr ""

#. Tag: para
#: security_ssh.xml:822
#, no-c-format
msgid "You should be asked for your private key passphrase, and not the password for your user account."
msgstr ""

#. Tag: para
#: security_ssh.xml:826
#, no-c-format
msgid "To be effective, public key authentication should be enforced on the remote machine, and password authentication not allowed (see <xref linkend=\"ex-sshd-conf\"/> ). If you do not have public key authentication access on the remote machine already, you cannot copy your new public key with <command>ssh-copy-id</command> , and must use other means, such as manually copying it from a USB stick to the <filename>~/.ssh/authorized_keys</filename> file of the remote user account."
msgstr ""

#. Tag: title
#: security_ssh.xml:839
#, no-c-format
msgid "Passphrase-less public key authentication"
msgstr ""

#. Tag: para
#: security_ssh.xml:840
#, no-c-format
msgid "This is public key authentication without a passphrase. Create your new private identity keys without a passphrase, and then use them the same way as passphrase-protected keys. This is useful for automated services, such as scripts and cron jobs. However, anyone who succeeds in stealing the private key can easily masquerade as you, so you need to be protective of a passphrase-less private key."
msgstr ""

#. Tag: para
#: security_ssh.xml:848
#, no-c-format
msgid "An alternative to using keys without passphrases is <literal>gnome-keyring</literal> , which remembers and applies your private keys and passphrases for you. <literal>gnome-keyring</literal> is for GNOME desktop sessions ( <xref linkend=\"sec-ssh-gnome-keyring\"/> )."
msgstr ""

#. Tag: para
#: security_ssh.xml:855
#, no-c-format
msgid "For console sessions, use <literal>ssh-agent</literal> ( <xref linkend=\"sec-ssh-authentic-agent\"/> )."
msgstr ""

#. Tag: title
#: security_ssh.xml:862
#, no-c-format
msgid "OpenSSH certificate authentication"
msgstr ""

#. Tag: para
#: security_ssh.xml:863
#, no-c-format
msgid "OpenSSH introduced certificate authentication in OpenSSH 5.4. Certificate authentication is similar to public key authentication, except hosts and users authenticate to each other with digitally signed encryption certificates instead of encryption keys. Certificate authentication provides central management for server and user certificates, eliminating the need to manually copy user public keys to multiple hosts. It increases security by giving more control to administrators, and less to users."
msgstr ""

#. Tag: para
#: security_ssh.xml:873
#, no-c-format
msgid "Certificates consist of a public encryption key, a user-defined identity string, zero or more user names or host names, and other options. User and host public keys are signed by a Certificate Authority (CA) private signing key to create an encryption certificate. Users and hosts trust the public CA key, rather than trusting individual user and host public encryption keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:881
#, no-c-format
msgid "Traditional OpenSSH public key authentication requires copying user public keys to every SSH server they need access to (to the appropriate <filename>~/.ssh/authorized_keys</filename> files), and relying on users to verify new SSH server host keys before accepting them (stored in <filename>~/.ssh/known_hosts</filename> ). This is error-prone and complicated to manage. Another disadvantage is OpenSSH keys never expire. When you need to revoke a particular public key, you have to find and remove all its copies on your network."
msgstr ""

#. Tag: para
#: security_ssh.xml:891
#, no-c-format
msgid "Automating the whole process (for example, with Ansible) is virtually a necessity. Large organizations, such as Meta (see <link xlink:href=\"https://engineering.fb.com/2016/09/12/security/scalable-and-secure-access-with-ssh/\"/> ), automate the process completely, so they can revoke and replace certificates, and even certificate authorities, as often as they want without disrupting operations."
msgstr ""

#. Tag: para
#: security_ssh.xml:899
#, no-c-format
msgid "A prerequisite is the ability to open SSH sessions to all hosts on your network, and perform tasks like editing configuration files and restarting <systemitem class=\"daemon\">sshd</systemitem> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:903
#, no-c-format
msgid "Setting up an OpenSSH certificate authority involves the following steps:"
msgstr ""

#. Tag: para
#: security_ssh.xml:908
#, no-c-format
msgid "Set up a secure trusted server to host your certificate authority, for signing host and user keys. Create a new key pair for signing keys. The private key signs user and host keys, and the public key is copied to all users who are allowed access to the server."
msgstr ""

#. Tag: para
#: security_ssh.xml:916
#, no-c-format
msgid "Receive and sign host public keys, then distribute the new host certificates to their respective hosts. Host certificates go in <filename>/etc/ssh</filename> , just like host keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:923
#, no-c-format
msgid "Receive and sign user public keys, then distribute the new user certificates to their owners. User certificates go in <filename>~/.ssh</filename> , just like user keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:930
#, no-c-format
msgid "Edit configuration files on servers and users' machines, and stop and start <systemitem class=\"daemon\">sshd</systemitem> on hosts as necessary."
msgstr ""

#. Tag: para
#: security_ssh.xml:937
#, no-c-format
msgid "Revoke certificates as needed, for example when you suspect a certificate has been compromised, a user has left your organization, or a server has been retired. Revoking a certificate is considerably simpler than finding and removing all relevant public key copies."
msgstr ""

#. Tag: para
#: security_ssh.xml:945
#, no-c-format
msgid "Users and server admins create and protect their own OpenSSH keys. It is safe to freely share public keys. It is safe to transfer the new certificates by insecure methods, such as email, because they require their private keys to validate."
msgstr ""

#. Tag: para
#: security_ssh.xml:951
#, no-c-format
msgid "SSH certificates follow the OpenPGP standard, rather than SSL/TLS, and that the certificate format is OpenPGP, not X.509."
msgstr ""

#. Tag: title
#: security_ssh.xml:957
#, no-c-format
msgid "Setting up a new certificate authority"
msgstr ""

#. Tag: para
#: security_ssh.xml:958
#, no-c-format
msgid "This section describes how to set up a new certificate authority (CA). Give careful consideration to organizing your CA, to keep it manageable and efficient."
msgstr ""

#. Tag: title
#: security_ssh.xml:964
#, no-c-format
msgid "Protect your certificate authority"
msgstr ""

#. Tag: para
#: security_ssh.xml:965
#, no-c-format
msgid "It is important to protect the machine that hosts your certificate authority. Your CA is literally the key to your entire network. Anyone who gains access to your CA can create their own certificates and freely access your network resources, or even compromise your servers and the CA itself. A common practice is to use a dedicated machine that is started only when you need to sign keys."
msgstr ""

#. Tag: para
#: security_ssh.xml:975
#, no-c-format
msgid "It is a best practice to create one signing key for servers, and another signing key for clients. If you have a large number of certificates to manage, it can be helpful to create your CAs for hosts and clients on separate machines. If you prefer using a single machine, give each CA its own directory. The examples in this section use <filename>/ca-ssh-hosts</filename> and <filename>/ca-ssh-users</filename> . The example machine is <replaceable>ca.example.com</replaceable> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:985
#, no-c-format
msgid "If your security policy requires keeping copies of users' and host's public keys, store them in their own subdirectories, for easier tracking and avoiding key name collisions."
msgstr ""

#. Tag: title
#: security_ssh.xml:991
#, no-c-format
msgid "RSA signing keys deprecated"
msgstr ""

#. Tag: para
#: security_ssh.xml:992
#, no-c-format
msgid "OpenSSH 8.2, released February 2020, deprecates RSA signing keys. Use Ed25519 or ECDSA."
msgstr ""

#. Tag: para
#: security_ssh.xml:997
#, no-c-format
msgid "The following examples create two signing keys, one for signing host keys, and one for user keys. Give them strong passphrases:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1001
#, no-c-format
msgid "&prompt.sudo;<command>ssh-keygen -t ed25519 -f <replaceable>/ca-ssh-hosts/ca-host-sign-key -C \"signing key for host certificates\"</replaceable></command>\n"
      "Generating public/private ed25519 key pair.\n"
      "Enter passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved in ca-host-sign-key\n"
      "Your public key has been saved in ca-host-sign-key.pub\n"
      "The key fingerprint is:\n"
      "SHA256:STuQ7HgDrPcEa7ybNIW0n6kPbj28X5HN8GgwllBbAt0\n"
      " signing key for host certificates\n"
      "The key's randomart image is:\n"
      "+--[ED25519 256]--+\n"
      "|      o+o..      |\n"
      "|   . . o.=E      |\n"
      "|    = + B .      |\n"
      "|   + O + = B     |\n"
      "|  . O * S = +    |\n"
      "|   o B + o .     |\n"
      "|    =o=   .      |\n"
      "|   o.*+  .       |\n"
      "|   .=.o+.        |\n"
      "+----[SHA256]-----+\n"
      ""
msgstr ""

#. Tag: screen
#: security_ssh.xml:1024
#, no-c-format
msgid "&prompt.sudo;<command>ssh-keygen -t ed25519 -f <replaceable>/ca-ssh-users/ca-user-sign-key -C \"signing key for user certificates\"</replaceable></command>\n"
      "Generating public/private ed25519 key pair.\n"
      "Enter passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved in ca-user-sign-key\n"
      "Your public key has been saved in ca-user-sign-key.pub\n"
      "The key fingerprint is:\n"
      "SHA256:taYj8tTnjkzgfHRvQ6HTj8a37PY6rwv96V1x+GHRjIk signing key for user certificates\n"
      "The key's randomart image is:\n"
      "+--[ED25519 256]--+\n"
      "|                 |\n"
      "|             . +.|\n"
      "|          . E o.o|\n"
      "|         . + . ..|\n"
      "|      . S * o .+.|\n"
      "|     o + + = +..+|\n"
      "|    . = * . O + o|\n"
      "|     + = = o =oo+|\n"
      "|      . o.o  oOX=|\n"
      "+----[SHA256]-----+\n"
      " "
msgstr ""

#. Tag: para
#: security_ssh.xml:1045
#, no-c-format
msgid "Copy your public user signing key (be sure you are copying the PUBLIC key) to <filename>/etc/ssh</filename> on all hosts running SSH servers. Then enter the full path of the public user signing key to <filename>/etc/ssh/sshd_config</filename> on the hosts:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1051
#, no-c-format
msgid "TrustedUserCAKeys <replaceable>/etc/ssh/ca-user-sign-key.pub</replaceable>\n"
      ""
msgstr ""

#. Tag: para
#: security_ssh.xml:1053
#, no-c-format
msgid "Then restart <systemitem class=\"daemon\">sshd</systemitem> ."
msgstr ""

#. Tag: title
#: security_ssh.xml:1059
#, no-c-format
msgid "Creating host certificates"
msgstr ""

#. Tag: para
#: security_ssh.xml:1060
#, no-c-format
msgid "The following example signs a host public key to create a host certificate for a database server:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1064
#, no-c-format
msgid "&prompt.sudo;<command>ssh-keygen -s <replaceable>/ca-ssh-hosts/ca-host-sign-key</replaceable></command> \\\n"
      "   <command>-n <replaceable>&wsII;,&wsIIname;</replaceable> -I <replaceable>\"db-server host cert\"</replaceable></command> \\\n"
      "   <command>-h -V +4w <replaceable>/etc/ssh/ssh_host_ed25519_key.pub</replaceable></command>\n"
      "Enter passphrase:\n"
      "Signed host key /etc/ssh/ssh_host_ed25519_key-cert.pub: id\n"
      "\"db-server host cert\" serial 0 for venus,venus.example.com\n"
      "valid from 2022-08-08T14:20:00 to 2022-09-05T15:21:19\n"
      "    "
msgstr ""

#. Tag: para
#: security_ssh.xml:1072
#, no-c-format
msgid "If there is more than one host key on a server, sign them all."
msgstr ""

#. Tag: para
#: security_ssh.xml:1077
#, no-c-format
msgid "<option>-s</option> is your private signing key."
msgstr ""

#. Tag: para
#: security_ssh.xml:1082
#, no-c-format
msgid "<option>-n</option> is your list of principals. For host certificates, the principals are the machine's host name and fully qualified domain name."
msgstr ""

#. Tag: para
#: security_ssh.xml:1089
#, no-c-format
msgid "<option>-I</option> is the identity string. This is any comment or description you want. The string is logged, to help you quickly find relevant log entries."
msgstr ""

#. Tag: para
#: security_ssh.xml:1096
#, no-c-format
msgid "<option>-h</option> creates a host certificate."
msgstr ""

#. Tag: para
#: security_ssh.xml:1101
#, no-c-format
msgid "<option>-V</option> sets the expiration date for the certificate. In the example, the certificate expires in four weeks. (See the \"-V validity_interval\" section of <command>man 1 ssh-keygen</command> for allowed time formats.)"
msgstr ""

#. Tag: para
#: security_ssh.xml:1109
#, no-c-format
msgid "Verify that your new certificate is built the way you want:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1112
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -Lf /etc/ssh/ssh_host_ed25519_key-cert.pub</command>\n"
      " /etc/ssh/ssh_host_ed25519_key-cert.pub:\n"
      "        Type: ssh-ed25519-cert-v01@openssh.com host certificate\n"
      "        Public key: ED25519-CERT SHA256:/\n"
      "         U7C+qABXYyuvueUuhFKzzVINq3d7IULRLwBstvVC+Q\n"
      "        Signing CA: ED25519 SHA256:\n"
      "         STuQ7HgDrPcEa7ybNIW0n6kPbj28X5HN8GgwllBbAt0 (using ssh-ed25519)\n"
      "        Key ID: \"db-server host cert\"\n"
      "        Serial: 0\n"
      "        Valid: from 2022-08-08T14:20:00 to 2022-09-05T15:21:19\n"
      "        Principals:\n"
      "                venus\n"
      "                venus.example.com\n"
      "        Critical Options: (none)\n"
      "        Extensions: (none)\n"
      "    "
msgstr ""

#. Tag: para
#: security_ssh.xml:1128
#, no-c-format
msgid "Add the full path of the new host certificate to <filename>/etc/ssh/sshd_config</filename> , to make it available to clients:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1133
#, no-c-format
msgid "HostCertificate <replaceable>/etc/ssh/ssh_host_ed25519_key-cert.pub</replaceable>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1134
#, no-c-format
msgid "Restart <systemitem class=\"daemon\">sshd</systemitem> to load your changes:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1138
#, no-c-format
msgid "&prompt.sudo;<command>systemctl restart sshd.service</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1139
#, no-c-format
msgid "See <xref linkend=\"sec-ssh-certificate-user-config\"/> to learn how to configure clients to accept host certificates."
msgstr ""

#. Tag: title
#: security_ssh.xml:1147
#, no-c-format
msgid "CA configuration for users"
msgstr ""

#. Tag: para
#: security_ssh.xml:1148
#, no-c-format
msgid "The following example shows how to configure clients to trust your CA rather than individual keys. The example grants access to a single server. This entry must be on a single unbroken line in your users' <filename>~/.ssh/known_hosts</filename> files. Move the original <filename>~/.ssh/known_hosts</filename> file, and create a new file that contains only the CA configuration. Or, create a global configuration in <filename>/etc/ssh/ssh_known_hosts</filename> , which has the advantage of being un-editable by unprivileged users:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1158
#, no-c-format
msgid "@cert-authority db,db.example.com ssh-ed25519\n"
      " AAAAC3NzaC1lZDI1NTE5AAAAIH1pF6DN4BdsfUKWuyiGt/leCvuZ/fPu\n"
      " YxY7+4V68Fz0 signing key for user certificates\n"
      "   "
msgstr ""

#. Tag: para
#: security_ssh.xml:1162
#, no-c-format
msgid "List each server the user is allowed to access in a comma-delimited list, for example <literal><replaceable>&wsII;,&wsIIname;,&wsIII;,&wsIIIname;</replaceable></literal> . You may also grant access to all servers in domains with wildcards, for example <literal>*.example.com,*.example2.com</literal> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:1169
#, no-c-format
msgid "Try connecting to the server. You should be prompted for the password of the remote account, without being prompted to verify the host certificate."
msgstr ""

#. Tag: title
#: security_ssh.xml:1177
#, no-c-format
msgid "Creating user certificates"
msgstr ""

#. Tag: para
#: security_ssh.xml:1178
#, no-c-format
msgid "Sign the user's public key:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1181
#, no-c-format
msgid "&prompt.sudo;<command>ssh-keygen <replaceable>/ca-ssh-hosts/ca-user-sign-key -I \"suzanne's cert\" -n &exampleuserIII_plain; -V +52w user-key.pub</replaceable></command>\n"
      " Signed user key .ssh/ed25519key-cert.pub: id \"suzanne's cert\" serial 0\n"
      " for suzanne valid from 2022-09-14T12:57:00 to 2023-09-13T12:58:21\n"
      ""
msgstr ""

#. Tag: para
#: security_ssh.xml:1185
#, no-c-format
msgid "The principal on user certificates is always the username. Store the user's certificate in <filename>~/.ssh</filename> on the user's machine."
msgstr ""

#. Tag: para
#: security_ssh.xml:1189
#, no-c-format
msgid "User certificates replace the <filename>~/.ssh/authorized_keys</filename> files. Remove this file from a user account on the remote machine, then try opening an SSH session to that account. You should be able to log in without being prompted for a password. (Remember, the server should have a <literal>TrustedUserCAKeys /etc/ssh/<replaceable>ca-user-sign-key.pub</replaceable></literal> line in its <filename>/etc/ssh/sshd_config</filename> file, so that the server knows to trust your certificate authority.)"
msgstr ""

#. Tag: para
#: security_ssh.xml:1199
#, no-c-format
msgid "Additionally, look for <literal>Accepted publickey for <replaceable>&exampleuserIII_plain;</replaceable></literal> messages in your log files."
msgstr ""

#. Tag: title
#: security_ssh.xml:1207
#, no-c-format
msgid "Revoking host keys"
msgstr ""

#. Tag: para
#: security_ssh.xml:1208
#, no-c-format
msgid "When you need to revoke a certificate because a server has been compromised or retired, add the certificate's corresponding public key to a file on every client, for example <filename>/etc/ssh/revoked-host-key</filename> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1214
#, no-c-format
msgid "ssh-ed25519-cert-v01@openssh.com\n"
      "    AAAAIHNzaC1lZDI1NTE5LWNlcnQtdjAxQG9wZW5zc2guY29tAAAAIK6hyvFAhFI+0hkKehF/\n"
      "    506fD1VdcW29ykfFJn1CPK9lAAAAIAawaXbbEFiQOAe5LGclrCHSLWbEeUauK5+CAuhTJyz0\n"
      "    AAAAAAAAAAAAAAACAAAAE2RiLXNlcnZlciBob3N0IGNlcnQAAAAeAAAABXZlbnVzAAAAEXZl\n"
      "    bnVzLmV4YW1wbGUuY29tAAAAAGMabhQAAAAAYz9YgQAAAAAAAAAAAAAAAAAAADMAAAALc3No\n"
      "    LWVkMjU1MTkAAAAgfWkXoM3gF2x9Qpa7KIa3+V4K+5n98+5jFjv7hXrwXPQAAABTAAAAC3Nz\n"
      "    aC1lZDI1NTE5AAAAQI+mbJsQjt/9bLiURse8DF3yTa6Yk3HpoE2uf9FW/\n"
      "    KeLsw2wPeDv0d6jv49Wgr5T3xHYPf+VPJQW35ntFiHTlQg= root@db\n"
      "   "
msgstr ""

#. Tag: para
#: security_ssh.xml:1223
#, no-c-format
msgid "This file must be named in <filename>/etc/ssh/sshd_config</filename> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1226
#, no-c-format
msgid "RevokedKeys /etc/ssh/revoked_keys"
msgstr ""

#. Tag: title
#: security_ssh.xml:1231
#, no-c-format
msgid "Automated public key logins with gnome-keyring"
msgstr ""

#. Tag: para
#: security_ssh.xml:1232
#, no-c-format
msgid "The <package>gnome-keyring</package> package is installed and enabled by default when the GNOME desktop environment is installed. <literal>gnome-keyring</literal> is integrated with your system login, automatically unlocking your secrets storage at login. When you change your login password, <literal>gnome-keyring</literal> automatically updates itself with your new password."
msgstr ""

#. Tag: para
#: security_ssh.xml:1240
#, no-c-format
msgid "<literal>gnome-keyring</literal> automatically loads all key pairs in <filename>~/.ssh</filename> , for each pair that has a <filename>*.pub</filename> file. You may manually load other keys with the <command>ssh-add</command> command, for example:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1246
#, no-c-format
msgid "&prompt.user;<command>ssh-add <replaceable>~/.otherkeys/my_key</replaceable></command>\n"
      "   "
msgstr ""

#. Tag: para
#: security_ssh.xml:1248
#, no-c-format
msgid "List all loaded keys:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1251
#, no-c-format
msgid "&prompt.user;<command>ssh-add -L</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1252
#, no-c-format
msgid "When you start up your system and then open an SSH session, you are prompted for your private key passphrase."
msgstr ""

#. Tag: para
#: security_ssh.xml:1256
#, no-c-format
msgid "<literal>gnome-keyring</literal> remembers the passphrase for the rest of your session. You do not have to re-enter the passphrase until after a system restart."
msgstr ""

#. Tag: title
#: security_ssh.xml:1264
#, no-c-format
msgid "Automated public key logins with ssh-agent"
msgstr ""

#. Tag: para
#: security_ssh.xml:1265
#, no-c-format
msgid "The <package>openssh</package> package provides the <command>ssh-agent</command> utility, which retains your private keys and passphrases, and automatically applies your passphrases for you during the current session."
msgstr ""

#. Tag: para
#: security_ssh.xml:1271
#, no-c-format
msgid "Configure <command>ssh-agent</command> to start automatically and load your keys by entering the following lines in your <filename>~./profile</filename> file:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1276
#, no-c-format
msgid "eval \"$(ssh-agent)\"\n"
      "ssh-add"
msgstr ""

#. Tag: para
#: security_ssh.xml:1278
#, no-c-format
msgid "The first line starts <command>ssh-agent</command> , and the second line loads all the keys in your <filename>~/.ssh</filename> folder. When you open an SSH session that requires public key authentication, you are prompted for the passphrase. After the passphrase has been provided once, you do not have to enter it again, until after you restart your system."
msgstr ""

#. Tag: para
#: security_ssh.xml:1286
#, no-c-format
msgid "You may configure <filename>~./profile</filename> to load only specific keys, like the following example that loads <filename>id_rsa</filename> and <filename>id_ed25519</filename> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1291
#, no-c-format
msgid "&prompt.user;ssh-add <replaceable>id_rsa id_ed25519</replaceable>"
msgstr ""

#. Tag: title
#: security_ssh.xml:1294
#, no-c-format
msgid "Using <command>ssh-agent</command> in an X session"
msgstr ""

#. Tag: para
#: security_ssh.xml:1295
#, no-c-format
msgid "On &productname;, <command>ssh-agent</command> is automatically started by the &gnome; display manager. To also invoke <command>ssh-add</command> to add your keys to the agent at the beginning of an X session, do the following:"
msgstr ""

#. Tag: para
#: security_ssh.xml:1303
#, no-c-format
msgid "Log in as the desired user and check whether the file <filename>~/.xinitrc</filename> exists."
msgstr ""

#. Tag: para
#: security_ssh.xml:1309
#, no-c-format
msgid "If it does not exist, use an existing template or copy it from <filename>/etc/skel</filename> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1313
#, no-c-format
msgid "if [ -f ~/.xinitrc.template ]; then mv ~/.xinitrc.template ~/.xinitrc; \\\n"
      "else cp /etc/skel/.xinitrc.template ~/.xinitrc; fi"
msgstr ""

#. Tag: para
#: security_ssh.xml:1317
#, no-c-format
msgid "If you have copied the template, search for the following lines and uncomment them. If <filename>~/.xinitrc</filename> already existed, add the following lines (without comment signs)."
msgstr ""

#. Tag: screen
#: security_ssh.xml:1322
#, no-c-format
msgid "# if test -S \"$SSH_AUTH_SOCK\" -a -x \"$SSH_ASKPASS\"; then\n"
      "#       ssh-add &lt; /dev/null\n"
      "# fi"
msgstr ""

#. Tag: para
#: security_ssh.xml:1327
#, no-c-format
msgid "When starting a new X session, you are prompted for your SSH passphrase."
msgstr ""

#. Tag: title
#: security_ssh.xml:1337
#, no-c-format
msgid "Changing an SSH private key passphrase"
msgstr ""

#. Tag: para
#: security_ssh.xml:1338
#, no-c-format
msgid "You may change or remove the passphrase from a private key with <command>ssh-keygen</command> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1342
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -pf ~/.ssh/<replaceable>server1</replaceable></command>\n"
      "Enter old passphrase:\n"
      "Key has comment 'shared videos server1'\n"
      "Enter new passphrase (empty for no passphrase):\n"
      "Enter same passphrase again:\n"
      "Your identification has been saved with the new passphrase."
msgstr ""

#. Tag: title
#: security_ssh.xml:1351
#, no-c-format
msgid "Retrieving a key fingerprint"
msgstr ""

#. Tag: para
#: security_ssh.xml:1352
#, no-c-format
msgid "Use the <command>ssh-keygen</command> to display the public key fingerprint. The following example prints the SHA256 hash for a ED25519 key:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1357
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -lf <replaceable>ldap-server</replaceable></command>\n"
      "256 SHA256:W45lbmj24ZoASbrqW0q9+NhF04muvfKZ+FkRa2cCiqo comment (ED25519)"
msgstr ""

#. Tag: para
#: security_ssh.xml:1359
#, no-c-format
msgid "Add the <command>-v</command> flag to display the ASCII art representation of the key:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1363
#, no-c-format
msgid "&prompt.user;<command>ssh-keygen -lvf <replaceable>ldap-server</replaceable></command>\n"
      "256 SHA256:W45lbmj24ZoASbrqW0q9+NhF04muvfKZ+FkRa2cCiqo comment (ED25519)\n"
      "+--[ED25519 256]--+\n"
      "|                 |\n"
      "|                 |\n"
      "|    .. .         |\n"
      "|  .o..+ +        |\n"
      "| ...o+ BSo+      |\n"
      "|. ..o.o =X       |\n"
      "|...o o..* =      |\n"
      "|o.*.* =+ = .     |\n"
      "|E*o*+O. o.o      |\n"
      "+----[SHA256]-----+"
msgstr ""

#. Tag: title
#: security_ssh.xml:1379
#, no-c-format
msgid "Starting X11 applications on a remote host"
msgstr ""

#. Tag: para
#: security_ssh.xml:1380
#, no-c-format
msgid "You can run graphical applications that are installed on a remote machine on your local computer. <literal>X11Forwarding Yes</literal> must be set in the <filename>/etc/ssh/sshd_config</filename> file on the remote machine. Then, when you run <command>ssh</command> with the <option>-X</option> option, the <envar>DISPLAY</envar> variable is automatically set on the remote machine, and all X output is exported to the local machine over the SSH connection. At the same time, X applications started remotely cannot be intercepted by unauthorized users."
msgstr ""

#. Tag: para
#: security_ssh.xml:1391
#, no-c-format
msgid "A quick test is to run a simple game from the remote machine, such as GNOME Mines:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1395
#, no-c-format
msgid "&prompt.user;<command>ssh &exampleuserII_plain;@&exampleserver;</command>\n"
      "Password:\n"
      "Last login: Tue May 10 11:29:06 2022 from 192.168.163.13\n"
      "Have a lot of fun...\n"
      "\n"
      "&exampleuserII_plain;@&exampleserver;&prompt.user; <command>gnome-mines</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1401
#, no-c-format
msgid "The remote application should appear on your local machine just as though it were installed locally. (Network lag affects performance.) Close the remote application in the usual way, such as clicking the close button. This closes only the application, and your SSH session remains open."
msgstr ""

#. Tag: title
#: security_ssh.xml:1410
#, no-c-format
msgid "X11 forwarding does not work on Wayland"
msgstr ""

#. Tag: para
#: security_ssh.xml:1411
#, no-c-format
msgid "X11 forwarding requires the X Window System running on the remote host. The X Window System has built-in networking, while Wayland does not. Therefore Wayland does not support X11 forwarding."
msgstr ""

#. Tag: para
#: security_ssh.xml:1416
#, no-c-format
msgid "Use the following command to learn if your system runs X or Wayland:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1419
#, no-c-format
msgid "&prompt.user;<command>echo $XDG_SESSION_TYPE</command>\n"
      "x11"
msgstr ""

#. Tag: para
#: security_ssh.xml:1421
#, no-c-format
msgid "If Wayland is in use, it looks like the following example:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1424
#, no-c-format
msgid "&prompt.user;<command>echo $XDG_SESSION_TYPE</command>\n"
      "wayland"
msgstr ""

#. Tag: para
#: security_ssh.xml:1426
#, no-c-format
msgid "The systemd way is to query with <command>loginctl</command> :"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1429
#, no-c-format
msgid "&prompt.user;<command>loginctl show-session \"$XDG_SESSION_ID\" -p Type</command>\n"
      "Type=x11\n"
      "\n"
      "&prompt.user;<command>loginctl show-session \"$XDG_SESSION_ID\" -p Type</command>\n"
      "Type=wayland"
msgstr ""

#. Tag: title
#: security_ssh.xml:1439
#, no-c-format
msgid "Agent forwarding"
msgstr ""

#. Tag: para
#: security_ssh.xml:1440
#, no-c-format
msgid "By adding the <option>-A</option> option, the ssh-agent authentication mechanism is carried over to the next machine. This way, you can work from different machines without having to enter a password, but only if you have distributed your public key to the destination hosts and properly saved it there. (Refer to <xref linkend=\"sec-ssh-public-key-auth\"/> to learn how to copy your public keys to other hosts.)"
msgstr ""

#. Tag: para
#: security_ssh.xml:1449
#, no-c-format
msgid "<literal>AllowAgentForwarding yes</literal> is the default in <filename>/etc/ssh/sshd_config</filename> . Change it to <literal>No</literal> to disable it."
msgstr ""

#. Tag: title
#: security_ssh.xml:1457
#, no-c-format
msgid "<command>scp</command> &mdash;secure copy"
msgstr ""

#. Tag: para
#: security_ssh.xml:1458
#, no-c-format
msgid "<command>scp</command> copies files to or from a remote machine. If the user name on &wsI; is different than the user name on &exampleserver;, specify the latter using the <option><replaceable>USER_NAME</replaceable>&amp;host</option> format. If the file should be copied into a directory other than the remote user's home directory, specify it as &exampleserver;: <replaceable>DIRECTORY</replaceable> . The following examples show how to copy a file from a local to a remote machine and vice versa."
msgstr ""

#. Tag: screen
#: security_ssh.xml:1470
#, no-c-format
msgid "&prompt.user;scp ~/MyLetter.tex &exampleuser_plain;@&exampleserver;:/tmp <co xml:id=\"co-scp-local-remote\"/>\n"
      "&prompt.user;scp &exampleuser_plain;@&exampleserver;:/tmp/MyLetter.tex ~ <co xml:id=\"co-scp-remote-local\"/>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1474
#, no-c-format
msgid "local to remote"
msgstr ""

#. Tag: para
#: security_ssh.xml:1477
#, no-c-format
msgid "remote to local"
msgstr ""

#. Tag: title
#: security_ssh.xml:1481
#, no-c-format
msgid "The <option>-l</option> option"
msgstr ""

#. Tag: para
#: security_ssh.xml:1482
#, no-c-format
msgid "With the <command>ssh</command> command, the option <option>-l</option> can be used to specify a remote user (as an alternative to the <option><replaceable>USER_NAME</replaceable>&amp;host</option> format). With <command>scp</command> the option <option>-l</option> is used to limit the bandwidth consumed by <command>scp</command> ."
msgstr ""

#. Tag: para
#: security_ssh.xml:1492
#, no-c-format
msgid "After the correct password is entered, <command>scp</command> starts the data transfer. It displays a progress bar and the time remaining for each file that is copied. Suppress all output with the <option>-q</option> option."
msgstr ""

#. Tag: para
#: security_ssh.xml:1499
#, no-c-format
msgid "<command>scp</command> also provides a recursive copying feature for entire directories. The command"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1504
#, no-c-format
msgid "&prompt.user;scp -r src/ sun:backup/"
msgstr ""

#. Tag: para
#: security_ssh.xml:1506
#, no-c-format
msgid "copies the entire contents of the directory <filename>src</filename> including all subdirectories to the <filename>~/backup</filename> directory on the host &exampleserver;. If this subdirectory does not exist, it is created automatically."
msgstr ""

#. Tag: para
#: security_ssh.xml:1513
#, no-c-format
msgid "The <option>-p</option> option tells <command>scp</command> to leave the time stamp of files unchanged. <option>-C</option> compresses the data transfer. This minimizes the data volume to transfer, but creates a heavier burden on the processors of both machines."
msgstr ""

#. Tag: title
#: security_ssh.xml:1522
#, no-c-format
msgid "<command>sftp</command> &mdash;secure file transfer"
msgstr ""

#. Tag: title
#: security_ssh.xml:1525
#, no-c-format
msgid "Using <command>sftp</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1526
#, no-c-format
msgid "To copy several files from or to different locations, <command>sftp</command> is a convenient alternative to <command>scp</command> . It opens a shell with a set of commands similar to a regular FTP shell. Type <command>help</command> at the sftp-prompt to get a list of available commands. More details are available from the <command>sftp</command> man page."
msgstr ""

#. Tag: screen
#: security_ssh.xml:1535
#, no-c-format
msgid "&prompt.user;sftp &exampleserver;\n"
      "Enter passphrase for key '/home/&exampleuser_plain;/.ssh/id_rsa':\n"
      "Connected to &exampleserver;.\n"
      "sftp&gt; help\n"
      "Available commands:\n"
      "bye                                Quit sftp\n"
      "cd path                            Change remote directory to 'path'\n"
      "[...]"
msgstr ""

#. Tag: title
#: security_ssh.xml:1545
#, no-c-format
msgid "Setting permissions for file uploads"
msgstr ""

#. Tag: para
#: security_ssh.xml:1546
#, no-c-format
msgid "As with a regular FTP server, a user can download and upload files to a remote machine running an SFTP server by using the <command>put</command> command. By default the files are uploaded to the remote host with the same permissions as on the local host. There are two options to automatically alter these permissions:"
msgstr ""

#. Tag: term
#: security_ssh.xml:1556
#, no-c-format
msgid "Setting a umask"
msgstr ""

#. Tag: para
#: security_ssh.xml:1558
#, no-c-format
msgid "A umask works as a filter against the permissions of the original file on the local host. It can only withdraw permissions:"
msgstr ""

#. Tag: para
#: security_ssh.xml:1570
#, no-c-format
msgid "permissions original"
msgstr ""

#. Tag: para
#: security_ssh.xml:1575
#, no-c-format
msgid "umask"
msgstr ""

#. Tag: para
#: security_ssh.xml:1580
#, no-c-format
msgid "permissions uploaded"
msgstr ""

#. Tag: para
#: security_ssh.xml:1589
#, no-c-format
msgid "0666"
msgstr ""

#. Tag: para
#: security_ssh.xml:1599
#, no-c-format
msgid "0664"
msgstr ""

#. Tag: para
#: security_ssh.xml:1611
#, no-c-format
msgid "0002"
msgstr ""

#. Tag: para
#: security_ssh.xml:1616
#, no-c-format
msgid "0600"
msgstr ""

#. Tag: para
#: security_ssh.xml:1623
#, no-c-format
msgid "0775"
msgstr ""

#. Tag: para
#: security_ssh.xml:1628
#, no-c-format
msgid "0025"
msgstr ""

#. Tag: para
#: security_ssh.xml:1633
#, no-c-format
msgid "0750"
msgstr ""

#. Tag: para
#: security_ssh.xml:1641
#, no-c-format
msgid "To apply a umask on an SFTP server, edit the file <filename>/etc/ssh/sshd_configuration</filename> . Search for the line beginning with <literal>Subsystem sftp</literal> and add the <option>-u</option> parameter with the desired setting, for example:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1647
#, no-c-format
msgid "Subsystem sftp /usr/lib/ssh/sftp-server -u 0002"
msgstr ""

#. Tag: term
#: security_ssh.xml:1651
#, no-c-format
msgid "Explicitly setting the permissions"
msgstr ""

#. Tag: para
#: security_ssh.xml:1653
#, no-c-format
msgid "Explicitly setting the permissions sets the same permissions for all files uploaded via SFTP. Specify a three-digit pattern such as <literal>600</literal> , <literal>644</literal> , or <literal>755</literal> with <option>-u</option> . When both <option>-m</option> and <option>-u</option> are specified, <literal>-u</literal> is ignored."
msgstr ""

#. Tag: para
#: security_ssh.xml:1661
#, no-c-format
msgid "To apply explicit permissions for uploaded files on an SFTP server, edit the file <filename>/etc/ssh/sshd_configuration</filename> . Search for the line beginning with <literal>Subsystem sftp</literal> and add the <option>-m</option> parameter with the desired setting, for example:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1668
#, no-c-format
msgid "Subsystem sftp /usr/lib/ssh/sftp-server -m 600"
msgstr ""

#. Tag: title
#: security_ssh.xml:1674
#, no-c-format
msgid "Viewing the SSH daemon log file"
msgstr ""

#. Tag: para
#: security_ssh.xml:1675
#, no-c-format
msgid "To watch the log entries from the <systemitem class=\"daemon\">sshd</systemitem> use the following command:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1679
#, no-c-format
msgid "&prompt.sudo;journalctl -u sshd"
msgstr ""

#. Tag: title
#: security_ssh.xml:1685
#, no-c-format
msgid "Port forwarding (SSH tunneling)"
msgstr ""

#. Tag: para
#: security_ssh.xml:1687
#, no-c-format
msgid "<command>ssh</command> can also be used to redirect TCP/IP connections. This feature, also called <literal>SSH tunneling</literal> , redirects TCP connections to a certain port to another machine via an encrypted channel."
msgstr ""

#. Tag: para
#: security_ssh.xml:1694
#, no-c-format
msgid "With the following command, any connection directed to &wsI; port 25 (SMTP) is redirected to the SMTP port on &exampleserver;. This is especially useful for those using SMTP servers without SMTP-AUTH or POP-before-SMTP features. From any arbitrary location connected to a network, e-mail can be transferred to the <quote>home</quote> mail server for delivery."
msgstr ""

#. Tag: screen
#: security_ssh.xml:1703
#, no-c-format
msgid "&prompt.root;ssh -L 25:&exampleserver;:25 &wsI;"
msgstr ""

#. Tag: para
#: security_ssh.xml:1705
#, no-c-format
msgid "Similarly, all POP3 requests (port&nbsp;110) on &wsI; can be forwarded to the POP3 port of &exampleserver; with this command:"
msgstr ""

#. Tag: screen
#: security_ssh.xml:1710
#, no-c-format
msgid "&prompt.root;ssh -L 110:&exampleserver;:110 &wsI;"
msgstr ""

#. Tag: para
#: security_ssh.xml:1712
#, no-c-format
msgid "Both commands must be executed as &rootuser;, because the connection is made to privileged local ports. E-mail is sent and retrieved by normal users in an existing SSH connection. The SMTP and POP3 host must be set to <literal>localhost</literal> for this to work. Additional information can be found in the manual pages for each of the programs described above and in the OpenSSH package documentation under <filename>/usr/share/doc/packages/openssh</filename> ."
msgstr ""

#. Tag: title
#: security_ssh.xml:1725
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: term
#: security_ssh.xml:1731
#, no-c-format
msgid "<link xlink:href=\"https://www.openssh.com\"/>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1734
#, no-c-format
msgid "The home page of OpenSSH"
msgstr ""

#. Tag: term
#: security_ssh.xml:1740
#, no-c-format
msgid "<link xlink:href=\"https://en.wikibooks.org/wiki/OpenSSH\"/>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1743
#, no-c-format
msgid "The OpenSSH Wikibook"
msgstr ""

#. Tag: term
#: security_ssh.xml:1749
#, no-c-format
msgid "<command>man sshd</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1752
#, no-c-format
msgid "The man page of the OpenSSH daemon"
msgstr ""

#. Tag: term
#: security_ssh.xml:1758
#, no-c-format
msgid "<command>man ssh_config</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1761
#, no-c-format
msgid "The man page of the OpenSSH SSH client configuration files"
msgstr ""

#. Tag: term
#: security_ssh.xml:1767
#, no-c-format
msgid "<command>man scp</command>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1769
#, no-c-format
msgid "<command>man sftp</command>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1771
#, no-c-format
msgid "<command>man ssh</command>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1773
#, no-c-format
msgid "<command>man ssh-add</command>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1775
#, no-c-format
msgid "<command>man ssh-copy-id</command>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1777
#, no-c-format
msgid "<command>man ssh-keygen</command>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1780
#, no-c-format
msgid "Man pages of several binary files to securely copy files ( <command>scp</command> , <command>sftp</command> ), to log in ( <command>slogin</command> , <command>ssh</command> ), and to manage keys."
msgstr ""

#. Tag: term
#: security_ssh.xml:1789
#, no-c-format
msgid "<filename>/usr/share/doc/packages/openssh-common/README.SUSE</filename>"
msgstr ""

#. Tag: term
#: security_ssh.xml:1792
#, no-c-format
msgid "<filename>/usr/share/doc/packages/openssh-common/README.FIPS</filename>"
msgstr ""

#. Tag: para
#: security_ssh.xml:1796
#, no-c-format
msgid "&suse; package specific documentation; changes in defaults with respect to upstream <phrase os=\"sles;sled;slemicro\">, notes on FIPS mode</phrase> etc."
msgstr ""

