# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2025-08-04 22:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: libvirt_storage.xml:8
#, no-c-format
msgid "Advanced storage topics"
msgstr ""

#. Tag: date
#: libvirt_storage.xml:16
#, no-c-format
msgid "2024-06-27"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:23
#, no-c-format
msgid "This chapter introduces advanced topics about manipulating storage from the perspective of the &vmhost;."
msgstr ""

#. Tag: title
#: libvirt_storage.xml:28
#, no-c-format
msgid "Locking disk files and block devices with <systemitem class=\"daemon\">virtlockd</systemitem>"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:30
#, no-c-format
msgid "Locking block devices and disk files prevents concurrent writes to these resources from different VM Guests. It provides protection against starting the same &vmguest; twice, or adding the same disk to two different virtual machines. This reduces the risk of a virtual machine's disk image becoming corrupted because of a wrong configuration."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:38
#, no-c-format
msgid "The locking is controlled by a daemon called <systemitem class=\"daemon\">virtlockd</systemitem> . Since it operates independently from the &libvirtd; daemon, locks endure a crash or a restart of &libvirtd;. Locks even persist during an update of the <systemitem class=\"daemon\">virtlockd</systemitem> itself, since it can re-execute itself. This ensures that &vmguest;s do <emphasis>not</emphasis> need to be restarted upon a <systemitem class=\"daemon\">virtlockd</systemitem> update. <systemitem class=\"daemon\">virtlockd</systemitem> is supported for &kvm;, &qemu;, and &xen;."
msgstr ""

#. Tag: title
#: libvirt_storage.xml:52
#, no-c-format
msgid "Enable locking"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:53
#, no-c-format
msgid "Locking virtual disks is not enabled by default on &productname;. To enable and automatically start it upon rebooting, perform the following steps:"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:60
#, no-c-format
msgid "Edit <filename>/etc/libvirt/qemu.conf</filename> and set"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:63
#, no-c-format
msgid "lock_manager = \"lockd\""
msgstr ""

#. Tag: para
#: libvirt_storage.xml:66
#, no-c-format
msgid "Start the <systemitem class=\"daemon\">virtlockd</systemitem> daemon with the following command:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:70
#, no-c-format
msgid "&prompt.sudo;systemctl start virtlockd"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:73
#, no-c-format
msgid "Restart the &libvirtd; daemon with:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:76
#, no-c-format
msgid "&prompt.sudo;systemctl restart libvirtd"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:79
#, no-c-format
msgid "Make sure <systemitem class=\"daemon\">virtlockd</systemitem> is automatically started when booting the system:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:83
#, no-c-format
msgid "&prompt.sudo;systemctl enable virtlockd"
msgstr ""

#. Tag: title
#: libvirt_storage.xml:89
#, no-c-format
msgid "Configure locking"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:90
#, no-c-format
msgid "By default <systemitem class=\"daemon\">virtlockd</systemitem> is configured to automatically lock all disks configured for your &vmguest;s. The default setting uses a <quote>direct</quote> lockspace, where the locks are acquired against the actual file paths associated with the VM Guest &lt;disk&gt; devices. For example, <literal>flock(2)</literal> is called directly on <filename>/var/lib/libvirt/images/my-server/disk0.raw</filename> when the &vmguest; contains the following &lt;disk&gt; device:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:100
#, no-c-format
msgid "&lt;disk type='file' device='disk'&gt;\n"
      " &lt;driver name='qemu' type='raw'/&gt;\n"
      " &lt;source file='/var/lib/libvirt/images/my-server/disk0.raw'/&gt;\n"
      " &lt;target dev='vda' bus='virtio'/&gt;\n"
      "&lt;/disk&gt;"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:105
#, no-c-format
msgid "The <systemitem class=\"daemon\">virtlockd</systemitem> configuration can be changed by editing the file <filename>/etc/libvirt/qemu-lockd.conf</filename> . It also contains detailed comments with further information. Make sure to activate configuration changes by reloading <systemitem class=\"daemon\">virtlockd</systemitem> :"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:113
#, no-c-format
msgid "&prompt.sudo;systemctl reload virtlockd"
msgstr ""

#. Tag: title
#: libvirt_storage.xml:179
#, no-c-format
msgid "Enabling an indirect lockspace"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:180
#, no-c-format
msgid "The default configuration of <systemitem class=\"daemon\">virtlockd</systemitem> uses a <quote>direct</quote> lockspace. This means that the locks are acquired against the actual file paths associated with the &lt;disk&gt; devices."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:187
#, no-c-format
msgid "If the disk file paths are not accessible to all hosts, <systemitem class=\"daemon\">virtlockd</systemitem> can be configured to allow an <quote>indirect</quote> lockspace. This means that a hash of the disk image path is used to create a file in the indirect lockspace directory. The locks are then held on these hash files instead of the actual disk file paths. Indirect lockspace is also useful if the file system containing the disk files does not support <literal>fcntl()</literal> locks. An indirect lockspace is specified with the <option>file_lockspace_dir</option> setting:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:198
#, no-c-format
msgid "file_lockspace_dir = \"<replaceable>/MY_LOCKSPACE_DIRECTORY</replaceable>\""
msgstr ""

#. Tag: title
#: libvirt_storage.xml:201
#, no-c-format
msgid "Enable locking on LVM or iSCSI volumes"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:202
#, no-c-format
msgid "When wanting to lock virtual disks placed on LVM or iSCSI volumes shared by several hosts, locking needs to be done by UUID rather than by path (which is used by default). Furthermore, the lockspace directory needs to be placed on a shared file system accessible by all hosts sharing the volume. Set the following options for LVM and/or iSCSI:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:210
#, no-c-format
msgid "lvm_lockspace_dir = \"<replaceable>/MY_LOCKSPACE_DIRECTORY</replaceable>\"\n"
      "iscsi_lockspace_dir = \"<replaceable>/MY_LOCKSPACE_DIRECTORY</replaceable>\""
msgstr ""

#. Tag: title
#: libvirt_storage.xml:216
#, no-c-format
msgid "Online resizing of guest block devices"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:218
#, no-c-format
msgid "Sometimes you need to change&mdash;extend or shrink&mdash;the size of the block device used by your guest system. For example, when the disk space originally allocated is no longer enough, it is time to increase its size. If the guest disk resides on a <emphasis>logical volume</emphasis> , you can resize it while the guest system is running. This is a big advantage over an offline disk resizing (see the <command>virt-resize</command> command from the <xref linkend=\"sec-guestfs-tools\"/> package) as the service provided by the guest is not interrupted by the resizing process. To resize a &vmguest; disk, follow these steps:"
msgstr ""

#. Tag: title
#: libvirt_storage.xml:232
#, no-c-format
msgid "Online resizing of guest disk"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:234
#, no-c-format
msgid "Inside the guest system, check the current size of the disk (for example <filename>/dev/vda</filename> )."
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:238
#, no-c-format
msgid "&prompt.root;fdisk -l /dev/vda\n"
      "Disk /dev/sda: 160.0 GB, 160041885696 bytes, 312581808 sectors\n"
      "Units = sectors of 1 * 512 = 512 bytes\n"
      "Sector size (logical/physical): 512 bytes / 512 bytes\n"
      "I/O size (minimum/optimal): 512 bytes / 512 bytes"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:245
#, no-c-format
msgid "On the host, resize the logical volume holding the <filename>/dev/vda</filename> disk of the guest to the required size, for example, 200&nbsp;GB."
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:250
#, no-c-format
msgid "&prompt.root;lvresize -L 200G /dev/mapper/vg00-home\n"
      "Extending logical volume home to 200 GiB\n"
      "Logical volume home successfully resized"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:255
#, no-c-format
msgid "On the host, resize the block device related to the disk <filename>/dev/mapper/vg00-home</filename> of the guest. You can find the <replaceable>DOMAIN_ID</replaceable> with <command>virsh list</command> ."
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:261
#, no-c-format
msgid "&prompt.root;virsh blockresize  --path /dev/vg00/home --size 200G <replaceable>DOMAIN_ID</replaceable>\n"
      "Block device '/dev/vg00/home' is resized"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:265
#, no-c-format
msgid "Check that the new disk size is accepted by the guest."
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:268
#, no-c-format
msgid "&prompt.root;fdisk -l /dev/vda\n"
      "Disk /dev/sda: 200.0 GB, 200052357120 bytes, 390727260 sectors\n"
      "Units = sectors of 1 * 512 = 512 bytes\n"
      "Sector size (logical/physical): 512 bytes / 512 bytes\n"
      "I/O size (minimum/optimal): 512 bytes / 512 bytes"
msgstr ""

#. Tag: title
#: libvirt_storage.xml:277
#, no-c-format
msgid "Sharing directories between host and guests (file system pass-through)"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:279
#, no-c-format
msgid "libvirt allows to share directories between host and guests using &qemu;'s file system pass-through (also called VirtFS) feature. Such a directory can be also be accessed by several &vmguest;s at once and therefore be used to exchange files between &vmguest;s."
msgstr ""

#. Tag: title
#: libvirt_storage.xml:287
#, no-c-format
msgid "Windows guests and file system pass-through"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:288
#, no-c-format
msgid "Sharing directories between &vmhost; and Windows guests via File System Pass-Through does not work, because Windows lacks the drivers required to mount the shared directory."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:295
#, no-c-format
msgid "To make a shared directory available on a &vmguest;, proceed as follows:"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:301
#, no-c-format
msgid "Open the guest's console in &vmm; and either choose <menuchoice><guimenu>View</guimenu> <guimenu>Details</guimenu></menuchoice> from the menu or click <guimenu>Show virtual hardware details</guimenu> in the toolbar. Choose <menuchoice> <guimenu>Add Hardware</guimenu> <guimenu>Filesystem</guimenu> </menuchoice> to open the <guimenu>Filesystem Passthrough</guimenu> dialog."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:312
#, no-c-format
msgid "<guimenu>Driver</guimenu> allows you to choose between a <guimenu>Handle</guimenu> or <guimenu>Path</guimenu> base driver. The default setting is <guimenu>Path</guimenu> . <guimenu>Mode</guimenu> lets you choose the security model, which influences the way file permissions are set on the host. Three options are available:"
msgstr ""

#. Tag: term
#: libvirt_storage.xml:321
#, no-c-format
msgid "<guimenu>Passthrough</guimenu> (default)"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:323
#, no-c-format
msgid "Files on the file system are directly created with the client-user's credentials. This is similar to what NFSv3 is using."
msgstr ""

#. Tag: term
#: libvirt_storage.xml:331
#, no-c-format
msgid "<guimenu>Squash</guimenu>"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:333
#, no-c-format
msgid "Same as <guimenu>Passthrough</guimenu> , but failure of privileged operations like <command>chown</command> are ignored. This is required when &kvm; is not run with <systemitem class=\"username\">root</systemitem> privileges."
msgstr ""

#. Tag: term
#: libvirt_storage.xml:343
#, no-c-format
msgid "<guimenu>Mapped</guimenu>"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:345
#, no-c-format
msgid "Files are created with the file server's credentials ( <literal>qemu.qemu</literal> ). The user credentials and the client-user's credentials are saved in extended attributes. This model is recommended when host and guest domains should be kept isolated."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:357
#, no-c-format
msgid "Specify the path to the directory on the &vmhost; with <guimenu>Source Path</guimenu> . Enter a string at <guimenu>Target Path</guimenu> to be used as a tag to mount the shared directory. The string of this field is a tag only, not a path on the &vmguest;."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:365
#, no-c-format
msgid "<guimenu>Apply</guimenu> the setting. If the &vmguest; is currently running, you need to shut it down to apply the new setting (rebooting the guest is not sufficient)."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:372
#, no-c-format
msgid "Boot the &vmguest;. To mount the shared directory, enter the following command:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:376
#, no-c-format
msgid "&prompt.sudo;mount -t 9p -o trans=virtio,version=9p2000.L,rw <replaceable>TAG</replaceable> /<replaceable>MOUNT_POINT</replaceable>"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:377
#, no-c-format
msgid "To make the shared directory permanently available, add the following line to the <filename>/etc/fstab</filename> file:"
msgstr ""

#. Tag: screen
#: libvirt_storage.xml:381
#, no-c-format
msgid "<replaceable>TAG</replaceable>   /<replaceable>MOUNT_POINT</replaceable>    9p  trans=virtio,version=9p2000.L,rw    0   0"
msgstr ""

#. Tag: title
#: libvirt_storage.xml:386
#, no-c-format
msgid "Using RADOS block devices with &libvirt;"
msgstr ""

#. Tag: para
#: libvirt_storage.xml:388
#, no-c-format
msgid "RADOS Block Devices (RBD) store data in a &ceph; cluster. They allow snapshotting, replication and data consistency. You can use an RBD from your &libvirt;-managed &vmguest;s similarly to how you use other block devices."
msgstr ""

#. Tag: para
#: libvirt_storage.xml:395
#, no-c-format
msgid "For more details, refer to the &ses; <citetitle>&admin;</citetitle> , chapter <citetitle>Using libvirt with Ceph</citetitle> . The &ses; documentation is available from <link xlink:href=\"https://documentation.suse.com/ses/\"/> ."
msgstr ""

