# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2020-07-01 06:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: docker_overview.xml:11
#, no-c-format
msgid "&deng; Overview"
msgstr ""

#. Tag: para
#: docker_overview.xml:12
#, no-c-format
msgid "&deng; is a lightweight virtualization solution to run multiple virtual Linux environments (containers) simultaneously on top of a single Linux kernel, without a hypervisor. Containers are isolated with Kernel Control Groups ( <xref linkend=\"vle-docker-cgroup\"/> ) and <xref linkend=\"vle-docker-namespace\"/> ."
msgstr ""

#. Tag: para
#: docker_overview.xml:18
#, no-c-format
msgid "Full virtualization solutions such as &xen;, &kvm;, or &libvirt; are based on simulating a complete hardware environment and running multiple operating system instances inside these virtual machines. Instead, the &deng; provides operating-system-level virtualization, where a single Linux kernel controls multiple isolated containers."
msgstr ""

#. Tag: para
#: docker_overview.xml:25
#, no-c-format
msgid "Before going into detail about &deng;, let us define some terms used:"
msgstr ""

#. Tag: term
#: docker_overview.xml:30
#, no-c-format
msgid "&deng;"
msgstr ""

#. Tag: para
#: docker_overview.xml:32
#, no-c-format
msgid "&deng; is a server-client type application that performs all tasks related to containers. &deng; comprises the following:"
msgstr ""

#. Tag: title
#: docker_overview.xml:39
#, no-c-format
msgid "Daemon:"
msgstr ""

#. Tag: para
#: docker_overview.xml:40
#, no-c-format
msgid "The server side of &deng; manages all &docker; objects (images, containers, network connections used by containers, etc.)."
msgstr ""

#. Tag: title
#: docker_overview.xml:48
#, no-c-format
msgid "REST API:"
msgstr ""

#. Tag: para
#: docker_overview.xml:49
#, no-c-format
msgid "Applications can use this API to communicate directly with the daemon."
msgstr ""

#. Tag: title
#: docker_overview.xml:56
#, no-c-format
msgid "CLI Client:"
msgstr ""

#. Tag: para
#: docker_overview.xml:57
#, no-c-format
msgid "Enables you to communicate with the daemon. If the daemon is running on a different machine than the CLI client, the CLI client can communicate by using network sockets or the REST API provided by &deng;."
msgstr ""

#. Tag: term
#: docker_overview.xml:69
#, no-c-format
msgid "Image"
msgstr ""

#. Tag: para
#: docker_overview.xml:71
#, no-c-format
msgid "An <emphasis>image</emphasis> is a read-only template used to create a <emphasis>container</emphasis> on the host server. A &docker; image is made by a series of layers built one over the other. Each layer corresponds to a permanent change, for example an update of an application. The changes are stored in a file called a <emphasis>Dockerfile</emphasis> . For more details see <link xlink:href=\"http://docs.docker.com/engine/reference/glossary#image\">the official Docker documentation</link> ."
msgstr ""

#. Tag: term
#: docker_overview.xml:84
#, no-c-format
msgid "Dockerfile"
msgstr ""

#. Tag: para
#: docker_overview.xml:86
#, no-c-format
msgid "A <emphasis>Dockerfile</emphasis> stores changes made on top of the base image. <xref linkend=\"Docker-engine\"/> reads instructions in the <emphasis>Dockerfile</emphasis> and builds a new image according to the instructions."
msgstr ""

#. Tag: term
#: docker_overview.xml:95
#, no-c-format
msgid "Container"
msgstr ""

#. Tag: para
#: docker_overview.xml:97
#, no-c-format
msgid "A <emphasis>container</emphasis> is a running instance based on a particular &docker; <xref linkend=\"Docker-Image\"/> . Each <emphasis>container</emphasis> can be distinguished by a unique container ID."
msgstr ""

#. Tag: term
#: docker_overview.xml:106
#, no-c-format
msgid "Registry"
msgstr ""

#. Tag: para
#: docker_overview.xml:108
#, no-c-format
msgid "A <emphasis>registry</emphasis> is storage for already created images. It typically contains several <emphasis>repositories</emphasis> There are two types of registry:"
msgstr ""

#. Tag: para
#: docker_overview.xml:115
#, no-c-format
msgid "public registry: any (usually, registered) user can download and use images. A typical example of a public registry is <link xlink:href=\"https://hub.docker.com/\">Docker Hub</link> ."
msgstr ""

#. Tag: para
#: docker_overview.xml:122
#, no-c-format
msgid "private registry: access is restricted to particular users, or from a particular private network."
msgstr ""

#. Tag: term
#: docker_overview.xml:131
#, no-c-format
msgid "Repository"
msgstr ""

#. Tag: para
#: docker_overview.xml:133
#, no-c-format
msgid "A <emphasis>repository</emphasis> is storage in a <emphasis>registry</emphasis> that stores a different version of a particular image. You can pull images from, or push them to, a repository."
msgstr ""

#. Tag: term
#: docker_overview.xml:141
#, no-c-format
msgid "Control groups"
msgstr ""

#. Tag: para
#: docker_overview.xml:143
#, no-c-format
msgid "<emphasis>Control groups</emphasis> , also called <literal>cgroups</literal> , is a Linux kernel feature that allows aggregating or partitioning tasks (processes) and all their children into hierarchically organized groups to isolate resources."
msgstr ""

#. Tag: term
#: docker_overview.xml:152
#, no-c-format
msgid "Namespaces"
msgstr ""

#. Tag: para
#: docker_overview.xml:154
#, no-c-format
msgid "&deng; uses <emphasis>namespaces</emphasis> for its containers, which isolates resources reserved for particular containers."
msgstr ""

#. Tag: term
#: docker_overview.xml:161
#, no-c-format
msgid "Orchestration"
msgstr ""

#. Tag: para
#: docker_overview.xml:163
#, no-c-format
msgid "In a production environment you typically need a cluster with many containers on each cluster node. The containers must cooperate and you need a framework that enables you to manage the containers automatically. The act of automatic container management is called container orchestration and is typically handled by Kubernetes."
msgstr ""

#. Tag: para
#: docker_overview.xml:173
#, no-c-format
msgid "&deng; is a platform that allows developers and system administrators to manage the complete lifecycle of images. &deng; makes it easy to build, ship and run images containing applications."
msgstr ""

#. Tag: para
#: docker_overview.xml:178
#, no-c-format
msgid "&deng; provides you with the following advantages:"
msgstr ""

#. Tag: para
#: docker_overview.xml:183
#, no-c-format
msgid "Isolation of applications through containers."
msgstr ""

#. Tag: para
#: docker_overview.xml:188
#, no-c-format
msgid "Near-native performance, as &deng; manages allocation of resources in real time."
msgstr ""

#. Tag: para
#: docker_overview.xml:194
#, no-c-format
msgid "Controls network interfaces and resources available inside containers through cgroups."
msgstr ""

#. Tag: para
#: docker_overview.xml:200
#, no-c-format
msgid "Versioning of images."
msgstr ""

#. Tag: para
#: docker_overview.xml:205
#, no-c-format
msgid "Allows building new images based on existing ones."
msgstr ""

#. Tag: para
#: docker_overview.xml:210
#, no-c-format
msgid "Provides you with container orchestration."
msgstr ""

#. Tag: para
#: docker_overview.xml:215
#, no-c-format
msgid "On the other hand, &deng; has the following limitations:"
msgstr ""

#. Tag: title
#: docker_overview.xml:219
#, no-c-format
msgid "Limitations of &deng;"
msgstr ""

#. Tag: para
#: docker_overview.xml:221
#, no-c-format
msgid "Containers run on the host system's kernel and cannot use a different kernel."
msgstr ""

#. Tag: para
#: docker_overview.xml:227
#, no-c-format
msgid "Only supports Linux applications and not other operating systems."
msgstr ""

#. Tag: para
#: docker_overview.xml:232
#, no-c-format
msgid "&deng; is not a full virtualization stack like &xen;, &kvm;, or &libvirt;."
msgstr ""

#. Tag: para
#: docker_overview.xml:237
#, no-c-format
msgid "Security depends on the host system. Refer to the <link xlink:href=\"http://docs.docker.com/articles/security/\">official security documentation</link> for more details."
msgstr ""

#. Tag: title
#: docker_overview.xml:245
#, no-c-format
msgid "&deng; Architecture"
msgstr ""

#. Tag: para
#: docker_overview.xml:247
#, no-c-format
msgid "&deng; uses a client/server architecture. You can use the <emphasis>CLI client</emphasis> to communicate with the <emphasis>daemon</emphasis> . The <emphasis>daemon</emphasis> then performs operations with containers and manages images locally or in registry. The <emphasis>CLI client</emphasis> can run on the same server as the host daemon or on a different machine. The <emphasis>CLI client</emphasis> communicates with the <emphasis>daemon</emphasis> by using network sockets. The architecture is depicted in <xref linkend=\"Docker-architecture\"/> ."
msgstr ""

#. Tag: title
#: docker_overview.xml:259
#, no-c-format
msgid "The &deng; Architecture"
msgstr ""

#. Tag: title
#: docker_overview.xml:268
#, no-c-format
msgid "&docker; Drivers"
msgstr ""

#. Tag: title
#: docker_overview.xml:271
#, no-c-format
msgid "Container Drivers"
msgstr ""

#. Tag: para
#: docker_overview.xml:272
#, no-c-format
msgid "&deng; uses <link xlink:href=\"https://github.com/docker/libcontainer\">libcontainer</link> as the back-end driver to handle containers."
msgstr ""

#. Tag: title
#: docker_overview.xml:280
#, no-c-format
msgid "Storage Drivers"
msgstr ""

#. Tag: para
#: docker_overview.xml:281
#, no-c-format
msgid "&deng; supports different storage drivers:"
msgstr ""

#. Tag: para
#: docker_overview.xml:286
#, no-c-format
msgid "<systemitem class=\"resource\">vfs</systemitem> : this driver is automatically used when the &docker; host file system does not support copy-on-write. This is a simple driver which does not offer some advantages of &deng; (like sharing layers, more on that in the next sections). It is highly reliable but also slow."
msgstr ""

#. Tag: para
#: docker_overview.xml:295
#, no-c-format
msgid "<systemitem class=\"resource\">devicemapper</systemitem> : this driver relies on the device-mapper thin provisioning module. It supports copy-on-write, hence it offers all the advantages of &deng;."
msgstr ""

#. Tag: para
#: docker_overview.xml:302
#, no-c-format
msgid "<systemitem class=\"resource\">btrfs</systemitem> : this driver relies on Btrfs to provide all the features required by &deng;. To use this driver the <filename>/var/lib/docker</filename> directory must be on a Btrfs file system."
msgstr ""

#. Tag: para
#: docker_overview.xml:310
#, no-c-format
msgid "<systemitem class=\"resource\">AUFS</systemitem> : this driver relies on the AUFS union file system. Neither the upstream kernel nor the &suse; kernel supports this file system. Hence the AUFS driver is not built into the &suse; <package>docker</package> package."
msgstr ""

#. Tag: para
#: docker_overview.xml:318
#, no-c-format
msgid "Since version 12, &slea; uses the Btrfs file system by default, which leads &deng; to use the <systemitem class=\"resource\">btrfs</systemitem> driver."
msgstr ""

#. Tag: para
#: docker_overview.xml:322
#, no-c-format
msgid "It is possible to specify which driver to use by changing the value of the <envar>DOCKER_OPTS</envar> variable defined inside of the <filename>/etc/sysconfig/docker</filename> file. This can be done either manually or using &yast; by browsing to <menuchoice> <guimenu>System</guimenu> <guimenu>/etc/sysconfig Editor</guimenu> <guimenu>System</guimenu> <guimenu>Management</guimenu> <guimenu>DOCKER_OPTS</guimenu> </menuchoice> menu and entering the <systemitem class=\"library\">-s storage_driver</systemitem> string."
msgstr ""

#. Tag: para
#: docker_overview.xml:332
#, no-c-format
msgid "For example, to force the usage of the <systemitem class=\"resource\">devicemapper</systemitem> driver enter the following text:"
msgstr ""

#. Tag: screen
#: docker_overview.xml:337
#, no-c-format
msgid "DOCKER_OPTS=\"-s devicemapper\""
msgstr ""

#. Tag: title
#: docker_overview.xml:339
#, no-c-format
msgid "Mounting <filename>/var/lib/docker</filename>"
msgstr ""

#. Tag: para
#: docker_overview.xml:340
#, no-c-format
msgid "It is recommended to have <filename>/var/lib/docker</filename> mounted on a separate partition or volume to not affect the operating system that &deng; runs on in case of a file system corruption."
msgstr ""

#. Tag: para
#: docker_overview.xml:349
#, no-c-format
msgid "In case you choose the Btrfs file system for <filename>/var/lib/docker</filename> , it is strongly recommended to create a subvolume for it. This ensures that the directory is excluded from file system snapshots. If not excluding <filename>/var/lib/docker</filename> from snapshots, the file system will likely run out of disk space soon after you start deploying containers. In addition, a rollback to a previous snapshot will also reset the &docker; database and images. For more information, see <xref linkend=\"sec-snapper-setup-customizing-new-subvolume\"/> ."
msgstr ""

