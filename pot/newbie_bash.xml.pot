# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2018-06-28 08:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: newbie_bash.xml:11
#, no-c-format
msgid "Shell Basics"
msgstr ""

#. Tag: para
#: newbie_bash.xml:12
#, no-c-format
msgid "When working with Linux, you can communicate with the system almost without ever requiring a command line interpreter (the shell). After booting your Linux system, you are usually directed to a graphical user interface that guides you through the login process and the following interactions with the operating system. The graphical user interface in Linux is initially configured during installation and used by desktop environments such as KDE or GNOME."
msgstr ""

#. Tag: para
#: newbie_bash.xml:21
#, no-c-format
msgid "Nevertheless, it is useful to have some basic knowledge of working with a shell because you might encounter situations where the graphical user interface is not available. For example, if some problem with the X Window System occurs. If you are not familiar with a shell, you might feel a bit uncomfortable at first when entering commands, but the more you get used to it, the more you will realize that the command line is often the quickest and easiest way to perform some daily tasks."
msgstr ""

#. Tag: para
#: newbie_bash.xml:30
#, no-c-format
msgid "For Unix or Linux, several shells are available which differ slightly in behavior and in the commands they accept. The default shell in &productnamereg; is Bash (GNU Bourne-Again Shell)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:35
#, no-c-format
msgid "The following sections will guide you through your first steps with the Bash shell and will show you how to complete some basic tasks via the command line. If you are interested in learning more or rather feel like a shell <quote>power user</quote> already, refer to <xref linkend=\"cha.adm.shell\"/> ."
msgstr ""

#. Tag: title
#: newbie_bash.xml:43
#, no-c-format
msgid "Starting a Shell"
msgstr ""

#. Tag: para
#: newbie_bash.xml:45
#, no-c-format
msgid "Basically, there are two different ways to start a shell from the graphical user interface which usually shows after you have booted your computer:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:53
#, no-c-format
msgid "you can leave the graphical user interface or"
msgstr ""

#. Tag: para
#: newbie_bash.xml:58
#, no-c-format
msgid "you can start a terminal window <emphasis>within</emphasis> the graphical user interface."
msgstr ""

#. Tag: para
#: newbie_bash.xml:65
#, no-c-format
msgid "While the first option is always available, you can only make use of the second option when you are already logged in to a desktop such as KDE or GNOME. Whichever way you choose, there is always a way back and you can switch back and forth between the shell and the graphical user interface."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:73
#, no-c-format
msgid "If you want to give it a try, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:77
#, no-c-format
msgid "to leave the graphical user interface. The graphical user interface disappears and you are taken to a shell which prompts you to log in. Type your username and press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:79
#, no-c-format
msgid ". Then type your password and press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:81
#, no-c-format
msgid ". The prompt now changes and shows some useful information as in the following example:"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:83
#, no-c-format
msgid "&nbsp;&nbsp;&nbsp;"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:84
#, no-c-format
msgid "tux@linux:~&gt;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:88
#, no-c-format
msgid "Your login."
msgstr ""

#. Tag: para
#: newbie_bash.xml:93
#, no-c-format
msgid "The hostname of your computer."
msgstr ""

#. Tag: para
#: newbie_bash.xml:98
#, no-c-format
msgid "Path to the current directory. Directly after login, the current directory usually is your home directory, indicated by the <literal>~</literal> symbol (tilde) ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:106
#, no-c-format
msgid "When you are logged in at a remote computer the information provided by the prompt always shows you which system you are currently working on."
msgstr ""

#. Tag: option
#: newbie_bash.xml:114
#, no-c-format
msgid "-l"
msgstr ""

#. Tag: command
#: newbie_bash.xml:114
#, no-c-format
msgid "ls"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:114
#, no-c-format
msgid "When the cursor is located behind this prompt, you can pass commands directly to your computer system. For example, you can now enter"
msgstr ""

#. Tag: command
#: newbie_bash.xml:118
#, no-c-format
msgid "exit"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:118
#, no-c-format
msgid "to list the contents of the current directory in a detailed format. If this is enough for your first encounter with the shell and you want to go back to the graphical user interface, you should log out from your shell session first. To do so, type"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:120
#, no-c-format
msgid "F7"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:120
#, no-c-format
msgid ". Then press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:123
#, no-c-format
msgid "to switch back to the graphical user interface. You will find your desktop and the applications running on it unchanged."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:127
#, no-c-format
msgid "When you are already logged in to the GNOME or the KDE desktop and want to start a terminal window within the desktop, press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:128
#, no-c-format
msgid "F2"
msgstr ""

#. Tag: command
#: newbie_bash.xml:129
#, no-c-format
msgid "konsole"
msgstr ""

#. Tag: command
#: newbie_bash.xml:129
#, no-c-format
msgid "gnome-terminal"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:129
#, no-c-format
msgid "(for KDE) or"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:129
#, no-c-format
msgid "and enter"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:136
#, no-c-format
msgid "(for GNOME). This opens a terminal window on your desktop. As you are already logged in to your desktop, the prompt shows information about your system as described above. You can now enter commands and execute tasks just like in any shell which runs parallel to your desktop. To switch to another application on the desktop just click on the corresponding application window or select it from the taskbar of your panel. To close the terminal window press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:137
#, no-c-format
msgid "F4"
msgstr ""

#. Tag: title
#: newbie_bash.xml:141
#, no-c-format
msgid "Entering Commands"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:148
#, no-c-format
msgid "As soon as the prompt appears on the shell it is ready to receive and execute commands. A command can consist of several elements. The first element is the actual command, followed by parameters or options. You can type a command and edit it by using the following keys:"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:152
#, no-c-format
msgid "(Backspace),"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:153
#, no-c-format
msgid ", and"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:156
#, no-c-format
msgid ". You can correct typing errors or add options. The command is not executed until you press"
msgstr ""

#. Tag: title
#: newbie_bash.xml:160
#, no-c-format
msgid "No News Is Good News"
msgstr ""

#. Tag: para
#: newbie_bash.xml:161
#, no-c-format
msgid "The shell is not verbose: in contrast to some graphical user interfaces, it usually does not provide confirmation messages when commands have been executed. Messages only appear in case of problems or errors &mdash;or if you explicitly ask for them by executing a command with a certain option."
msgstr ""

#. Tag: para
#: newbie_bash.xml:168
#, no-c-format
msgid "Also keep this in mind for commands to delete objects. Before entering a command like <command>rm</command> (without any option) for removing a file, you should know if you really want to get rid of the object: it will be deleted irretrievably, without confirmation."
msgstr ""

#. Tag: title
#: newbie_bash.xml:177
#, no-c-format
msgid "Using Commands without Options"
msgstr ""

#. Tag: para
#: newbie_bash.xml:178
#, no-c-format
msgid "In <xref linkend=\"sec.new.bash.accperm.ugo\"/> you already got to know one of the most basic commands: <command>ls</command> , which used to list the contents of a directory. This command can be used with or without options. Entering the plain <command>ls</command> command shows the contents of the current directory:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:186
#, no-c-format
msgid "&prompt.user;ls\n"
      "bin Desktop Documents public_html tux.txt\n"
      "&prompt.user;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:189
#, no-c-format
msgid "Files in Linux may have a file extension or a suffix, such as <literal>.txt</literal> , but do not need to have one. This makes it difficult to differentiate between files and folders in this output of the <command>ls</command> . By default, the colors in the Bash shell give you a hint: directories are usually shown in blue, files in black."
msgstr ""

#. Tag: title
#: newbie_bash.xml:199
#, no-c-format
msgid "Using Commands with Options"
msgstr ""

#. Tag: para
#: newbie_bash.xml:200
#, no-c-format
msgid "A better way to get more details about the contents of a directory is using the <command>ls</command> command with a string of options. Options modify the way a command works so that you can get it to carry out specific tasks. Options are separated from the command with a blank and are usually prefixed with a hyphen. The <command>ls</command> <option>-l</option> command shows the contents of the same directory in full detail (long listing format):"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:209
#, no-c-format
msgid "&prompt.user;ls -l\n"
      "drwxr-xr-x 1 tux users     48 2015-06-23 16:08 bin\n"
      "drwx---r-- 1 tux users  53279 2015-06-21 13:16 Desktop\n"
      "drwx------ 1 tux users    280 2015-06-23 16:08 Documents\n"
      "drwxr-xr-x 1 tux users  70733 2015-06-21 09:35 public_html\n"
      "-rw-r--r-- 1 tux users  47896 2015-06-21 09:46 tux.txt\n"
      "&prompt.user;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:216
#, no-c-format
msgid "This output shows the following information about each object:"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "bin"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "tux"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "users"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "1"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "2006-06-23 16:08"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "48"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:219
#, no-c-format
msgid "drwxr-xr-x"
msgstr ""

#. Tag: para
#: newbie_bash.xml:222
#, no-c-format
msgid "Type of object and access permissions. For further information, refer to <xref linkend=\"sec.new.bash.accperm.ugo\"/> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:229
#, no-c-format
msgid "Number of hard links to this file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:234
#, no-c-format
msgid "Owner of the file or directory. For further information, refer to <xref linkend=\"sec.new.bash.accperm.ugo\"/> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:241
#, no-c-format
msgid "Group assigned to the file or directory. For further information, refer to <xref linkend=\"sec.new.bash.accperm.ugo\"/> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:248
#, no-c-format
msgid "File size in bytes."
msgstr ""

#. Tag: para
#: newbie_bash.xml:253
#, no-c-format
msgid "Date and time of the last change."
msgstr ""

#. Tag: para
#: newbie_bash.xml:258
#, no-c-format
msgid "Name of the object."
msgstr ""

#. Tag: para
#: newbie_bash.xml:263
#, no-c-format
msgid "Usually, you can combine several options by prefixing only the first option with a hyphen and then write the others consecutively without a blank. For example, if you want to see all files in a directory in long listing format, you can combine the two options <option>-l</option> and <option>-a</option> (show all files) for the <command>ls</command> command. Executing <command>ls</command> <option>-la</option> shows also hidden files in the directory, indicated by a dot in front (for example, <literal>.hiddenfile</literal> )."
msgstr ""

#. Tag: para
#: newbie_bash.xml:273
#, no-c-format
msgid "The list of contents you get with <command>ls</command> is sorted alphabetically by filenames. But like in a graphical file manager, you can also sort the output of <command>ls</command> <option>-l</option> according to various criteria such as date, file extension or file size:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:281
#, no-c-format
msgid "For date and time, use <command>ls</command> <option>-lt</option> (displays newest first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:287
#, no-c-format
msgid "For extensions, use <command>ls</command> <option>-lx</option> (displays files with no extension first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:293
#, no-c-format
msgid "For file size, use <command>ls</command> <option>-lS</option> (displays largest first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:299
#, no-c-format
msgid "To revert the order of sorting, add <option>-r</option> as an option to your <command>ls</command> command. For example, <command>ls</command> <option>-lr</option> gives you the contents list sorted in reverse alphabetical order, <command>ls</command> <option>-ltr</option> shows the oldest files first. There are lots of other useful options for <command>ls</command> . In the following section you will learn how to investigate them."
msgstr ""

#. Tag: title
#: newbie_bash.xml:311
#, no-c-format
msgid "Bash Shortcut Keys"
msgstr ""

#. Tag: para
#: newbie_bash.xml:312
#, no-c-format
msgid "After having entered several commands, your shell will begin to fill up with all sorts of commands and the corresponding outputs. In the following table, find some useful shortcut keys for navigating and editing in the shell."
msgstr ""

#. Tag: para
#: newbie_bash.xml:323
#, no-c-format
msgid "Shortcut Key"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:338
#, no-c-format
msgid "L"
msgstr ""

#. Tag: para
#: newbie_bash.xml:343
#, no-c-format
msgid "Clears the screen and moves the current line to the top of the page."
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:352
#, no-c-format
msgid "C"
msgstr ""

#. Tag: para
#: newbie_bash.xml:357
#, no-c-format
msgid "Aborts the command which is currently being executed."
msgstr ""

#. Tag: para
#: newbie_bash.xml:370
#, no-c-format
msgid "Scrolls upwards."
msgstr ""

#. Tag: para
#: newbie_bash.xml:383
#, no-c-format
msgid "Scrolls downwards."
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:391
#, no-c-format
msgid "U"
msgstr ""

#. Tag: para
#: newbie_bash.xml:396
#, no-c-format
msgid "Deletes from cursor position to start of line."
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:404
#, no-c-format
msgid "K"
msgstr ""

#. Tag: para
#: newbie_bash.xml:409
#, no-c-format
msgid "Deletes from cursor position to the end of line."
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:417
#, no-c-format
msgid "D"
msgstr ""

#. Tag: para
#: newbie_bash.xml:422
#, no-c-format
msgid "Closes the shell session."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:430
#, no-c-format
msgid ","
msgstr ""

#. Tag: para
#: newbie_bash.xml:434
#, no-c-format
msgid "Browses in the history of executed commands."
msgstr ""

#. Tag: title
#: newbie_bash.xml:446
#, no-c-format
msgid "Getting Help"
msgstr ""

#. Tag: para
#: newbie_bash.xml:447
#, no-c-format
msgid "If you remember the name of command but are not sure about the options or the syntax of the command, choose one of the following possibilities:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:453
#, no-c-format
msgid "<option>--help</option> / <option>-h</option> option"
msgstr ""

#. Tag: para
#: newbie_bash.xml:455
#, no-c-format
msgid "If you only want to look up the options of a certain command, try entering the command followed by a space and <option>--help</option> . This <option>--help</option> option exists for many commands. For example, <command>ls</command> <option>--help</option> displays all the options for the <command>ls</command> command."
msgstr ""

#. Tag: term
#: newbie_bash.xml:465
#, no-c-format
msgid "Manual Pages"
msgstr ""

#. Tag: para
#: newbie_bash.xml:467
#, no-c-format
msgid "To learn more about the various commands, you can also use the manual pages. Manual pages also give a short description of what the command does. They can be accessed with <command>man</command> followed by the name of the command, for example, <command>man&nbsp;ls</command> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:473
#, no-c-format
msgid "Man pages are displayed directly in the shell. To navigate them, use the following keys:"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:487
#, no-c-format
msgid "Move between the beginning and the end of a document with"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:492
#, no-c-format
msgid "Quit the man page viewer by pressing"
msgstr ""

#. Tag: para
#: newbie_bash.xml:496
#, no-c-format
msgid "For more information about the <command>man</command> command, use <command>man man</command> ."
msgstr ""

#. Tag: term
#: newbie_bash.xml:503
#, no-c-format
msgid "Info Pages"
msgstr ""

#. Tag: para
#: newbie_bash.xml:505
#, no-c-format
msgid "Info pages usually provide even more information about commands. To view the info page for a certain command, enter <command>info</command> followed by the name of the command (for example, <command>info ls</command> )."
msgstr ""

#. Tag: para
#: newbie_bash.xml:511
#, no-c-format
msgid "Info pages are displayed directly in the shell. To navigate them, use the following keys:"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:518
#, no-c-format
msgid "Use"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:519
#, no-c-format
msgid "to move forward a section ("
msgstr ""

#. Tag: #text
#: newbie_bash.xml:519
#, no-c-format
msgid "). Use"
msgstr ""

#. Tag: emphasis
#: newbie_bash.xml:519
#, no-c-format
msgid "node"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:521
#, no-c-format
msgid "to move backward a section."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:525
#, no-c-format
msgid "Move up and down with"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:531
#, no-c-format
msgid "Quit the info page viewer by pressing"
msgstr ""

#. Tag: para
#: newbie_bash.xml:538
#, no-c-format
msgid "Note that man pages and info pages do not exist for all commands. Sometimes both are available (usually for key commands), sometimes only a man page or an info page exists, and sometimes neither of them are available."
msgstr ""

#. Tag: title
#: newbie_bash.xml:547
#, no-c-format
msgid "Working with Files and Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:549
#, no-c-format
msgid "To address a certain file or directory, you must specify the path leading to that directory or file. There are two ways to specify a path:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:556
#, no-c-format
msgid "Absolute Path"
msgstr ""

#. Tag: para
#: newbie_bash.xml:559
#, no-c-format
msgid "The entire path from the root directory ( <filename>/</filename> ) to the relevant file or directory. For example, the absolute path to a text file named <filename>file.txt</filename> in your <filename>Documents</filename> directory might be:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:565
#, no-c-format
msgid "/home/&exampleuser_plain;/Documents/file.txt"
msgstr ""

#. Tag: term
#: newbie_bash.xml:569
#, no-c-format
msgid "Relative Path"
msgstr ""

#. Tag: para
#: newbie_bash.xml:572
#, no-c-format
msgid "The path from the current working directory to the relevant file or directory. If your current working directory is <filename>/home/&exampleuser_plain;</filename> , the relative path <filename>file.txt</filename> in your <filename>Documents</filename> directory is:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:579
#, no-c-format
msgid "Documents/file.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:580
#, no-c-format
msgid "However, if your working directory is <filename>/home/&exampleuser_plain;/Music</filename> instead, you need to move up a level to <filename>/home/&exampleuser_plain;</filename> (with <filename>..</filename> ) before you can go further down:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:586
#, no-c-format
msgid "../Documents/file.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:591
#, no-c-format
msgid "Paths contain file names, directories or both, separated by slashes. Absolute paths always start with a slash. Relative paths do not have a slash at the beginning, but can have one or two dots."
msgstr ""

#. Tag: para
#: newbie_bash.xml:597
#, no-c-format
msgid "When entering commands, you can choose either way to specify a path, depending on your preferences or the amount of typing, both will lead to the same result. To change directories, use the <command>cd</command> command and specify the path to the directory."
msgstr ""

#. Tag: title
#: newbie_bash.xml:605
#, no-c-format
msgid "Handling Blanks in Filenames or Directory Names"
msgstr ""

#. Tag: para
#: newbie_bash.xml:606
#, no-c-format
msgid "If a filename or the name of a directory contains a space, either escape the space using a back slash ( <literal>\\</literal> ) in front of the blank or enclose the filename in single <!-- or double--> quotes. Otherwise Bash interprets a filename like <filename>My Documents</filename> as the names of two files or directories, <filename>My</filename> and <filename>Documents</filename> in this case. <!--The difference between single and double quotes is that variable expansion takes place within double quotes. Single quotes ensure that the shell sees the quoted string literally.-->"
msgstr ""

#. Tag: para
#: newbie_bash.xml:621
#, no-c-format
msgid "When specifying paths, the following <quote>shortcuts</quote> can save you a lot of typing:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:628
#, no-c-format
msgid "The tilde symbol ( <literal>~</literal> ) is a shortcut for home directories. For example, to list the contents of your home directory, use <command>ls</command> <option>~</option> . To list the contents of another user's home directory, enter <command>ls</command> <option>~<replaceable>USERNAME</replaceable> </option> (or course, this will only work if you have permission to view the contents, see <xref linkend=\"sec.new.bash.accperm\"/> ). For example, entering <command>ls ~&exampleuser_plain;</command> would list the contents of the home directory of a user named &exampleuser;. You can use the tilde symbol as shortcut for home directories also if you are working in a network environment where your home directory may not be called <filename>/home</filename> but can be mapped to any directory in the file system."
msgstr ""

#. Tag: para
#: newbie_bash.xml:643
#, no-c-format
msgid "From anywhere in the file system, you can reach your home directory by entering <command>cd ~</command> or by simply entering <command>cd</command> without any options."
msgstr ""

#. Tag: para
#: newbie_bash.xml:650
#, no-c-format
msgid "When using relative paths, refer to the current directory with a dot ( <literal>.</literal> ). This is mainly useful for commands such as <command>cp</command> or <command>mv</command> by which you can copy or move files and directories."
msgstr ""

#. Tag: para
#: newbie_bash.xml:658
#, no-c-format
msgid "The next higher level in the tree is represented by two dots ( <literal>..</literal> ). In order to switch to the parent directory of your current directory, enter <command>cd ..</command> , to go up two levels from the current directory enter <command>cd ../..</command> etc."
msgstr ""

#. Tag: para
#: newbie_bash.xml:668
#, no-c-format
msgid "To apply your knowledge, find some examples below. They address basic tasks you may want to execute with files or folders using Bash."
msgstr ""

#. Tag: title
#: newbie_bash.xml:675
#, no-c-format
msgid "Examples for Working with Files and Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:676
#, no-c-format
msgid "Suppose you want to copy a file located somewhere in your home directory to a subdirectory of <filename>/tmp</filename> that you need to create first."
msgstr ""

#. Tag: title
#: newbie_bash.xml:682
#, no-c-format
msgid "Creating and Changing Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:683
#, no-c-format
msgid "From your home directory create a subdirectory in <filename>/tmp</filename> :"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:691
#, no-c-format
msgid "&prompt.user;mkdir /tmp/test"
msgstr ""

#. Tag: para
#: newbie_bash.xml:692
#, no-c-format
msgid "<command>mkdir</command> stands for <quote>make directory</quote> . This command creates a new directory named <filename>test</filename> in the <filename>/tmp</filename> directory. In this case, you are using an absolute path to create the <filename>test</filename> directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:701
#, no-c-format
msgid "To check what happened, now enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:704
#, no-c-format
msgid "&prompt.user;ls -l /tmp"
msgstr ""

#. Tag: para
#: newbie_bash.xml:705
#, no-c-format
msgid "The new directory <filename>test</filename> should appear in the list of contents of the <filename>/tmp</filename> directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:711
#, no-c-format
msgid "Switch to the newly created directory with"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:714
#, no-c-format
msgid "&prompt.user;cd /tmp/test"
msgstr ""

#. Tag: title
#: newbie_bash.xml:718
#, no-c-format
msgid "Creating and Copying Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:719
#, no-c-format
msgid "Now create a new file in a subdirectory of your home directory and copy it to <filename>/tmp/test</filename> . Use a relative path for this task."
msgstr ""

#. Tag: title
#: newbie_bash.xml:725
#, no-c-format
msgid "Overwriting of Existing Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:726
#, no-c-format
msgid "Before copying, moving or renaming a file, check if your target directory already contains a file with the same name. If yes, consider changing one of the filenames or use <command>cp</command> or <command>mv</command> with options like <option>-i</option> , which will prompt before overwriting an existing file. Otherwise Bash will overwrite the existing file without confirmation."
msgstr ""

#. Tag: para
#: newbie_bash.xml:736
#, no-c-format
msgid "To list the contents of your home directory, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:739
#, no-c-format
msgid "&prompt.user;ls -l ~"
msgstr ""

#. Tag: para
#: newbie_bash.xml:740
#, no-c-format
msgid "It should contain a subdirectory called <filename>Documents</filename> by default. If not, create this subdirectory with the <command>mkdir</command> command you already know:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:745
#, no-c-format
msgid "&prompt.user;mkdir ~/Documents"
msgstr ""

#. Tag: para
#: newbie_bash.xml:748
#, no-c-format
msgid "To create a new, empty file named <filename>myfile.txt</filename> in the <filename>Documents</filename> directory, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:752
#, no-c-format
msgid "&prompt.user;touch ~/Documents/myfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:753
#, no-c-format
msgid "Usually, the <command>touch</command> command updates the modification and access date for an existing file. If you use <command>touch</command> with a filename which does not exist in your target directory, it creates a new file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:761
#, no-c-format
msgid "Enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:764
#, no-c-format
msgid "&prompt.user;ls -l ~/Documents"
msgstr ""

#. Tag: para
#: newbie_bash.xml:765
#, no-c-format
msgid "The new file should appear in the list of contents."
msgstr ""

#. Tag: para
#: newbie_bash.xml:770
#, no-c-format
msgid "To copy the newly created file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:773
#, no-c-format
msgid "&prompt.user;cp ~/Documents/myfile.txt ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:774
#, no-c-format
msgid "Do not forget the dot at the end."
msgstr ""

#. Tag: para
#: newbie_bash.xml:777
#, no-c-format
msgid "This command tells Bash to go to your home directory and to copy <filename> myfile.txt</filename> from the <filename>Documents</filename> subdirectory to the current directory, <filename>/tmp/test</filename> , without changing the name of the file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:785
#, no-c-format
msgid "Check the result by entering"
msgstr ""

#. Tag: para
#: newbie_bash.xml:789
#, no-c-format
msgid "The file <filename>myfile.txt </filename> should appear in the list of contents for <filename>/tmp/test</filename> ."
msgstr ""

#. Tag: title
#: newbie_bash.xml:796
#, no-c-format
msgid "Renaming and Removing Files or Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:797
#, no-c-format
msgid "Now suppose you want to rename <filename>myfile.txt </filename> into <filename>tuxfile.txt</filename> . Finally you decide to remove the renamed file and the <filename>test</filename> subdirectory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:803
#, no-c-format
msgid "To rename the file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:806
#, no-c-format
msgid "&prompt.user;mv myfile.txt tuxfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:809
#, no-c-format
msgid "To check what happened, enter"
msgstr ""

#. Tag: para
#: newbie_bash.xml:813
#, no-c-format
msgid "Instead of <filename>myfile.txt</filename> , <filename>tuxfile.txt</filename> should appear in the list of contents."
msgstr ""

#. Tag: para
#: newbie_bash.xml:818
#, no-c-format
msgid "<command>mv</command> stands for <literal>move</literal> and is used with two options: the first option specifies the source, the second option specifies the target of the operation. You can use <command>mv</command> either"
msgstr ""

#. Tag: para
#: newbie_bash.xml:826
#, no-c-format
msgid "to rename a file or a directory,"
msgstr ""

#. Tag: para
#: newbie_bash.xml:831
#, no-c-format
msgid "to move a file or directory to a new location or"
msgstr ""

#. Tag: para
#: newbie_bash.xml:836
#, no-c-format
msgid "to do both in one step."
msgstr ""

#. Tag: para
#: newbie_bash.xml:843
#, no-c-format
msgid "Coming to the conclusion that you do not need the file any longer, you can delete it by entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:847
#, no-c-format
msgid "&prompt.user;rm tuxfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:848
#, no-c-format
msgid "Bash deletes the file without any confirmation."
msgstr ""

#. Tag: para
#: newbie_bash.xml:853
#, no-c-format
msgid "Move up one level with <command>cd ..</command> and check with"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:856
#, no-c-format
msgid "&prompt.user;ls -l test"
msgstr ""

#. Tag: para
#: newbie_bash.xml:857
#, no-c-format
msgid "if the <filename>test</filename> directory is empty now."
msgstr ""

#. Tag: para
#: newbie_bash.xml:862
#, no-c-format
msgid "If yes, you can remove the <filename>test</filename> directory by entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:866
#, no-c-format
msgid "&prompt.user;rmdir test"
msgstr ""

#. Tag: title
#: newbie_bash.xml:872
#, no-c-format
msgid "Becoming Root"
msgstr ""

#. Tag: para
#: newbie_bash.xml:874
#, no-c-format
msgid "&rootuser;, also called the superuser, has privileges which authorize him to access all parts of the system and to execute administrative tasks. He or she has the unrestricted capacity to make changes to the system and has unlimited access to all files. Therefore performing some administrative tasks or running certain programs such as &yast; requires &rootuser; permissions."
msgstr ""

#. Tag: title
#: newbie_bash.xml:884
#, no-c-format
msgid "Using <command>su</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:885
#, no-c-format
msgid "In order to temporarily become &rootuser; in a shell, proceed as follows:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:891
#, no-c-format
msgid "Enter <command>su</command> . You are prompted for the &rootuser; password."
msgstr ""

#. Tag: para
#: newbie_bash.xml:897
#, no-c-format
msgid "Enter the password. If you mistyped the &rootuser; password, the shell displays a message. In this case, you have to re-enter <command>su</command> before retyping the password. If your password is correct, a hash symbol <literal>#</literal> appears at the end of the prompt, signaling that you are acting as &rootuser; now."
msgstr ""

#. Tag: para
#: newbie_bash.xml:906
#, no-c-format
msgid "Execute your task. For example, transfer ownership of a file to a new user which only &rootuser; is allowed to do:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:910
#, no-c-format
msgid "&prompt.user;chown &exampleuserII; kde_quick.xml"
msgstr ""

#. Tag: para
#: newbie_bash.xml:913
#, no-c-format
msgid "After having completed your tasks as &rootuser;, switch back to your normal user account. To do so, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:917
#, no-c-format
msgid "&prompt.user;exit"
msgstr ""

#. Tag: para
#: newbie_bash.xml:918
#, no-c-format
msgid "The hash symbol disappears and you are acting as <quote>normal</quote> user again."
msgstr ""

#. Tag: title
#: newbie_bash.xml:932
#, no-c-format
msgid "Using <command>sudo</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:933
#, no-c-format
msgid "Alternatively, you can also use <command>sudo</command> (superuser <quote>do</quote> ) to execute some tasks which normally are for &rootuser;s only. With sudo, administrators can grant certain users &rootuser; privileges for some commands. Depending on the system configuration, users can then run &rootuser; commands by entering their normal password only. Due to a timestamp function, users are only granted a <quote>ticket</quote> for a restricted period of time after having entered their password. The ticket usually expires after a few minutes. In &opensuse;, sudo requires the &rootuser; password by default (if not configured otherwise by your system administrator)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:945
#, no-c-format
msgid "For users, sudo is convenient as it prevents you from switching accounts twice (to &rootuser; and back again). To change the ownership of a file using sudo, only one command is necessary instead of three:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:950
#, no-c-format
msgid "&prompt.sudo;chown &exampleuserII; kde_quick.xml"
msgstr ""

#. Tag: para
#: newbie_bash.xml:951
#, no-c-format
msgid "After you have entered the password which you are prompted for, the command is executed. If you enter a second &rootuser; command shortly after that, you are not prompted for the password again, because your ticket is still valid. After a certain amount of time, the ticket automatically expires and the password is required again. This also prevents unauthorized persons from gaining &rootuser; privileges in case a user forgets to switch back to his normal user account again and leaves a &rootuser; shell open."
msgstr ""

#. Tag: title
#: newbie_bash.xml:967
#, no-c-format
msgid "Time-Saving Features of Bash"
msgstr ""

#. Tag: para
#: newbie_bash.xml:969
#, no-c-format
msgid "Entering commands in Bash can involve a lot of typing. This section introduces some features that can save you both time and typing."
msgstr ""

#. Tag: term
#: newbie_bash.xml:976
#, no-c-format
msgid "History"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:979
#, no-c-format
msgid "By default, Bash"
msgstr ""

#. Tag: quote
#: newbie_bash.xml:979
#, no-c-format
msgid "remembers"
msgstr ""

#. Tag: emphasis
#: newbie_bash.xml:980
#, no-c-format
msgid "history"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:980
#, no-c-format
msgid "commands you have entered. This feature is called"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:983
#, no-c-format
msgid ". You can browse through commands that have been entered before, select one you want to repeat and then execute it again. To do so, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:985
#, no-c-format
msgid "repeatedly until the desired command appears at the prompt. To move forward through the list of previously entered commands, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:988
#, no-c-format
msgid ". For easier repetition of a certain command from Bash history, just type the first letter of the command you want to repeat and press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:993
#, no-c-format
msgid "You can now edit the selected command (for example, change the name of a file or a path), before you execute the command by pressing"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:995
#, no-c-format
msgid ". To edit the command line, move the cursor to the desired position using the arrow keys and start typing."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:998
#, no-c-format
msgid "You can also search for a certain command in the history. Press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:998
#, no-c-format
msgid "R"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1000
#, no-c-format
msgid "to start an incremental search function. showing the following prompt:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1001
#, no-c-format
msgid "&prompt.user;(reverse-i-search)`':"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1007
#, no-c-format
msgid "Just type one or several letters from the command you are searching for. Each character you enter narrows down the search. The corresponding search result is shown on the right side of the colon whereas your input appears on the left of the colon. To accept a search result, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1010
#, no-c-format
msgid ". The prompt now changes to its normal appearance and shows the command you chose. You can now edit the command or directly execute it by pressing"
msgstr ""

#. Tag: term
#: newbie_bash.xml:1015
#, no-c-format
msgid "Completion"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1020
#, no-c-format
msgid "Completing a filename or directory name to its full length after typing its first letters is another helpful feature of Bash. To do so, type the first letters then press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1028
#, no-c-format
msgid "(Tabulator). If the filename or path can be uniquely identified, it is completed at once and the cursor moves to the end of the filename. You can then enter the next option of the command, if necessary. If the filename or path cannot be uniquely identified (because there are several filenames starting with the same letters), the filename or path is only completed up to the point where it becomes ambiguous again. You can then obtain a list of them by pressing"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1030
#, no-c-format
msgid "a second time. After this, you can enter the next letters of the file or path then try completion again by pressing"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1032
#, no-c-format
msgid ". When completing filenames and paths with"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1036
#, no-c-format
msgid ", you can simultaneously check whether the file or path you want to enter really exists (and you can be sure of getting the spelling right)."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1040
#, no-c-format
msgid "Wild Cards"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1042
#, no-c-format
msgid "You can replace one or more characters in a filename with a wild card for pathname expansion. Wild cards are characters that can stand for other characters. There are three different types of these in Bash:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1052
#, no-c-format
msgid "Wild Card"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1057
#, no-c-format
msgid "Function"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1064
#, no-c-format
msgid "<literal>?</literal>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1069
#, no-c-format
msgid "Matches exactly one arbitrary character"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1076
#, no-c-format
msgid "<literal>*</literal>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1081
#, no-c-format
msgid "Matches any number of characters"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1088
#, no-c-format
msgid "<literal>[<replaceable>SET</replaceable>]</literal>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1093
#, no-c-format
msgid "Matches one of the characters from the group specified inside the square brackets, which is represented here by the string <replaceable>SET</replaceable> ."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1108
#, no-c-format
msgid "Examples For Using History, Completion and Wildcards"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1109
#, no-c-format
msgid "The following examples illustrate how to make use of these convenient features of Bash."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1114
#, no-c-format
msgid "Using History and Completion"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1115
#, no-c-format
msgid "If you already did the example <xref linkend=\"sec.new.bash.fildir.ex\"/> , your shell buffer should be filled with commands which you can retrieve using the history function."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1122
#, no-c-format
msgid "repeatedly until"
msgstr ""

#. Tag: command
#: newbie_bash.xml:1122
#, no-c-format
msgid "cd ~"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1124
#, no-c-format
msgid "appears."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1130
#, no-c-format
msgid "to execute the command and to switch to your home directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1131
#, no-c-format
msgid "By default, your home directory contains two subdirectories starting with the same letter, <filename>Documents</filename> and <filename>Desktop</filename> ."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1139
#, no-c-format
msgid "Type"
msgstr ""

#. Tag: command
#: newbie_bash.xml:1139
#, no-c-format
msgid "cd D"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1141
#, no-c-format
msgid "Nothing happens since Bash cannot identify to which one of the subdirectories you want to change."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1150
#, no-c-format
msgid "again to see the list of possible choices:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1151
#, no-c-format
msgid "&prompt.user;<command>cd D</command>\n"
      "Desktop/ Documents/ Downloads/\n"
      "&prompt.user;<command>cd D</command>"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1158
#, no-c-format
msgid "The prompt still shows your initial input. Type the next character of the subdirectory you want to go to and press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1160
#, no-c-format
msgid "again."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1161
#, no-c-format
msgid "Bash now completes the path."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1167
#, no-c-format
msgid "You can now execute the command with"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1172
#, no-c-format
msgid "Using Wildcards"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1173
#, no-c-format
msgid "Now suppose that your home directory contains several files with various file extensions. It also holds several versions of one file which you saved under different filenames <filename>myfile1.txt</filename> , <filename>myfile2.txt</filename> etc. You want to search for certain files according to their properties."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1181
#, no-c-format
msgid "First, create some test files in your home directory:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1186
#, no-c-format
msgid "Use the <command>touch</command> command to create several (empty) files with different file extensions, for example <filename>.pdf</filename> , <filename>.xml</filename> and <filename>.jpg</filename> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1192
#, no-c-format
msgid "You can do this consecutively (do not forget to use the Bash history function) or with only one <command>touch</command> command: simply add several filenames separated by a space."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1199
#, no-c-format
msgid "Create at least two files that have the same file extension, for example <filename>.html</filename> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1205
#, no-c-format
msgid "To create several <quote>versions</quote> of one file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1208
#, no-c-format
msgid "&prompt.user;touch myfile{1..5}.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1209
#, no-c-format
msgid "This command creates five consecutively numbered files: <filename>myfile1.txt</filename> , &hellip;, <filename>myfile5.txt</filename> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1216
#, no-c-format
msgid "List the contents of the directory. It should look similar to this:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1220
#, no-c-format
msgid "&prompt.user;ls -l\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:34 foo.xml\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:47 home.html\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:47 index.html\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:47 toc.html\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:34 manual.pdf\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile1.txt\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile2.txt\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile3.txt\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile4.txt\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile5.txt\n"
      "-rw-r--r-- 1 tux users   0 2006-07-14 13:32 tux.png"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1236
#, no-c-format
msgid "With wild cards, select certain subsets of the files according to various criteria:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1242
#, no-c-format
msgid "To list all files with the <filename>.html</filename> extension, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1246
#, no-c-format
msgid "&prompt.user;ls -l *.html"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1249
#, no-c-format
msgid "To list all <quote>versions</quote> of <filename>myfile.txt</filename> , enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1253
#, no-c-format
msgid "&prompt.user;ls -l myfile?.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1254
#, no-c-format
msgid "Note that you can only use the <literal>?</literal> wild card here because the numbering of the files is single-digit. As soon as you have a file named <filename>myfile10.txt</filename> you must to use the <literal>*</literal> wild card to view all versions of <filename>myfile.txt</filename> (or add another question mark, so your string looks like <command>myfile??.txt</command> )."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1264
#, no-c-format
msgid "To remove, for example, version 1-3 and version 5 of <filename>myfile.txt</filename> , enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1268
#, no-c-format
msgid "&prompt.user;rm myfile[1-3,5].txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1271
#, no-c-format
msgid "Check the result with"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1274
#, no-c-format
msgid "&prompt.user;ls -l"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1275
#, no-c-format
msgid "Of all <filename>myfile.txt</filename> versions only <filename>myfile4.txt</filename> should be left."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1283
#, no-c-format
msgid "You can also combine several wild cards in one command. In the example above, <command>rm myfile[1-3,5].*</command> would lead to the same result as <command>rm myfile[1-3,5].txt</command> because there are only files with the extension <filename>.txt</filename> available."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1290
#, no-c-format
msgid "Using Wildcards in <command>rm</command> Commands"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1291
#, no-c-format
msgid "Wildcards in a <command>rm </command> command can be very useful but also dangerous: you might delete more files from your directory than intended. To see which files would be affected by the <command>rm</command> , run your wildcard string with <command>ls</command> instead of <command>rm</command> first."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1302
#, no-c-format
msgid "Editing Texts"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1304
#, no-c-format
msgid "In order to edit files from the command line, you will need to know the vi editor. vi is a default editor which can be found on nearly every UNIX/Linux system. It can run several operating modes in which the keys you press have different functions. This does not make it very easy for beginners, but you should know at least the most basic operations with vi. There may be situations where no other editor than vi is available."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1313
#, no-c-format
msgid "Basically, vi makes use of three operating modes:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:1319
#, no-c-format
msgid "<emphasis>command</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1321
#, no-c-format
msgid "In this mode, vi accepts certain key combinations as commands. Simple tasks such as searching words or deleting a line can be executed."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1328
#, no-c-format
msgid "<emphasis>insert</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1330
#, no-c-format
msgid "In this mode, you can write normal text."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1336
#, no-c-format
msgid "<emphasis>extended</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1338
#, no-c-format
msgid "In this mode, also known as colon mode (as you have to enter a colon to switch to this mode), vi can execute also more complex tasks such as searching and replacing text."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1347
#, no-c-format
msgid "In the following (very simple) example, you will learn how to open and edit a file with vi, how to save your changes and quit vi."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1353
#, no-c-format
msgid "Example: Editing with vi"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1356
#, no-c-format
msgid "Display of Keys"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1361
#, no-c-format
msgid "In the following, find several commands that you can enter in vi by just pressing keys. These appear in uppercase as on a keyboard. If you need to enter a key in uppercase, this is stated explicitly by showing a key combination including the"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1362
#, no-c-format
msgid "key."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1365
#, no-c-format
msgid "To create and open a new file with vi, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1368
#, no-c-format
msgid "&prompt.user;vi textfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1369
#, no-c-format
msgid "By default, vi opens in <emphasis>command</emphasis> mode in which you cannot enter text."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1376
#, no-c-format
msgid "Press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:1376
#, no-c-format
msgid "I"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1378
#, no-c-format
msgid "to switch to insert mode. The bottom line changes and indicates that you now can insert text."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1383
#, no-c-format
msgid "Write some sentences. If you want to insert a new line, first press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1385
#, no-c-format
msgid "to switch back to command mode. Press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:1385
#, no-c-format
msgid "O"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1387
#, no-c-format
msgid "to insert a new line and to switch to insert mode again."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1392
#, no-c-format
msgid "In the insert mode, you can edit the text with the arrow keys and with"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1398
#, no-c-format
msgid "To leave vi, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1399
#, no-c-format
msgid "to switch to command mode again. Then press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:1399
#, no-c-format
msgid ":"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1401
#, no-c-format
msgid "which takes you to the extended mode. The bottom line now shows a colon."
msgstr ""

#. Tag: command
#: newbie_bash.xml:1405
#, no-c-format
msgid "wq"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1405
#, no-c-format
msgid "To leave vi and save your changes, type"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1406
#, no-c-format
msgid "write"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1406
#, no-c-format
msgid "w"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1406
#, no-c-format
msgid "("
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1407
#, no-c-format
msgid "q"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1407
#, no-c-format
msgid "quit"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1407
#, no-c-format
msgid "for"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1407
#, no-c-format
msgid ";"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1408
#, no-c-format
msgid ") and press"
msgstr ""

#. Tag: command
#: newbie_bash.xml:1410
#, no-c-format
msgid "w <replaceable>FILENAME</replaceable>"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1410
#, no-c-format
msgid ". If you want to save the file under a different name, type"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1412
#, no-c-format
msgid "and press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1415
#, no-c-format
msgid "To leave vi without saving, type"
msgstr ""

#. Tag: command
#: newbie_bash.xml:1415
#, no-c-format
msgid "q!"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1416
#, no-c-format
msgid "instead and press"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1424
#, no-c-format
msgid "Searching for Files or Contents"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1426
#, no-c-format
msgid "Bash offers you several commands to search for files and to search for the contents of files:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:1433
#, no-c-format
msgid "<command>find</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1436
#, no-c-format
msgid "With <command>find</command> , search for a file in a given directory. The first argument specifies the directory in which to start the search. The option <option>-name</option> must be followed by a search string, which may also include wild cards. Unlike <command>locate</command> , which uses a database, <command>find</command> scans the actual directory."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1447
#, no-c-format
msgid "<command>grep</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1450
#, no-c-format
msgid "The <command>grep</command> command finds a specific search string in the specified text files. If the search string is found, the command displays the line in which <literal>searchstring</literal> was found, along with the filename. If desired, use wild cards to specify filenames."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1462
#, no-c-format
msgid "Examples for Searching"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1465
#, no-c-format
msgid "To search your home directory for all occurrences of filenames that contain the file extension <filename>.txt</filename> , use:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1469
#, no-c-format
msgid "&prompt.user;find ~ -name '*.txt' -print"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1472
#, no-c-format
msgid "To search a directory (in this case, your home directory) for all occurrences of files which contain, for example, the word <literal>music</literal> , use:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1477
#, no-c-format
msgid "&prompt.user;grep music ~/*"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1478
#, no-c-format
msgid "<command>grep</command> is case-sensitive by default. Hence, with the command above you will not find any files containing <literal>Music</literal> .To ignore case, use the <option>-i</option> option."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1486
#, no-c-format
msgid "To use a search string which consists of more than one word, enclose the string in double quotation marks, for example:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1490
#, no-c-format
msgid "&prompt.user;grep \"music is great\" ~/*"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1496
#, no-c-format
msgid "Viewing Text Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1498
#, no-c-format
msgid "When searching for the contents of a file with <command>grep</command> , the output gives you the line in which the <literal>searchstring</literal> was found along with the filename. Often this contextual information is still not enough information to decide whether you want to open and edit this file. Bash offers you several commands to have a quick look at the contents of a text file directly in the shell, without opening an editor."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1510
#, no-c-format
msgid "<command>head</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1512
#, no-c-format
msgid "With <command>head</command> you can view the first lines of a text file. If you do not specify the command any further, <command>head</command> shows the first 10 lines of a text file."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1520
#, no-c-format
msgid "<command>tail</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1522
#, no-c-format
msgid "The <command>tail</command> command is the counterpart of <command>head</command> . If you use <command>tail</command> without any further options it displays the last 10 lines of a text file. This can be very useful to view log files of your system, where the most recent messages or log entries are usually found at the end of the file."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1533
#, no-c-format
msgid "<command>less</command>"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1536
#, no-c-format
msgid "With"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1537
#, no-c-format
msgid ", display the whole contents of a text file. To move up and down half a page use"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1538
#, no-c-format
msgid "and"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1538
#, no-c-format
msgid ". Use"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1539
#, no-c-format
msgid "to scroll down one page."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1540
#, no-c-format
msgid "takes you to the beginning, and"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:1541
#, no-c-format
msgid "Q"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1541
#, no-c-format
msgid "to the end of the document. To end the viewing mode, press"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1542
#, no-c-format
msgid "."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1546
#, no-c-format
msgid "<command>more</command>"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1549
#, no-c-format
msgid "less"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1549
#, no-c-format
msgid "Instead of"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1550
#, no-c-format
msgid "more"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1550
#, no-c-format
msgid ", you can also use the older program"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1551
#, no-c-format
msgid ". It has basically the same function&mdash;however, it is less convenient because it does not allow you to scroll backward. Use"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1555
#, no-c-format
msgid "to move forward. When you reach the end of the document, the viewer closes automatically."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1559
#, no-c-format
msgid "<command>cat</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1561
#, no-c-format
msgid "The <command>cat</command> command displays the contents of a file, printing the entire contents to the screen without interruption. As <command>cat</command> does not allow you to scroll it is not very useful as viewer but it is rather often used in combination with other commands."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1573
#, no-c-format
msgid "Redirection and Pipes"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1574
#, no-c-format
msgid "Sometimes it would be useful if you could write the output of a command to a file for further editing or if you could combine several commands, using the output of one command as the input for the next one. The shell offers this function by means of redirection or pipes."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1581
#, no-c-format
msgid "Normally, the standard output in the shell is your screen (or an open shell window) and the standard input is the keyboard. With certain symbols you can redirect the input or the output to another object, such as a file or another command."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1590
#, no-c-format
msgid "Redirection"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1592
#, no-c-format
msgid "With <literal>&gt;</literal> you can forward the output of a command to a file (output redirection), with <literal>&lt;</literal> you can use a file as input for a command (input redirection)."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1600
#, no-c-format
msgid "Pipe"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1602
#, no-c-format
msgid "By means of a pipe symbol <literal>|</literal> you can also redirect the output: with a pipe, you can combine several commands, using the output of one command as input for the next command. In contrast to the other redirection symbols &gt; and &lt;, the use of the pipe is not constrained to files."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1614
#, no-c-format
msgid "Examples for Redirection and Pipe"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1617
#, no-c-format
msgid "To write the output of a command like <command>ls</command> to a file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1621
#, no-c-format
msgid "&prompt.user;ls -l &gt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1622
#, no-c-format
msgid "This creates a file named <filename>filelist.txt</filename> that contains the list of contents of your current directory as generated by the <command>ls</command> command."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1627
#, no-c-format
msgid "However, if a file named <filename>filelist.txt</filename> already exists, this command overwrites the existing file. To prevent this, use <literal>&gt;&gt;</literal> instead of &gt;. Entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1632
#, no-c-format
msgid "&prompt.user;ls -l &gt;&gt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1633
#, no-c-format
msgid "simply appends the output of the <command>ls</command> command to an already existing file named <filename>filelist.txt</filename> . If the file does not exist, it is created."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1640
#, no-c-format
msgid "Redirections also works the other way round. Instead of using the standard input from the keyboard for a command, you can use a file as input:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1645
#, no-c-format
msgid "&prompt.user;sort &lt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1646
#, no-c-format
msgid "This will force the <command>sort</command> command to get its input from the contents of <filename>filelist.txt</filename> . The result is shown on the screen. Of course, you can also write the result into another file, using a combination of redirections:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1652
#, no-c-format
msgid "&prompt.user;sort &lt; filelist.txt &gt; sorted_filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1655
#, no-c-format
msgid "If a command generates a lengthy output, like <command>ls</command> <option>-l</option> may do, it may be useful to pipe the output to a viewer like <literal>less</literal> to be able to scroll through the pages. To do so, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1661
#, no-c-format
msgid "&prompt.user;ls -l | less"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1662
#, no-c-format
msgid "The list of contents of the current directory is shown in <literal>less</literal> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1666
#, no-c-format
msgid "The pipe is also often used in combination with the <command>grep</command> command in order to search for a certain string in the output of another command. For example, if you want to view a list of files in a directory which are owned by the user &exampleuser;, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1673
#, no-c-format
msgid "&prompt.user;ls -l | grep tux"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1679
#, no-c-format
msgid "Starting Programs and Handling Processes"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1681
#, no-c-format
msgid "As you have seen in <xref linkend=\"sec.new.bash.edit\"/> , programs can be started from the shell. Applications with a graphical user interface need the X Window System and can only be started from a terminal window within a graphical user interface. For example, if you want to open a file named <filename>vacation.pdf</filename> in your home directory from a terminal window in KDE or GNOME, simply run <command>okular&nbsp;~/vacation.pdf</command> (or <command>evince&nbsp;~/vacation.pdf</command> ) to start a PDF viewer displaying your file."
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1696
#, no-c-format
msgid "When looking at the terminal window again you will realize that the command line is blocked as long as the PDF viewer is open, meaning that your prompt is not available. To change this, press"
msgstr ""

#. Tag: keycap
#: newbie_bash.xml:1697
#, no-c-format
msgid "Z"
msgstr ""

#. Tag: command
#: newbie_bash.xml:1698
#, no-c-format
msgid "bg"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1698
#, no-c-format
msgid "to suspend the process and enter"
msgstr ""

#. Tag: #text
#: newbie_bash.xml:1700
#, no-c-format
msgid "to send the process to the background."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1701
#, no-c-format
msgid "Now you can still have a look at <filename>vacation.pdf</filename> while your prompt is available for further commands. An easier way to achieve this is by sending a process to the background directly when starting it. To do so, add an ampersand at the end of the command:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1708
#, no-c-format
msgid "&prompt.user;okular ~/vacation.pdf &amp;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1710
#, no-c-format
msgid "If you have started several background processes (also named jobs) from the same shell, the <command>jobs</command> command gives you an overview of the jobs. It also shows the job number in brackets and their status:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1717
#, no-c-format
msgid "&prompt.user;jobs\n"
      "[1]   Running        okular book.opensuse.startup-xep.pdf &amp;\n"
      "[2]-  Running        okular book.opensuse.reference-xep.pdf &amp;\n"
      "[3]+  Stopped        man jobs"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1722
#, no-c-format
msgid "To bring a job to the foreground again, enter <command>fg <replaceable>JOB_NUMBER</replaceable></command> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1727
#, no-c-format
msgid "Whereas <command>job</command> only shows the background processes started from a specific shell, the <command>ps</command> command (run without options) shows a list of all your processes&mdash;those you started. Find an example output below:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1734
#, no-c-format
msgid "&prompt.user;ps\n"
      "PID TTY          TIME CMD\n"
      "15500 pts/1    00:00:00 bash\n"
      "28214 pts/1    00:00:00 okular\n"
      "30187 pts/1    00:00:00 kwrite\n"
      "30280 pts/1    00:00:00 ps"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1741
#, no-c-format
msgid "In case a program cannot be terminated in the normal way, use the <command>kill</command> command to stop the process (or processes) belonging to that program. To do so, specify the process ID (PID) shown by the output of <command>ps</command> . For example, to shut down the KWrite editor in the example above, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1749
#, no-c-format
msgid "&prompt.user;kill 30187"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1751
#, no-c-format
msgid "This sends a <emphasis>TERM</emphasis> signal that instructs the program to shut itself down."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1756
#, no-c-format
msgid "Alternatively, if the program or process you want to terminate is a background job and is shown by the <command>jobs</command> command, you can also use the <command>kill</command> command in combination with the job number to terminate this process. When identifying the job with the job number, you must prefix the number with a percent character ( <literal>%</literal> ):"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1765
#, no-c-format
msgid "&prompt.user;kill %<replaceable>JOB_NUMBER</replaceable>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1767
#, no-c-format
msgid "If <command>kill</command> does not help&mdash;as is sometimes the case for <quote>runaway</quote> programs&mdash;try"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1772
#, no-c-format
msgid "&prompt.user;kill -9 <replaceable>PID</replaceable>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1774
#, no-c-format
msgid "This sends a <emphasis>KILL</emphasis> signal instead of a <emphasis>TERM</emphasis> signal, usually bringing the specified process to an end."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1780
#, no-c-format
msgid "This section is intended to introduce the most basic set of commands for handling jobs and processes. Find an overview for system administrators in <xref linkend=\"sec.util.processes\"/> ."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1788
#, no-c-format
msgid "Archives and Data Compression"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1789
#, no-c-format
msgid "On Linux, there are two types of commands that make data easier to transfer:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1795
#, no-c-format
msgid "Archivers, which create a big file out of several smaller ones. The most commonly used archiver is <command>tar</command> , another example is <command>cpio</command> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1802
#, no-c-format
msgid "Compressors, which losslessly make a file smaller. The most commonly used compressors are <command>gzip</command> and <command>bzip2</command> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1809
#, no-c-format
msgid "When combining these two types of commands, their effect is comparable to the compressed archive files that are prevalent on other operating systems, for example, <filename>ZIP</filename> or <filename>RAR</filename> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1814
#, no-c-format
msgid "To pack the <filename>test</filename> directory with all its files and subdirectories into an archive named <filename>testarchive.tar</filename> , do the following:"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1820
#, no-c-format
msgid "Archiving Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1822
#, no-c-format
msgid "Open a shell."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1827
#, no-c-format
msgid "Use <command>cd</command> to change to your home directory where the <filename>test</filename> directory is located."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1833
#, no-c-format
msgid "Commpress the file with:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1836
#, no-c-format
msgid "&prompt.user;tar -cvf testarchive.tar test"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1837
#, no-c-format
msgid "The <option>-c</option> option creates the archive, making it a file as directed by <option>-f</option> . The <option>-v</option> option lists the files as they are processed."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1843
#, no-c-format
msgid "The <filename>test</filename> directory with all its files and directories has remained unchanged on your hard disk."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1849
#, no-c-format
msgid "View the contents of the archive file with:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1852
#, no-c-format
msgid "&prompt.user;tar -tf testarchive.tar"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1855
#, no-c-format
msgid "To unpack the archive, use:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1859
#, no-c-format
msgid "If files in your current directory are named the same as the files in the archive, they will be overwritten without warning."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1866
#, no-c-format
msgid "To compress files, use <command>gzip</command> or, for better compression, <command>bzip2</command> ."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1871
#, no-c-format
msgid "Compressing a File"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1873
#, no-c-format
msgid "For this example, reuse the archive <filename>testarchive.tar</filename> from <xref linkend=\"pro.bash.archive\"/> ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1878
#, no-c-format
msgid "To compress the archive, use:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1881
#, no-c-format
msgid "&prompt.user;gzip testarchive.tar"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1882
#, no-c-format
msgid "With <command>ls</command> , now see that the file <filename>testarchive.tar</filename> is no longer there and that the file <filename>testarchive.tar.gz</filename> has been created instead."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1887
#, no-c-format
msgid "As an alternative, use <command>bzip2 testarchive.tar</command> which works analogously but provides somewhat better compression."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1893
#, no-c-format
msgid "Now decompress and unarchive the file again:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1898
#, no-c-format
msgid "This can be done in two steps by first decompressing and then unarchiving the file:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1902
#, no-c-format
msgid "\n"
      "&prompt.user;<command>gzip --decompress testarchive.tar.gz</command>\n"
      "&prompt.user;<command>tar -xvf testarchive.tar</command>\n"
      ""
msgstr ""

#. Tag: para
#: newbie_bash.xml:1908
#, no-c-format
msgid "You can also decompress and unarchive in one step:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1911
#, no-c-format
msgid "&prompt.user;tar -xvf testarchive.tar"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1914
#, no-c-format
msgid "With <command>ls</command> , you can see that a new <filename>test</filename> directory has been created with the same contents as your <filename>test</filename> directory in your home directory."
msgstr ""

