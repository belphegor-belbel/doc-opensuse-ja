# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2024-06-26 01:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: ay_control_file.xml:12
#, no-c-format
msgid "The &ay; control file"
msgstr ""

#. Tag: title
#: ay_control_file.xml:20
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: ay_control_file.xml:22
#, no-c-format
msgid "A <emphasis>control file</emphasis> , also known as a <emphasis>profile</emphasis> , is a configuration description for a single system. It consists of sets of resources with properties including support for complex structures such as lists, records, trees and large embedded or referenced objects."
msgstr ""

#. Tag: title
#: ay_control_file.xml:44
#, no-c-format
msgid "Format"
msgstr ""

#. Tag: para
#: ay_control_file.xml:46
#, no-c-format
msgid "The XML configuration format provides a consistent file structure, which is easy to learn and to remember when attempting to configure a new system."
msgstr ""

#. Tag: para
#: ay_control_file.xml:51
#, no-c-format
msgid "The &ay; control file uses XML to describe the system installation and configuration. XML is a commonly used markup, and many users are familiar with the concepts of the language and the tools used to process XML files. If you edit an existing control file, or create a new control file, it is strongly recommended to validate the control file. This can be done using a validating XML parser such as <literal>xmllint</literal> or <literal>jing</literal> , for example (see <xref linkend=\"CreateProfile-Manual\"/> )."
msgstr ""

#. Tag: para
#: ay_control_file.xml:62
#, no-c-format
msgid "The following example shows a control file in XML format:"
msgstr ""

#. Tag: title
#: ay_control_file.xml:67
#, no-c-format
msgid "&ay; control file (profile)"
msgstr ""

#. Tag: screen
#: ay_control_file.xml:68
#, no-c-format
msgid "&lt;?xml version=\"1.0\"?&gt;\n"
      "&lt;!DOCTYPE profile&gt;\n"
      "&lt;profile\n"
      "  xmlns=\"http://www.suse.com/1.0/yast2ns\"\n"
      "  xmlns:config=\"http://www.suse.com/1.0/configns\"&gt;\n"
      "  &lt;partitioning config:type=\"list\"&gt;\n"
      "    &lt;drive&gt;\n"
      "      &lt;device&gt;/dev/sda&lt;/device&gt;\n"
      "      &lt;partitions config:type=\"list\"&gt;\n"
      "        &lt;partition&gt;\n"
      "          &lt;filesystem config:type=\"symbol\"&gt;btrfs&lt;/filesystem&gt;\n"
      "          &lt;size&gt;10G&lt;/size&gt;\n"
      "          &lt;mount&gt;/&lt;/mount&gt;\n"
      "        &lt;/partition&gt;\n"
      "        &lt;partition&gt;\n"
      "          &lt;filesystem config:type=\"symbol\"&gt;xfs&lt;/filesystem&gt;\n"
      "          &lt;size&gt;120G&lt;/size&gt;\n"
      "          &lt;mount&gt;/data&lt;/mount&gt;\n"
      "        &lt;/partition&gt;\n"
      "      &lt;/partitions&gt;\n"
      "    &lt;/drive&gt;\n"
      "  &lt;/partitioning&gt;\n"
      "  &lt;scripts&gt;\n"
      "    &lt;pre-scripts&gt;\n"
      "      &lt;script&gt;\n"
      "        &lt;interpreter&gt;shell&lt;/interpreter&gt;\n"
      "        &lt;filename&gt;start.sh&lt;/filename&gt;\n"
      "        &lt;source&gt;\n"
      "        &lt;![CDATA[\n"
      "#!/bin/sh\n"
      "echo \"Starting installation\"\n"
      "exit 0\n"
      "\n"
      "]]&gt;\n"
      "\n"
      "        &lt;/source&gt;\n"
      "      &lt;/script&gt;\n"
      "    &lt;/pre-scripts&gt;\n"
      "  &lt;/scripts&gt;\n"
      "&lt;/profile&gt;"
msgstr ""

#. Tag: title
#: ay_control_file.xml:111
#, no-c-format
msgid "Structure"
msgstr ""

#. Tag: para
#: ay_control_file.xml:113
#, no-c-format
msgid "Below is an example of a basic control file container, the actual content of which is explained later on in this chapter."
msgstr ""

#. Tag: title
#: ay_control_file.xml:119
#, no-c-format
msgid "Control file container"
msgstr ""

#. Tag: screen
#: ay_control_file.xml:120
#, no-c-format
msgid "&lt;?xml version=\"1.0\"?&gt;\n"
      "&lt;!DOCTYPE profile&gt;\n"
      "&lt;profile\n"
      "  xmlns=\"http://www.suse.com/1.0/yast2ns\"\n"
      "  xmlns:config=\"http://www.suse.com/1.0/configns\"&gt;\n"
      "  &lt;!-- RESOURCES --&gt;\n"
      "&lt;/profile&gt;"
msgstr ""

#. Tag: para
#: ay_control_file.xml:129
#, no-c-format
msgid "The <literal>&lt;profile&gt;</literal> element (root node) contains one or more distinct resource elements. The permissible resource elements are specified in the schema files"
msgstr ""

#. Tag: title
#: ay_control_file.xml:136
#, no-c-format
msgid "Resources and properties"
msgstr ""

#. Tag: para
#: ay_control_file.xml:137
#, no-c-format
msgid "A resource element either contains multiple and distinct property and resource elements, or multiple instances of the same resource element, or it is empty. The permissible content of a resource element is specified in the schema files."
msgstr ""

#. Tag: para
#: ay_control_file.xml:143
#, no-c-format
msgid "A property element is either empty or contains a literal value. The permissible property elements and values in each resource element are specified in the schema files"
msgstr ""

#. Tag: para
#: ay_control_file.xml:148
#, no-c-format
msgid "An element can be either a container of other elements (a resource) or it has a literal value (a property); it can never be both. This restriction is specified in the schema files. A configuration component with more than one value must either be represented as an embedded list in a property value or as a nested resource."
msgstr ""

#. Tag: para
#: ay_control_file.xml:155
#, no-c-format
msgid "An empty element, such as <literal>&lt;foo&gt;&lt;/foo&gt;</literal> or <literal>&lt;bar/&gt;</literal> , will <emphasis>not</emphasis> be in the parsed data model. Usually this is interpreted as wanting a sensible default value. In cases where you need an explicitly empty string instead, use a CDATA section: <literal>&lt;foo&gt;&lt;![CDATA[]]&gt;&lt;/foo&gt;</literal> ."
msgstr ""

#. Tag: para
#: ay_control_file.xml:167
#, no-c-format
msgid "Nested resource elements allow a tree-like structure of configuration components to be built to any level."
msgstr ""

#. Tag: para
#: ay_control_file.xml:171
#, no-c-format
msgid "There are two kinds of nested resources: maps and lists. Maps, also known as associative arrays, hashes, or dictionaries, contain mixed contents, identified by their tag names. Lists, or arrays, have all items of the same type."
msgstr ""

#. Tag: title
#: ay_control_file.xml:178
#, no-c-format
msgid "Nested resources"
msgstr ""

#. Tag: screen
#: ay_control_file.xml:179
#, no-c-format
msgid "...\n"
      "&lt;drive&gt;\n"
      "  &lt;device&gt;/dev/sda&lt;/device&gt;\n"
      "  &lt;partitions config:type=\"list\"&gt;\n"
      "     &lt;partition&gt;\n"
      "        &lt;size&gt;10G&lt;/size&gt;\n"
      "        &lt;mount&gt;/&lt;/mount&gt;\n"
      "     &lt;/partition&gt;\n"
      "     &lt;partition&gt;\n"
      "        &lt;size&gt;1G&lt;/size&gt;\n"
      "        &lt;mount&gt;/tmp&lt;/mount&gt;\n"
      "     &lt;/partition&gt;\n"
      "  &lt;/partitions&gt;\n"
      "&lt;/drive&gt;\n"
      "...."
msgstr ""

#. Tag: para
#: ay_control_file.xml:195
#, no-c-format
msgid "In the example above, the <literal>drive</literal> resource is a map consisting of a <literal>device</literal> property and a <literal>partitions</literal> resource. The <literal>partitions</literal> resource is a list containing multiple instances of the <literal>partition</literal> resource. Each <literal>partition</literal> resource is a map containing a <literal>size</literal> and <literal>mount</literal> property."
msgstr ""

#. Tag: para
#: ay_control_file.xml:204
#, no-c-format
msgid "The default type of a nested resource is map, although you can specify it as you want. Lists must be marked as such using the <literal>config:type=\"list\"</literal> attribute."
msgstr ""

#. Tag: title
#: ay_control_file.xml:210
#, no-c-format
msgid "Using shorter type annotations"
msgstr ""

#. Tag: para
#: ay_control_file.xml:211
#, no-c-format
msgid "Starting with &productname; <phrase os=\"sles;sled\">15 SP3</phrase> <phrase os=\"osuse\">15.3</phrase> <phrase os=\"slemicro\">5.1</phrase> , it is possible to use the attribute <literal>t</literal> instead of <literal>config:type</literal> to specify the element type."
msgstr ""

#. Tag: screen
#: ay_control_file.xml:217
#, no-c-format
msgid "&lt;mode t=\"boolean\"&gt;true&lt;/mode&gt;"
msgstr ""

#. Tag: title
#: ay_control_file.xml:222
#, no-c-format
msgid "Attributes"
msgstr ""

#. Tag: para
#: ay_control_file.xml:223
#, no-c-format
msgid "Global attributes are used to define metadata on resources and properties. Attributes are used to define context switching. They are also used for naming and typing properties as shown in the previous sections. Attributes are in a separate namespace so they do not need to be treated as reserved words in the default namespace."
msgstr ""

#. Tag: para
#: ay_control_file.xml:230
#, no-c-format
msgid "The <literal>config:type</literal> attribute determines the type of the resource or property in the parsed data model. For resources, lists need a <literal>list</literal> type whereas a map is the default type that does not need an attribute. There is one exception. When the map is empty, it needs to be marked as a map so it does not get confused with a simple string value."
msgstr ""

#. Tag: title
#: ay_control_file.xml:239
#, no-c-format
msgid "An empty map"
msgstr ""

#. Tag: screen
#: ay_control_file.xml:240
#, no-c-format
msgid "&lt;general t=\"map\" /&gt;"
msgstr ""

#. Tag: para
#: ay_control_file.xml:242
#, no-c-format
msgid "For properties, <literal>boolean</literal> , <literal>symbol</literal> , and <literal>integer</literal> can be used, the default being a string."
msgstr ""

#. Tag: para
#: ay_control_file.xml:246
#, no-c-format
msgid "Except for map and string values, as explained before, attributes are not optional. It may appear that attributes are optional, because various parts of the schema are not very consistent in their usage of data types. In some places an enumeration is represented by a symbol, elsewhere a string is required. One resource needs <literal>config:type=\"integer\"</literal> , another will parse the number from a string property. Some resources use <literal>config:type=\"boolean\"</literal> , others want <literal>yes</literal> or even <literal>1</literal> . If in doubt, consult the schema file."
msgstr ""

