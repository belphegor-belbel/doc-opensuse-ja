# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-02-12 08:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: containers-docker-containerize-app.xml:11
#, no-c-format
msgid "Creating application images"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:12
#, no-c-format
msgid "&deng; is designed to allow running multiple separate application environments in parallel, with lower resource use than when using full virtual machines. Several types of applications are suitable for running inside containers: daemons, Web servers, and applications that expose IP ports for communications. You can use &deng; to automate the building and deployment processes by performing the build process inside a container, building an image, and then deploying containers based on the image."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:21
#, no-c-format
msgid "Running an application inside a container has the following advantages:"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:26
#, no-c-format
msgid "The image with the application is portable across servers running different Linux host distributions and versions."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:32
#, no-c-format
msgid "You can share the image of the application using a repository."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:37
#, no-c-format
msgid "You can use different versions of software in the container and on the host system, without creating dependency issues."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:43
#, no-c-format
msgid "You can run several instances of the same application that are completely independent from each other."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:49
#, no-c-format
msgid "Using &deng; to build applications has the following advantages:"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:54
#, no-c-format
msgid "You can prepare an image of the complete build environment."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:59
#, no-c-format
msgid "The application can run in the same environment it was built in."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:64
#, no-c-format
msgid "Developers can test their code in the same environment as used in production."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:70
#, no-c-format
msgid "The following section provides examples and recommendations on creating container images for applications. Before proceeding, make sure that you have activated your &productname; base image as described in <xref linkend=\"sec-download-prebuild-images\"/> ."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:77
#, no-c-format
msgid "Running an application with specific package versions"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:79
#, no-c-format
msgid "If your application needs a version of a package different from the package installed on the system, you can create a container image that includes the package version the application requires. The following example <filename>Dockerfile</filename> allows building an image based on an up-to-date version of &productname; with an older version of the <literal>example</literal> package:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:88
#, no-c-format
msgid "FROM registry.suse.com/suse/sle15\n"
      "LABEL maintainer=&exampleuser_plain;\n"
      "RUN zypper ref &amp;&amp; zypper in -f example-1.0.0-0\n"
      "COPY application.rpm /tmp/\n"
      "RUN zypper --non-interactive in /tmp/application.rpm\n"
      "ENTRYPOINT [\"/etc/bin/application\"]\n"
      "CMD [\"-i\"]"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:96
#, no-c-format
msgid "Build the image by running the following command in the directory that the <filename>Dockerfile</filename> resides in:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:101
#, no-c-format
msgid "&prompt.user;docker build --tag tux_application:latest ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:103
#, no-c-format
msgid "The <filename>Dockerfile</filename> example shown above performs the following operations during the <command>docker build</command> :"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:110
#, no-c-format
msgid "Updates the &productname; repositories."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:115
#, no-c-format
msgid "Installs the desired version of the <literal>example</literal> package."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:120
#, no-c-format
msgid "Copies the application package to the image. The binary RPM must be placed in the build context."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:126
#, no-c-format
msgid "Unpacks the application."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:131
#, no-c-format
msgid "The last two steps run the application after a container is started."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:137
#, no-c-format
msgid "After a successful build of the <literal>tux_application</literal> image, you can start a container based on the new image using the following command:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:143
#, no-c-format
msgid "&prompt.user;docker run -it --name application_instance tux_application:latest"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:145
#, no-c-format
msgid "Keep in mind that after closing the application, the container exits as well."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:151
#, no-c-format
msgid "Running an application with a specific configuration"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:153
#, no-c-format
msgid "To run an instance using a different configuration, create a derived image and include the additional configuration with it. For example, if your application is called <emphasis>example</emphasis> and can be configured using the file <filename>/etc/example/configuration_example</filename> , you could use:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:161
#, no-c-format
msgid "FROM registry.suse.com/suse/sle15 <co xml:id=\"co-dockerfile-specificconf-from\"/>\n"
      "RUN zypper ref &amp;&amp; zypper --non-interactive in example <co xml:id=\"co-dockerfile-specificconf-refreshinstall\"/>\n"
      "ENV BACKUP=/backup <co xml:id=\"co-dockerfile-specificconf-env\"/>\n"
      "RUN mkdir -p $BACKUP <co xml:id=\"co-dockerfile-specificconf-mkdir\"/>\n"
      "COPY configuration_example /etc/example/ <co xml:id=\"co-dockerfile-specificconf-configuration\"/>\n"
      "ENTRYPOINT [\"/etc/bin/example\"] <co xml:id=\"co-dockerfile-specificconf-entrypoint\"/>"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:168
#, no-c-format
msgid "The above example <filename>Dockerfile</filename> performs the following operations:"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:175
#, no-c-format
msgid "Pulls the <literal>sle15</literal> base image from <xref linkend=\"sec-download-prebuild-images\"/> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:181
#, no-c-format
msgid "Refreshes repositories and installations of the <emphasis>example</emphasis> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:187
#, no-c-format
msgid "Sets a <literal>BACKUP</literal> environment variable (the variable persists to containers started from the image). You can always overwrite the value of the variable while running the container by specifying a new value."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:195
#, no-c-format
msgid "Creates the directory <literal>/backup</literal> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:200
#, no-c-format
msgid "Copies the <filename>configuration_example</filename> to the image."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:205
#, no-c-format
msgid "Runs the <literal>example</literal> application."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:211
#, no-c-format
msgid "You can now build the image. After a successful build, you can run a container based on the image you just created."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:217
#, no-c-format
msgid "Sharing data between an application and the host system"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:219
#, no-c-format
msgid "&deng; allows sharing data between host and a container by using <emphasis>volumes</emphasis> . You can specify a mount point directly in the <filename>Dockerfile</filename> . However, you cannot specify a directory on the host system in the <filename>Dockerfile</filename> , as the directory may not be accessible at build time. Find the mounted directory under <literal>/var/lib/docker/volumes/</literal> on the host system."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:229
#, no-c-format
msgid "Discarding changes to the directory to be shared"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:230
#, no-c-format
msgid "After you specify a mount point by using the <literal>VOLUME</literal> instruction, all changes made to the directory with the <literal>RUN</literal> instruction are discarded. After the mount point is specified, the volume becomes a part of a temporary container, which is removed after a successful build. This means that for certain actions to take effect, they must be performed <emphasis>before</emphasis> specifying a mount point. For example, if you need to change permissions, do this before you specify the directory as a mount point in the <filename>Dockerfile</filename> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:242
#, no-c-format
msgid "Specify a particular mount point on the host system when running a container by using the <literal>-v</literal> option:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:247
#, no-c-format
msgid "&prompt.user;docker run -it --name testing -v /home/tux/data:/data sles12sp4:latest /bin/bash"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:250
#, no-c-format
msgid "The <literal>-v</literal> option overwrites the <literal>VOLUME</literal> instruction if you specify the same mount point in the container."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:256
#, no-c-format
msgid "The following example image contains a Web server that reads Web content from the host's file system. The <filename>Dockerfile</filename> could look as follows:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:262
#, no-c-format
msgid "FROM registry.suse.com/suse/sles12sp4\n"
      "RUN zypper ref &amp;&amp; zypper --non-interactive in apache2\n"
      "COPY apache2 /etc/sysconfig/\n"
      "RUN chown -R admin /data\n"
      "EXPOSE 80\n"
      "VOLUME /data\n"
      "ENTRYPOINT [\"apache2ctl\"]"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:270
#, no-c-format
msgid "The example above installs the Apache Web server to the image and copies the entire configuration to the image. The <literal>data</literal> directory is owned by the <emphasis>admin</emphasis> user and is used as a mount point to store Web pages."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:278
#, no-c-format
msgid "Applications running in the background"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:280
#, no-c-format
msgid "If your application needs to run in the background as a daemon, or as an application exposing ports for communication, you can run the container in the background."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:286
#, no-c-format
msgid "An example <filename>Dockerfile</filename> for an application exposing a port looks as follows:"
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:292
#, no-c-format
msgid "Building an Apache2 Web server container ( <filename>Dockerfile</filename> )"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:293
#, no-c-format
msgid "FROM registry.suse.com/suse/sle15 <co xml:id=\"co-dockerfile-apache2-from\"/>\n"
      "LABEL maintainer=&exampleuser_plain; <co xml:id=\"co-dockerfile-apache2-maintainer\"/>\n"
      "ADD etc/ /etc/zypp/ <co xml:id=\"co-dockerfile-apache2-repos-services\"/>\n"
      "RUN zypper refs &amp;&amp; zypper refresh <co xml:id=\"co-dockerfile-apache2-refresh\"/>\n"
      "RUN zypper --non-interactive in apache2 <co xml:id=\"co-dockerfile-apache2-install\"/>\n"
      "RUN echo \"The Web server is running\" &gt; /srv/www/htdocs/test.html <co xml:id=\"co-dockerfile-apache2-echo\"/>\n"
      "# COPY data/* /srv/www/htdocs/ <co xml:id=\"co-dockerfile-apache2-copy\"/>\n"
      "EXPOSE 80 <co xml:id=\"co-dockerfile-apache2-expose\"/>\n"
      "ENTRYPOINT [\"/usr/sbin/httpd\"]\n"
      "CMD [\"-D\", \"FOREGROUND\"]"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:305
#, no-c-format
msgid "Pull the base image as in <xref linkend=\"sec-download-prebuild-images\"/> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:310
#, no-c-format
msgid "Maintainer of the image (optional)."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:315
#, no-c-format
msgid "The repositories and service files to be copied to <filename>/etc/zypp/repos.d</filename> and <filename>/etc/zypp/services.d</filename> . This makes them available on the host in the container."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:323
#, no-c-format
msgid "Command to refresh repositories and services."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:328
#, no-c-format
msgid "Command to install Apache2."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:333
#, no-c-format
msgid "Test line for debugging purposes. This line can be removed if everything works as expected."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:339
#, no-c-format
msgid "A <literal>COPY</literal> instruction to copy data from the host system to the directory in the container used by the server. The leading hash character ( <literal>#</literal> ) marks this line as a comment; it is not executed."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:347
#, no-c-format
msgid "The exposed port for the Apache Web server."
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:355
#, no-c-format
msgid "Make sure the ports used by the container image are unused"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:356
#, no-c-format
msgid "To use port 80, make sure there is no other server software running on this port on the host."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:362
#, no-c-format
msgid "To use the container, proceed as follows:"
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:367
#, no-c-format
msgid "Testing the Apache2 Web server"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:369
#, no-c-format
msgid "Prepare the host system for the build process."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:374
#, no-c-format
msgid "Make sure the host system is subscribed to the <guimenu>Server Applications Module</guimenu> of &productname;. To view installed modules or install additional modules, open &yast; and select <guimenu>Add System Extensions or Modules</guimenu> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:382
#, no-c-format
msgid "Make sure the &sle; images from the &suseregistry; are installed as described in <xref linkend=\"sec-download-prebuild-images\"/> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:388
#, no-c-format
msgid "Save the <filename>Dockerfile</filename> from <xref linkend=\"ex-docker-dockerfile-apache2\"/> into the <filename class=\"directory\">docker</filename> directory."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:395
#, no-c-format
msgid "Within the container, you need access to software repositories and services that are registered on the host. To make them available, copy repositories and service files from the host to the <filename class=\"directory\">docker/etc</filename> directory:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:401
#, no-c-format
msgid "&prompt.user;cd docker\n"
      "&prompt.user;mkdir etc\n"
      "&prompt.sudo;cp -a /etc/zypp/{repos.d,services.d} etc/"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:404
#, no-c-format
msgid "Instead of copying all repository and service files, you can also copy only the subset that is required by the container."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:410
#, no-c-format
msgid "Add Web site data (such as HTML files) into the <filename>docker/data</filename> directory. The contents of this directory are copied to the container image and are thus published by the Web server."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:420
#, no-c-format
msgid "Build the container. Set a tag for your image with the <option>-t</option> option (in the command below, it is <literal>&exampleuser_plain;/apache2</literal> ):"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:425
#, no-c-format
msgid "&prompt.sudo;docker build -t &exampleuser_plain;/apache2 ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:426
#, no-c-format
msgid "&deng; executes the instructions provided in the <filename>Dockerfile</filename> : Pull the base image, copy content, refresh repositories, install the Apache2, etc."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:433
#, no-c-format
msgid "Start a container instance from the image created in the previous step:"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:437
#, no-c-format
msgid "&deng; returns the container ID, for example:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:440
#, no-c-format
msgid "7bd674eb196d330d50f8a3cfc2bc61a243a4a535390767250b11a7886134ab93"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:443
#, no-c-format
msgid "Point a browser to <uri>http://localhost:80/test.html</uri> . You should see the message <literal>The Web server is running</literal> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:449
#, no-c-format
msgid "To see an overview of running containers, use:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:452
#, no-c-format
msgid "&prompt.user;docker ps --latest\n"
      "CONTAINER ID        IMAGE               COMMAND                  [...]\n"
      "<emphasis role=\"bold\">7bd674eb196d</emphasis>\n"
      "tux/apache2         \"/usr/sbin/httpd -...\"   [...]"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:456
#, no-c-format
msgid "To stop and delete the container, run the following command:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:459
#, no-c-format
msgid "&prompt.user;docker rm --force 7bd674eb196d"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:463
#, no-c-format
msgid "You can use the resulting container to serve your data with the Apache2 Web server by following these steps:"
msgstr ""

#. Tag: title
#: containers-docker-containerize-app.xml:469
#, no-c-format
msgid "Creating a container with your own data"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:471
#, no-c-format
msgid "In the <filename>Dockerfile</filename> :"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:476
#, no-c-format
msgid "Comment the line starting with <literal>RUN echo</literal> by adding a <literal>#</literal> character at its beginning ( <xref linkend=\"co-dockerfile-apache2-echo\"/> in <xref linkend=\"ex-docker-dockerfile-apache2\"/> )."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:484
#, no-c-format
msgid "Uncomment the line starting with <literal>COPY</literal> by removing the leading <literal>#</literal> character ( <xref linkend=\"co-dockerfile-apache2-copy\"/> in <xref linkend=\"ex-docker-dockerfile-apache2\"/> )."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:494
#, no-c-format
msgid "Rebuild the image as described in <xref linkend=\"st-docker-apache2-build\"/> of <xref linkend=\"pro-docker-apache2\" xrefstyle=\"select:label\"/> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:501
#, no-c-format
msgid "Run the image in detached mode:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:504
#, no-c-format
msgid "&prompt.user;docker run --detach --interactive --tty &exampleuser_plain;/apache2"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:505
#, no-c-format
msgid "&deng; responds with the container ID, for example:"
msgstr ""

#. Tag: screen
#: containers-docker-containerize-app.xml:508
#, no-c-format
msgid "e43fff4ae9832ecdb7677c058a73039d7610c32145a1d9b6ad0a4ed52b5c4dc7"
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:512
#, no-c-format
msgid "To view the published data, point a browser at <uri>http://localhost:80/test.html</uri> ."
msgstr ""

#. Tag: para
#: containers-docker-containerize-app.xml:517
#, no-c-format
msgid "To avoid copying Web site data into the container, share a directory of the host with the container. For more information, see <link xlink:href=\"https://docs.docker.com/storage/volumes/\"/> ."
msgstr ""

