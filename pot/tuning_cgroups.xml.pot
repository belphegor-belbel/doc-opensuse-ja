# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-02-12 08:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: tuning_cgroups.xml:20
#, no-c-format
msgid "Kernel control groups"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:23
#, no-c-format
msgid "Kernel Control Groups ( <quote>cgroups</quote> ) are a kernel feature for assigning and limiting hardware and system resources for processes. Processes can also be organized in a hierarchical tree structure."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:34
#, no-c-format
msgid "Overview"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:36
#, no-c-format
msgid "Every process is assigned exactly one administrative cgroup. cgroups are ordered in a hierarchical tree structure. You can set resource limitations, such as CPU, memory, disk I/O, or network bandwidth usage, for single processes or for whole branches of the hierarchy tree."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:43
#, no-c-format
msgid "On &productname;, &systemd; uses cgroups to organize all processes in groups, which &systemd; calls slices. &systemd; also provides an interface for setting cgroup properties."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:49
#, no-c-format
msgid "The command <command>systemd-cgls</command> displays the hierarchy tree."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:53
#, no-c-format
msgid "There are two versions of cgroup APIs provided by the kernel. These differ in the cgroup attributes they provide, and in the organization of controller hierarchies. &systemd; attempts to abstract the differences away. By default &systemd; runs in the <emphasis>hybrid</emphasis> mode, which means controllers are used through the v1 API. cgroup v2 is only used for systemd's own tracking. There is also the <emphasis>unified</emphasis> mode when the controllers are used though v2 API. You may set only one mode."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:63
#, no-c-format
msgid "To enable the unified control group hierarchy, append <option>systemd.unified_cgroup_hierarchy=1</option> as a kernel command line parameter to the &grub; boot loader. (Refer to <xref linkend=\"cha-grub2\"/> for more details about configuring &grub;.)"
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:71
#, no-c-format
msgid "Resource accounting"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:73
#, no-c-format
msgid "Organizing processes into different cgroups can be used to obtain per-cgroup resource consumption data."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:78
#, no-c-format
msgid "The accounting has relatively small but non-zero overhead, whose impact depends on the workload. Activating accounting for one unit will also implicitly activate it for all units in the same slice, and for all its parent slices, and the units contained in them."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:85
#, no-c-format
msgid "The accounting can be set on a per-unit basis with directives such as <literal>MemoryAccounting=</literal> or globally for all units in <filename>/etc/systemd/system.conf</filename> with the directive <literal>DefaultMemoryAccounting=</literal> . Refer to <command>man systemd.resource-control</command> for the exhaustive list of possible directives."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:95
#, no-c-format
msgid "Setting resource limits"
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:98
#, no-c-format
msgid "Implicit resource consumption"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:99
#, no-c-format
msgid "Be aware that resource consumption implicitly depends on the environment where your workload executes (for example, size of data structures in libraries/kernel, forking behavior of utilities, computational efficiency). Hence it is recommended to (re)calibrate your limits should the environment change."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:108
#, no-c-format
msgid "Limitations to cgroups can be set with the <command>systemctl set-property</command> command. The syntax is:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:113
#, no-c-format
msgid "&prompt.root;<command>systemctl set-property [--runtime] <replaceable>NAME</replaceable> <replaceable>PROPERTY1</replaceable>=<replaceable>VALUE</replaceable> [<replaceable>PROPERTY2</replaceable>=<replaceable>VALUE</replaceable>]</command>"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:115
#, no-c-format
msgid "The configured value is applied immediately. Optionally, use the <option>--runtime</option> option, so that the new values do not persist after reboot."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:121
#, no-c-format
msgid "Replace <replaceable>NAME</replaceable> with a &systemd; service, scope, or slice name."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:126
#, no-c-format
msgid "For a complete list of properties and more details, see <command>man systemd.resource-control</command> ."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:132
#, no-c-format
msgid "Preventing fork bombs with <literal>TasksMax</literal>"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:134
#, no-c-format
msgid "&systemd; supports configuring task count limits both for each individual leaf unit, or aggregated on slices. Upstream &systemd; ships with defaults that limit the number of tasks in each unit (15% of the kernel global limit, run <command>/usr/sbin/sysctl kernel.pid_max</command> to see the total limit). Each user's slice is limited to 33% of the kernel limit. However, this is different for &slea;."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:144
#, no-c-format
msgid "Finding the current default <literal>TasksMax</literal> values"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:145
#, no-c-format
msgid "It became apparent, in practice, that there is not a single default that applies to all use cases. &productname; ships with two custom configurations that override the upstream defaults for system units and for user slices, and sets them both to <literal>infinity</literal> . <filename>/usr/lib/systemd/system.conf.d/__25-defaults-SLE.conf </filename> contains these lines:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:153
#, no-c-format
msgid "\n"
      "[Manager]\n"
      "DefaultTasksMax=infinity\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:157
#, no-c-format
msgid "<filename>/usr/lib/systemd/system/user-.slice.d/25-defaults-SLE.conf </filename> contains these lines:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:161
#, no-c-format
msgid "[Slice]\n"
      "TasksMax=infinity\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:164
#, no-c-format
msgid "Use <command>systemctl</command> to verify the DefaultTasksMax value:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:167
#, no-c-format
msgid "&prompt.user;<command>systemctl show --property DefaultTasksMax</command>\n"
      "DefaultTasksMax=infinity"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:169
#, no-c-format
msgid "<literal>infinity</literal> means having no limit. It is not a requirement to change the default, but setting some limits may help to prevent system crashes from runaway processes."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:177
#, no-c-format
msgid "Overriding the <literal>DefaultTasksMax</literal> value"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:178
#, no-c-format
msgid "Change the global <literal>DefaultTasksMax</literal> value by creating a new override file, <filename>/etc/systemd/system.conf.d/90-system-tasksmax.conf</filename> , and write the following lines to set a new default limit of 256 tasks per system unit:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:185
#, no-c-format
msgid "\n"
      "[Manager]\n"
      "DefaultTasksMax=256\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:189
#, no-c-format
msgid "Load the new setting, then verify that it changed:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:192
#, no-c-format
msgid "&prompt.sudo;<command>systemctl daemon-reload</command>\n"
      "&prompt.user;<command>systemctl show --property DefaultTasksMax</command>\n"
      "DefaultTasksMax=256\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:196
#, no-c-format
msgid "Adjust this default value to suit your needs. You can set different limits on individual services as needed. This example is for MariaDB. First check the current active value:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:201
#, no-c-format
msgid "\n"
      "&prompt.user;<command>systemctl status mariadb.service</command>\n"
      "  ● mariadb.service - MariaDB database server\n"
      "   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset&gt;\n"
      "   Active: active (running) since Tue 2020-05-26 14:15:03 PDT; 27min ago\n"
      "     Docs: man:mysqld(8)\n"
      "           https://mariadb.com/kb/en/library/systemd/\n"
      " Main PID: 11845 (mysqld)\n"
      "   Status: \"Taking your SQL requests now...\"\n"
      "    Tasks: 30 (limit: 256)\n"
      "   CGroup: /system.slice/mariadb.service\n"
      "           └─11845 /usr/sbin/mysqld --defaults-file=/etc/my.cnf --user=mysql\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:214
#, no-c-format
msgid "The Tasks line shows that MariaDB currently has 30 tasks running, and has an upper limit of the default 256, which is inadequate for a database. The following example demonstrates how to raise MariaDB's limit to 8192."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:219
#, no-c-format
msgid "&prompt.sudo;<command>systemctl set-property mariadb.service TasksMax=8192</command>\n"
      "&prompt.user;<command>systemctl status mariadb.service</command> \n"
      "● mariadb.service - MariaDB database server\n"
      "   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset: disab&gt;\n"
      "  Drop-In: /etc/systemd/system/mariadb.service.d\n"
      "           └─50-TasksMax.conf\n"
      "   Active: active (running) since Tue 2020-06-02 17:57:48 PDT; 7min ago\n"
      "     Docs: man:mysqld(8)\n"
      "           https://mariadb.com/kb/en/library/systemd/\n"
      "  Process: 3446 ExecStartPre=/usr/lib/mysql/mysql-systemd-helper upgrade (code=exited, sta&gt;\n"
      "  Process: 3440 ExecStartPre=/usr/lib/mysql/mysql-systemd-helper install (code=exited, sta&gt;\n"
      " Main PID: 3452 (mysqld)\n"
      "   Status: \"Taking your SQL requests now...\"\n"
      "    Tasks: 30 (limit: 8192)\n"
      "   CGroup: /system.slice/mariadb.service\n"
      "           └─3452 /usr/sbin/mysqld --defaults-file=/etc/my.cnf --user=mysql\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:236
#, no-c-format
msgid "<command>systemctl set-property</command> applies the new limit and creates a drop-in file for persistence, <filename>/etc/systemd/system/mariadb.service.d/50-TasksMax.conf</filename> , that contains only the changes you want to apply to the existing unit file. The value does not have to be 8192, but should be whatever limit is appropriate for your workloads."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:247
#, no-c-format
msgid "Default <literal>TasksMax</literal> limit on users"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:248
#, no-c-format
msgid "The default limit on users should be fairly high, because user sessions need more resources. Set your own default for any user by creating a new file, for example <filename>/etc/systemd/system/user-.slice.d/40-user-taskmask.conf</filename> . The following example sets a default of 16284:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:255
#, no-c-format
msgid "\n"
      "[Slice]\n"
      "TasksMax=16284\n"
      ""
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:260
#, no-c-format
msgid "Numeric prefixes reference"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:261
#, no-c-format
msgid "See <link xlink:href=\"https://documentation.suse.com/sles/15-SP3/html/SLES-all/cha-systemd.html#sec-boot-systemd-custom-drop-in\"/> to learn what numeric prefixes are expected for drop-in files."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:267
#, no-c-format
msgid "Then reload systemd to load the new value, and verify the change:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:270
#, no-c-format
msgid "&prompt.sudo;<command>systemctl daemon-reload</command>\n"
      "&prompt.user;<command>systemctl show --property TasksMax user-1000.slice</command>\n"
      "TasksMax=16284\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:274
#, no-c-format
msgid "How do you know what values to use? This varies according to your workloads, system resources, and other resource configurations. When your <literal>TasksMax</literal> value is too low, you will see error messages such as <emphasis>Failed to fork (Resources temporarily unavailable)</emphasis> , <emphasis>Can't create thread to handle new connection</emphasis> , and <emphasis>Error: Function call 'fork' failed with error code 11, 'Resource temporarily unavailable'</emphasis> ."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:283
#, no-c-format
msgid "For more information on configuring system resources in systemd, see <literal>systemd.resource-control (5)</literal> ."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:290
#, no-c-format
msgid "Controlling I/O with proportional weight policy"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:292
#, no-c-format
msgid "This section introduces using the Linux kernel's block I/O controller to prioritize I/O operations. The cgroup blkio subsystem controls and monitors access to I/O on block devices. State objects that contain the subsystem parameters for a cgroup are represented as pseudo-files within the cgroup virtual file system, also called a pseudo-file system."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:300
#, no-c-format
msgid "The examples in this section show how writing values to some of these pseudo-files limits access or bandwidth, and reading values from some of these pseudo-files provides information on I/O operations. Examples are provided for both cgroup-v1 and cgroup-v2."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:307
#, no-c-format
msgid "You need a test directory containing two files for testing performance and changed settings. A quick way to create test files fully populated with text is using the <command>yes</command> command. The following example commands create a test directory, and then populate it with two 537 MB text files:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:314
#, no-c-format
msgid "&prompt.plain-root;mkdir /io-cgroup\n"
      "&prompt.plain-root;cd /io-cgroup\n"
      "&prompt.plain-root;yes this is a test file | head -c 537MB &gt; file1.txt\n"
      "&prompt.plain-root;yes this is a test file | head -c 537MB &gt; file2.txt\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:320
#, no-c-format
msgid "To run the examples open three command shells. Two shells are for reader processes, and one shell is for running the steps that control I/O. In the examples, each command prompt is labeled to indicate if it represents one of the reader processes, or I/O."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:328
#, no-c-format
msgid "Using cgroup-v1"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:329
#, no-c-format
msgid "The following proportional weight policy files can be used to grant a reader process a higher priority for I/O operations than other reader processes accessing the same disk."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:336
#, no-c-format
msgid "<filename>blkio.bfq.weight</filename> (available in kernels starting with version 5.0 with blk-mq and when using the BFQ I/O scheduler)"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:342
#, no-c-format
msgid "To test this, run a single reader process (in the examples, reading from an SSD) without controlling its I/O, using <filename>file2.txt</filename> :"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:346
#, no-c-format
msgid " \n"
      "&prompt.io-controller;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.io-controller;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5251\n"
      "131072+0 records in\n"
      "131072+0 records out\n"
      "536870912 bytes (537 MB, 512 MiB) copied, 1.33049 s, 404 MB/s\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:354
#, no-c-format
msgid "Now run a background process reading from the same disk:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:357
#, no-c-format
msgid "\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1.txt of=/dev/null bs=4k\n"
      "5220\n"
      "...\n"
      "&prompt.reader2;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5251\n"
      "131072+0 records in\n"
      "131072+0 records out\n"
      "536870912 bytes (537 MB, 512 MiB) copied, 2.61592 s, 205 MB/s\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:368
#, no-c-format
msgid "Each process gets half of the throughput for I/O operations. Next, set up two control groups&mdash;one for each process&mdash;verify that BFQ is used, and set a different weight for reader2:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:373
#, no-c-format
msgid "\n"
      "&prompt.io-controller;cd /sys/fs/cgroup/blkio/\n"
      "&prompt.blkio;mkdir reader1\n"
      "&prompt.blkio;mkdir reader2\n"
      "&prompt.blkio;echo 5220 &gt; reader1/cgroup.procs\n"
      "&prompt.blkio;echo 5251 &gt; reader2/cgroup.procs\n"
      "&prompt.blkio;cat /sys/block/sda/queue/scheduler\n"
      "mq-deadline kyber [bfq] none\n"
      "&prompt.blkio;cat reader1/blkio.bfq.weight\n"
      "100\n"
      "&prompt.blkio;echo 200 &gt; reader2/blkio.bfq.weight\n"
      "&prompt.blkio;cat reader2/blkio.bfq.weight\n"
      "200\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:387
#, no-c-format
msgid "With these settings and reader1 in the background, reader2 should have higher throughput than previously:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:391
#, no-c-format
msgid "\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1.txt of=/dev/null bs=4k\n"
      "5220\n"
      "...\n"
      "&prompt.reader2;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5251\n"
      "131072+0 records in\n"
      "131072+0 records out\n"
      "536870912 bytes (537 MB, 512 MiB) copied, 2.06604 s, 260 MB/s\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:402
#, no-c-format
msgid "The higher proportional weight resulted in higher throughput for reader2. Now double its weight again:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:406
#, no-c-format
msgid "\n"
      "&prompt.blkio;cat reader1/blkio.bfq.weight\n"
      "100\n"
      "&prompt.blkio;echo 400 &gt; reader2/blkio.bfq.weight\n"
      "&prompt.blkio;cat reader2/blkio.bfq.weight\n"
      "400\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:413
#, no-c-format
msgid "This results in another increase in throughput for reader2:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:416
#, no-c-format
msgid "\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1.txt of=/dev/null bs=4k\n"
      "5220\n"
      "...\n"
      "&prompt.reader2;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5251\n"
      "131072+0 records in\n"
      "131072+0 records out\n"
      "536870912 bytes (537 MB, 512 MiB) copied, 1.69026 s, 318 MB/s\n"
      ""
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:430
#, no-c-format
msgid "Using cgroup-v2"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:431
#, no-c-format
msgid "First set up your test environment as shown at the beginning of this chapter."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:435
#, no-c-format
msgid "Then make sure that the Block IO controller is not active, as that is for cgroup-v1. To do this, boot with kernel parameter <option>cgroup_no_v1=blkio</option> . Verify that this parameter was used, and that the IO controller (cgroup-v2) is available:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:441
#, no-c-format
msgid "\n"
      "&prompt.io-controller;cat /proc/cmdline\n"
      "BOOT_IMAGE=... cgroup_no_v1=blkio ...\n"
      "&prompt.io-controller;cat /sys/fs/cgroup/unified/cgroup.controllers\n"
      "io\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:447
#, no-c-format
msgid "Next, enable the IO controller:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:450
#, no-c-format
msgid "\n"
      "&prompt.io-controller;cd /sys/fs/cgroup/unified/\n"
      "&prompt.unified;echo '+io' &gt; cgroup.subtree_control\n"
      "&prompt.unified;cat cgroup.subtree_control\n"
      "io\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:456
#, no-c-format
msgid "Now run all the test steps, similarly to the steps for cgroup-v1. Note that some of the directories are different. Run a single reader process (in the examples, reading from an SSD) without controlling its I/O, using file2.txt:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:462
#, no-c-format
msgid "\n"
      "&prompt.unified;cd -\n"
      "&prompt.io-controller;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.io-controller;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5633\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:469
#, no-c-format
msgid "Run a background process reading from the same disk and note your throughput values:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:473
#, no-c-format
msgid "\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1.txt of=/dev/null bs=4k\n"
      "5633\n"
      "[...]\n"
      "&prompt.reader2;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "5703\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:482
#, no-c-format
msgid "Each process gets half of the throughput for I/O operations. Set up two control groups&mdash;one for each process&mdash;verify that BFQ is the active scheduler, and set a different weight for reader2:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:487
#, no-c-format
msgid "\n"
      "&prompt.io-controller;cd -\n"
      "&prompt.unified;mkdir reader1\n"
      "&prompt.unified;mkdir reader2\n"
      "&prompt.unified;echo 5633 &gt; reader1/cgroup.procs\n"
      "&prompt.unified;echo 5703 &gt; reader2/cgroup.procs\n"
      "&prompt.unified;cat /sys/block/sda/queue/scheduler\n"
      "mq-deadline kyber [bfq] none\n"
      "&prompt.unified;cat reader1/io.bfq.weight\n"
      "default 100\n"
      "&prompt.unified;echo 200 &gt; reader2/io.bfq.weight\n"
      "&prompt.unified;cat reader2/io.bfq.weight\n"
      "default 200\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:501
#, no-c-format
msgid "Test your throughput with the new settings. reader2 should show an increase in throughput."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:505
#, no-c-format
msgid "\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1 of=/dev/null bs=4k\n"
      "5633\n"
      "[...]\n"
      "&prompt.reader2;echo $$; dd if=file2 of=/dev/null bs=4k count=131072\n"
      "5703\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:514
#, no-c-format
msgid "Try doubling the weight again for reader2, and testing the new setting:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:517
#, no-c-format
msgid "\n"
      "&prompt.reader2;echo 400 &gt; reader1/blkio.bfq.weight\n"
      "&prompt.reader2;cat reader2/blkio.bfq.weight\n"
      "400\n"
      "&prompt.reader1;sync; echo 3 &gt; /proc/sys/vm/drop_caches\n"
      "&prompt.reader1;echo $$; dd if=file1.txt of=/dev/null bs=4k\n"
      "[...]\n"
      "&prompt.reader2;echo $$; dd if=file2.txt of=/dev/null bs=4k count=131072\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:530
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:534
#, no-c-format
msgid "Kernel documentation (package <systemitem>kernel-source</systemitem> ): files in <filename>/usr/src/linux/Documentation/admin-guide/cgroup-v1</filename> and file <filename>/usr/src/linux/Documentation/admin-guide/cgroup-v2.rst</filename> ."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:543
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/604609/\"/> &mdash;Brown, Neil: Control Groups Series (2014, 7 parts)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:549
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/243795/\"/> &mdash;Corbet, Jonathan: Controlling memory use in containers (2007)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:555
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/236038/\"/> &mdash;Corbet, Jonathan: Process containers (2007)."
msgstr ""

