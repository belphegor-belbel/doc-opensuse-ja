# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2024-04-12 10:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: tuning_cgroups.xml:20
#, no-c-format
msgid "Kernel control groups"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:23
#, no-c-format
msgid "Kernel Control Groups ( <quote>cgroups</quote> ) are a kernel feature for assigning and limiting hardware and system resources for processes. Processes can also be organized in a hierarchical tree structure."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:35
#, no-c-format
msgid "Overview"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:37
#, no-c-format
msgid "Every process is assigned exactly one administrative cgroup. cgroups are ordered in a hierarchical tree structure. You can set resource limitations such as CPU, memory, disk I/O, or network bandwidth usage, for single processes or for whole branches of the hierarchy tree."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:44
#, no-c-format
msgid "On &productname;, &systemd; uses cgroups to organize all processes in groups, which &systemd; calls slices. &systemd; also provides an interface for setting cgroup properties."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:50
#, no-c-format
msgid "The command <command>systemd-cgls</command> displays the hierarchy tree."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:54
#, no-c-format
msgid "The kernel cgroup API comes in two variants&mdash;v1 and v2. Additionally, there can be multiple cgroup hierarchies exposing different APIs. From many possible combinations, there are two practical choices:"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:62
#, no-c-format
msgid "unified: v2 hierarchy with controllers"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:67
#, no-c-format
msgid "hybrid: v2 hierarchy without controllers, and the controllers are on v1 hierarchies (deprecated)"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:74
#, no-c-format
msgid "The default mode is unified. There is a hybrid mode that provides backwards compatibility for applications that need it."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:79
#, no-c-format
msgid "You may set only one mode."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:84
#, no-c-format
msgid "Hybrid cgroup hierarchy"
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:86
#, no-c-format
msgid "Deprecation notice"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:87
#, no-c-format
msgid "cgroup v1 has been deprecated, and might be removed in a future release."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:92
#, no-c-format
msgid "To enable the hybrid control group hierarchy, append <option>systemd.unified_cgroup_hierarchy=0</option> as a kernel command-line parameter to the &grub; boot loader. For more details about configuring &grub;, refer to <xref linkend=\"cha-grub2\"/> ."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:101
#, no-c-format
msgid "Resource accounting"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:103
#, no-c-format
msgid "Organizing processes into different cgroups can be used to obtain per-cgroup resource consumption data."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:108
#, no-c-format
msgid "The accounting has comparatively small but non-zero overhead, whose impact depends on the workload. Activating accounting for one unit also implicitly activates it for all units in the same slice, and for all its parent slices, and the units contained in them."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:115
#, no-c-format
msgid "The accounting can be set on a per-unit basis with directives such as <literal>MemoryAccounting=</literal> or globally for all units in <filename>/etc/systemd/system.conf</filename> with the directive <literal>DefaultMemoryAccounting=</literal> . Refer to <command>man systemd.resource-control</command> for the exhaustive list of possible directives."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:125
#, no-c-format
msgid "Setting resource limits"
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:128
#, no-c-format
msgid "Implicit resource consumption"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:129
#, no-c-format
msgid "Be aware that resource consumption implicitly depends on the environment where your workload executes (for example, size of data structures in libraries/kernel, forking behavior of utilities, computational efficiency). Hence it is recommended to (re)calibrate your limits should the environment change."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:138
#, no-c-format
msgid "Limitations to cgroups can be set with the <command>systemctl set-property</command> command. The syntax is:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:143
#, no-c-format
msgid "&prompt.root;<command>systemctl set-property [--runtime] <replaceable>NAME</replaceable> <replaceable>PROPERTY1</replaceable>=<replaceable>VALUE</replaceable> [<replaceable>PROPERTY2</replaceable>=<replaceable>VALUE</replaceable>]</command>"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:145
#, no-c-format
msgid "The configured value is applied immediately. Optionally, use the <option>--runtime</option> option, so that the new values do not persist after reboot."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:151
#, no-c-format
msgid "Replace <replaceable>NAME</replaceable> with a &systemd; service, scope, or slice name."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:156
#, no-c-format
msgid "For a complete list of properties and more details, see <command>man systemd.resource-control</command> ."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:162
#, no-c-format
msgid "Preventing fork bombs with <literal>TasksMax</literal>"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:164
#, no-c-format
msgid "&systemd; supports configuring task count limits both for each individual leaf unit, or aggregated on slices. Upstream &systemd; ships with defaults that limit the number of tasks in each unit (15% of the kernel global limit, run <command>/usr/sbin/sysctl kernel.pid_max</command> to see the total limit). Each user's slice is limited to 33% of the kernel limit. However, this is different for &productname;."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:174
#, no-c-format
msgid "Finding the current default <literal>TasksMax</literal> values"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:175
#, no-c-format
msgid "It became apparent, in practice, that there is not a single default that applies to all use cases. &productname; ships with two custom configurations that override the upstream defaults for system units and for user slices, and sets them both to <literal>infinity</literal> . <filename os=\"sles;sled;slemicro\">/usr/lib/systemd/system.conf.d/__25-defaults-SLE.conf</filename> <filename os=\"osuse\">/usr/lib/systemd/system.conf.d/__20-defaults-SUSE.conf</filename> contains these lines:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:183
#, no-c-format
msgid "\n"
      "[Manager]\n"
      "DefaultTasksMax=infinity\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:187
#, no-c-format
msgid "<filename os=\"sles;sled;slemicro\">/usr/lib/systemd/system/user-.slice.d/25-defaults-SLE.conf </filename> <filename os=\"osuse\">/usr/lib/systemd/system/user-.slice.d/10-defaults.conf </filename> contains these lines:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:192
#, no-c-format
msgid "[Slice]\n"
      "TasksMax=infinity\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:195
#, no-c-format
msgid "Use <command>systemctl</command> to verify the DefaultTasksMax value:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:198
#, no-c-format
msgid "&prompt.user;<command>systemctl show --property DefaultTasksMax</command>\n"
      "DefaultTasksMax=infinity"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:200
#, no-c-format
msgid "<literal>infinity</literal> means having no limit. It is not a requirement to change the default, but setting certain limits may help to prevent system crashes from runaway processes."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:208
#, no-c-format
msgid "Overriding the <literal>DefaultTasksMax</literal> value"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:209
#, no-c-format
msgid "Change the global <literal>DefaultTasksMax</literal> value by creating a new override file, <filename>/etc/systemd/system.conf.d/90-system-tasksmax.conf</filename> , and write the following lines to set a new default limit of 256 tasks per system unit:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:216
#, no-c-format
msgid "\n"
      "[Manager]\n"
      "DefaultTasksMax=256\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:220
#, no-c-format
msgid "Load the new setting, then verify that it changed:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:223
#, no-c-format
msgid "&prompt.sudo;<command>systemctl daemon-reload</command>\n"
      "&prompt.user;<command>systemctl show --property DefaultTasksMax</command>\n"
      "DefaultTasksMax=256\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:227
#, no-c-format
msgid "Adjust this default value to suit your needs. You can set different limits on individual services as needed. This example is for MariaDB. First check the current active value:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:232
#, no-c-format
msgid "\n"
      "&prompt.user;<command>systemctl status mariadb.service</command>\n"
      "  ‚óè mariadb.service - MariaDB database server\n"
      "   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset&gt;\n"
      "   Active: active (running) since Tue 2020-05-26 14:15:03 PDT; 27min ago\n"
      "     Docs: man:mysqld(8)\n"
      "           https://mariadb.com/kb/en/library/systemd/\n"
      " Main PID: 11845 (mysqld)\n"
      "   Status: \"Taking your SQL requests now...\"\n"
      "    Tasks: 30 (limit: 256)\n"
      "   CGroup: /system.slice/mariadb.service\n"
      "           ‚îî‚îÄ11845 /usr/sbin/mysqld --defaults-file=/etc/my.cnf --user=mysql\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:245
#, no-c-format
msgid "The Tasks line shows that MariaDB currently has 30 tasks running, and has an upper limit of the default 256, which is inadequate for a database. The following example demonstrates how to raise MariaDB's limit to 8192."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:251
#, no-c-format
msgid "&prompt.sudo;<command>systemctl set-property mariadb.service TasksMax=8192</command>\n"
      "&prompt.user;<command>systemctl status mariadb.service</command>\n"
      "‚óè mariadb.service - MariaDB database server\n"
      "   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset: disab&gt;\n"
      "  Drop-In: /etc/systemd/system/mariadb.service.d\n"
      "           ‚îî‚îÄ50-TasksMax.conf\n"
      "   Active: active (running) since Tue 2020-06-02 17:57:48 PDT; 7min ago\n"
      "     Docs: man:mysqld(8)\n"
      "           https://mariadb.com/kb/en/library/systemd/\n"
      "  Process: 3446 ExecStartPre=/usr/lib/mysql/mysql-systemd-helper upgrade (code=exited, sta&gt;\n"
      "  Process: 3440 ExecStartPre=/usr/lib/mysql/mysql-systemd-helper install (code=exited, sta&gt;\n"
      " Main PID: 3452 (mysqld)\n"
      "   Status: \"Taking your SQL requests now...\"\n"
      "    Tasks: 30 (limit: 8192)\n"
      "   CGroup: /system.slice/mariadb.service\n"
      "           ‚îî‚îÄ3452 /usr/sbin/mysqld --defaults-file=/etc/my.cnf --user=mysql\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:268
#, no-c-format
msgid "<command>systemctl set-property</command> applies the new limit and creates a drop-in file for persistence, <filename>/etc/systemd/system/mariadb.service.d/50-TasksMax.conf</filename> , that contains only the changes you want to apply to the existing unit file. The value does not have to be 8192, but should be whatever limit is appropriate for your workloads."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:279
#, no-c-format
msgid "Default <literal>TasksMax</literal> limit on users"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:280
#, no-c-format
msgid "The default limit on users should be high, because user sessions need more resources. Set your own default for any user by creating a new file, for example <filename>/etc/systemd/system/user-.slice.d/40-user-taskmask.conf</filename> . The following example sets a default of 16284:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:287
#, no-c-format
msgid "\n"
      "[Slice]\n"
      "TasksMax=16284\n"
      ""
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:292
#, no-c-format
msgid "Numeric prefixes reference"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:293
#, no-c-format
msgid "See <xref linkend=\"sec-boot-systemd-custom-drop-in\"/> to learn what numeric prefixes are expected for drop-in files."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:298
#, no-c-format
msgid "Then reload systemd to load the new value, and verify the change:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:301
#, no-c-format
msgid "&prompt.sudo;<command>systemctl daemon-reload</command>\n"
      "&prompt.user;<command>systemctl show --property TasksMax user-1000.slice</command>\n"
      "TasksMax=16284\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:305
#, no-c-format
msgid "How do you know what values to use? This varies according to your workloads, system resources, and other resource configurations. When your <literal>TasksMax</literal> value is too low, you may see error messages such as <emphasis>Failed to fork (Resources temporarily unavailable)</emphasis> , <emphasis>Can't create thread to handle new connection</emphasis> , and <emphasis>Error: Function call 'fork' failed with error code 11, 'Resource temporarily unavailable'</emphasis> ."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:314
#, no-c-format
msgid "For more information on configuring system resources in systemd, see <literal>systemd.resource-control (5)</literal> ."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:322
#, no-c-format
msgid "I/O control with cgroups"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:324
#, no-c-format
msgid "This section introduces using the Linux kernel's block I/O controller to prioritize or throttle I/O operations. This leverages the means provided by systemd to configure cgroups, and discusses probable pitfalls when dealing with proportional I/O control."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:332
#, no-c-format
msgid "Prerequisites"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:333
#, no-c-format
msgid "The following subsections describe steps that you must take in advance when you design and configure your system, since those aspects cannot be changed during runtime."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:339
#, no-c-format
msgid "File system"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:340
#, no-c-format
msgid "You should use a cgroup-writeback-aware file system (otherwise writeback charging is not possible). The recommended &productname; file systems added support in the following upstream releases: <!-- [2] is https://www.susecon.com/doc/2015/sessions/TUT20066.pdf, slide 7, maybe there's better SLES docs cjs: that slide is old! We must find something newer. -->"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:350
#, no-c-format
msgid "Btrfs (v4.3)"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:355
#, no-c-format
msgid "Ext4 (v4.3)"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:360
#, no-c-format
msgid "XFS (v5.3)"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:365
#, no-c-format
msgid "As of &productname;&nbsp;15 <phrase os=\"sles;sled\">&nbsp;SP3</phrase> <phrase os=\"osuse\">.3</phrase> , any of the named file systems can be used."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:372
#, no-c-format
msgid "Block I/O scheduler"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:373
#, no-c-format
msgid "The throttling policy is implemented higher in the stack, therefore it does not require any additional adjustments. The proportional I/O control policies have two different implementations: the BFQ controller, and the cost-based model. We describe the BFQ controller here. To exert its proportional implementation for a particular device, we must make sure that BFQ is the chosen scheduler. Check the current scheduler:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:382
#, no-c-format
msgid "\n"
      "&prompt.user;<command>cat /sys/class/block/<replaceable>sda</replaceable>/queue/scheduler</command>\n"
      "mq-deadline kyber bfq [none]\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:386
#, no-c-format
msgid "Switch the scheduler to BFQ:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:389
#, no-c-format
msgid "\n"
      " &prompt.root;<command>echo bfq &gt; /sys/class/block/<replaceable>sda</replaceable>/queue/scheduler</command>\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:392
#, no-c-format
msgid "You must specify the disk device (not a partition). The optimal way to set this attribute is a udev rule specific to the device. &productname; ships udev rules that already enable BFQ for rotational disk drives."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:400
#, no-c-format
msgid "Cgroup hierarchy layout"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:401
#, no-c-format
msgid "Normally, all tasks reside in the root cgroup and they compete against each other. When the tasks are distributed into the cgroup tree the competition occurs between sibling cgroups only. This applies to the proportional I/O control; the throttling hierarchically aggregates throughput of all descendants (see the following diagram)."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:410
#, no-c-format
msgid "\n"
      "r\n"
      "`-  a      IOWeight=100\n"
      "    `- [c] IOWeight=300\n"
      "    `-  d  IOWeight=100\n"
      "`- [b]     IOWeight=200\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:417
#, no-c-format
msgid "I/O is originating only from cgroups c and b. Even though c has a higher weight, it is treated with lower priority because it is level-competing with b."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:426
#, no-c-format
msgid "Configuring control quantities"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:427
#, no-c-format
msgid "You can apply the values to (long running) services permanently."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:430
#, no-c-format
msgid "\n"
      "&prompt.sudo;<command>systemctl set-property <replaceable>fast.service</replaceable> IOWeight=<replaceable>400</replaceable></command>\n"
      "&prompt.sudo;<command>systemctl set-property <replaceable>slow.service</replaceable> IOWeight=<replaceable>50</replaceable></command>\n"
      "&prompt.sudo;<command>systemctl set-property <replaceable>throttled.service</replaceable> IOReadBandwidthMax=\"<replaceable>/dev/sda 1M</replaceable>\"</command>\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:435
#, no-c-format
msgid "Alternatively, you can apply I/O control to individual commands, for example:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:439
#, no-c-format
msgid "\n"
      "&prompt.sudo;<command>systemd-run --scope -p IOWeight=<replaceable>400</replaceable> <replaceable>high_prioritized_command</replaceable></command>\n"
      "&prompt.sudo;<command>systemd-run --scope -p IOWeight=<replaceable>50</replaceable> <replaceable>low_prioritized_command</replaceable></command>\n"
      "&prompt.sudo;<command>systemd-run --scope -p IOReadBandwidthMax=\"<replaceable>/dev/sda 1M</replaceable>\" <replaceable>dd if=/dev/sda of=/dev/null bs=1M count=10</replaceable></command>\n"
      ""
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:447
#, no-c-format
msgid "I/O control behavior and setting expectations"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:448
#, no-c-format
msgid "The following list items describe I/O control behavior, and what you should expect under different conditions."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:454
#, no-c-format
msgid "I/O control works best for direct I/O operations (bypassing page cache), the situations where the actual I/O is decoupled from the caller (typically writeback via page cache) may manifest variously. For example, delayed I/O control or even no observed I/O control (consider little bursts or competing workloads that happen to never <quote>meet,</quote> submitting I/O at the same time, and saturating the bandwidth). For these reasons, the resulting ratio of I/O throughputs does not strictly follow the ratio of configured weights."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:467
#, no-c-format
msgid "systemd performs scaling of configured weights (to adjust for narrower BFQ weight range), hence the resulting throughput ratios also differ."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:474
#, no-c-format
msgid "The writeback activity depends on the amount of dirty pages, besides the global sysctl knobs ( <filename>vm.dirty_background_ratio</filename> and <filename>vm.dirty_ratio</filename> )). Memory limits of individual cgroups come into play when the dirty limits are distributed among cgroups, and this in turn may affect I/O intensity of affected cgroups."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:485
#, no-c-format
msgid "Not all storages are equal. The I/O control happens at the I/O scheduler layer, which has ramifications for setups with devices stacked on these that do no actual scheduling. Consider device mapper logical volumes spanning multiple physical devices, MD RAID, or even Btrfs RAID. I/O control over such setups may be challenging."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:495
#, no-c-format
msgid "There is no separate setting for proportional I/O control of reads and writes."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:501
#, no-c-format
msgid "Proportional I/O control is only one of the policies that can interact with each other (but responsible resource design perhaps avoids that)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:508
#, no-c-format
msgid "The I/O device bandwidth is not the only shared resource on the I/O path. Global file system structures are involved, which is relevant when I/O control is meant to guarantee certain bandwidth; it does not, and it may even lead to priority inversion (prioritized cgroup waiting for a transaction of slower cgroup)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:517
#, no-c-format
msgid "So far, we have been discussing only explicit I/O of file system data, but swap-in and swap-out can also be controlled. Although if such a need arises, it points out to improperly provisioned memory (or memory limits)."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:528
#, no-c-format
msgid "Resource control in user sessions"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:529
#, no-c-format
msgid "In order to apply cgroup resource control within user sessions, controllers must be delegated user instances of &systemd;. &productname; ships &systemd; default configuration that delegates <emphasis>no</emphasis> controllers."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:535
#, no-c-format
msgid "You can use drop-in files to change the set of delegated controllers. For instance, <filename>/etc/systemd/system/user@.service.d/60-delegate.conf</filename> adds controllers to all users, while <filename>/etc/systemd/system/user@<replaceable>uid</replaceable>.service.d/60-delegate.conf</filename> adds controllers only to particular user. The content of the file should be like following:"
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:544
#, no-c-format
msgid "\n"
      "[Service]\n"
      "Delegate=pids memory\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:548
#, no-c-format
msgid "Both the &systemd; instance and affected user instance must be notified to reload the new configuration."
msgstr ""

#. Tag: screen
#: tuning_cgroups.xml:552
#, no-c-format
msgid "\n"
      "&prompt.sudo;<command>systemctl daemon-reload</command>\n"
      "&prompt.user;<command>systemctl --user daemon-reexec</command>\n"
      ""
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:556
#, no-c-format
msgid "Alternatively, the affected user may log out and log in instead of the second line to restart their user instance."
msgstr ""

#. Tag: title
#: tuning_cgroups.xml:564
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:568
#, no-c-format
msgid "Kernel documentation (package <systemitem>kernel-source</systemitem> ): files in <filename>/usr/src/linux/Documentation/admin-guide/cgroup-v1</filename> and file <filename>/usr/src/linux/Documentation/admin-guide/cgroup-v2.rst</filename> ."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:577
#, no-c-format
msgid "<command>man systemd.resource-control</command>"
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:582
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/604609/\"/> &mdash;Brown, Neil: Control Groups Series (2014, 7 parts)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:588
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/243795/\"/> &mdash;Corbet, Jonathan: Controlling memory use in containers (2007)."
msgstr ""

#. Tag: para
#: tuning_cgroups.xml:594
#, no-c-format
msgid "<link xlink:href=\"https://lwn.net/Articles/236038/\"/> &mdash;Corbet, Jonathan: Process containers (2007)."
msgstr ""

