# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-05-11 00:57+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: hardware_nvdimm.xml:10
#, no-c-format
msgid "Persistent memory"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:13
#, no-c-format
msgid "This chapter contains additional information about using &sle; with non-volatile main memory, also known as <emphasis>Persistent Memory</emphasis> , comprising one or more NVDIMMs."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:25
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:27
#, no-c-format
msgid "Persistent memory is a new type of computer storage, combining speeds approaching those of dynamic RAM (DRAM) along with RAM's byte-by-byte addressability, plus the permanence of solid-state drives (SSDs)."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:33
#, no-c-format
msgid "&suse; currently supports the use of persistent memory with &sls; on machines with the &x86-64; and &power; architectures."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:38
#, no-c-format
msgid "Like conventional RAM, persistent memory is installed directly into mainboard memory slots. As such, it is supplied in the same physical form factor as RAM&mdash;as DIMMs. These are known as NVDIMMs: non-volatile dual inline memory modules."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:45
#, no-c-format
msgid "Unlike RAM, though, persistent memory is also similar to flash-based SSDs in several ways. Both are based on forms of solid-state memory circuitry, but despite this, both provide non-volatile storage: Their contents are retained when the system is powered off or restarted. For both forms of medium, writing data is slower than reading it, and both support a limited number of rewrite cycles. Finally, also like SSDs, sector-level access to persistent memory is possible if that is more suitable for a particular application."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:55
#, no-c-format
msgid "Different models use different forms of electronic storage medium, such as Intel 3D XPoint, or a combination of NAND-flash and DRAM. New forms of non-volatile RAM are also in development. This means that different vendors and models of NVDIMM offer different performance and durability characteristics."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:63
#, no-c-format
msgid "Because the storage technologies involved are in an early stage of development, different vendors' hardware may impose different limitations. Thus, the following statements are generalizations."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:69
#, no-c-format
msgid "Persistent memory is up to ten times slower than DRAM, but around a thousand times faster than flash storage. It can be rewritten on a byte-by-byte basis rather than flash memory's whole-sector erase-and-rewrite process. Finally, while rewrite cycles are limited, most forms of persistent memory can handle millions of rewrites, compared to the thousands of cycles of flash storage."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:77
#, no-c-format
msgid "This has two important consequences:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:83
#, no-c-format
msgid "It is not possible with current technology to run a system with only persistent memory and thus achieve completely non-volatile main memory. You must use a mixture of both conventional RAM and NVDIMMs. The operating system and applications will execute in conventional RAM, with the NVDIMMs providing very fast supplementary storage."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:92
#, no-c-format
msgid "The performance characteristics of different vendors' persistent memory mean that it may be necessary for programmers to be aware of the hardware specifications of the NVDIMMs in a particular server, including how many NVDIMMs there are and in which memory slots they are fitted. This will impact hypervisor use, migration of software between different host machines, and so on."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:103
#, no-c-format
msgid "This new storage subsystem is defined in version 6 of the ACPI standard. However, <filename>libnvdimm</filename> supports pre-standard NVDIMMs and they can be used in the same way."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:111
#, no-c-format
msgid "Terms"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:115
#, no-c-format
msgid "Region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:117
#, no-c-format
msgid "A <emphasis>region</emphasis> is a block of persistent memory that can be divided up into one or more <emphasis>namespace</emphasis> s. You cannot access the persistent memory of a region without first allocating it to a namespace."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:126
#, no-c-format
msgid "Namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:128
#, no-c-format
msgid "A single contiguously-addressed range of non-volatile storage, comparable to NVM Express SSD namespaces, or to SCSI Logical Units (LUNs). Namespaces appear in the server's <filename>/dev</filename> directory as separate block devices. Depending on the method of access required, namespaces can either amalgamate storage from multiple NVDIMMs into larger volumes, or allow it to be partitioned into smaller volumes."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:139
#, no-c-format
msgid "Mode"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:141
#, no-c-format
msgid "Each namespace also has a <emphasis>mode</emphasis> that defines which NVDIMM features are enabled for that namespace. Sibling namespaces of the same parent region will always have the same type, but might be configured to have different modes. Namespace modes include:"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:149
#, no-c-format
msgid "devdax"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:151
#, no-c-format
msgid "Device-DAX mode. Creates a single-character device file ( <filename> /dev/dax<replaceable>X</replaceable>.<replaceable>Y</replaceable> </filename> ). Does <emphasis>not</emphasis> require file system creation."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:160
#, no-c-format
msgid "fsdax"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:162
#, no-c-format
msgid "File system-DAX mode. Default if no other mode is specified. Creates a block device ( <filename>/dev/pmem<replaceable>X</replaceable> [.<replaceable>Y</replaceable>]</filename> ) which supports DAX for <literal>ext4</literal> or <literal>XFS</literal> ."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:171
#, no-c-format
msgid "sector"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:173
#, no-c-format
msgid "For legacy file systems which do not checksum metadata. Suitable for small boot volumes. Compatible with other operating systems."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:180
#, no-c-format
msgid "raw"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:182
#, no-c-format
msgid "A memory disk without a label or metadata. Does not support DAX. Compatible with other operating systems."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:187
#, no-c-format
msgid "<literal>raw</literal> mode is not supported by &suse;. It is not possible to mount file systems on <literal>raw</literal> namespaces."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:198
#, no-c-format
msgid "Type"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:200
#, no-c-format
msgid "Each namespace and region has a <emphasis>type</emphasis> that defines the way in which the persistent memory associated with that namespace or region can be accessed. A namespace always has the same type as its parent region. There are two different types: Persistent Memory, which can be configured in two different ways, and the deprecated Block Mode."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:209
#, no-c-format
msgid "Persistent memory (PMEM)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:211
#, no-c-format
msgid "PMEM storage offers byte-level access, similar to RAM. Using PMEM, a single namespace can include multiple interleaved NVDIMMs, allowing them all to be used as a single device."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:216
#, no-c-format
msgid "There are two ways to configure a PMEM namespace."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:223
#, no-c-format
msgid "A PMEM namespace configured for Direct Access (DAX) means that accessing the memory bypasses the kernel's page cache and goes direct to the medium. Software can directly read or write every byte of the namespace separately."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:232
#, no-c-format
msgid "PMEM with block translation table (BTT)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:234
#, no-c-format
msgid "A PMEM namespace configured to operate in BTT mode is accessed on a sector-by-sector basis, like a conventional disk drive, rather than the more RAM-like byte-addressable model. A translation table mechanism batches accesses into sector-sized units."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:240
#, no-c-format
msgid "The advantage of BTT is data protection. The storage subsystem ensures that each sector is completely written to the underlying medium. If a sector cannot be completely written (that is, if the write operation fails for some reason), then the whole sector will be rolled back to its previous state. Thus a given sector cannot be partially written."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:248
#, no-c-format
msgid "Additionally, access to BTT namespaces is cached by the kernel."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:251
#, no-c-format
msgid "The drawback is that DAX is not possible for BTT namespaces."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:260
#, no-c-format
msgid "Block mode (BLK)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:262
#, no-c-format
msgid "Block mode storage addresses each NVDIMM as a separate device. Its use is deprecated and no longer supported."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:269
#, no-c-format
msgid "Apart from <literal>devdax</literal> namespaces, all other types must be formatted with a file system, just as with a conventional drive. &productname; supports the <literal>ext2</literal> , <literal>ext4</literal> and <literal>XFS</literal> file systems for this."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:278
#, no-c-format
msgid "Direct access (DAX)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:280
#, no-c-format
msgid "DAX allows persistent memory to be directly mapped into a process's address space, for example using the <literal>mmap</literal> system call."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:287
#, no-c-format
msgid "DIMM physical address (DPA)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:289
#, no-c-format
msgid "A memory address as an offset into a single DIMM's memory; that is, starting from zero as the lowest addressable byte on that DIMM."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:296
#, no-c-format
msgid "Label"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:298
#, no-c-format
msgid "Metadata stored on the NVDIMM, such as namespace definitions. This can be accessed using DSMs."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:305
#, no-c-format
msgid "Device-specific method (DSM)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:307
#, no-c-format
msgid "ACPI method to access the firmware on an NVDIMM."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:315
#, no-c-format
msgid "Use cases"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:318
#, no-c-format
msgid "PMEM with DAX"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:319
#, no-c-format
msgid "It is important to note that this form of memory access is <emphasis>not</emphasis> transactional. In the event of a power outage or other system failure, data may not be completely written into storage. PMEM storage is only suitable if the application can handle the situation of partially-written data."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:327
#, no-c-format
msgid "Applications that benefit from large amounts of byte-addressable storage"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:329
#, no-c-format
msgid "If the server will host an application that can directly use large amounts of fast storage on a byte-by-byte basis, the programmer can use the <literal>mmap</literal> system call to place blocks of persistent memory directly into the application's address space, without using any additional system RAM."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:337
#, no-c-format
msgid "Avoiding use of the kernel page cache"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:338
#, no-c-format
msgid "Avoid using the kernel page cache if you want to conserve the use of RAM for the page cache, and instead give it to your applications. For instance, non-volatile memory could be dedicated to holding virtual machine (VM) images. As these would not be cached, this would reduce the cache usage on the host, allowing more VMs per host."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:349
#, no-c-format
msgid "PMEM with BTT"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:350
#, no-c-format
msgid "This is useful when you want to use the persistent memory on a set of NVDIMMs as a disk-like pool of very fast storage. For example, placing the file system journal on PMEM with BTT increases the reliability of file system recovery after a power failure or other sudden interruption (see <xref linkend=\"sec-nvdimm-setup-btt\"/> )."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:357
#, no-c-format
msgid "To applications, such devices appear as very fast SSDs and can be used like any other storage device. For example, LVM can be layered on top of the persistent memory and will work as normal."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:362
#, no-c-format
msgid "The advantage of BTT is that sector write atomicity is guaranteed, so even sophisticated applications that depend on data integrity will keep working. Media error reporting works through standard error-reporting channels."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:372
#, no-c-format
msgid "Tools for managing persistent memory"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:374
#, no-c-format
msgid "To manage persistent memory, it is necessary to install the <literal>ndctl</literal> package. This also installs the <filename>libndctl</filename> package, which provides a set of user space libraries to configure NVDIMMs."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:381
#, no-c-format
msgid "These tools work via the <filename>libnvdimm</filename> library, which supports three types of NVDIMM:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:388
#, no-c-format
msgid "PMEM"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:393
#, no-c-format
msgid "BLK"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:398
#, no-c-format
msgid "Simultaneous PMEM and BLK"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:404
#, no-c-format
msgid "The <command>ndctl</command> utility has a helpful set of <command>man</command> pages, accessible with the command:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:409
#, no-c-format
msgid "&prompt.user;<command>ndctl help <replaceable>subcommand</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:411
#, no-c-format
msgid "To see a list of available subcommands, use:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:415
#, no-c-format
msgid "&prompt.user;<command>ndctl --list-cmds</command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:417
#, no-c-format
msgid "The available subcommands include:"
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:423
#, no-c-format
msgid "version"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:425
#, no-c-format
msgid "Displays the current version of the NVDIMM support tools."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:431
#, no-c-format
msgid "enable-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:433
#, no-c-format
msgid "Makes the specified namespace available for use."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:439
#, no-c-format
msgid "disable-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:441
#, no-c-format
msgid "Prevents the specified namespace from being used."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:447
#, no-c-format
msgid "create-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:449
#, no-c-format
msgid "Creates a new namespace from the specified storage devices."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:455
#, no-c-format
msgid "destroy-namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:457
#, no-c-format
msgid "Removes the specified namespace."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:463
#, no-c-format
msgid "enable-region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:465
#, no-c-format
msgid "Makes the specified region available for use."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:471
#, no-c-format
msgid "disable-region"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:473
#, no-c-format
msgid "Prevents the specified region from being used."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:479
#, no-c-format
msgid "zero-labels"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:481
#, no-c-format
msgid "Erases the metadata from a device."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:487
#, no-c-format
msgid "read-labels"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:489
#, no-c-format
msgid "Retrieves the metadata of the specified device."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:495
#, no-c-format
msgid "list"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:497
#, no-c-format
msgid "Displays available devices."
msgstr ""

#. Tag: term
#: hardware_nvdimm.xml:503
#, no-c-format
msgid "help"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:505
#, no-c-format
msgid "Displays information about using the tool."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:513
#, no-c-format
msgid "Setting up persistent memory"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:516
#, no-c-format
msgid "Viewing available NVDIMM storage"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:517
#, no-c-format
msgid "The <command>ndctl</command> <literal>list</literal> command can be used to list all available NVDIMMs in a system."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:521
#, no-c-format
msgid "In the following example, the system has three NVDIMMs, which are in a single, triple-channel interleaved set."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:525
#, no-c-format
msgid "&prompt.root;<command>ndctl list --dimms</command>\n"
      "\n"
      "[\n"
      " {\n"
      "  \"dev\":\"nmem2\",\n"
      "  \"id\":\"8089-00-0000-12325476\"\n"
      " },\n"
      " {\n"
      "  \"dev\":\"nmem1\",\n"
      "  \"id\":\"8089-00-0000-11325476\"\n"
      " },\n"
      " {\n"
      "  \"dev\":\"nmem0\",\n"
      "  \"id\":\"8089-00-0000-10325476\"\n"
      " }\n"
      "]"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:541
#, no-c-format
msgid "With a different parameter, <command>ndctl</command> <literal>list</literal> will also list the available regions."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:546
#, no-c-format
msgid "Regions may not appear in numerical order."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:550
#, no-c-format
msgid "Note that although there are only three NVDIMMs, they appear as four regions."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:554
#, no-c-format
msgid "&prompt.root;<command>ndctl list --regions</command>\n"
      "\n"
      "[\n"
      " {\n"
      "  \"dev\":\"region1\",\n"
      "  \"size\":68182605824,\n"
      "  \"available_size\":68182605824,\n"
      "  \"type\":\"blk\"\n"
      " },\n"
      " {\n"
      "  \"dev\":\"region3\",\n"
      "  \"size\":202937204736,\n"
      "  \"available_size\":202937204736,\n"
      "  \"type\":\"pmem\",\n"
      "  \"iset_id\":5903239628671731251\n"
      "  },\n"
      "  {\n"
      "   \"dev\":\"region0\",\n"
      "   \"size\":68182605824,\n"
      "   \"available_size\":68182605824,\n"
      "   \"type\":\"blk\"\n"
      "  },\n"
      "  {\n"
      "   \"dev\":\"region2\",\n"
      "   \"size\":68182605824,\n"
      "   \"available_size\":68182605824,\n"
      "   \"type\":\"blk\"\n"
      "  }\n"
      "]"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:583
#, no-c-format
msgid "The space is available in two different forms: either as three separate 64 GB regions of type BLK, or as one combined 189 GB region of type PMEM which presents all the space on the three interleaved NVDIMMs as a single volume."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:588
#, no-c-format
msgid "Note that the displayed value for <literal>available_size</literal> is the same as that for <literal>size</literal> . This means that none of the space has been allocated yet."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:596
#, no-c-format
msgid "Configuring the storage as a single PMEM namespace with DAX"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:597
#, no-c-format
msgid "For the first example, we will configure our three NVDIMMs into a single PMEM namespace with Direct Access (DAX)."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:601
#, no-c-format
msgid "The first step is to create a new namespace."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:604
#, no-c-format
msgid "&prompt.root;<command>ndctl create-namespace --type=<replaceable>pmem</replaceable> --mode=<replaceable>fsdax</replaceable> --map=<replaceable>memory</replaceable></command>\n"
      "{\n"
      " \"dev\":\"namespace3.0\",\n"
      " \"mode\":\"memory\",\n"
      " \"size\":199764213760,\n"
      " \"uuid\":\"dc8ebb84-c564-4248-9e8d-e18543c39b69\",\n"
      " \"blockdev\":\"pmem3\"\n"
      "}"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:612
#, no-c-format
msgid "This creates a block device <filename>/dev/pmem3</filename> , which supports DAX. The <literal>3</literal> in the device name is inherited from the parent region number, in this case <filename>region3</filename> ."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:617
#, no-c-format
msgid "The <option>--map=memory</option> option sets aside part of the PMEM storage space on the NVDIMMs so that it can be used to allocate internal kernel data structures called <literal>struct pages</literal> . This allows the new PMEM namespace to be used with features such as <literal>O_DIRECT I/O</literal> and <literal>RDMA</literal> ."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:624
#, no-c-format
msgid "The reservation of some persistent memory for kernel data structures is why the resulting PMEM namespace has a smaller capacity than the parent PMEM region."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:629
#, no-c-format
msgid "Next, we verify that the new block device is available to the operating system:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:633
#, no-c-format
msgid "&prompt.root;<command>fdisk -l /dev/<replaceable>pmem3</replaceable></command>\n"
      "Disk /dev/pmem3: 186 GiB, 199764213760 bytes, 390164480 sectors\n"
      "Units: sectors of 1 * 512 = 512 bytes\n"
      "Sector size (logical/physical): 512 bytes / 4096 bytes\n"
      "I/O size (minimum/optimal): 4096 bytes / 4096 bytes"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:638
#, no-c-format
msgid "Before it can be used, like any other drive, it must be formatted. In this example, we format it with XFS:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:642
#, no-c-format
msgid "&prompt.root;<command>mkfs.xfs /dev/<replaceable>pmem3</replaceable></command>\n"
      "meta-data=/dev/pmem3      isize=256    agcount=4, agsize=12192640 blks\n"
      "         =                sectsz=4096  attr=2, projid32bit=1\n"
      "         =                crc=0        finobt=0, sparse=0\n"
      "data     =                bsize=4096   blocks=48770560, imaxpct=25\n"
      "         =                sunit=0      swidth=0 blks\n"
      "naming   =version 2       bsize=4096   ascii-ci=0 ftype=1\n"
      "log      =internal log    bsize=4096   blocks=23813, version=2\n"
      "         =                sectsz=4096  sunit=1 blks, lazy-count=1\n"
      "realtime =none            extsz=4096   blocks=0, rtextents=0"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:652
#, no-c-format
msgid "Next, we can mount the new drive onto a directory:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:655
#, no-c-format
msgid "&prompt.root;<command>mount -o dax /dev/<replaceable>pmem3</replaceable> /mnt/<replaceable>pmem3</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:656
#, no-c-format
msgid "Then we can verify that we now have a DAX-capable device:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:659
#, no-c-format
msgid "&prompt.root;<command>mount | grep dax</command>\n"
      "/dev/pmem3 on /mnt/pmem3 type xfs (rw,relatime,attr2,dax,inode64,noquota)"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:661
#, no-c-format
msgid "The result is that we now have a PMEM namespace formatted with the XFS file system and mounted with DAX."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:665
#, no-c-format
msgid "Any <literal>mmap()</literal> calls to files in that file system will return virtual addresses that directly map to the persistent memory on our NVDIMMs, completely bypassing the page cache."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:670
#, no-c-format
msgid "Any <literal>fsync</literal> or <literal>msync</literal> calls on files in that file system will still ensure that modified data has been fully written to the NVDIMMs. These calls flush the processor cache lines associated with any pages that have been modified in user space via <literal>mmap</literal> mappings."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:678
#, no-c-format
msgid "Removing a namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:679
#, no-c-format
msgid "Before creating any other type of volume that uses the same storage, we must unmount and then remove this PMEM volume."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:683
#, no-c-format
msgid "First, unmount it:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:686
#, no-c-format
msgid "&prompt.root;<command>umount /mnt/<replaceable>pmem3</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:687
#, no-c-format
msgid "Then disable the namespace:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:690
#, no-c-format
msgid "&prompt.root;<command>ndctl disable-namespace <replaceable>namespace3.0</replaceable></command>\n"
      "disabled 1 namespace"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:692
#, no-c-format
msgid "Then delete it:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:695
#, no-c-format
msgid "&prompt.root;<command>ndctl destroy-namespace <replaceable>namespace3.0</replaceable></command>\n"
      "destroyed 1 namespace"
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:701
#, no-c-format
msgid "Creating a PMEM namespace with BTT"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:702
#, no-c-format
msgid "BTT provides sector write atomicity, which makes it a good choice when you need data protection, for example for Ext4 and XFS journals. If there is a power failure, the journals are protected and should be recoverable. The following examples show how to create a PMEM namespace with BTT in sector mode, and how to place the file system journal in this namespace."
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:710
#, no-c-format
msgid "&prompt.root;<command>ndctl create-namespace --type=pmem --mode=sector</command>\n"
      "{\n"
      " \"dev\":\"namespace3.0\",\n"
      " \"mode\":\"sector\",\n"
      " \"uuid\":\"51ab652d-7f20-44ea-b51d-5670454f8b9b\",\n"
      " \"sector_size\":4096,\n"
      " \"blockdev\":\"pmem3s\"\n"
      "}"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:718
#, no-c-format
msgid "Next, verify that the new device is present:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:721
#, no-c-format
msgid "&prompt.root;<command>fdisk -l /dev/<replaceable>pmem3s</replaceable></command>\n"
      "Disk /dev/pmem3s: 188.8 GiB, 202738135040 bytes, 49496615 sectors\n"
      "Units: sectors of 1 * 4096 = 4096 bytes\n"
      "Sector size (logical/physical): 4096 bytes / 4096 bytes\n"
      "I/O size (minimum/optimal): 4096 bytes / 4096 bytes"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:726
#, no-c-format
msgid "Like the DAX-capable PMEM namespace we previously configured, this BTT-capable PMEM namespace consumes all the available storage on the NVDIMMs."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:732
#, no-c-format
msgid "The trailing <literal>s</literal> in the device name ( <filename>/dev/<replaceable>pmem3s</replaceable></filename> ) stands for <literal>sector</literal> and can be used to easily distinguish namespaces that are configured to use the BTT."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:739
#, no-c-format
msgid "The volume can be formatted and mounted as in the previous example."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:742
#, no-c-format
msgid "The PMEM namespace shown here cannot use DAX. Instead it uses the BTT to provide <emphasis>sector write atomicity</emphasis> . On each sector write through the PMEM block driver, the BTT will allocate a new sector to receive the new data. The BTT atomically updates its internal mapping structures after the new data is fully written so the newly written data will be available to applications. If the power fails at any point during this process, the write will be completely lost and the application will have access to its old data, still intact. This prevents the condition known as \"torn sectors\"."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:753
#, no-c-format
msgid "This BTT-enabled PMEM namespace can be formatted and used with a file system same as any other standard block device. It cannot be used with DAX. However, <literal>mmap</literal> mappings for files on this block device will use the page cache."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:762
#, no-c-format
msgid "Placing the file system journal on PMEM/BTT"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:763
#, no-c-format
msgid "When you place the file system journal on a separate device, it must use the same file system block size as the file system. Most likely this is 4096, and you can find the block size with this command:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:769
#, no-c-format
msgid "&prompt.root;<command>blockdev --getbsz /dev/<replaceable>sda3</replaceable></command>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:770
#, no-c-format
msgid "The following example creates a new Ext4 journal on a separate NVDIMM device, creates the file system on a SATA device, then attaches the new file system to the journal:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:775
#, no-c-format
msgid "\n"
      "&prompt.root;<command>mke2fs -b 4096 -O journal_dev /dev/<replaceable>pmem3s</replaceable></command>\n"
      "&prompt.root;<command>mkfs.ext4 -J device=/dev/<replaceable>pmem3s</replaceable> /dev/<replaceable>sda3</replaceable></command>\n"
      ""
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:779
#, no-c-format
msgid "The following example creates a new XFS file system on a SATA drive, and creates the journal on a separate NVDIMM device:"
msgstr ""

#. Tag: screen
#: hardware_nvdimm.xml:783
#, no-c-format
msgid "&prompt.root;<command>mkfs.xfs -l logdev=/dev/<replaceable>pmem3s </replaceable> /dev/<replaceable>sda3</replaceable></command>\n"
      ""
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:785
#, no-c-format
msgid "See <command>man 8 mkfs.ext4</command> and <command>man 8 mkfs.ext4</command> for detailed information about options."
msgstr ""

#. Tag: title
#: hardware_nvdimm.xml:792
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:794
#, no-c-format
msgid "More about this topic can be found in the following list:"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:800
#, no-c-format
msgid "<link xlink:href=\"https://nvdimm.wiki.kernel.org/\"> Persistent Memory Wiki</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:804
#, no-c-format
msgid "Contains instructions for configuring NVDIMM systems, information about testing, and links to specifications related to NVDIMM enabling. This site is developing as NVDIMM support in Linux is developing."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:811
#, no-c-format
msgid "<link xlink:href=\"http://pmem.io/\">Persistent Memory Programming</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:814
#, no-c-format
msgid "Information about configuring, using and programming systems with non-volatile memory under Linux and other operating systems. Covers the NVM Library (NVML), which aims to provide useful APIs for programming with persistent memory in user space."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:822
#, no-c-format
msgid "<link xlink:href=\"https://www.kernel.org/doc/Documentation/nvdimm/nvdimm.txt\"> LIBNVDIMM: Non-Volatile Devices</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:826
#, no-c-format
msgid "Aimed at kernel developers, this is part of the Documentation directory in the current Linux kernel tree. It talks about the different kernel modules involved in NVDIMM enablement, lays out some technical details of the kernel implementation, and talks about the <filename>sysfs</filename> interface to the kernel that is used by the <command>ndctl</command> tool."
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:836
#, no-c-format
msgid "<link xlink:href=\"https://github.com/pmem/ndctl\">GitHub: pmem/ndctl</link>"
msgstr ""

#. Tag: para
#: hardware_nvdimm.xml:839
#, no-c-format
msgid "Utility library for managing the <command>libnvdimm</command> subsystem in the Linux kernel. Also contains user space libraries, as well as unit tests and documentation."
msgstr ""

