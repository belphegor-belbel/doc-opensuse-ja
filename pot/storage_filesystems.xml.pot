# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2023-07-17 22:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: storage_filesystems.xml:8
#, no-c-format
msgid "Overview of file systems in Linux"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:15
#, no-c-format
msgid "&productname; ships with different file systems from which to choose, including Btrfs, Ext4, Ext3, Ext2 and XFS. Each file system has its own advantages and disadvantages. For a side-by-side feature comparison of the major file systems in &productname;, see <link xlink:href=\"https://www.suse.com/releasenotes/x86_64/SUSE-SLES/15-SP3/#file-system-comparison\"/> ( <citetitle>Comparison of supported file systems</citetitle> ). This chapter contains an overview of how these file systems work and what advantages they offer."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:27
#, no-c-format
msgid "With &sle; 12, Btrfs is the default file system for the operating system and XFS is the default for all other use cases. &suse; also continues to support the Ext family of file systems and OCFS2. By default, the Btrfs file system will be set up with subvolumes. Snapshots will be automatically enabled for the root file system using the snapper infrastructure. For more information about snapper, refer to <xref linkend=\"cha-snapper\"/> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:35
#, no-c-format
msgid "Professional high-performance setups might require a highly available storage system. To meet the requirements of high-performance clustering scenarios, &productname; includes OCFS2 (Oracle Cluster File System 2) and the Distributed Replicated Block Device (DRBD) in the &hasi; add-on. These advanced storage systems are not covered in this guide. For information, see the <link xlink:href=\"https://documentation.suse.com/sle-ha-15/html/SLE-HA-all/book-administration.html\"> <citetitle>&haguide; for the &sle; &hasi;</citetitle></link> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:45
#, no-c-format
msgid "It is very important to remember that no file system best suits all kinds of applications. Each file system has its particular strengths and weaknesses, which must be taken into account. In addition, even the most sophisticated file system cannot replace a reasonable backup strategy."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:51
#, no-c-format
msgid "The terms <emphasis>data integrity</emphasis> and <emphasis>data consistency</emphasis> , when used in this section, do not refer to the consistency of the user space data (the data your application writes to its files). Whether this data is consistent must be controlled by the application itself."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:58
#, no-c-format
msgid "Unless stated otherwise in this section, all the steps required to set up or change partitions and file systems can be performed by using the &yast; Partitioner (which is also strongly recommended). For information, see <xref linkend=\"cha-expert-partitioner\"/> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:65
#, no-c-format
msgid "Terminology"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:69
#, no-c-format
msgid "metadata"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:71
#, no-c-format
msgid "A data structure that is internal to the file system. It ensures that all of the on-disk data is properly organized and accessible. Almost every file system has its own structure of metadata, which is one reason the file systems show different performance characteristics. It is extremely important to maintain metadata intact, because otherwise all data on the file system could become inaccessible."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:82
#, no-c-format
msgid "inode"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:84
#, no-c-format
msgid "A data structure on a file system that contains a variety of information about a file, including size, number of links, pointers to the disk blocks where the file contents are actually stored, and date and time of creation, modification, and access."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:93
#, no-c-format
msgid "journal"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:95
#, no-c-format
msgid "In the context of a file system, a journal is an on-disk structure containing a type of log in which the file system stores what it is about to change in the file systemâ€™s metadata. Journaling greatly reduces the recovery time of a file system because it has no need for the lengthy search process that checks the entire file system at system start-up. Instead, only the journal is replayed."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:110
#, no-c-format
msgid "Btrfs is a copy-on-write (COW) file system developed by Chris Mason. It is based on COW-friendly B-trees developed by Ohad Rodeh. Btrfs is a logging-style file system. Instead of journaling the block changes, it writes them in a new location, then links the change in. Until the last write, the new changes are not committed."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:119
#, no-c-format
msgid "Key features"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:120
#, no-c-format
msgid "Btrfs provides fault tolerance, repair, and easy management features, such as the following:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:126
#, no-c-format
msgid "Writable snapshots that allow you to easily roll back your system if needed after applying updates, or to back up files."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:132
#, no-c-format
msgid "Subvolume support: Btrfs creates a default subvolume in its assigned pool of space. It allows you to create additional subvolumes that act as individual file systems within the same pool of space. The number of subvolumes is limited only by the space allocated to the pool."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:140
#, no-c-format
msgid "The online check and repair functionality <command>scrub</command> is available as part of the Btrfs command line tools. It verifies the integrity of data and metadata, assuming the tree structure is fine. You can run scrub periodically on a mounted file system; it runs as a background process during normal operation."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:149
#, no-c-format
msgid "Different RAID levels for metadata and user data."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:154
#, no-c-format
msgid "Different checksums for metadata and user data to improve error detection."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:160
#, no-c-format
msgid "Integration with Linux Logical Volume Manager (LVM) storage objects."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:165
#, no-c-format
msgid "Integration with the &yast; Partitioner and &ay; on &productname;. This also includes creating a Btrfs file system on Multiple Devices (MD) and Device Mapper (DM) storage configurations."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:172
#, no-c-format
msgid "Offline migration from existing Ext2, Ext3, and Ext4 file systems."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:177
#, no-c-format
msgid "Boot loader support for <filename>/boot</filename> , allowing to boot from a Btrfs partition."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:184
#, no-c-format
msgid "Multivolume Btrfs is supported in RAID0, RAID1, and RAID10 profiles in &productname; &productnumber;. Higher RAID levels are not supported yet, but might be enabled with a future service pack."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:191
#, no-c-format
msgid "Use Btrfs commands to set up transparent compression."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:199
#, no-c-format
msgid "The root file system setup on &productname;"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:200
#, no-c-format
msgid "By default, &productname; is set up using Btrfs and snapshots for the root partition. Snapshots allow you to easily roll back your system if needed after applying updates, or to back up files. Snapshots can easily be managed with the &suse; Snapper infrastructure as explained in <xref linkend=\"cha-snapper\"/> . For general information about the &suse; Snapper project, see the Snapper Portal wiki at OpenSUSE.org ( <link xlink:href=\"http://snapper.io\"/> )."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:209
#, no-c-format
msgid "When using a snapshot to roll back the system, it must be ensured that data such as user's home directories, Web and FTP server contents or log files do not get lost or overwritten during a roll back. This is achieved by using Btrfs subvolumes on the root file system. Subvolumes can be excluded from snapshots. The default root file system setup on &productname; as proposed by &yast; during the installation contains the following subvolumes. They are excluded from snapshots for the reasons given below."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:220
#, no-c-format
msgid "Support for rollbacks"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:221
#, no-c-format
msgid "Rollbacks are only supported by &suse; if you do not remove any of the preconfigured subvolumes. You may, however, add subvolumes using the &yast; Partitioner."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:228
#, no-c-format
msgid "Mounting compressed Btrfs file systems"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:229
#, no-c-format
msgid "The Btrfs file system supports transparent compression. While enabled, Btrfs compresses file data when written and uncompresses file data when read."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:234
#, no-c-format
msgid "Use the <option>compress</option> or <option>compress-force</option> mount option and select the compression algorithm, <literal>zstd</literal> , <literal>lzo</literal> , or <literal>zlib</literal> (the default). zlib compression has a higher compression ratio while lzo is faster and takes less CPU load. The zstd algorithm offers a modern compromise, with performance close to lzo and compression ratios similar to zlib."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:242
#, no-c-format
msgid "For example:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:245
#, no-c-format
msgid "&prompt.root;mount -o compress=zstd /dev/sdx /mnt"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:246
#, no-c-format
msgid "In case you create a file, write to it, and the compressed result is greater or equal to the uncompressed size, Btrfs will skip compression for future write operations forever for this file. If you do not like this behavior, use the <option>compress-force</option> option. This can be useful for files that have some initial non-compressible data."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:253
#, no-c-format
msgid "Note, compression takes effect for new files only. Files that were written without compression are not compressed when the file system is mounted with the <option>compress</option> or <option>compress-force</option> option. Furthermore, files with the <option>nodatacow</option> attribute never get their extents compressed:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:260
#, no-c-format
msgid "&prompt.root;<command>chattr</command> +C <replaceable>FILE</replaceable>\n"
      "&prompt.root;<command>mount</command> -o nodatacow  /dev/sdx /mnt"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:262
#, no-c-format
msgid "In regard to encryption, this is independent from any compression. After you have written some data to this partition, print the details:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:266
#, no-c-format
msgid "&prompt.root;btrfs filesystem show /mnt\n"
      "btrfs filesystem show /mnt\n"
      "Label: 'Test-Btrfs'  uuid: 62f0c378-e93e-4aa1-9532-93c6b780749d\n"
      "        Total devices 1 FS bytes used 3.22MiB\n"
      "      devid    1 size 2.00GiB used 240.62MiB path /dev/sdb1"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:271
#, no-c-format
msgid "If you want this to be permanent, add the <option>compress</option> or <option>compress-force</option> option into the <filename>/etc/fstab</filename> configuration file. For example:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:276
#, no-c-format
msgid "UUID=1a2b3c4d /home btrfs subvol=@/home,<emphasis role=\"strong\">compress</emphasis> 0 0"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:279
#, no-c-format
msgid "Mounting subvolumes"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:280
#, no-c-format
msgid "A system rollback from a snapshot on &productname; is performed by booting from the snapshot first. This allows you to check the snapshot while running before doing the rollback. Being able to boot from snapshots is achieved by mounting the subvolumes (which would normally not be necessary)."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:287
#, no-c-format
msgid "In addition to the subvolumes listed in <xref linkend=\"sec-filesystems-major-btrfs-suse\"/> a volume named <literal>@</literal> exists. This is the default subvolume that will be mounted as the root partition ( <filename>/</filename> ). The other subvolumes will be mounted into this volume."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:294
#, no-c-format
msgid "When booting from a snapshot, not the <literal>@</literal> subvolume will be used, but rather the snapshot. The parts of the file system included in the snapshot will be mounted read-only as <filename>/</filename> . The other subvolumes will be mounted writable into the snapshot. This state is temporary by default: the previous configuration will be restored with the next reboot. To make it permanent, execute the <command>snapper rollback</command> command. This will make the snapshot that is currently booted the new <emphasis>default</emphasis> subvolume, which will be used after a reboot."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:307
#, no-c-format
msgid "Checking for free space"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:314
#, no-c-format
msgid "File system usage is usually checked by running the <command>df</command> command. On a Btrfs file system, the output of <command>df</command> can be misleading, because in addition to the space the raw data allocates, a Btrfs file system also allocates and uses space for metadata."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:320
#, no-c-format
msgid "Consequently a Btrfs file system may report being out of space even though it seems that plenty of space is still available. In that case, all space allocated for the metadata is used up. Use the following commands to check for used and available space on a Btrfs file system:"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:328
#, no-c-format
msgid "<command>btrfs filesystem show</command>"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:330
#, no-c-format
msgid "&prompt.sudo;btrfs filesystem show /\n"
      "Label: 'ROOT'  uuid: 52011c5e-5711-42d8-8c50-718a005ec4b3\n"
      "        Total devices 1 FS bytes used 10.02GiB\n"
      "        devid    1 size 20.02GiB used 13.78GiB path /dev/sda3"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:334
#, no-c-format
msgid "Shows the total size of the file system and its usage. If these two values in the last line match, all space on the file system has been allocated."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:342
#, no-c-format
msgid "<command>btrfs filesystem df</command>"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:344
#, no-c-format
msgid "&prompt.sudo;btrfs filesystem df /\n"
      "Data, single: total=13.00GiB, used=9.61GiB\n"
      "System, single: total=32.00MiB, used=16.00KiB\n"
      "Metadata, single: total=768.00MiB, used=421.36MiB\n"
      "GlobalReserve, single: total=144.00MiB, used=0.00B"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:349
#, no-c-format
msgid "Shows values for allocated ( <literal>total</literal> ) and used space of the file system. If the values for <literal>total</literal> and <literal>used</literal> for the metadata are almost equal, all space for metadata has been allocated."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:358
#, no-c-format
msgid "<command>btrfs filesystem usage</command>"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:360
#, no-c-format
msgid "&prompt.sudo;btrfs filesystem usage /\n"
      "Overall:\n"
      "    Device size:                  20.02GiB\n"
      "    Device allocated:             13.78GiB\n"
      "    Device unallocated:            6.24GiB\n"
      "    Device missing:                  0.00B\n"
      "    Used:                         10.02GiB\n"
      "    Free (estimated):              9.63GiB      (min: 9.63GiB)\n"
      "    Data ratio:                       1.00\n"
      "    Metadata ratio:                   1.00\n"
      "    Global reserve:              144.00MiB      (used: 0.00B)\n"
      "\n"
      "             Data     Metadata  System\n"
      "Id Path      single   single    single   Unallocated\n"
      "-- --------- -------- --------- -------- -----------\n"
      " 1 /dev/sda3 13.00GiB 768.00MiB 32.00MiB     6.24GiB\n"
      "-- --------- -------- --------- -------- -----------\n"
      "   Total     13.00GiB 768.00MiB 32.00MiB     6.24GiB\n"
      "   Used       9.61GiB 421.36MiB 16.00KiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:379
#, no-c-format
msgid "Shows data similar to that of the two previous commands combined."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:385
#, no-c-format
msgid "For more information refer to <command>man 8 btrfs-filesystem</command> and <link xlink:href=\"https://btrfs.wiki.kernel.org/index.php/FAQ\"/> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:393
#, no-c-format
msgid "Migration from ReiserFS and ext file systems to Btrfs"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:394
#, no-c-format
msgid "You can migrate data volumes from existing ReiserFS or Ext (Ext2, Ext3, or Ext4) to the Btrfs file system using the <command>btrfs-convert</command> tool. This allows you to do an in-place conversion of unmounted (offline) file systems, which may require a bootable install media with the <command>btrfs-convert</command> tool. The tool constructs a Btrfs file system within the free space of the original file system, directly linking to the data contained in it. There must be enough free space on the device to create the metadata or the conversion will fail. The original file system will be intact and no free space will be occupied by the Btrfs file system. The amount of space required is dependent on the content of the file system and can vary based on the number of file system objects (such as files, directories, extended attributes) contained in it. Since the data is directly referenced, the amount of data on the file system does not impact the space required for conversion, except for files that use tail packing and are larger than about 2 KiB in size."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:412
#, no-c-format
msgid "Root file system conversion not supported"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:413
#, no-c-format
msgid "Converting the root file system to Btrfs is not supported and not recommended. Automating such a conversion is not possible due to various steps that need to be tailored to your specific setup&mdash;the process requires a complex configuration to provide a correct rollback, <filename>/boot</filename> must be on the root file system, and the system must have specific subvolumes, etc. Either keep the existing file system or re-install the whole system from scratch."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:423
#, no-c-format
msgid "To convert the original file system to the Btrfs file system, run:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:426
#, no-c-format
msgid "&prompt.root;btrfs-convert /path/to/device"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:428
#, no-c-format
msgid "Check <filename>/etc/fstab</filename>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:429
#, no-c-format
msgid "After the conversion, you need to ensure that any references to the original file system in <filename>/etc/fstab</filename> have been adjusted to indicate that the device contains a Btrfs file system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:435
#, no-c-format
msgid "When converted, the contents of the Btrfs file system will reflect the contents of the source file system. The source file system will be preserved until you remove the related read-only image created at <filename><replaceable>fs_root</replaceable>/reiserfs_saved/image</filename> . The image file is effectively a 'snapshot' of the ReiserFS file system prior to conversion and will not be modified as the Btrfs file system is modified. To remove the image file, remove the <filename>reiserfs_saved</filename> subvolume:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:445
#, no-c-format
msgid "&prompt.root;btrfs subvolume delete <replaceable>fs_root</replaceable>/reiserfs_saved"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:446
#, no-c-format
msgid "To revert the file system back to the original one, use the following command:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:450
#, no-c-format
msgid "&prompt.root;btrfs-convert -r /path/to/device"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:452
#, no-c-format
msgid "Lost changes"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:453
#, no-c-format
msgid "Any changes you made to the file system while it was mounted as a Btrfs file system will be lost. A balance operation must not have been performed in the interim, or the file system will not be restored correctly."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:462
#, no-c-format
msgid "Btrfs administration"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:463
#, no-c-format
msgid "Btrfs is integrated in the &yast; Partitioner and &ay;. It is available during the installation to allow you to set up a solution for the root file system. You can use the &yast; Partitioner after the installation to view and manage Btrfs volumes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:469
#, no-c-format
msgid "Btrfs administration tools are provided in the <filename>btrfsprogs</filename> package. For information about using Btrfs commands, see the <command>man 8 btrfs</command> , <command>man 8 btrfsck</command> , and <command>man 8 mkfs.btrfs</command> commands. For information about Btrfs features, see the <citetitle>Btrfs wiki</citetitle> at <link xlink:href=\"http://btrfs.wiki.kernel.org\"/> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:480
#, no-c-format
msgid "Btrfs quota support for subvolumes"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:481
#, no-c-format
msgid "The Btrfs root file system subvolumes (for example, <filename>/var/log</filename> , <filename>/var/crash</filename> , or <filename>/var/cache</filename> ) can use all the available disk space during normal operation, and cause a system malfunction. To help avoid this situation, &productname; offers quota support for Btrfs subvolumes. If you set up the root file system from a &yast; proposal, you are ready to enable and set subvolume quotas."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:491
#, no-c-format
msgid "Setting Btrfs quotas using &yast;"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:492
#, no-c-format
msgid "To set a quota for a subvolume of the root file system by using &yast;, proceed as follows:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:498
#, no-c-format
msgid "Start &yast; and select <menuchoice><guimenu>System</guimenu><guimenu>Partitioner</guimenu></menuchoice> and confirm the warning with <guimenu>Yes</guimenu> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:505
#, no-c-format
msgid "In the left pane, click <guimenu>Btrfs</guimenu> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:510
#, no-c-format
msgid "In the main window, select the device for which you want to enable subvolume quotas and click <guimenu>Edit</guimenu> at the bottom."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:516
#, no-c-format
msgid "In the <guimenu>Edit Btrfs</guimenu> window, activate the <guimenu>Enable Subvolume Quotas</guimenu> check box and confirm with <guimenu>Next</guimenu> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:522
#, no-c-format
msgid "Enabling Btrfs quotas"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:534
#, no-c-format
msgid "From the list of existing subvolumes, click the subvolume whose size you intend to limit by quota and click <guimenu>Edit</guimenu> at the bottom."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:541
#, no-c-format
msgid "In the <guimenu>Edit subvolume of Btrfs</guimenu> window, activate <guimenu>Limit size</guimenu> and specify the maximum referenced size. Confirm with <guimenu>Accept</guimenu> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:547
#, no-c-format
msgid "Setting quota for a subvolume"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:557
#, no-c-format
msgid "The new size limit will be displayed next to the subvolume name:"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:561
#, no-c-format
msgid "List of subvolumes for a device"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:573
#, no-c-format
msgid "Apply changes with <guimenu>Next</guimenu> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:580
#, no-c-format
msgid "Setting Btrfs quotas on the command line"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:581
#, no-c-format
msgid "To set a quota for a subvolume of the root file system on the command line, proceed as follows:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:587
#, no-c-format
msgid "Enable quota support:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:590
#, no-c-format
msgid "&prompt.sudo;btrfs quota enable /"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:593
#, no-c-format
msgid "Get a list of subvolumes:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:596
#, no-c-format
msgid "&prompt.sudo;btrfs subvolume list /"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:597
#, no-c-format
msgid "Quotas can only be set for existing subvolumes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:602
#, no-c-format
msgid "Set a quota for one of the subvolumes that was listed in the previous step. A subvolume can either be identified by path (for example <filename>/var/tmp</filename> ) or by <literal>0/<replaceable>SUBVOLUME ID</replaceable></literal> (for example <literal>0/272</literal> ). The following example sets a quota of 5&nbsp;GB for <filename>/var/tmp</filename> ."
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:610
#, no-c-format
msgid "&prompt.sudo;btrfs qgroup limit 5G /var/tmp"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:611
#, no-c-format
msgid "The size can either be specified in bytes (5000000000), kilobytes (5000000K), megabytes (5000M), or gigabytes (5G). The resulting values in bytes slightly differ, since 1024 Bytes = 1 KiB, 1024 KiB = 1 MiB, etc."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:619
#, no-c-format
msgid "To list the existing quotas, use the following command. The column <literal>max_rfer</literal> shows the quota in bytes."
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:623
#, no-c-format
msgid "&prompt.sudo;btrfs qgroup show -r /"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:627
#, no-c-format
msgid "Nullifying a quota"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:628
#, no-c-format
msgid "In case you want to nullify an existing quota, set a quota size of <literal>none</literal> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:632
#, no-c-format
msgid "&prompt.sudo;btrfs qgroup limit none /var/tmp"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:633
#, no-c-format
msgid "To disable quota support for a partition and all its subvolumes, use <command>btrfs quota disable</command> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:637
#, no-c-format
msgid "&prompt.sudo;btrfs quota disable /"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:642
#, no-c-format
msgid "See the <command>man 8 btrfs-qgroup</command> and <command>man 8 btrfs-quota</command> for more details. The <citetitle>UseCases</citetitle> page on the Btrfs wiki ( <link xlink:href=\"https://btrfs.wiki.kernel.org/index.php/UseCases\"/> ) also provides more information."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:654
#, no-c-format
msgid "Swapping on Btrfs"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:656
#, no-c-format
msgid "Snapshots with swapping"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:657
#, no-c-format
msgid "You will not be able to create a snapshot if the source subvolume contains any enabled swap files."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:662
#, no-c-format
msgid "&slsa; supports swapping to a file on the Btrfs file system if the following criteria relating to the resulting swap file are fulfilled:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:668
#, no-c-format
msgid "The swap file must have the <option>NODATACOW</option> and <option>NODATASUM</option> mount options."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:674
#, no-c-format
msgid "The swap file can not be compressed&mdash;you can ensure this by setting the <option>NODATACOW</option> and <option>NODATASUM</option> mount options. Both options disable swap file compression."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:681
#, no-c-format
msgid "The swap file cannot be activated while exclusive operations are running&mdash;such as device resizing, adding, removing, or replacing, or when a balancing operation is running."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:688
#, no-c-format
msgid "The swap file cannot be sparse."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:693
#, no-c-format
msgid "The swap file can not be an inline file."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:698
#, no-c-format
msgid "The swap file must be on a <literal>single</literal> allocation profile file system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:707
#, no-c-format
msgid "Btrfs send/receive"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:708
#, no-c-format
msgid "Btrfs allows to make snapshots to capture the state of the file system. Snapper, for example, uses this feature to create snapshots before and after system changes, allowing a rollback. However, together with the send/receive feature, snapshots can also be used to create and maintain copies of a file system in a remote location. This feature can, for example, be used to do incremental backups."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:716
#, no-c-format
msgid "A <command>btrfs send</command> operation calculates the difference between two read-only snapshots from the same subvolume and sends it to a file or to STDOUT. A <command>btrfs receive</command> operation takes the result of the send command and applies it to a snapshot."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:723
#, no-c-format
msgid "Prerequisites"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:724
#, no-c-format
msgid "To use the send/receive feature, the following requirements need to be met:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:730
#, no-c-format
msgid "A Btrfs file system is required on the source side ( <literal>send</literal> ) and on the target side ( <literal>receive</literal> )."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:737
#, no-c-format
msgid "Btrfs send/receive operates on snapshots, therefore the respective data needs to reside in a Btrfs subvolume."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:743
#, no-c-format
msgid "Snapshots on the source side need to be read-only."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:748
#, no-c-format
msgid "&sle; 12 SP2 or better. Earlier versions of &sle; do not support send/receive."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:756
#, no-c-format
msgid "Incremental backups"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:757
#, no-c-format
msgid "The following procedure shows the basic usage of Btrfs send/receive using the example of creating incremental backups of <filename>/data</filename> (source side) in <filename>/backup/data</filename> (target side). <filename>/data</filename> needs to be a subvolume."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:764
#, no-c-format
msgid "Initial setup"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:766
#, no-c-format
msgid "Create the initial snapshot (called <literal>snapshot_0</literal> in this example) on the source side and make sure it is written to the disk:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:771
#, no-c-format
msgid "&prompt.sudo;btrfs subvolume snapshot -r /data /data/bkp_data\n"
      "sync"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:773
#, no-c-format
msgid "A new subvolume <filename>/data/bkp_data</filename> is created. It will be used as the basis for the next incremental backup and should be kept as a reference."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:780
#, no-c-format
msgid "Send the initial snapshot to the target side. Since this is the initial send/receive operation, the complete snapshot needs to be sent:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:784
#, no-c-format
msgid "&prompt.sudo;bash -c 'btrfs send /data/bkp_data | btrfs receive /backup'"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:785
#, no-c-format
msgid "A new subvolume <filename>/backup/bkp_data</filename> is created on the target side."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:791
#, no-c-format
msgid "When the initial setup has been finished, you can create incremental backups and send the differences between the current and previous snapshots to the target side. The procedure is always the same:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:798
#, no-c-format
msgid "Create a new snapshot on the source side."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:803
#, no-c-format
msgid "Send the differences to the target side."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:808
#, no-c-format
msgid "Optional: Rename and/or clean up snapshots on both sides."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:814
#, no-c-format
msgid "Performing an incremental backup"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:816
#, no-c-format
msgid "Create a new snapshot on the source side and make sure it is written to the disk. In the following example the snapshot is named bkp_data_ <replaceable>CURRENT_DATE</replaceable> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:821
#, no-c-format
msgid "&prompt.sudo;btrfs subvolume snapshot -r /data /data/bkp_data_$(date +%F)\n"
      "sync"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:823
#, no-c-format
msgid "A new subvolume, for example <filename>/data/bkp_data_2016-07-07</filename> , is created."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:829
#, no-c-format
msgid "Send the difference between the previous snapshot and the one you have created to the target side. This is achieved by specifying the previous snapshot with the option <option>-p <replaceable>SNAPSHOT</replaceable></option> ."
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:835
#, no-c-format
msgid "&prompt.sudo;bash -c 'btrfs send -p /data/bkp_data /data/bkp_data_2016-07-07 \\\n"
      "| btrfs receive /backup'"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:837
#, no-c-format
msgid "A new subvolume <filename>/backup/bkp_data_2016-07-07</filename> is created."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:843
#, no-c-format
msgid "As a result four snapshots, two on each side, exist:"
msgstr ""

#. Tag: member
#: storage_filesystems.xml:846
#, no-c-format
msgid "<filename>/data/bkp_data</filename>"
msgstr ""

#. Tag: member
#: storage_filesystems.xml:846
#, no-c-format
msgid "<filename>/data/bkp_data_2016-07-07</filename>"
msgstr ""

#. Tag: member
#: storage_filesystems.xml:846
#, no-c-format
msgid "<filename>/backup/bkp_data</filename>"
msgstr ""

#. Tag: member
#: storage_filesystems.xml:846
#, no-c-format
msgid "<filename>/backup/bkp_data_2016-07-07</filename>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:848
#, no-c-format
msgid "Now you have three options for how to proceed:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:853
#, no-c-format
msgid "Keep all snapshots on both sides. With this option you can roll back to any snapshot on both sides while having all data duplicated at the same time. No further action is required. When doing the next incremental backup, keep in mind to use the next-to-last snapshot as parent for the send operation."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:862
#, no-c-format
msgid "Only keep the last snapshot on the source side and all snapshots on the target side. Also allows to roll back to any snapshot on both sides&mdash;to do a rollback to a specific snapshot on the source side, perform a send/receive operation of a complete snapshot from the target side to the source side. Do a delete/move operation on the source side."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:872
#, no-c-format
msgid "Only keep the last snapshot on both sides. This way you have a backup on the target side that represents the state of the last snapshot made on the source side. It is not possible to roll back to other snapshots. Do a delete/move operation on the source and the target side."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:883
#, no-c-format
msgid "To only keep the last snapshot on the source side, perform the following commands:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:887
#, no-c-format
msgid "&prompt.sudo;btrfs subvolume delete /data/bkp_data\n"
      "&prompt.sudo;mv /data/bkp_data_2016-07-07 /data/bkp_data"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:889
#, no-c-format
msgid "The first command will delete the previous snapshot, the second command renames the current snapshot to <filename>/data/bkp_data</filename> . This ensures that the last snapshot that was backed up is always named <filename>/data/bkp_data</filename> . As a consequence, you can also always use this subvolume name as a parent for the incremental send operation."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:900
#, no-c-format
msgid "To only keep the last snapshot on the target side, perform the following commands:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:904
#, no-c-format
msgid "&prompt.sudo;btrfs subvolume delete /backup/bkp_data\n"
      "&prompt.sudo;mv /backup/bkp_data_2016-07-07 /backup/bkp_data"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:906
#, no-c-format
msgid "The first command will delete the previous backup snapshot, the second command renames the current backup snapshot to <filename>/backup/bkp_data</filename> . This ensures that the latest backup snapshot is always named <filename>/backup/bkp_data</filename> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:917
#, no-c-format
msgid "Sending to a remote target side"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:918
#, no-c-format
msgid "To send the snapshots to a remote machine, use SSH:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:921
#, no-c-format
msgid "&prompt.user;btrfs send /data/bkp_data | ssh root@&wsIname; 'btrfs receive /backup'"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:927
#, no-c-format
msgid "Data deduplication support"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:928
#, no-c-format
msgid "Btrfs supports data deduplication by replacing identical blocks in the file system with logical links to a single copy of the block in a common storage location. &productname; provides the tool <command>duperemove</command> for scanning the file system for identical blocks. When used on a Btrfs file system, it can also be used to deduplicate these blocks and thus save space on the file system. <command>duperemove</command> is not installed by default. To make it available, install the package <package>duperemove</package> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:939
#, no-c-format
msgid "Deduplicating large datasets"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:940
#, no-c-format
msgid "If you intend to deduplicate a large amount of files, use the <option>--hashfile</option> option:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:944
#, no-c-format
msgid "&prompt.sudo;duperemove <option>--hashfile <replaceable>HASH_FILE</replaceable></option> file1 file2 file3"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:945
#, no-c-format
msgid "The <option>--hashfile</option> option stores hashes of all specified files into the <replaceable>HASH_FILE</replaceable> instead of RAM and prevents it from being exhausted. <replaceable>HASH_FILE</replaceable> is reusable&mdash;you can deduplicate changes to large datasets very quickly after an initial run that generated a baseline hash file."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:953
#, no-c-format
msgid "<command>duperemove</command> can either operate on a list of files or recursively scan a directory:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:957
#, no-c-format
msgid "&prompt.sudo;duperemove <replaceable>OPTIONS</replaceable> file1 file2 file3\n"
      "&prompt.sudo;duperemove -r <replaceable>OPTIONS</replaceable> directory"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:959
#, no-c-format
msgid "It operates in two modes: read-only and de-duping. When run in read-only mode (that is without the <option>-d</option> switch), it scans the given files or directories for duplicated blocks and prints them. This works on any file system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:965
#, no-c-format
msgid "Running <command>duperemove</command> in de-duping mode is only supported on Btrfs file systems. After having scanned the given files or directories, the duplicated blocks will be submitted for deduplication."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:970
#, no-c-format
msgid "For more information see <command>man 8 duperemove</command> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:976
#, no-c-format
msgid "Deleting subvolumes from the root file system"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:977
#, no-c-format
msgid "You may need to delete one of the default Btrfs subvolumes from the root file system for specific purposes. One of them is transforming a subvolume&mdash;for example <filename>@/home</filename> or <filename>@/srv</filename> &mdash;into a file system on a separate device. The following procedure illustrates how to delete a Btrfs subvolume:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:986
#, no-c-format
msgid "Identify the subvolume you need to delete (for example <filename>@/opt</filename> ). Notice that the root path has always subvolume ID '5'."
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:991
#, no-c-format
msgid "\n"
      "&prompt.user;&sudo; btrfs subvolume list /\n"
      "ID 256 gen 30 top level 5 path @\n"
      "ID 258 gen 887 top level 256 path @/var\n"
      "ID 259 gen 872 top level 256 path @/usr/local\n"
      "ID 260 gen 886 top level 256 path @/tmp\n"
      "ID 261 gen 60 top level 256 path @/srv\n"
      "ID 262 gen 886 top level 256 path @/root\n"
      "ID 263 gen 39 top level 256 path @/opt\n"
      "[...]\n"
      ""
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1004
#, no-c-format
msgid "Find the device name that hosts the root partition:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1007
#, no-c-format
msgid "\n"
      "&prompt.user;&sudo; btrfs device usage /\n"
      "/dev/sda1, ID: 1\n"
      "  Device size:            23.00GiB\n"
      "  Device slack:              0.00B\n"
      "  Data,single:             7.01GiB\n"
      "  Metadata,DUP:            1.00GiB\n"
      "  System,DUP:             16.00MiB\n"
      "  Unallocated:            14.98GiB\n"
      ""
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1019
#, no-c-format
msgid "Mount the root file system (subvolume with ID 5) on a separate mount point (for example <filename>/mnt</filename> ):"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1023
#, no-c-format
msgid "&prompt.user;&sudo; mount -o subvolid=5 /dev/sda1 /mnt"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1026
#, no-c-format
msgid "Delete the <filename>@/opt</filename> partition from the mounted root file system:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1030
#, no-c-format
msgid "&prompt.user;&sudo; btrfs subvolume delete /mnt/@/opt"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1033
#, no-c-format
msgid "Unmount the previously mounted root file system:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1036
#, no-c-format
msgid "&prompt.user;&sudo; umount /mnt"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1044
#, no-c-format
msgid "Originally intended as the file system for their IRIX OS, SGI started XFS development in the early 1990s. The idea behind XFS was to create a high-performance 64-bit journaling file system to meet extreme computing challenges. XFS is very good at manipulating large files and performs well on high-end hardware. <!-- However, even XFS has a drawback. Like ReiserFS, XFS takes great care of metadata integrity, but less care of data integrity. --> XFS is the default file system for data partitions in &productname;."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1056
#, no-c-format
msgid "A quick review of XFSâ€™s key features explains why it might prove to be a strong competitor for other journaling file systems in high-end computing."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1063
#, no-c-format
msgid "High scalability"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1065
#, no-c-format
msgid "XFS offers high scalability by using allocation groups"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1068
#, no-c-format
msgid "At the creation time of an XFS file system, the block device underlying the file system is divided into eight or more linear regions of equal size. Those are called <emphasis>allocation groups</emphasis> . Each allocation group manages its own inodes and free disk space. Practically, allocation groups can be seen as file systems in a file system. Because allocation groups are rather independent of each other, more than one of them can be addressed by the kernel simultaneously. This feature is the key to XFSâ€™s great scalability. Naturally, the concept of independent allocation groups suits the needs of multiprocessor systems."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1082
#, no-c-format
msgid "High performance"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1084
#, no-c-format
msgid "XFS offers high performance through efficient management of disk space"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1087
#, no-c-format
msgid "Free space and inodes are handled by B <superscript>+</superscript> trees inside the allocation groups. The use of B <superscript>+</superscript> trees greatly contributes to XFSâ€™s performance and scalability. XFS uses <emphasis>delayed allocation</emphasis> , which handles allocation by breaking the process into two pieces. A pending transaction is stored in RAM and the appropriate amount of space is reserved. XFS still does not decide where exactly (in file system blocks) the data should be stored. This decision is delayed until the last possible moment. Some short-lived temporary data might never make its way to disk, because it is obsolete by the time XFS decides where to save it. In this way, XFS increases write performance and reduces file system fragmentation. Because delayed allocation results in less frequent write events than in other file systems, it is likely that data loss after a crash during a write is more severe."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1106
#, no-c-format
msgid "Preallocation to avoid file system fragmentation"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1108
#, no-c-format
msgid "Before writing the data to the file system, XFS <emphasis>reserves</emphasis> (preallocates) the free space needed for a file. Thus, file system fragmentation is greatly reduced. Performance is increased because the contents of a file are not distributed all over the file system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1120
#, no-c-format
msgid "XFS formats"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1121
#, no-c-format
msgid "&productname; supports the <quote>on-disk format</quote> (v5) of the XFS file system. The main advantages of this format are automatic checksums of all XFS metadata, file type support, and support for a larger number of access control lists for a file."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1127
#, no-c-format
msgid "Note that this format is not supported by &sle; kernels older than version 3.12, by <literal>xfsprogs</literal> older than version 3.2.0, and &grub; versions released before &sle; 12."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1133
#, no-c-format
msgid "V4 is deprecated"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1134
#, no-c-format
msgid "XFS is deprecating file systems with the V4 format. This file system format was created by the command:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1138
#, no-c-format
msgid "mkfs.xfs -m crc=0 <replaceable>DEVICE</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1139
#, no-c-format
msgid "The format was used in &slea; 11 and older releases and currently it creates a warning message by <command>dmesg</command> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1143
#, no-c-format
msgid "Deprecated V4 format (crc=0) will not be supported after September 2030"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1144
#, no-c-format
msgid "If you see the message above in the output of the <command>dmesg</command> command, it is recommended that you update your file system to the V5 format:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1151
#, no-c-format
msgid "Back up your data to another device."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1156
#, no-c-format
msgid "Create the file system on the device."
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1159
#, no-c-format
msgid "mkfs.xfs -m crc=1 <replaceable>DEVICE</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1162
#, no-c-format
msgid "Restore the data from the backup on the updated device."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1171
#, no-c-format
msgid "Ext2"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1173
#, no-c-format
msgid "The origins of Ext2 go back to the early days of Linux history. Its predecessor, the Extended File System, was implemented in April 1992 and integrated in Linux 0.96c. The Extended File System underwent several modifications and, as Ext2, became the most popular Linux file system for years. With the creation of journaling file systems and their short recovery times, Ext2 became less important."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1182
#, no-c-format
msgid "A brief summary of Ext2â€™s strengths might help understand why it was&mdash;and in some areas still is&mdash;the favorite Linux file system of many Linux users."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1190
#, no-c-format
msgid "Solidity and speed"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1192
#, no-c-format
msgid "Being an <quote>old-timer</quote> , Ext2 underwent many improvements and was heavily tested. This might be the reason people often refer to it as rock-solid. After a system outage when the file system could not be cleanly unmounted, e2fsck starts to analyze the file system data. Metadata is brought into a consistent state and pending files or data blocks are written to a designated directory (called <filename>lost+found</filename> ). In contrast to journaling file systems, e2fsck analyzes the entire file system and not only the recently modified bits of metadata. This takes significantly longer than checking the log data of a journaling file system. Depending on file system size, this procedure can take half an hour or more. Therefore, it is not desirable to choose Ext2 for any server that needs high availability. However, because Ext2 does not maintain a journal and uses less memory, it is sometimes faster than other file systems."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1211
#, no-c-format
msgid "Easy upgradability"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1213
#, no-c-format
msgid "Because Ext3 is based on the Ext2 code and shares its on-disk format and its metadata format, upgrades from Ext2 to Ext3 are very easy."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1224
#, no-c-format
msgid "Ext3 was designed by Stephen Tweedie. Unlike all other next-generation file systems, Ext3 does not follow a completely new design principle. It is based on Ext2. These two file systems are very closely related to each other. An Ext3 file system can be easily built on top of an Ext2 file system. The most important difference between Ext2 and Ext3 is that Ext3 supports journaling. In summary, Ext3 has three major advantages to offer:"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1234
#, no-c-format
msgid "Easy and highly reliable upgrades from ext2"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1235
#, no-c-format
msgid "The code for Ext2 is the strong foundation on which Ext3 could become a highly acclaimed next-generation file system. Its reliability and solidity are elegantly combined in Ext3 with the advantages of a journaling file system. Unlike transitions to other journaling file systems, such as XFS, which can be quite tedious (making backups of the entire file system and re-creating it from scratch), a transition to Ext3 is a matter of minutes. It is also very safe, because re-creating an entire file system from scratch might not work flawlessly. Considering the number of existing Ext2 systems that await an upgrade to a journaling file system, you can easily see why Ext3 might be of some importance to many system administrators. Downgrading from Ext3 to Ext2 is as easy as the upgrade. Perform a clean unmount of the Ext3 file system and remount it as an Ext2 file system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1279
#, no-c-format
msgid "Converting an ext2 file system into ext3"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1280
#, no-c-format
msgid "To convert an Ext2 file system to Ext3:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1285
#, no-c-format
msgid "Create an Ext3 journal by running <command>tune2fs -j</command> as the &rootuser; user."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1289
#, no-c-format
msgid "This creates an Ext3 journal with the default parameters."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1292
#, no-c-format
msgid "To specify how large the journal should be and on which device it should reside, run <command>tune2fs</command> <option>-J</option> instead together with the desired journal options <option>size=</option> and <option>device=</option> . More information about the <command>tune2fs</command> program is available in the <command>tune2fs</command> man page."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1302
#, no-c-format
msgid "Edit the file <filename>/etc/fstab</filename> as the &rootuser; user to change the file system type specified for the corresponding partition from <literal>ext2</literal> to <literal>ext3</literal> , then save the changes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1308
#, no-c-format
msgid "This ensures that the Ext3 file system is recognized as such. The change takes effect after the next reboot."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1314
#, no-c-format
msgid "To boot a root file system that is set up as an Ext3 partition, add the modules <literal>ext3</literal> and <literal>jbd</literal> in the <filename>initrd</filename> . Do so by"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1321
#, no-c-format
msgid "opening or creating <filename>/etc/dracut.conf.d/filesystem.conf</filename> and adding the following line (mind the leading blank space):"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1326
#, no-c-format
msgid "force_drivers+=\" ext3 jbd\""
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1329
#, no-c-format
msgid "and running the <command>dracut</command> <option>-f</option> command."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1336
#, no-c-format
msgid "Reboot the system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1557
#, no-c-format
msgid "In 2006, Ext4 started as a fork from Ext3. It is the latest file system in the extended file system version. Ext4 was originally designed to increase storage size by supporting volumes with a size of up to 1 exbibyte, files with a size of up to 16 tebibytes and an unlimited number of subdirectories. Ext4 uses extents, instead of the traditional direct and indirect block pointers, to map the file contents. Usage of extents improves both storage and retrieval of data from disks."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1567
#, no-c-format
msgid "Ext4 also introduces several performance enhancements such as delayed block allocation and a much faster file system checking routine. Ext4 is also more reliable by supporting journal checksums and by providing time stamps measured in nanoseconds. Ext4 is fully backward compatible to Ext2 and Ext3&mdash;both file systems can be mounted as Ext4."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1576
#, no-c-format
msgid "Ext3 functionality on Ext4"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1577
#, no-c-format
msgid "The Ext3 functionality is fully supported by the Ext4 driver in the Ext4 kernel module."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1584
#, no-c-format
msgid "Reliability and performance"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1585
#, no-c-format
msgid "Some other journaling file systems follow the <quote>metadata-only</quote> journaling approach. This means your metadata is always kept in a consistent state, but this cannot be automatically guaranteed for the file system data itself. Ext4 is designed to take care of both metadata and data. The degree of <quote>care</quote> can be customized. Mounting Ext4 in the <option>data=journal</option> mode offers maximum security (data integrity), but can slow down the system because both metadata and data are journaled. Another approach is to use the <option>data=ordered</option> mode, which ensures both data and metadata integrity, but uses journaling only for metadata. The file system driver collects all data blocks that correspond to one metadata update. These data blocks are written to disk before the metadata is updated. As a result, consistency is achieved for metadata and data without sacrificing performance. A third mount option to use is <option>data=writeback</option> , which allows data to be written to the main file system after its metadata has been committed to the journal. This option is often considered the best in performance. It can, however, allow old data to reappear in files after crash and recovery while internal file system integrity is maintained. Ext4 uses the <option>data=ordered</option> option as the default."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1609
#, no-c-format
msgid "Ext4 file system inode size and number of inodes"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1610
#, no-c-format
msgid "An inode stores information about the file and its block location in the file system. To allow space in the inode for extended attributes and ACLs, the default inode size was increased to 256 bytes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1615
#, no-c-format
msgid "When you create a new Ext4 file system, the space in the inode table is preallocated for the total number of inodes that can be created. The bytes-per-inode ratio and the size of the file system determine how many inodes are possible. When the file system is made, an inode is created for every bytes-per-inode bytes of space:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1622
#, no-c-format
msgid "number of inodes = total size of the file system divided by the number of bytes per inode"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1623
#, no-c-format
msgid "The number of inodes controls the number of files you can have in the file system: one inode for each file."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1628
#, no-c-format
msgid "Changing the inode size of an existing Ext4 file system not possible"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1629
#, no-c-format
msgid "After the inodes are allocated, you cannot change the settings for the inode size or bytes-per-inode ratio. No new inodes are possible without re-creating the file system with different settings, or unless the file system gets extended. When you exceed the maximum number of inodes, no new files can be created on the file system until some files are deleted."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1637
#, no-c-format
msgid "When you make a new Ext4 file system, you can specify the inode size and bytes-per-inode ratio to control inode space usage and the number of files possible on the file system. If the blocks size, inode size, and bytes-per-inode ratio values are not specified, the default values in the <filename>/etc/mked2fs.conf</filename> file are applied. For information, see the <filename>mke2fs.conf(5)</filename> man page."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1645
#, no-c-format
msgid "Use the following guidelines:"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1651
#, no-c-format
msgid "Inode size:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1652
#, no-c-format
msgid "The default inode size is 256 bytes. Specify a value in bytes that is a power of 2 and equal to 128 or larger in bytes and up to the block size, such as 128, 256, 512, and so on. Use 128 bytes only if you do not use extended attributes or ACLs on your Ext4 file systems."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1662
#, no-c-format
msgid "Bytes-per-inode ratio:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1663
#, no-c-format
msgid "The default bytes-per-inode ratio is 16384 bytes. Valid bytes-per-inode ratio values must be a power of 2 equal to 1024 or greater in bytes, such as 1024, 2048, 4096, 8192, 16384, 32768, and so on. This value should not be smaller than the block size of the file system, because the block size is the smallest chunk of space used to store data. The default block size for the Ext4 file system is 4 KiB."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1672
#, no-c-format
msgid "In addition, consider the number of files and the size of files you need to store. For example, if your file system will have many small files, you can specify a smaller bytes-per-inode ratio, which increases the number of inodes. If your file system will have very large files, you can specify a larger bytes-per-inode ratio, which reduces the number of possible inodes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1680
#, no-c-format
msgid "Generally, it is better to have too many inodes than to run out of them. If you have too few inodes and very small files, you could reach the maximum number of files on a disk that is practically empty. If you have too many inodes and very large files, you might have free space reported but be unable to use it because you cannot create new files in space reserved for inodes."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1690
#, no-c-format
msgid "Use any of the following methods to set the inode size and bytes-per-inode ratio:"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1697
#, no-c-format
msgid "Modifying the default settings for all new Ext4 file systems:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1698
#, no-c-format
msgid "In a text editor, modify the <literal>defaults</literal> section of the <filename>/etc/mke2fs.conf</filename> file to set the <literal>inode_size</literal> and <literal>inode_ratio</literal> to the desired default values. The values apply to all new Ext4 file systems. For example:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1706
#, no-c-format
msgid "blocksize = 4096\n"
      "inode_size = 128\n"
      "inode_ratio = 8192"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1712
#, no-c-format
msgid "At the command line:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1713
#, no-c-format
msgid "Pass the inode size ( <literal>-I 128</literal> ) and the bytes-per-inode ratio ( <literal>-i 8192</literal> ) to the <command>mkfs.ext4(8)</command> command or the <command>mke2fs(8)</command> command when you create a new Ext4 file system. For example, use either of the following commands:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1721
#, no-c-format
msgid "&prompt.sudo;mkfs.ext4 -b 4096 -i 8092 -I 128 /dev/sda2\n"
      "&prompt.sudo;mke2fs -t ext4 -b 4096 -i 8192 -I 128 /dev/sda2"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1726
#, no-c-format
msgid "During installation with &yast;:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1727
#, no-c-format
msgid "Pass the inode size and bytes-per-inode ratio values when you create a new Ext4 file system during the installation. In the <guimenu>Expert Partitioner</guimenu> , select the partition, click <guimenu>Edit</guimenu> . Under <guimenu>Formatting Options</guimenu> , select <guimenu>Format device</guimenu> <guimenu>Ext4</guimenu> , then click <guimenu>Options</guimenu> . In the <guimenu>Format options</guimenu> dialog, select the desired values from the <guimenu>Block Size in Bytes</guimenu> , <guimenu>Bytes-per-inode</guimenu> , and <guimenu>Inode Size</guimenu> drop-down box."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1740
#, no-c-format
msgid "For example, select 4096 for the <guimenu>Block Size in Bytes</guimenu> drop-down box, select 8192 from the <guimenu>Bytes per inode</guimenu> drop-down box, select 128 from the <guimenu>Inode Size</guimenu> drop-down box, then click <guimenu>OK</guimenu> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1761
#, no-c-format
msgid "Upgrading to Ext4"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1763
#, no-c-format
msgid "Backup of data"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1764
#, no-c-format
msgid "Back up all data on the file system before performing any update of your file system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1770
#, no-c-format
msgid "Upgrading to ext4"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1772
#, no-c-format
msgid "To upgrade from Ext2 or Ext3, you must enable the following:"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1776
#, no-c-format
msgid "Features required by Ext4"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1778
#, no-c-format
msgid "extents"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1780
#, no-c-format
msgid "contiguous blocks on the hard disk that are used to keep files close together and prevent fragmentation"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1787
#, no-c-format
msgid "unint_bg"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1789
#, no-c-format
msgid "lazy inode table initialization"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1795
#, no-c-format
msgid "dir_index"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1797
#, no-c-format
msgid "hashed b-tree lookups for large directories"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:1803
#, no-c-format
msgid "on Ext2: <literal>as_journal</literal>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1805
#, no-c-format
msgid "enable journaling on your Ext2 file system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1811
#, no-c-format
msgid "To enable the features, run:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1816
#, no-c-format
msgid "on Ext3:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1819
#, no-c-format
msgid "&prompt.root;tune2fs -O extents,uninit_bg,dir_index <replaceable>DEVICE_NAME</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1822
#, no-c-format
msgid "on Ext2:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1825
#, no-c-format
msgid "&prompt.root;tune2fs -O extents,uninit_bg,dir_index,has_journal <replaceable>DEVICE_NAME</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1830
#, no-c-format
msgid "As &rootuser; edit the <filename>/etc/fstab</filename> file: change the <literal>ext3</literal> or <literal>ext2</literal> record to <literal>ext4</literal> . The change takes effect after the next reboot."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1837
#, no-c-format
msgid "To boot a file system that is set up on an ext4 partition, add the modules: <literal>ext4</literal> and <literal>jbd</literal> in the <literal>initramfs</literal> . Open or create <filename>/etc/dracut.conf.d/filesystem.conf</filename> and add the following line:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1844
#, no-c-format
msgid "force_drivers+=\" ext4 jbd\""
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1845
#, no-c-format
msgid "You need to overwrite the existing dracut <filename>initramfs</filename> by running:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:1849
#, no-c-format
msgid "dracut -f"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1852
#, no-c-format
msgid "Reboot your system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1860
#, no-c-format
msgid "ReiserFS"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1862
#, no-c-format
msgid "ReiserFS support was completely removed with &productname; 15. To migrate your existing partitions to Btrfs, refer to <xref linkend=\"sec-filesystems-major-btrfs-migrate\"/> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1870
#, no-c-format
msgid "OpenZFS and ZFS"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1872
#, no-c-format
msgid "Neither the OpenZFS nor ZFS file systems are supported by&suse;. Although ZFS was originally released by Sun under an open sourcelicense, the current Oracle Solaris ZFS is now closed source, andtherefore cannot be used by &suse;. OpenZFS (based on the original ZFS)is under the CDDL license that is incompatible with the GPL licenseand therefore cannot be included in our kernels. However, Btrfsprovides an excellent alternative to OpenZFS with a similar designphilosophy and is fully supported by &suse;."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1884
#, no-c-format
msgid "Other supported file systems"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1886
#, no-c-format
msgid "<xref linkend=\"tab-filesystems-other\" xrefstyle=\"TableXRef\"/> summarizes some other file systems supported by Linux. They are supported mainly to ensure compatibility and interchange of data with different kinds of media or foreign operating systems."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:1894
#, no-c-format
msgid "File system types in Linux"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1901
#, no-c-format
msgid "File System Type"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1906
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1941
#, no-c-format
msgid "<systemitem>iso9660</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1946
#, no-c-format
msgid "Standard file system on CD-ROMs."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1967
#, no-c-format
msgid "<systemitem>msdos</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1972
#, no-c-format
msgid "<filename>fat</filename> , the file system originally used by DOS, is today used by various operating systems."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1980
#, no-c-format
msgid "<systemitem>nfs</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1985
#, no-c-format
msgid "Network File System: Here, data can be stored on any machine in a network and access might be granted via a network."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1993
#, no-c-format
msgid "<systemitem>ntfs</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:1998
#, no-c-format
msgid "Windows&nbsp;NT file system; read-only."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2005
#, no-c-format
msgid "<systemitem>exfat</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2010
#, no-c-format
msgid "File system optimized for use with flash memory, such as USB flash drives and SD cards."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2018
#, no-c-format
msgid "<systemitem>smbfs</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2023
#, no-c-format
msgid "Server Message Block is used by products such as Windows to enable file access over a network."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2031
#, no-c-format
msgid "<systemitem>ufs</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2036
#, no-c-format
msgid "Used by BSD, SunOS, and NextStep. Only supported in read-only mode."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2043
#, no-c-format
msgid "<systemitem>umsdos</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2048
#, no-c-format
msgid "Unix on MS-DOS: Applied on top of a standard <filename>fat</filename> file system, achieves Unix functionality (permissions, links, long file names) by creating special files."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2057
#, no-c-format
msgid "<systemitem>vfat</systemitem>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2062
#, no-c-format
msgid "Virtual FAT: Extension of the <literal>fat</literal> file system (supports long file names)."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2073
#, no-c-format
msgid "Blocked file systems"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2075
#, no-c-format
msgid "Due to security reasons, some file systems have been blocked from automatic mounting. These file systems are usually not maintained anymore and are not in common use. However, the kernel module for this file system can be loaded, because the in-kernel API is still compatible. A combination of user-mountable file systems and the automatic mounting of file systems on removable devices could result in the situation where unprivileged users might trigger the automatic loading of kernel modules, and the removable devices could store potentially malicious data."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2086
#, no-c-format
msgid "To get a list of file systems that are not allowed to be mounted automatically, run the following command:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2091
#, no-c-format
msgid "&prompt.sudo;rpm -ql suse-module-tools  | sed -nE 's/.*blacklist_fs-(.*)\\.conf/\\1/p'"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2093
#, no-c-format
msgid "If you try to mount a device with a blocked file system using the <command>mount</command> command, the command outputs an error message, for example:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2099
#, no-c-format
msgid "mount: /mnt/mx: unknown filesystem type 'minix' (hint: possibly blacklisted, see mount(8))."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2101
#, no-c-format
msgid "To enable the mounting of the file system, you need to remove the particular file system from the blocklist. Each blocked file system has its own configuration file, for example, for <systemitem>efs</systemitem> it is <filename>/lib/modules.d/60-blacklist_fs-efs.conf</filename> . However, do not edit these files, as they are overwritten whenever the package <literal>suse-module-tools</literal> is updated. To allow automatic mounting of the blocked file system, you have the following options:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2113
#, no-c-format
msgid "Create a symbolic link to <filename>/dev/null</filename> , for example, for the <emphasis>efs</emphasis> file system:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2117
#, no-c-format
msgid "&prompt.sudo;ln -s /dev/null /etc/modules.d/60-blacklist_fs-efs.conf"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2120
#, no-c-format
msgid "Copy the configuration file to <filename>/etc/modprobe.d</filename> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2123
#, no-c-format
msgid "&prompt.sudo;cp /lib/modules.d/60-blacklist_fs-efs.conf /etc/modprobe.d/60-blacklist_fs-efs.conf"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2124
#, no-c-format
msgid "And comment the following statement in the configuration file:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2127
#, no-c-format
msgid "# blacklist omfs"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2131
#, no-c-format
msgid "Even though a file system cannot be mounted automatically, you can load the corresponding kernel module for the file system directly using <command>modprobe</command> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2137
#, no-c-format
msgid "&prompt.sudo;modprobe <replaceable>FILESYSTEM</replaceable>\n"
      ""
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2140
#, no-c-format
msgid "For example, for the <systemitem>cramfs</systemitem> file system, the output looks as follows:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2145
#, no-c-format
msgid "unblacklist: loading cramfs file system module\n"
      "unblacklist: Do you want to un-blacklist cramfs permanently (&lt;y&gt;es/&lt;n&gt;o/n&lt;e&gt;ver)? y\n"
      "unblacklist: cramfs un-blacklisted by creating /etc/modprobe.d/60-blacklist_fs-cramfs.conf"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2149
#, no-c-format
msgid "If you select <emphasis>yes</emphasis> , the <command>modprobe</command> command calls a script that creates a symbolic link from the configuration file of the provided file system to <filename>/dev/null</filename> . Thus, the file system is removed from the blocklist."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2157
#, no-c-format
msgid "Large file support in Linux"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2159
#, no-c-format
msgid "Originally, Linux supported a maximum file size of 2&nbsp;GiB (2 <superscript>31</superscript> bytes). Unless a file system comes with large file support, the maximum file size on a 32-bit system is 2 GiB."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2165
#, no-c-format
msgid "Currently, all our standard file systems have LFS (large file support), which gives a maximum file size of 2 <superscript>63</superscript> bytes in theory. <xref linkend=\"tab-filesystems-maxsize\" xrefstyle=\"TableXRef\"/> offers an overview of the current on-disk format limitations of Linux files and file systems. The numbers in the table assume that the file systems are using 4 KiB block size, which is a common standard. When using different block sizes, the results are different. The maximum file sizes in <xref linkend=\"tab-filesystems-maxsize\" xrefstyle=\"TableXRef\"/> can be larger than the file system's actual size when using sparse blocks."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2178
#, no-c-format
msgid "Binary multiples"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2179
#, no-c-format
msgid "In this document: 1024 Bytes = 1 KiB; 1024 KiB = 1 MiB; 1024 MiB = 1 GiB; 1024 GiB = 1 TiB; 1024 TiB = 1 PiB; 1024 PiB = 1 EiB (see also <link xlink:href=\"http://physics.nist.gov/cuu/Units/binary.html\"><citetitle>NIST: Prefixes for Binary Multiples</citetitle></link> ."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2188
#, no-c-format
msgid "Maximum sizes of files and file systems (on-disk format, 4 KiB block size)"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2196
#, no-c-format
msgid "File System (4 KiB Block Size)"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2201
#, no-c-format
msgid "Maximum File System Size"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2206
#, no-c-format
msgid "Maximum File Size"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2215
#, no-c-format
msgid "Btrfs"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2232
#, no-c-format
msgid "Ext3"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2242
#, no-c-format
msgid "2 TiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2249
#, no-c-format
msgid "Ext4"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2266
#, no-c-format
msgid "OCFS2 (a cluster-aware file system available in the High Availability Extension)"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2272
#, no-c-format
msgid "16 TiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2277
#, no-c-format
msgid "1 EiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2284
#, no-c-format
msgid "XFS"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2289
#, no-c-format
msgid "16 EiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2301
#, no-c-format
msgid "NFSv2 (client side)"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2311
#, no-c-format
msgid "2 GiB"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2318
#, no-c-format
msgid "NFSv3/NFSv4 (client side)"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2328
#, no-c-format
msgid "8 EiB"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2338
#, no-c-format
msgid "Limitations"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2339
#, no-c-format
msgid "<xref linkend=\"tab-filesystems-maxsize\" xrefstyle=\"TableXRef\"/> describes the limitations regarding the on-disk format. The Linux kernel imposes its own limits on the size of files and file systems handled by it. These are as follows:"
msgstr ""

#. Tag: term
#: storage_filesystems.xml:2347
#, no-c-format
msgid "File size"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2349
#, no-c-format
msgid "On 32-bit systems, files cannot exceed 2 TiB (2 <superscript>41</superscript> bytes)."
msgstr ""

#. Tag: term
#: storage_filesystems.xml:2356
#, no-c-format
msgid "File system size"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2358
#, no-c-format
msgid "File systems can be up to 2 <superscript>73</superscript> bytes in size. However, this limit is still out of reach for the currently available hardware."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2369
#, no-c-format
msgid "Linux kernel storage limitations"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2371
#, no-c-format
msgid "<xref linkend=\"tab-filesystems-stor-limits\" xrefstyle=\"TableXRef\"/> summarizes the kernel limits for storage associated with &productname;."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2377
#, no-c-format
msgid "Storage limitations"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2384
#, no-c-format
msgid "Storage Feature"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2389
#, no-c-format
msgid "Limitation"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2398
#, no-c-format
msgid "Maximum number of LUNs supported"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2403
#, no-c-format
msgid "16384 LUNs per target."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2410
#, no-c-format
msgid "Maximum number of paths per single LUN"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2415
#, no-c-format
msgid "No limit by default. Each path is treated as a normal LUN."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2418
#, no-c-format
msgid "The actual limit is given by the number of LUNs per target and the number of targets per HBA (16777215 for a Fibre Channel HBA)."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2426
#, no-c-format
msgid "Maximum number of HBAs"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2431
#, no-c-format
msgid "Unlimited. The actual limit is determined by the amount of PCI slots of the system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2439
#, no-c-format
msgid "Maximum number of paths with device-mapper-multipath (in total) per operating system"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2445
#, no-c-format
msgid "Approximately 1024. The actual number depends on the length of the device number strings for each multipath device. It is a compile-time variable within multipath-tools, which can be raised if this limit poses a problem."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2455
#, no-c-format
msgid "Maximum size per block device"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2460
#, no-c-format
msgid "Up to 8 EiB."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2470
#, no-c-format
msgid "Freeing unused file system blocks"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2472
#, no-c-format
msgid "On solid-state drives (SSDs) and thinly provisioned volumes, it is useful to trim blocks that are not in use by the file system. &productname; fully supports <literal>unmap</literal> and <literal>TRIM</literal> operations on all file systems supporting them."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2479
#, no-c-format
msgid "There are two types of commonly used TRIM&mdash;online <literal>TRIM</literal> and periodic <literal>TRIM</literal> . The most suitable way of trimming devices depends on your use case. In general, it is recommended to use periodic TRIM, especially if the device has enough free blocks. If the device is often near its full capacity, online TRIM is preferable."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2489
#, no-c-format
msgid "<literal>TRIM</literal> support on devices"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2490
#, no-c-format
msgid "Always verify that your device supports the <literal>TRIM</literal> operation before you attempt to use it. Otherwise, you might lose your data on that device. To verify the <literal>TRIM</literal> support, run the command:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2496
#, no-c-format
msgid "&prompt.sudo;lsblk --discard"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2497
#, no-c-format
msgid "The command outputs information about all available block devices. If the values of the columns <literal>DISC-GRAN</literal> and <literal>DISC-MAX</literal> are non-zero, the device supports the <literal>TRIM</literal> operation."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2506
#, no-c-format
msgid "Periodic TRIM"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2507
#, no-c-format
msgid "Periodic TRIM is handled by the <command>fstrim</command> command invoked by &systemd; on a regular basis. You can also run the command manually."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2511
#, no-c-format
msgid "To schedule periodic TRIM, enable the <literal>fstrim.timer</literal> as follows:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2515
#, no-c-format
msgid "&prompt.sudo;systemctl enable fstrim.timer"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2516
#, no-c-format
msgid "&systemd; creates a unit file in <filename>/usr/lib/systemd/system</filename> . By default, the service runs once a week, which is usually sufficient. However, you can change the frequency by configuring the <literal>OnCalendar</literal> option to a required value."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2523
#, no-c-format
msgid "The default behaviour of <command>fstrim</command> is to discard all blocks in the file system. You can use options when invoking the command to modify this behaviour. For example, you can pass the <literal>offset</literal> option to define the place where to start the trimming procedure. For details, see <command>man fstrim</command> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2530
#, no-c-format
msgid "The <command>fstrim</command> command can perform trimming on all devices stored in the <filename>/etc/fstab</filename> file, which support the <literal>TRIM</literal> operation&mdash;use the <literal>-A</literal> option when invoking the command for this purpose."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2536
#, no-c-format
msgid "To disable the trimming of a particular device, add the option <literal>X-fstrim.notrim</literal> to the <filename>/etc/fstab</filename> file as follows:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2541
#, no-c-format
msgid "UID=83df497d-bd6d-48a3-9275-37c0e3c8dc74  /  btrfs  defaults,X-fstrim.notrim                      0  0\n"
      ""
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2546
#, no-c-format
msgid "Online TRIM"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2547
#, no-c-format
msgid "Online TRIM of a device is performed each time data is written to the device."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2551
#, no-c-format
msgid "To enable online TRIM on a device, add the <literal>discard</literal> option to the <filename>/etc/fstab</filename> file as follows:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2555
#, no-c-format
msgid "UID=83df497d-bd6d-48a3-9275-37c0e3c8dc74  /  btrfs  defaults,discard"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2556
#, no-c-format
msgid "Alternatively, on the Ext4 file system you can use the <command>tune2fs</command> command to set the <literal>discard</literal> option in <filename>/etc/fstab</filename> :"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2561
#, no-c-format
msgid "&prompt.sudo;tune2fs -o discard <replaceable>DEVICE</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2562
#, no-c-format
msgid "The <literal>discard</literal> option is also added to <filename>/etc/fstab</filename> in case the device was mounted by <command>mount</command> with the <literal>discard</literal> option:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2567
#, no-c-format
msgid "&prompt.sudo;mount -o discard <replaceable>DEVICE</replaceable>"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2569
#, no-c-format
msgid "Drawbacks of online TRIM"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2570
#, no-c-format
msgid "Using the <literal>discard</literal> option may decrease the lifetime of some lower-quality SSD devices. Online TRIM can also impact the performance of the device, for example, if a larger amount of data is deleted. In this situation, an erase block might be reallocated, and shortly afterwards, the same erase block might be marked as unused again."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2581
#, no-c-format
msgid "Troubleshooting file systems"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2583
#, no-c-format
msgid "This section describes some known issues and possible solutions for file systems."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2589
#, no-c-format
msgid "Btrfs error: no space is left on device"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2590
#, no-c-format
msgid "The root ( <filename>/</filename> ) partition using the Btrfs file system stops accepting data. You receive the error <quote><literal>No space left on device</literal></quote> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2595
#, no-c-format
msgid "See the following sections for information about possible causes and prevention of this issue."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2600
#, no-c-format
msgid "Disk space consumed by Snapper snapshots"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2601
#, no-c-format
msgid "If Snapper is running for the Btrfs file system, the <quote><literal>No space left on device</literal></quote> problem is typically caused by having too much data stored as snapshots on your system."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2606
#, no-c-format
msgid "You can remove some snapshots from Snapper, however, the snapshots are not deleted immediately and might not free up as much space as you need."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2610
#, no-c-format
msgid "To delete files from Snapper:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2615
#, no-c-format
msgid "Open a terminal."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2620
#, no-c-format
msgid "At the command prompt, enter <command>btrfs filesystem show</command> , for example:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2624
#, no-c-format
msgid "&prompt.sudo;btrfs filesystem show\n"
      "Label: none uuid: 40123456-cb2c-4678-8b3d-d014d1c78c78\n"
      " Total devices 1 FS bytes used 20.00GB\n"
      " devid 1 size 20.00GB used 20.00GB path /dev/sda3"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2630
#, no-c-format
msgid "Enter"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2633
#, no-c-format
msgid "&prompt.sudo;btrfs fi balance start <replaceable>MOUNTPOINT</replaceable> -dusage=5"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2634
#, no-c-format
msgid "This command attempts to relocate data in empty or near-empty data chunks, allowing the space to be reclaimed and reassigned to metadata. This can take a while (many hours for 1&nbsp;TB) although the system is otherwise usable during this time."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2642
#, no-c-format
msgid "List the snapshots in Snapper. Enter"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2645
#, no-c-format
msgid "&prompt.sudo;snapper -c root list"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2648
#, no-c-format
msgid "Delete one or more snapshots from Snapper. Enter"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2651
#, no-c-format
msgid "&prompt.sudo;snapper -c root delete <replaceable>SNAPSHOT_NUMBER(S)</replaceable>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2652
#, no-c-format
msgid "Ensure that you delete the oldest snapshots first. The older a snapshot is, the more disk space it occupies."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2658
#, no-c-format
msgid "To help prevent this problem, you can change the Snapper cleanup algorithms. See <xref linkend=\"sec-snapper-manage-metadata-cleanup\"/> for details. The configuration values controlling snapshot cleanup are <envar>EMPTY_*</envar> , <envar>NUMBER_*</envar> , and <envar>TIMELINE_*</envar> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2665
#, no-c-format
msgid "If you use Snapper with Btrfs on the file system disk, it is advisable to reserve twice the amount of disk space than the standard storage proposal. The &yast; Partitioner automatically proposes twice the standard disk space in the Btrfs storage proposal for the root file system."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2673
#, no-c-format
msgid "Disk space consumed by log, crash, and cache files"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2674
#, no-c-format
msgid "If the system disk is filling up with data, you can try deleting files from <filename>/var/log</filename> , <filename>/var/crash</filename> , <filename>/var/lib/systemd/coredump</filename> and <filename>/var/cache</filename> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2680
#, no-c-format
msgid "The Btrfs &rootuser; file system subvolumes <filename>/var/log</filename> , <filename>/var/crash</filename> and <filename>/var/cache</filename> can use all of the available disk space during normal operation, and cause a system malfunction. To help avoid this situation, &productname; offers Btrfs quota support for subvolumes. See <xref linkend=\"sec-filesystems-major-btrfs-quota\"/> for details."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2688
#, no-c-format
msgid "On test and development machines, especially if you have frequent crashes of applications, you may also want to have a look at <filename>/var/lib/systemd/coredump</filename> where the core dumps are stored."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2698
#, no-c-format
msgid "Btrfs: balancing data across devices"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2699
#, no-c-format
msgid "The <command>btrfs balance</command> command is part of the <package>btrfs-progs</package> package. It balances block groups on Btrfs file systems in the following example situations:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2706
#, no-c-format
msgid "Assume you have a 1&nbsp;TB drive with 600&nbsp;GB used by data and you add another 1&nbsp;TB drive. The balancing will theoretically result in having 300&nbsp;GB of used space on each drive."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2713
#, no-c-format
msgid "You have a lot of near-empty chunks on a device. Their space will not be available until the balancing has cleared those chunks."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2719
#, no-c-format
msgid "You need to compact half-empty block group based on the percentage of their usage. The following command will balance block groups whose usage is 5% or less:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2724
#, no-c-format
msgid "&prompt.sudo;btrfs balance start -dusage=5 /"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2726
#, no-c-format
msgid "The <filename>/usr/lib/systemd/system/btrfs-balance.timer</filename> timer takes care of cleaning up unused block groups on a monthly basis."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2733
#, no-c-format
msgid "You need to clear out non-full portions of block devices and spread data more evenly."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2739
#, no-c-format
msgid "You need to migrate data between different RAID types. For example, to convert data on a set of disks from RAID1 to RAID5, run the following command:"
msgstr ""

#. Tag: screen
#: storage_filesystems.xml:2744
#, no-c-format
msgid "&prompt.sudo;btrfs balance start -dprofiles=raid1,convert=raid5 /"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2748
#, no-c-format
msgid "To fine-tune the default behavior of balancing data on Btrfs file systems&mdash;for example, how frequently or which mount points to balance&mdash; inspect and customize <filename>/etc/sysconfig/btrfsmaintenance</filename> . The relevant options start with <option>BTRFS_BALANCE_</option> ."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2756
#, no-c-format
msgid "For details about the <command>btrfs balance</command> command usage, see its manual pages ( <command>man 8 btrfs-balance</command> )."
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2763
#, no-c-format
msgid "No defragmentation on SSDs"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2764
#, no-c-format
msgid "Linux file systems contain mechanisms to avoid data fragmentation and usually it is not necessary to defragment. However, there are use cases, where data fragmentation cannot be avoided and where defragmenting the hard disk significantly improves the performance."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2770
#, no-c-format
msgid "This only applies to conventional hard disks. On solid state disks (SSDs) which use flash memory to store data, the firmware provides an algorithm that determines to which chips the data is written. Data is usually spread all over the device. Therefore defragmenting an SSD does not have the desired effect and will reduce the lifespan of an SSD by writing unnecessary data."
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2778
#, no-c-format
msgid "For the reasons mentioned above, &suse; explicitly recommends <emphasis>not</emphasis> to defragment SSDs. Some vendors also warn about defragmenting solid state disks. This includes, but it is not limited to the following:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2786
#, no-c-format
msgid "HPE 3PAR StoreServ All-Flash"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2791
#, no-c-format
msgid "HPE 3PAR StoreServ Converged Flash"
msgstr ""

#. Tag: title
#: storage_filesystems.xml:2799
#, no-c-format
msgid "More information"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2801
#, no-c-format
msgid "Each of the file system projects described above maintains its own home page on which to find mailing list information, further documentation, and FAQs:"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2808
#, no-c-format
msgid "The Btrfs Wiki on Kernel.org: <link xlink:href=\"https://btrfs.wiki.kernel.org/\"/>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2814
#, no-c-format
msgid "E2fsprogs: Ext2/3/4 File System Utilities: <link xlink:href=\"http://e2fsprogs.sourceforge.net/\"/>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2820
#, no-c-format
msgid "The OCFS2 Project: <link xlink:href=\"https://oss.oracle.com/projects/ocfs2/\"/>"
msgstr ""

#. Tag: para
#: storage_filesystems.xml:2827
#, no-c-format
msgid "An in-depth comparison of file systems (not only Linux file systems) is available from the Wikipedia project in Comparison of File Systems ( <link xlink:href=\"http://en.wikipedia.org/wiki/Comparison_of_file_systems#Comparison\"/> )."
msgstr ""

