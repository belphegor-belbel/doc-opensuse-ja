# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/belphegor-belbel/doc-opensuse-ja\n"
"POT-Creation-Date: 2022-02-11 22:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <someuser@example.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/x-po; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: vt_cachemodes.xml:8
#, no-c-format
msgid "Disk cache modes"
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:16
#, no-c-format
msgid "What is a disk cache?"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:18
#, no-c-format
msgid "A disk cache is a memory used to speed up the process of storing and accessing data from the hard disk. Physical hard disks have their cache integrated as a standard feature. For virtual disks, the cache uses &vmhost;'s memory and you can fine-tune its behavior, for example, by setting its type."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:27
#, no-c-format
msgid "How does a disk cache work?"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:29
#, no-c-format
msgid "Normally, a disk cache stores the most recent and frequently used programs and data. When a user or program requests data, the operating system first checks the disk cache. If the data is there, the operating system quickly delivers the data to the program instead of re-reading the data from the disk."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:38
#, no-c-format
msgid "Caching mechanism"
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:50
#, no-c-format
msgid "Benefits of disk caching"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:52
#, no-c-format
msgid "Caching of virtual disk devices affects the overall performance of guest machines. You can improve the performance by optimizing the combination of cache mode, disk image format, and storage subsystem."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:59
#, no-c-format
msgid "Virtual disk cache modes"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:61
#, no-c-format
msgid "If you do not specify a cache mode, <literal>writeback</literal> is used by default. Each guest disk can use a one of the following cache modes:"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:70
#, no-c-format
msgid "<literal>writeback</literal> uses the host page cache. Writes are reported to the guest as completed when they are placed in the host cache. Cache management handles commitment to the storage device. The guest's virtual storage adapter is informed of the <emphasis>writeback</emphasis> cache and therefore expected to send flush commands as needed to manage data integrity."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:81
#, no-c-format
msgid "writethrough"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:83
#, no-c-format
msgid "Writes are reported as completed only when the data has been committed to the storage device. The guest's virtual storage adapter is informed that there is no <emphasis>writeback</emphasis> cache, so the guest do not need to send flush commands to manage data integrity."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:92
#, no-c-format
msgid "none"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:94
#, no-c-format
msgid "The host cache is bypassed, and reads and writes happen directly between the hypervisor and the storage device. Because the actual storage device may report a write as completed when the data is still placed in its write queue only, the guest's virtual storage adapter is informed that there is a <emphasis>writeback</emphasis> cache. This mode is equivalent to direct access to the host's disk."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:107
#, no-c-format
msgid "Similar to the <emphasis>writeback</emphasis> mode, except all flush commands from the guests are ignored. Using this mode implies that the user prioritizes performance gain over the risk of data loss in case of a host failure. This mode can be useful during guest installation, but not for production workloads."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:117
#, no-c-format
msgid "directsync"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:119
#, no-c-format
msgid "Writes are reported as completed only when the data has been committed to the storage device and the host cache is bypassed. Similar to <emphasis>writethrough</emphasis> , this mode can be useful for guests that do not send flushes when needed."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:130
#, no-c-format
msgid "Cache modes and data integrity"
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:134
#, no-c-format
msgid "writethrough, none, directsync"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:136
#, no-c-format
msgid "These modes are considered to be safest when the guest operating system uses flushes as needed. For unsafe or unstable guests, use <emphasis>writethough</emphasis> or <emphasis>directsync</emphasis> ."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:144
#, no-c-format
msgid "writeback"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:146
#, no-c-format
msgid "This mode informs the guest of the presence of a write cache, and it relies on the guest to send flush commands as needed to maintain data integrity within its disk image. This mode exposes the guest to data loss in the case of a host failure due to a gap between the moment a write is reported as completed and the time the write being committed to the storage device."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:157
#, no-c-format
msgid "unsafe"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:159
#, no-c-format
msgid "This mode is similar to <emphasis>writeback</emphasis> caching, except the guest flush commands are ignored. This means a higher risk of data loss due to host failure."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:169
#, no-c-format
msgid "Cache modes and live migration"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:171
#, no-c-format
msgid "The caching of storage data restricts the configurations that support live migration. Currently, only <literal>raw</literal> and <literal>qcow2</literal> image formats can be used for live migration. If a clustered file system is used, all cache modes support live migration. Otherwise the only cache mode that supports live migration on read/write shared storage is <literal>none</literal> ."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:180
#, no-c-format
msgid "The &libvirt; management layer includes checks for migration compatibility based on several factors. If the guest storage is hosted on a clustered file system, is read-only, or is marked shareable, then the cache mode is ignored when determining if migration can be allowed. Otherwise &libvirt; will not allow migration unless the cache mode is set to <literal>none</literal> . However, this restriction can be overridden with the <quote>--unsafe</quote> option to the migration APIs, which is also supported by <command>virsh</command> . For example"
msgstr ""

#. Tag: screen
#: vt_cachemodes.xml:191
#, no-c-format
msgid "&prompt.user;virsh migrate --live --unsafe"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:194
#, no-c-format
msgid "The cache mode <literal>none</literal> is required for the AIO mode setting <literal>native</literal> . If another cache mode is used, the AIO mode is silently switched back to the default <literal>threads</literal> ."
msgstr ""

